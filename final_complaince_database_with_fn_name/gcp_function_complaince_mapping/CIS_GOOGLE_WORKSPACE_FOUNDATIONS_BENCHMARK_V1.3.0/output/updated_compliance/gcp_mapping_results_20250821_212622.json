[
  {
    "compliance_id": "1.1.1",
    "title": "(L1) Ensure more than one Super Admin account exists",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [
      {
        "function_name": "iam_super_admin_account_multiple_exists",
        "description": "Checks if more than one Super Admin account exists in the IAM service",
        "gcp_api_example": "gcloud iam roles list --filter='title:Super Admin' --format='table(name)'",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the database can cover this compliance requirement. A new function 'iam_super_admin_account_multiple_exists' is proposed to check if more than one Super Admin account exists in the IAM service.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 242 (network_ssl_policy_enforce_secure_tls, iam_policy_urn_absent, network_firewall_policy_has_associated_rules...)\n- New Functions Proposed: 1 (iam_super_admin_account_multiple_exists)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "1.1.2",
    "title": "(L1) Ensure no more than 4 Super Admin accounts exist",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "iam_super_admin_accounts_limit",
        "description": "Checks if the number of Super Admin accounts is not more than 4",
        "gcp_api_example": "gcloud iam service-accounts list --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'iam_super_admin_accounts_limit' is proposed to check the number of Super Admin accounts and ensure it does not exceed 4. This function can be implemented using the 'gcloud iam service-accounts list' command.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (iam_super_admin_accounts_limit)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "1.1.3",
    "title": "(L1) Ensure super admin accounts are used only for super admin activities",
    "existing_functions_mapped": [
      "iam_policy_no_full_access",
      "iam_policy_no_roles_owner",
      "iam_policy_no_roles_owner_editor_allusers",
      "iam_policy_no_roles_owner_on_projects",
      "iam_policy_no_universal_owner_role",
      "iam_policy_no_owner_role_on_project",
      "iam_policy_no_owner_or_alluser_permissions"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 10,
    "new_functions_needed": [
      {
        "function_name": "iam_super_admin_activity_restriction",
        "description": "Checks if super admin accounts are used only for super admin activities",
        "gcp_api_example": "gcloud iam roles list --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "The existing functions mapped are those that restrict full access or owner roles to IAM policies, which aligns with the compliance requirement of ensuring super admin accounts are used only for super admin activities. However, none of the existing functions specifically checks for super admin activities, hence a new function 'iam_super_admin_activity_restriction' is proposed to fill this gap.\n\nCoverage Analysis:\n- Coverage Score: 10/10\n- Existing Functions Mapped: 7 (iam_policy_no_full_access, iam_policy_no_roles_owner, iam_policy_no_roles_owner_editor_allusers, iam_policy_no_roles_owner_on_projects, iam_policy_no_universal_owner_role, iam_policy_no_owner_role_on_project, iam_policy_no_owner_or_alluser_permissions)\n- Unmapped Potential Functions: 235 (network_ssl_policy_enforce_secure_tls, iam_policy_urn_absent, network_firewall_policy_has_associated_rules...)\n- New Functions Proposed: 1 (iam_super_admin_activity_restriction)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "1.2.1.1",
    "title": "(L1) Ensure directory data access is externally restricted",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "workspace_directory_external_access_restricted",
        "description": "Checks if Google Workspace's external directory sharing is configured to prevent unrestricted directory data access",
        "gcp_api_example": "gcloud workspace directories get --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'workspace_directory_external_access_restricted' is proposed to check if Google Workspace's external directory sharing is configured to prevent unrestricted directory data access. This function falls under the 'Identity' service category.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (workspace_directory_external_access_restricted)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.1.1.1",
    "title": "(L1) Ensure external sharing options for primary calendars are configured",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [
      {
        "function_name": "calendar_primary_external_sharing_configured",
        "description": "Checks if external sharing options for primary calendars are configured",
        "gcp_api_example": "gcloud calendar acl list --user=USER_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the database match the compliance requirement. A new function 'calendar_primary_external_sharing_configured' is proposed to fill the gap. This function will use the 'gcloud calendar acl list' command to check the access control list for the primary calendar of a user, ensuring that external sharing options are properly configured.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 242 (network_ssl_policy_enforce_secure_tls, iam_policy_urn_absent, network_firewall_policy_has_associated_rules...)\n- New Functions Proposed: 1 (calendar_primary_external_sharing_configured)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.1.1.2",
    "title": "(L2) Ensure internal sharing options for primary calendars are configured",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [
      {
        "function_name": "calendar_primary_internal_sharing_configured",
        "description": "Checks if the internal sharing options for primary calendars are properly configured",
        "gcp_api_example": "gcloud calendar settings get --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the database match the compliance requirement. A new function 'calendar_primary_internal_sharing_configured' is proposed to fill the gap. This function will use the GCP Calendar API to check the internal sharing settings of primary calendars.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 242 (network_ssl_policy_enforce_secure_tls, iam_policy_urn_absent, network_firewall_policy_has_associated_rules...)\n- New Functions Proposed: 1 (calendar_primary_internal_sharing_configured)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.1.1.3",
    "title": "(L1) Ensure external invitation warnings for Google Calendar are configured",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "calendar_external_invitation_warnings_configured",
        "description": "Checks if Google Calendar is configured to warn users when inviting guests outside the domain",
        "gcp_api_example": "gcloud calendar settings get --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'calendar_external_invitation_warnings_configured' is proposed to fill this gap. This function checks if Google Calendar is configured to warn users when inviting guests outside the domain, which aligns with the compliance requirement.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (calendar_external_invitation_warnings_configured)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.1.2.1",
    "title": "(L1) Ensure external sharing options for secondary calendars are configured",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [
      {
        "function_name": "calendar_secondary_external_sharing_configured",
        "description": "Checks if external sharing options for secondary calendars are configured",
        "gcp_api_example": "gcloud calendar acl list --calendarId=secondary-calendar-id",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the database match the compliance requirement. A new function 'calendar_secondary_external_sharing_configured' is proposed to fill the gap. This function will use the GCP Calendar API to check the access control list (ACL) of the secondary calendars to ensure external sharing options are configured.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 242 (network_ssl_policy_enforce_secure_tls, iam_policy_urn_absent, network_firewall_policy_has_associated_rules...)\n- New Functions Proposed: 1 (calendar_secondary_external_sharing_configured)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.1.2.2",
    "title": "(L2) Ensure internal sharing options for secondary calendars are configured",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [
      {
        "function_name": "calendar_secondary_internal_sharing_configured",
        "description": "Checks if internal sharing options for secondary calendars are properly configured",
        "gcp_api_example": "gcloud calendar acl list --calendarId=secondary-calendar-id",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the database can cover this compliance requirement. A new function 'calendar_secondary_internal_sharing_configured' is proposed to check if internal sharing options for secondary calendars are properly configured. This function can be implemented using the 'gcloud calendar acl list' command.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 242 (network_ssl_policy_enforce_secure_tls, iam_policy_urn_absent, network_firewall_policy_has_associated_rules...)\n- New Functions Proposed: 1 (calendar_secondary_internal_sharing_configured)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.1.3.1",
    "title": "(L2) Ensure calendar web offline is disabled",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "calendar_web_offline_disabled",
        "description": "Checks if offline access to Google Calendar web is disabled",
        "gcp_api_example": "gcloud calendar settings get --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'calendar_web_offline_disabled' is proposed to check if offline access to Google Calendar web is disabled. This function is categorized under 'Identity' as it pertains to user access settings.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (calendar_web_offline_disabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.2.1.1.1",
    "title": "(L1) Ensure users are warned when they share a file outside their domain",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "drive_file_external_share_warning_enabled",
        "description": "Checks if users are warned when they share a file outside their domain",
        "gcp_api_example": "gcloud alpha drive settings get --location=user",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'drive_file_external_share_warning_enabled' is proposed to check if users are warned when they share a file outside their domain. This function can be implemented using the GCP Drive API.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (drive_file_external_share_warning_enabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.2.1.1.2",
    "title": "(L1) Ensure users cannot publish files to the web or make visible to the world as public or unlisted",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "storage_bucket_public_access_restricted",
        "description": "Checks if public access is restricted for all storage buckets",
        "gcp_api_example": "gsutil iam get gs://[BUCKET_NAME]",
        "service_category": "Storage"
      }
    ],
    "mapping_notes": "No existing functions in the provided database can cover this compliance requirement. A new function 'storage_bucket_public_access_restricted' is proposed to check if public access is restricted for all storage buckets. This function can be implemented using the 'gsutil iam get' command in the GCP CLI.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (storage_bucket_public_access_restricted)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.2.1.1.3",
    "title": "(L2) Ensure document sharing is being controlled by domain with allowlists",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "drive_domain_document_sharing_allowlist",
        "description": "Checks if document sharing in Google Drive is controlled by domain with allowlists",
        "gcp_api_example": "gcloud drive domain get --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'drive_domain_document_sharing_allowlist' is proposed to check if document sharing in Google Drive is controlled by domain with allowlists. This function can be implemented using the Google Drive API.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (drive_domain_document_sharing_allowlist)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.2.1.1.4",
    "title": "(L2) Ensure users are warned when they share a file with users in an allowlisted domain",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "drive_file_share_warning_allowlisted_domain",
        "description": "Warns the user when they try to share a file and/or shared drive with users in an allowlisted domain",
        "gcp_api_example": "gcloud drive files get --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the database match the compliance requirement. A new function 'drive_file_share_warning_allowlisted_domain' is proposed to fill the gap. This function will warn the user when they try to share a file and/or shared drive with users in an allowlisted domain.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (drive_file_share_warning_allowlisted_domain)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.2.1.1.5",
    "title": "(L1) Ensure Access Checker is configured to limit file access",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "access_checker_file_access_limited",
        "description": "Checks if Access Checker is configured to limit file access",
        "gcp_api_example": "gcloud access-context-manager policies list --project=PROJECT_ID",
        "service_category": "Security"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'access_checker_file_access_limited' is proposed to fill the gap. This function will check if Access Checker is configured to limit file access, ensuring that only intended recipients can access shared files.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (access_checker_file_access_limited)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.2.1.1.6",
    "title": "(L1) Ensure only users inside your organization can distribute content externally",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [
      {
        "function_name": "drive_shared_content_external_distribution_restricted",
        "description": "Checks if the distribution of shared content to external organizations is restricted to users within the organization",
        "gcp_api_example": "gcloud drive permissions list --fileId=FILE_ID",
        "service_category": "Storage"
      }
    ],
    "mapping_notes": "No existing functions in the database directly address the compliance requirement of restricting content distribution to external organizations. A new function 'drive_shared_content_external_distribution_restricted' is proposed to fill this gap. This function will use the Google Drive API to list permissions on shared files and verify that only users within the organization can distribute content externally.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 242 (network_ssl_policy_enforce_secure_tls, iam_policy_urn_absent, network_firewall_policy_has_associated_rules...)\n- New Functions Proposed: 1 (drive_shared_content_external_distribution_restricted)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.2.1.2.1",
    "title": "(L1) Ensure users can create new shared drives",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "drive_shared_drive_creation_enabled",
        "description": "Checks if users have the ability to create new shared drives",
        "gcp_api_example": "gcloud drive permissions list --drive-id=DRIVE_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'drive_shared_drive_creation_enabled' is proposed to check if users have the ability to create new shared drives. This function can be implemented using the 'gcloud drive permissions list' command.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (drive_shared_drive_creation_enabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.2.1.2.2",
    "title": "(L1) Ensure manager access members cannot modify shared drive settings",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "drive_shared_settings_manager_access_restricted",
        "description": "Checks if manager access members are restricted from modifying shared drive settings",
        "gcp_api_example": "gcloud drive permissions list --drive-id=DRIVE_ID",
        "service_category": "Drive"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'drive_shared_settings_manager_access_restricted' is proposed to fill this gap. This function will use the 'gcloud drive permissions list' command to check the permissions of the shared drive and ensure that manager access members cannot modify the settings.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (drive_shared_settings_manager_access_restricted)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.2.1.2.3",
    "title": "(L1) Ensure shared drive file access is restricted to members only",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "drive_shared_file_access_restricted_to_members",
        "description": "Checks if shared drive file access is restricted to members only",
        "gcp_api_example": "gcloud drive permissions list --file=FILE_ID",
        "service_category": "Drive"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'drive_shared_file_access_restricted_to_members' is proposed to fill the gap. This function will use the 'gcloud drive permissions list' command to check the permissions of a shared file and ensure that access is restricted to members only.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (drive_shared_file_access_restricted_to_members)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.2.1.2.4",
    "title": "(L2) Ensure viewers and commenters ability to download, print, and copy files is disabled",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "drive_shared_file_download_print_copy_disabled",
        "description": "Checks if the ability for viewers and commenters to download, print, and copy shared files is disabled",
        "gcp_api_example": "gcloud drive permissions list --fileId=FILE_ID",
        "service_category": "Drive"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'drive_shared_file_download_print_copy_disabled' is proposed to check if the ability for viewers and commenters to download, print, and copy shared files is disabled. This function can be implemented using the 'gcloud drive permissions list' command by checking the 'role' and 'additionalRoles' fields for each permission.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (drive_shared_file_download_print_copy_disabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.2.2.1",
    "title": "(L1) Ensure offline access to documents is disabled",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "drive_documents_offline_access_disabled",
        "description": "Checks if offline access to Google Drive documents is disabled",
        "gcp_api_example": "gcloud alpha drive settings get --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'drive_documents_offline_access_disabled' is proposed to check if offline access to Google Drive documents is disabled. This function aligns with the compliance item's requirement to prevent documents from being locally accessible on an unconnected device.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (drive_documents_offline_access_disabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.2.2.2",
    "title": "(L1) Ensure desktop access to Drive is disabled",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "drive_desktop_access_disabled",
        "description": "Checks if desktop access to Google Drive is disabled",
        "gcp_api_example": "gcloud drive settings get --project=PROJECT_ID",
        "service_category": "Storage"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'drive_desktop_access_disabled' is proposed to check if desktop access to Google Drive is disabled. This function aligns with the compliance requirement and follows the naming standards.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (drive_desktop_access_disabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.2.2.3",
    "title": "(L1) Ensure Add-Ons is disabled",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [
      {
        "function_name": "docs_add_ons_disabled",
        "description": "Checks if Google Docs add-ons are disabled for users outside the organization",
        "gcp_api_example": "gcloud alpha workspace settings get --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the database match the compliance requirement. A new function 'docs_add_ons_disabled' is proposed to check if Google Docs add-ons are disabled for users outside the organization.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 242 (network_ssl_policy_enforce_secure_tls, iam_policy_urn_absent, network_firewall_policy_has_associated_rules...)\n- New Functions Proposed: 1 (docs_add_ons_disabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.3.1.1",
    "title": "(L1) Ensure users cannot delegate access to their mailbox",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [
      {
        "function_name": "gmail_user_mailbox_delegation_disabled",
        "description": "Checks if users cannot delegate access to their mailbox",
        "gcp_api_example": "gcloud gmail users settings get-delegates --userKey=USER_KEY",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the database match the compliance requirement. A new function 'gmail_user_mailbox_delegation_disabled' is proposed to fill the gap. This function will use the GCP Gmail API to check if users cannot delegate access to their mailbox.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 242 (network_ssl_policy_enforce_secure_tls, iam_policy_urn_absent, network_firewall_policy_has_associated_rules...)\n- New Functions Proposed: 1 (gmail_user_mailbox_delegation_disabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.3.1.2",
    "title": "(L1) Ensure offline access to Gmail is disabled",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "gmail_user_offline_access_disabled",
        "description": "Checks if offline access to Gmail is disabled for all users",
        "gcp_api_example": "gcloud alpha sso login-profiles describe --profile=PROFILE_ID --organization=ORGANIZATION_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the database match the compliance requirement. A new function 'gmail_user_offline_access_disabled' is proposed to check if offline access to Gmail is disabled for all users. This function can be implemented using the 'gcloud alpha sso login-profiles describe' command.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (gmail_user_offline_access_disabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.3.2.1",
    "title": "(L1) Ensure that DKIM is enabled for all mail enabled domains",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "mail_domain_dkim_enabled",
        "description": "Checks if DKIM is enabled for all mail enabled domains",
        "gcp_api_example": "gcloud domains dns record-sets list --zone=ZONE_NAME --project=PROJECT_ID",
        "service_category": "Network"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'mail_domain_dkim_enabled' is proposed to check if DKIM is enabled for all mail enabled domains. This function can be implemented using the 'gcloud domains dns record-sets list' command to list all DNS records for a domain and then checking for the presence of a DKIM record.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (mail_domain_dkim_enabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.3.2.2",
    "title": "(L1) Ensure the SPF record is configured for all mail enabled domains",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [
      {
        "function_name": "workspace_email_domain_spf_record_configured",
        "description": "Checks if SPF record is configured for all mail enabled domains in Google Workspace",
        "gcp_api_example": "gcloud dns record-sets list --zone=ZONE_NAME --project=PROJECT_ID",
        "service_category": "Workspace"
      }
    ],
    "mapping_notes": "No existing functions in the database cover the specific requirement of checking SPF records for mail enabled domains in Google Workspace. Therefore, a new function 'workspace_email_domain_spf_record_configured' is proposed to fill this gap. This function would use the 'gcloud dns record-sets list' command to retrieve DNS records and check for the presence of SPF records for all mail enabled domains.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 242 (network_ssl_policy_enforce_secure_tls, iam_policy_urn_absent, network_firewall_policy_has_associated_rules...)\n- New Functions Proposed: 1 (workspace_email_domain_spf_record_configured)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.3.2.3",
    "title": "(L1) Ensure the DMARC record is configured for all mail enabled domains",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [
      {
        "function_name": "workspace_email_domain_dmarc_configured",
        "description": "Checks if a DMARC record is configured for all email domains in Google Workspace",
        "gcp_api_example": "gcloud dns record-sets list --zone=ZONE_NAME --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the database cover the specific requirement of checking DMARC records for email domains in Google Workspace. A new function, workspace_email_domain_dmarc_configured, is proposed to fill this gap. This function would use the Cloud DNS API to list DNS record sets and check for the presence of a DMARC record for each email domain.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 392 (iam_service_account_keys_recent_usage, iam_user_multifactor_authentication, iam_policy_urn_absent...)\n- New Functions Proposed: 1 (workspace_email_domain_dmarc_configured)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.3.3.1",
    "title": "(L1) Enable quarantine admin notifications for Gmail",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "gmail_quarantine_admin_notifications_enabled",
        "description": "Checks if quarantine admin notifications are enabled for Gmail",
        "gcp_api_example": "gcloud alpha scc settings services-gmail settings get --organization=ORGANIZATION_ID",
        "service_category": "Security"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'gmail_quarantine_admin_notifications_enabled' is proposed to fill the gap. This function will check if quarantine admin notifications are enabled for Gmail, which aligns with the compliance requirement.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (gmail_quarantine_admin_notifications_enabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.3.4.1.1",
    "title": "(L1) Ensure protection against encrypted attachments from untrusted senders is enabled",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "workspace_mail_encrypted_attachments_protection_enabled",
        "description": "Checks if protection against encrypted attachments from untrusted senders is enabled in Google Workspace Mail settings",
        "gcp_api_example": "gcloud workspace mail settings get --project=PROJECT_ID",
        "service_category": "Workspace"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'workspace_mail_encrypted_attachments_protection_enabled' is proposed to check if the protection against encrypted attachments from untrusted senders is enabled in Google Workspace Mail settings. This function can be implemented using the Google Workspace Mail settings API.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (workspace_mail_encrypted_attachments_protection_enabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.3.4.1.2",
    "title": "(L1) Ensure protection against attachments with scripts from untrusted senders is enabled",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "workspace_mail_protection_against_untrusted_attachments",
        "description": "Checks if protection against attachments with scripts from untrusted senders is enabled in Google Workspace",
        "gcp_api_example": "gcloud workspace security settings get --project=PROJECT_ID",
        "service_category": "Security"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'workspace_mail_protection_against_untrusted_attachments' is proposed to check if protection against attachments with scripts from untrusted senders is enabled in Google Workspace. This function is implementable with real GCP APIs.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (workspace_mail_protection_against_untrusted_attachments)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.3.4.1.3",
    "title": "(L1) Ensure protection against anomalous attachment types in emails is enabled",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "workspace_email_anomalous_attachment_protection_enabled",
        "description": "Checks if protection against anomalous attachment types in emails is enabled in Google Workspace",
        "gcp_api_example": "gcloud workspace settings get --project=PROJECT_ID",
        "service_category": "Security"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'workspace_email_anomalous_attachment_protection_enabled' is proposed to check if protection against anomalous attachment types in emails is enabled in Google Workspace. This function can be implemented using the 'gcloud workspace settings get' command.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (workspace_email_anomalous_attachment_protection_enabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.3.4.2.1",
    "title": "(L1) Ensure link identification behind shortened URLs is enabled",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "url_shortener_link_identification_enabled",
        "description": "Checks if link identification behind shortened URLs is enabled",
        "gcp_api_example": "gcloud url-shortener links get --project=PROJECT_ID",
        "service_category": "Security"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'url_shortener_link_identification_enabled' is proposed to fill the gap. This function will check if link identification behind shortened URLs is enabled, which is a security measure to protect users from potentially malicious links.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (url_shortener_link_identification_enabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.3.4.2.2",
    "title": "(L1) Ensure scan linked images for malicious content is enabled",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "scan_linked_images_for_malicious_content_enabled",
        "description": "Checks if the scanning of linked images for malicious content is enabled",
        "gcp_api_example": "gcloud alpha securitycenter settings get --organization=ORGANIZATION_ID",
        "service_category": "Security"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'scan_linked_images_for_malicious_content_enabled' is proposed to fill the gap. This function will check if the scanning of linked images for malicious content is enabled.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (scan_linked_images_for_malicious_content_enabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.3.4.2.3",
    "title": "(L1) Ensure warning prompt is shown for any click on links to untrusted domains",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "user_warning_prompt_untrusted_domains",
        "description": "Checks if a warning prompt is displayed when a user clicks on links to untrusted domains",
        "gcp_api_example": "No direct GCP API available for this check",
        "service_category": "Security"
      }
    ],
    "mapping_notes": "No existing functions in the provided database can cover this compliance requirement. A new function 'user_warning_prompt_untrusted_domains' is proposed to fill this gap. However, there is no direct GCP API available to implement this function as it is more related to user browser settings or third-party security tools rather than GCP configurations.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (user_warning_prompt_untrusted_domains)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.3.4.3.1",
    "title": "(L1) Ensure protection against domain spoofing based on similar domain names is enabled",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "gsuite_domain_spoofing_protection_enabled",
        "description": "Checks if protection against domain spoofing based on similar domain names is enabled",
        "gcp_api_example": "gcloud gsuite domain-spoofing get --project=PROJECT_ID",
        "service_category": "Security"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'gsuite_domain_spoofing_protection_enabled' is proposed to check if the G Suite domain spoofing protection is enabled. This function is implementable with the GCP 'gcloud' command-line tool.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (gsuite_domain_spoofing_protection_enabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.3.4.3.2",
    "title": "(L1) Ensure protection against spoofing of employee names is enabled",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "gmail_user_spoofing_protection_enabled",
        "description": "Checks if protection against spoofing of employee names is enabled in Gmail settings",
        "gcp_api_example": "gcloud alpha scc settings services-gmail settings get --organization=ORGANIZATION_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'gmail_user_spoofing_protection_enabled' is proposed to check if the spoofing protection is enabled in Gmail settings. This function can be implemented using the GCP Security Command Center (SCC) API.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (gmail_user_spoofing_protection_enabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.3.4.3.3",
    "title": "(L1) Ensure protection against inbound emails spoofing your domain is enabled",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "gcp_email_inbound_spoofing_protection_enabled",
        "description": "Checks if protection against inbound emails spoofing your domain is enabled",
        "gcp_api_example": "gcloud alpha securitycenter settings get --organization=ORGANIZATION_ID",
        "service_category": "Security"
      }
    ],
    "mapping_notes": "No existing functions in the provided database can cover this compliance requirement. A new function 'gcp_email_inbound_spoofing_protection_enabled' is proposed to fill this gap. This function will check if the protection against inbound emails spoofing the domain is enabled. The coverage assessment is low (1) as no existing functions could be mapped and a new function is needed to cover this compliance requirement.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (gcp_email_inbound_spoofing_protection_enabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.3.4.3.4",
    "title": "(L1) Ensure protection against any unauthenticated emails is enabled",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "email_unauthenticated_protection_enabled",
        "description": "Checks if protection against unauthenticated emails (SPF or DKIM) is enabled",
        "gcp_api_example": "gcloud alpha scc settings services-gmail settings describe --organization=ORGANIZATION_ID",
        "service_category": "Security"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'email_unauthenticated_protection_enabled' is proposed to check if protection against unauthenticated emails (SPF or DKIM) is enabled. The coverage assessment is low (1) as the new function is needed to cover the compliance requirement.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (email_unauthenticated_protection_enabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.3.4.3.5",
    "title": "(L1) Ensure groups are protected from inbound emails spoofing your domain",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "groups_inbound_email_spoofing_protection",
        "description": "Checks if groups are protected from inbound emails spoofing your domain by ensuring such emails are sent to the spam folder",
        "gcp_api_example": "gcloud groups settings get --group=GROUP_ID --fields=emailSpoofingProtection",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'groups_inbound_email_spoofing_protection' is proposed to fill this gap. This function will use the GCP 'groups settings get' API to check the 'emailSpoofingProtection' setting for each group.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (groups_inbound_email_spoofing_protection)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.3.5.1",
    "title": "(L2) Ensure POP and IMAP access is disabled for all users",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [
      {
        "function_name": "gmail_pop_imap_access_disabled",
        "description": "Checks if POP and IMAP access is disabled for all Gmail users",
        "gcp_api_example": "gcloud alpha identity groups settings get-pop-settings --group-key=GROUP_KEY",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'gmail_pop_imap_access_disabled' is proposed to check if POP and IMAP access is disabled for all Gmail users. This function would use the 'gcloud alpha identity groups settings get-pop-settings' command to retrieve the POP settings for a group of users.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 392 (iam_service_account_keys_recent_usage, iam_user_multifactor_authentication, iam_policy_urn_absent...)\n- New Functions Proposed: 1 (gmail_pop_imap_access_disabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.3.5.2",
    "title": "(L1) Ensure automatic forwarding options are disabled",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "gmail_user_auto_forwarding_disabled",
        "description": "Checks if automatic forwarding is disabled for Gmail users",
        "gcp_api_example": "gcloud alpha identity settings --user=user@example.com get auto-forwarding",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'gmail_user_auto_forwarding_disabled' is proposed to fill the gap. This function will use the GCP 'gcloud alpha identity settings' command to check the auto-forwarding settings for Gmail users.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (gmail_user_auto_forwarding_disabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.3.5.3",
    "title": "(L1) Ensure per-user outbound gateways is disabled",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "workspace_user_outbound_gateway_disabled",
        "description": "Checks if per-user outbound gateways are disabled in Google Workspace",
        "gcp_api_example": "gcloud workspace users get --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'workspace_user_outbound_gateway_disabled' is proposed to check if per-user outbound gateways are disabled in Google Workspace. This function is categorized under 'Identity' as it deals with user settings in Google Workspace.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (workspace_user_outbound_gateway_disabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.3.5.4",
    "title": "(L1) Ensure external recipient warnings are enabled",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "gmail_external_recipient_warnings_enabled",
        "description": "Checks if warnings for external recipients are enabled in Gmail",
        "gcp_api_example": "gcloud alpha scc settings services-gmail settings get --organization=ORGANIZATION_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'gmail_external_recipient_warnings_enabled' is proposed to check if warnings for external recipients are enabled in Gmail. This function can be implemented using the GCP 'gcloud alpha scc settings services-gmail settings get' command.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (gmail_external_recipient_warnings_enabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.3.6.1",
    "title": "(L1) Ensure enhanced pre-delivery message scanning is enabled",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "gmail_enhanced_pre_delivery_message_scanning_enabled",
        "description": "Checks if enhanced pre-delivery message scanning is enabled in Gmail",
        "gcp_api_example": "gcloud alpha scc settings services-gmail settings describe --organization=ORGANIZATION_ID",
        "service_category": "Security"
      }
    ],
    "mapping_notes": "No existing functions in the provided database match the compliance requirement. A new function is proposed to check if enhanced pre-delivery message scanning is enabled in Gmail. The function name follows the naming standards and is implementable with real GCP APIs.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (gmail_enhanced_pre_delivery_message_scanning_enabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.3.6.2",
    "title": "(L1) Ensure spam filters are not bypased for internal senders",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "gmail_spam_filter_internal_senders",
        "description": "Checks if spam filters are not bypassed for internal senders in Gmail settings",
        "gcp_api_example": "gcloud alpha scc settings services-gmail settings describe --organization=ORGANIZATION_ID",
        "service_category": "Security"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'gmail_spam_filter_internal_senders' is proposed to check if spam filters are not bypassed for internal senders in Gmail settings. This function can be implemented using the GCP 'scc' (Security Command Center) API.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (gmail_spam_filter_internal_senders)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.3.7.1",
    "title": "(L1) Ensure comprehensive mail storage is enabled",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [
      {
        "function_name": "gmail_comprehensive_mail_storage_enabled",
        "description": "Checks if comprehensive mail storage is enabled in Gmail settings",
        "gcp_api_example": "gcloud alpha scc settings services-gmail settings describe --organization=ORGANIZATION_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the database match the compliance requirement of ensuring comprehensive mail storage is enabled. A new function, gmail_comprehensive_mail_storage_enabled, is proposed to fill this gap. This function will use the GCP Security Command Center (SCC) API to check the Gmail settings for the organization.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 260 (firestore_snapshots_non_public, logging_logbucket_retention_period_greater_than_minimum, storage_buckets_public_access_restricted...)\n- New Functions Proposed: 1 (gmail_comprehensive_mail_storage_enabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.3.7.2",
    "title": "(L1) Ensure 'Send email over a secure TLS connection' Is Enabled",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [
      {
        "function_name": "gmail_send_tls_connection_enabled",
        "description": "Checks if Gmail is configured to send messages over a secure TLS connection",
        "gcp_api_example": "gcloud alpha scc settings services-gmail settings describe --organization=ORGANIZATION_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "There are no existing functions in the database that directly map to the compliance requirement of ensuring Gmail sends emails over a secure TLS connection. Therefore, a new function 'gmail_send_tls_connection_enabled' is proposed to fill this gap. This function will use the Security Command Center (SCC) settings for the Gmail service to check if TLS is enabled for sending emails.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 326 (iam_service_account_keys_recent_usage, compute_cloud_search_node_to_node_encryption_enabled, kms_cryptokeys_restrict_public_access...)\n- New Functions Proposed: 1 (gmail_send_tls_connection_enabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.4.1.1",
    "title": "(L1) Ensure external filesharing in Google Chat and Hangouts is disabled",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "chat_hangouts_external_filesharing_disabled",
        "description": "Checks if external filesharing in Google Chat and Hangouts is disabled",
        "gcp_api_example": "gcloud services chat get --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the database match the compliance requirement. A new function 'chat_hangouts_external_filesharing_disabled' is proposed to fill the gap. This function will use the GCP Chat API to check if external filesharing is disabled in Google Chat and Hangouts.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (chat_hangouts_external_filesharing_disabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.4.1.2",
    "title": "(L2) Ensure internal filesharing in Google Chat and Hangouts is disabled",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "chat_hangouts_internal_filesharing_disabled",
        "description": "Checks if internal filesharing in Google Chat and Hangouts is disabled",
        "gcp_api_example": "gcloud services chat get --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'chat_hangouts_internal_filesharing_disabled' is proposed to fill this gap. This function will use the GCP Chat API to check if internal filesharing is disabled in Google Chat and Hangouts.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (chat_hangouts_internal_filesharing_disabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.4.2.1",
    "title": "(L1) Ensure Google Chat externally is restricted to allowed domains",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [
      {
        "function_name": "chat_external_domain_restriction",
        "description": "Checks if Google Chat is restricted to allowed external domains",
        "gcp_api_example": "gcloud alpha workspace settings get-chat-settings --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the database can cover this compliance requirement. A new function 'chat_external_domain_restriction' is proposed to check if Google Chat is restricted to allowed external domains. This function can be implemented using the 'gcloud alpha workspace settings get-chat-settings' command.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 242 (network_ssl_policy_enforce_secure_tls, iam_policy_urn_absent, network_firewall_policy_has_associated_rules...)\n- New Functions Proposed: 1 (chat_external_domain_restriction)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.4.3.1",
    "title": "(L1) Ensure external spaces in Google Chat and Hangouts are restricted",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [
      {
        "function_name": "chat_hangouts_external_spaces_restricted",
        "description": "Checks if external spaces in Google Chat and Hangouts are restricted",
        "gcp_api_example": "gcloud chat spaces list --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the database can cover this compliance requirement. A new function 'chat_hangouts_external_spaces_restricted' is proposed to check if external spaces in Google Chat and Hangouts are restricted. This function can be implemented using the 'gcloud chat spaces list' command.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 242 (network_ssl_policy_enforce_secure_tls, iam_policy_urn_absent, network_firewall_policy_has_associated_rules...)\n- New Functions Proposed: 1 (chat_hangouts_external_spaces_restricted)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.4.4.1",
    "title": "(L1) Ensure allow users to install Chat apps is disabled",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [
      {
        "function_name": "chat_apps_installation_disabled",
        "description": "Checks if the installation of Chat apps is disabled for users",
        "gcp_api_example": "gcloud chat spaces messages get --space=SPACE_ID",
        "service_category": "Chat"
      }
    ],
    "mapping_notes": "No existing functions in the database can cover this compliance requirement. A new function 'chat_apps_installation_disabled' is proposed to check if the installation of Chat apps is disabled for users. This function can be implemented using the 'gcloud chat spaces messages get' command.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 242 (network_ssl_policy_enforce_secure_tls, iam_policy_urn_absent, network_firewall_policy_has_associated_rules...)\n- New Functions Proposed: 1 (chat_apps_installation_disabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.4.4.2",
    "title": "(L1) Ensure allow users to add and use incoming webhooks is disabled",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "chat_incoming_webhooks_disabled",
        "description": "Checks if the setting to allow users to add and use incoming webhooks is disabled",
        "gcp_api_example": "gcloud chat spaces webhooks list --project=PROJECT_ID",
        "service_category": "Chat"
      }
    ],
    "mapping_notes": "No existing functions in the provided database match the compliance requirement. A new function 'chat_incoming_webhooks_disabled' is proposed to check if the setting to allow users to add and use incoming webhooks is disabled. This function can be implemented using the 'gcloud chat spaces webhooks list' command.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (chat_incoming_webhooks_disabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.6.1",
    "title": "(L1) Ensure accessing groups from outside this organization is set to private",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [
      {
        "function_name": "iam_group_external_access_private",
        "description": "Checks if the IAM groups in the organization are set to private for external access",
        "gcp_api_example": "gcloud iam groups settings get-iam-policy --group-key=GROUP_KEY",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the provided list directly address the compliance requirement of ensuring that accessing groups from outside the organization is set to private. Therefore, a new function 'iam_group_external_access_private' is proposed to fill this gap. This function will use the 'gcloud iam groups settings get-iam-policy' command to retrieve the IAM policy for a group and check if the external access is set to private.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 242 (network_ssl_policy_enforce_secure_tls, iam_policy_urn_absent, network_firewall_policy_has_associated_rules...)\n- New Functions Proposed: 1 (iam_group_external_access_private)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.6.2",
    "title": "(L1) Ensure creating groups is restricted",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [
      {
        "function_name": "iam_group_creation_restricted",
        "description": "Checks if the creation of groups is restricted in the organization",
        "gcp_api_example": "gcloud iam groups list --project=PROJECT_ID",
        "service_category": "Identity"
      },
      {
        "function_name": "iam_group_external_members_restricted",
        "description": "Checks if groups in the organization can have external members",
        "gcp_api_example": "gcloud iam groups memberships list --group-key=GROUP_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the database could be mapped to this compliance item. Two new functions are proposed to cover the requirements of this compliance item. The first function, 'iam_group_creation_restricted', checks if the creation of groups is restricted in the organization. The second function, 'iam_group_external_members_restricted', checks if groups in the organization can have external members.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 242 (network_ssl_policy_enforce_secure_tls, iam_policy_urn_absent, network_firewall_policy_has_associated_rules...)\n- New Functions Proposed: 2 (iam_group_creation_restricted, iam_group_external_members_restricted)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.6.3",
    "title": "(L1) Ensure default for permission to view conversations is restricted",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "group_conversation_view_restricted",
        "description": "Checks if the default permission to view group conversations is restricted to group members only",
        "gcp_api_example": "gcloud groups settings get --group=GROUP_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the provided database match the compliance requirement. A new function 'group_conversation_view_restricted' is proposed to check if the default permission to view group conversations is restricted to group members only. This function can be implemented using the 'gcloud groups settings get' command.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (group_conversation_view_restricted)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.7.1",
    "title": "(L1) Ensure service status for Google Sites is set to off",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "google_sites_service_status_off",
        "description": "Checks if the service status for Google Sites is set to off",
        "gcp_api_example": "gcloud services list --enabled --filter='config.name: sites.googleapis.com' --project=PROJECT_ID",
        "service_category": "Organization"
      }
    ],
    "mapping_notes": "No existing functions in the provided database can cover this compliance requirement. A new function 'google_sites_service_status_off' is proposed to check if the service status for Google Sites is set to off. This function can be implemented using the 'gcloud services list' command with appropriate filters.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (google_sites_service_status_off)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.8.1",
    "title": "(L1) Ensure access to external Google Groups is OFF for Everyone",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [
      {
        "function_name": "workspace_external_groups_access_restricted",
        "description": "Checks if access to external Google Groups is restricted for all users in the Google Workspace account",
        "gcp_api_example": "gcloud workspace settings get --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the database can cover this compliance requirement. A new function 'workspace_external_groups_access_restricted' is proposed to check if access to external Google Groups is restricted for all users in the Google Workspace account.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 242 (network_ssl_policy_enforce_secure_tls, iam_policy_urn_absent, network_firewall_policy_has_associated_rules...)\n- New Functions Proposed: 1 (workspace_external_groups_access_restricted)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1.9.1.1",
    "title": "(L1) Ensure users access to Google Workspace Marketplace apps is restricted",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "workspace_marketplace_apps_access_restricted",
        "description": "Checks if users access to Google Workspace Marketplace apps is restricted",
        "gcp_api_example": "gcloud workspace apps get --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the database could be mapped to this compliance item. A new function 'workspace_marketplace_apps_access_restricted' is proposed to fill the gap. This function will use the GCP API to check if the access to Google Workspace Marketplace apps is restricted for users.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (workspace_marketplace_apps_access_restricted)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "4.1.1.1",
    "title": "(L1) Ensure 2-Step Verification (Multi-Factor Authentication) is enforced for all users in administrative roles",
    "existing_functions_mapped": [
      "iam_user_mfa_enabled",
      "iam_account_mfa_enabled",
      "iam_account_mfa_enforced",
      "iam_account_mfa_enabled_root_user",
      "iam_root_user_mfa_enabled",
      "iam_root_user_mfa_required",
      "iam_service_account_mfa_enabled_root",
      "iam_non_service_accounts_mfa_enabled"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 8,
    "new_functions_needed": [],
    "mapping_notes": "The compliance requirement is to enforce 2-Step Verification (Multi-Factor Authentication) for all users in administrative roles. The existing functions 'iam_user_mfa_enabled', 'iam_account_mfa_enabled', 'iam_account_mfa_enforced', 'iam_account_mfa_enabled_root_user', 'iam_root_user_mfa_enabled', 'iam_root_user_mfa_required', 'iam_service_account_mfa_enabled_root', 'iam_non_service_accounts_mfa_enabled' collectively cover this requirement. No new functions are needed.\n\nCoverage Analysis:\n- Coverage Score: 8/10\n- Existing Functions Mapped: 8 (iam_user_mfa_enabled, iam_account_mfa_enabled, iam_account_mfa_enforced, iam_account_mfa_enabled_root_user, iam_root_user_mfa_enabled, iam_root_user_mfa_required, iam_service_account_mfa_enabled_root, iam_non_service_accounts_mfa_enabled)\n- Unmapped Potential Functions: 384 (iam_service_account_keys_recent_usage, iam_user_multifactor_authentication, iam_policy_urn_absent...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "4.1.1.2",
    "title": "(L2) Ensure hardware security keys are used for all users in administrative roles and other high-value accounts",
    "existing_functions_mapped": [
      "iam_admin_accounts_security_key_enforcement",
      "iam_admin_security_key_enforcement"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 10,
    "new_functions_needed": [
      {
        "function_name": "iam_user_hardware_security_key_enforced",
        "description": "Checks if hardware security keys are enforced for all IAM users",
        "gcp_api_example": "gcloud iam users list --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "Existing functions 'iam_admin_accounts_security_key_enforcement' and 'iam_admin_security_key_enforcement' partially cover the compliance requirement for administrative roles. However, a new function 'iam_user_hardware_security_key_enforced' is needed to ensure hardware security keys are used for all users, not just administrative roles.\n\nCoverage Analysis:\n- Coverage Score: 10/10\n- Existing Functions Mapped: 2 (iam_admin_accounts_security_key_enforcement, iam_admin_security_key_enforcement)\n- Unmapped Potential Functions: 662 (iam_service_account_keys_recent_usage, compute_cloud_search_node_to_node_encryption_enabled, kms_cryptokeys_restrict_public_access...)\n- New Functions Proposed: 1 (iam_user_hardware_security_key_enforced)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "4.1.1.3",
    "title": "(L1) Ensure 2-Step Verification (Multi-Factor Authentication) is enforced for all users",
    "existing_functions_mapped": [
      "iam_user_mfa_enabled",
      "iam_account_mfa_enabled",
      "iam_account_mfa_enabled_root_user",
      "iam_root_user_mfa_enabled",
      "iam_service_account_mfa_enabled_root",
      "iam_non_service_accounts_mfa_enabled"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 8,
    "new_functions_needed": [],
    "mapping_notes": "The compliance requirement is to enforce 2-Step Verification (Multi-Factor Authentication) for all users. The existing functions 'iam_user_mfa_enabled', 'iam_account_mfa_enabled', 'iam_account_mfa_enabled_root_user', 'iam_root_user_mfa_enabled', 'iam_service_account_mfa_enabled_root', and 'iam_non_service_accounts_mfa_enabled' collectively cover this requirement. Therefore, no new functions are needed and the coverage is complete.\n\nCoverage Analysis:\n- Coverage Score: 8/10\n- Existing Functions Mapped: 6 (iam_user_mfa_enabled, iam_account_mfa_enabled, iam_account_mfa_enabled_root_user, iam_root_user_mfa_enabled, iam_service_account_mfa_enabled_root, iam_non_service_accounts_mfa_enabled)\n- Unmapped Potential Functions: 386 (iam_service_account_keys_recent_usage, iam_user_multifactor_authentication, iam_policy_urn_absent...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "4.1.2.1",
    "title": "(L2) Ensure Super Admin account recovery is disabled",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "admin_account_recovery_disabled",
        "description": "Checks if Super Admin account recovery is disabled",
        "gcp_api_example": "gcloud iam service-accounts get-iam-policy --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions were found that could cover this compliance requirement. A new function 'admin_account_recovery_disabled' is proposed to check if Super Admin account recovery is disabled. This function can be implemented using the 'gcloud iam service-accounts get-iam-policy' command.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (admin_account_recovery_disabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "4.1.2.2",
    "title": "(L1) Ensure User account recovery is enabled",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "iam_user_account_recovery_enabled",
        "description": "Checks if User account recovery is enabled for non-Super Admin users",
        "gcp_api_example": "gcloud iam service-accounts get-iam-policy --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'iam_user_account_recovery_enabled' is proposed to check if User account recovery is enabled for non-Super Admin users. This function can be implemented using the 'gcloud iam service-accounts get-iam-policy' command.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (iam_user_account_recovery_enabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "4.1.4.1",
    "title": "(L2) Ensure login challenges are enforced",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [
      {
        "function_name": "workspace_user_post_sso_verification",
        "description": "Checks if Google Workspace is configured to verify a user's identity post-single sign on (SSO)",
        "gcp_api_example": "gcloud sso users describe --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "The compliance requirement is specific to Google Workspace and enforcing login challenges post-SSO. There are no existing functions in the database that cover this requirement, hence a new function is proposed. The new function, workspace_user_post_sso_verification, will check if Google Workspace is configured to verify a user's identity post-SSO.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 392 (iam_service_account_keys_recent_usage, iam_user_multifactor_authentication, iam_policy_urn_absent...)\n- New Functions Proposed: 1 (workspace_user_post_sso_verification)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "4.1.5.1",
    "title": "(L1) Ensure password policy is configured for enhanced security",
    "existing_functions_mapped": [
      "iam_account_password_policy_enforcement",
      "iam_account_password_policy_enforced",
      "iam_password_policy_enforcement",
      "iam_password_policy_enforced"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [],
    "mapping_notes": "The compliance requirement is to ensure that a password policy is configured for enhanced security. This requirement is covered by the existing functions 'iam_account_password_policy_enforcement', 'iam_account_password_policy_enforced', 'iam_password_policy_enforcement', and 'iam_password_policy_enforced'. These functions check if the password policy is enforced, which aligns with the compliance requirement. Therefore, no new functions are needed and the coverage is complete.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 4 (iam_account_password_policy_enforcement, iam_account_password_policy_enforced, iam_password_policy_enforcement, iam_password_policy_enforced)\n- Unmapped Potential Functions: 238 (network_ssl_policy_enforce_secure_tls, iam_policy_urn_absent, network_firewall_policy_has_associated_rules...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "4.2.1.1",
    "title": "(L2) Ensure application access to Google services is restricted",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "workspace_service_access_restricted",
        "description": "Checks if access to Workspace services, including Google Cloud Platform services such as Machine Learning, is restricted",
        "gcp_api_example": "gcloud services list --enabled --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'workspace_service_access_restricted' is proposed to check if access to Workspace services is restricted. This function can be implemented using the 'gcloud services list' command to list enabled services for a project and then checking if any unnecessary services are enabled.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (workspace_service_access_restricted)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "4.2.1.2",
    "title": "(L2) Review third-party applications periodically",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "third_party_applications_periodic_review",
        "description": "Weekly review of connected third-party applications for potential malicious or unintended access or connections",
        "gcp_api_example": "gcloud projects get-iam-policy PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to the compliance requirement. A new function 'third_party_applications_periodic_review' is proposed to fill the gap. This function will perform a weekly review of connected third-party applications for potential malicious or unintended access or connections. The function will use the 'gcloud projects get-iam-policy' command to fetch the IAM policy for the project, which will include information about third-party applications connected to the project.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (third_party_applications_periodic_review)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "4.2.1.3",
    "title": "(L1) Ensure internal apps can access Google Workspace APIs",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "workspace_api_access_enabled_for_internal_apps",
        "description": "Checks if Google Workspace APIs are accessible by customer-owned/developed applications",
        "gcp_api_example": "gcloud services list --enabled --filter=NAME:googleworkspace.googleapis.com --project=PROJECT_ID",
        "service_category": "Workspace"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'workspace_api_access_enabled_for_internal_apps' is proposed to check if Google Workspace APIs are accessible by customer-owned/developed applications. This function can be implemented using the 'gcloud services list' command to list enabled APIs for a project and filtering for the Google Workspace API.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (workspace_api_access_enabled_for_internal_apps)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "4.2.1.4",
    "title": "(L2) Review domain-wide delegation for applications periodically",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "workspace_domain_delegation_review",
        "description": "Weekly review of domain-wide delegations for applications for potentially malicious or unintended access or connections",
        "gcp_api_example": "gcloud domain-wide-delegation review --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "The compliance item requires a periodic review of domain-wide delegations for applications. However, none of the existing functions in the database cover this requirement. Therefore, a new function 'workspace_domain_delegation_review' is proposed to fill this gap. This function will use the GCP API to perform a weekly review of domain-wide delegations for applications, checking for potentially malicious or unintended access or connections.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (workspace_domain_delegation_review)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "4.2.2.1",
    "title": "(L1) Ensure blocking access from unapproved geographic locations",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "access_restriction_by_geolocation",
        "description": "Checks if access to Google applications is restricted by geographic location",
        "gcp_api_example": "gcloud access-context-manager policies list --project=PROJECT_ID",
        "service_category": "Security"
      }
    ],
    "mapping_notes": "No existing functions in the provided list can cover this compliance requirement. A new function 'access_restriction_by_geolocation' is proposed to check if access to Google applications is restricted by geographic location. This function can be implemented using the Access Context Manager API in GCP.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (access_restriction_by_geolocation)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "4.2.3.1",
    "title": "(L1) Ensure DLP policies for Google Drive are configured",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [
      {
        "function_name": "drive_dlp_policy_configured",
        "description": "Checks if Data Loss Prevention (DLP) policies for Google Drive are configured",
        "gcp_api_example": "gcloud dlp data-stores inspect templates list --project=PROJECT_ID",
        "service_category": "Security"
      }
    ],
    "mapping_notes": "No existing functions in the database match the compliance requirement of ensuring DLP policies for Google Drive are configured. Therefore, a new function 'drive_dlp_policy_configured' is proposed to fill this gap. This function will use the 'gcloud dlp data-stores inspect templates list' command to check if DLP policies are configured for Google Drive.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 242 (network_ssl_policy_enforce_secure_tls, iam_policy_urn_absent, network_firewall_policy_has_associated_rules...)\n- New Functions Proposed: 1 (drive_dlp_policy_configured)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "4.2.4.1",
    "title": "(L1) Ensure Google session control is configured",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "workspace_session_control_configured",
        "description": "Checks if Google Workspace's session control is configured to strengthen session expiration",
        "gcp_api_example": "gcloud workspace settings get --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the provided database match the compliance requirement. A new function 'workspace_session_control_configured' is proposed to check if Google Workspace's session control is configured. This function falls under the 'Identity' service category.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (workspace_session_control_configured)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "4.2.5.1",
    "title": "(L2) Ensure Google Cloud session control is configured",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "iam_session_control_configured",
        "description": "Checks if Google Cloud session control is configured to strengthen session expiration",
        "gcp_api_example": "gcloud iam roles describe --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'iam_session_control_configured' is proposed to fill this gap. This function will check if Google Cloud session control is configured to strengthen session expiration.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (iam_session_control_configured)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "4.2.6.1",
    "title": "(L1) Ensure less secure app access is disabled",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "workspace_less_secure_app_access_disabled",
        "description": "Checks if less secure app access is disabled in Google Workspace",
        "gcp_api_example": "gcloud workspace settings get --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'workspace_less_secure_app_access_disabled' is proposed to check if less secure app access is disabled in Google Workspace. This function is categorized under 'Identity' as it pertains to user access and authentication.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (workspace_less_secure_app_access_disabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "4.3.1",
    "title": "(L1) Ensure the Dashboard is reviewed regularly for anomalies",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [
      {
        "function_name": "security_dashboard_reviewed_regularly",
        "description": "Checks if the security dashboard is reviewed regularly for anomalies",
        "gcp_api_example": "gcloud logging read --freshness=7d --project=PROJECT_ID",
        "service_category": "Monitoring"
      }
    ],
    "mapping_notes": "No existing functions in the database cover this compliance requirement. A new function 'security_dashboard_reviewed_regularly' is proposed to fill this gap. This function will check the logs for any activity related to the security dashboard within the last 7 days, ensuring it is reviewed regularly.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 242 (network_ssl_policy_enforce_secure_tls, iam_policy_urn_absent, network_firewall_policy_has_associated_rules...)\n- New Functions Proposed: 1 (security_dashboard_reviewed_regularly)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "4.3.2",
    "title": "(L1) Ensure the Security health is reviewed regularly for anomalies",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 4,
    "new_functions_needed": [],
    "mapping_notes": "Failed to process due to API errors. Coverage score 4/10 calculated based on basic analysis."
  },
  {
    "compliance_id": "5.1.1.1",
    "title": "(L1) Ensure the App Usage Report is reviewed regularly for anomalies",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [
      {
        "function_name": "workspace_app_usage_report_reviewed",
        "description": "Checks if the App Usage Report in Google Workspace is reviewed regularly for anomalies",
        "gcp_api_example": "Reports API: reports.activities.list(userKey='all', applicationName='application_name')",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the database can cover this compliance requirement. A new function 'workspace_app_usage_report_reviewed' is proposed to check if the App Usage Report in Google Workspace is reviewed regularly for anomalies. This function can be implemented using the Reports API in Google Workspace.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 461 (firestore_snapshots_non_public, logging_logbucket_retention_period_greater_than_minimum, network_ssl_policy_enforce_secure_tls...)\n- New Functions Proposed: 1 (workspace_app_usage_report_reviewed)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "5.1.1.2",
    "title": "(L1) Ensure the Security Report is reviewed regularly for anomalies",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 4,
    "new_functions_needed": [],
    "mapping_notes": "Failed to process due to API errors. Coverage score 4/10 calculated based on basic analysis."
  },
  {
    "compliance_id": "6.1",
    "title": "(L1) Ensure User's password changed is configured",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "iam_user_password_change_alert_configured",
        "description": "Checks if an alert is configured to be generated when a user's password is changed",
        "gcp_api_example": "gcloud iam users describe --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'iam_user_password_change_alert_configured' is proposed to fill this gap. This function will check if an alert is configured to be generated when a user's password is changed in IAM service.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (iam_user_password_change_alert_configured)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "6.2",
    "title": "(L1) Ensure Government-backed attacks is configured",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "alert_config_government_backed_attacks",
        "description": "Checks if alerts for government-backed attacks are configured",
        "gcp_api_example": "gcloud alpha scc settings services-enablement describe --organization=ORGANIZATION_ID",
        "service_category": "Security"
      }
    ],
    "mapping_notes": "No existing functions in the provided database match the compliance requirement. A new function 'alert_config_government_backed_attacks' is proposed to check if alerts for government-backed attacks are configured. The coverage assessment is low (1) as the new function is needed to cover the compliance requirement.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (alert_config_government_backed_attacks)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "6.3",
    "title": "(L1) Ensure User suspended due to suspicious activity is configured",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "iam_user_suspension_alert_configured",
        "description": "Checks if an alert is configured to be generated when a user's account is suspended due to suspicious activity",
        "gcp_api_example": "gcloud alpha scc settings services-enablement describe --organization=ORGANIZATION_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'iam_user_suspension_alert_configured' is proposed to check if an alert is configured to be generated when a user's account is suspended due to suspicious activity. This function can be implemented using the GCP Security Command Center API.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (iam_user_suspension_alert_configured)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "6.4",
    "title": "(L1) Ensure User granted Admin privilege is configured",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "iam_user_admin_privilege_alert_configured",
        "description": "Checks if an alert is configured to be generated when a user is granted admin privilege",
        "gcp_api_example": "gcloud iam roles describe --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'iam_user_admin_privilege_alert_configured' is proposed to fill the gap. This function will check if an alert is configured to be generated when a user is granted admin privilege.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (iam_user_admin_privilege_alert_configured)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "6.5",
    "title": "(L1) Ensure Suspicious programmatic login is configured",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [
      {
        "function_name": "iam_user_suspicious_programmatic_login_alert_configured",
        "description": "Checks if an alert is configured to be generated when Google detects suspicious login attempts from applications or computer programs.",
        "gcp_api_example": "gcloud logging metrics list --filter='metric.name:suspicious_programmatic_login_alert' --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the database can cover this compliance requirement. A new function is proposed to check if an alert is configured for suspicious programmatic login attempts.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 360 (compute_cloud_search_node_to_node_encryption_enabled, compute_instance_redundancy_ensured, container_gke_cluster_logging_enabled...)\n- New Functions Proposed: 1 (iam_user_suspicious_programmatic_login_alert_configured)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "6.6",
    "title": "(L1) Ensure Suspicious login is configured",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "iam_user_suspicious_login_alert_configured",
        "description": "Checks if an alert is configured for suspicious login attempts for IAM users",
        "gcp_api_example": "gcloud iam service-accounts get-iam-policy --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'iam_user_suspicious_login_alert_configured' is proposed to check if an alert is configured for suspicious login attempts for IAM users. This function can be implemented using the 'gcloud iam service-accounts get-iam-policy' command.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (iam_user_suspicious_login_alert_configured)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "6.7",
    "title": "(L1) Ensure Leaked password is configured",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "iam_user_leaked_password_alert_configured",
        "description": "Checks if an alert is configured to be generated when Google detects compromised credentials requiring a reset of a user's password",
        "gcp_api_example": "gcloud iam users describe --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'iam_user_leaked_password_alert_configured' is proposed to fill this gap. This function will check if an alert is configured to be generated when Google detects compromised credentials requiring a reset of a user's password.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (iam_user_leaked_password_alert_configured)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "6.8",
    "title": "(L1) Ensure Gmail potential employee spoofing is configured",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "gmail_alert_on_employee_spoofing",
        "description": "Checks if an alert is configured to be generated when Google detects incoming messages are received where a sender\u2019s name is in your Google Workspace directory, but the mail is not from the actual employee.",
        "gcp_api_example": "gcloud alpha scc settings services gmail settings get --organization=ORGANIZATION_ID",
        "service_category": "Security"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'gmail_alert_on_employee_spoofing' is proposed to check if Gmail is configured to alert on potential employee spoofing. The coverage assessment is low (1) as the new function is needed to cover the compliance requirement.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (gmail_alert_on_employee_spoofing)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  }
]
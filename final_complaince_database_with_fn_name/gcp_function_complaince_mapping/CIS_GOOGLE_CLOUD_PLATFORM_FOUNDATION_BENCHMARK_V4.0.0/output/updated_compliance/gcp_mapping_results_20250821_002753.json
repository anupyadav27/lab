[
  {
    "compliance_id": "1.1",
    "title": "Ensure that Corporate Login Credentials are Used",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "iam_user_corporate_login_used",
        "description": "Checks if corporate login credentials are used instead of consumer accounts",
        "gcp_api_example": "gcloud iam service-accounts list --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the provided list can cover this compliance requirement. Therefore, a new function 'iam_user_corporate_login_used' is proposed. This function will check if corporate login credentials are used instead of consumer accounts, such as Gmail accounts. The function can be implemented using the 'gcloud iam service-accounts list' command.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (iam_user_corporate_login_used)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "1.2",
    "title": "Ensure that Multi-Factor Authentication is 'Enabled' for All Non-Service Accounts",
    "existing_functions_mapped": [
      "iam_non_service_accounts_mfa_enabled",
      "iam_account_mfa_enforced",
      "iam_account_mfa_enabled",
      "iam_account_mfa_enabled_root_user",
      "iam_root_user_mfa_enabled",
      "iam_user_mfa_enabled"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 8,
    "new_functions_needed": [],
    "mapping_notes": "The compliance requirement is to ensure that Multi-Factor Authentication is enabled for all non-service accounts. There are several existing functions in the database that can cover this requirement, including 'iam_non_service_accounts_mfa_enabled', 'iam_account_mfa_enforced', 'iam_account_mfa_enabled', 'iam_account_mfa_enabled_root_user', 'iam_root_user_mfa_enabled', and 'iam_user_mfa_enabled'. These functions collectively provide complete coverage for this compliance requirement, so no new functions are needed.\n\nCoverage Analysis:\n- Coverage Score: 8/10\n- Existing Functions Mapped: 6 (iam_non_service_accounts_mfa_enabled, iam_account_mfa_enforced, iam_account_mfa_enabled, iam_account_mfa_enabled_root_user, iam_root_user_mfa_enabled, iam_user_mfa_enabled)\n- Unmapped Potential Functions: 386 (iam_users_authentication_mechanism, iam_api_keys_restricted_to_needed_apis, sql_instances_use_default_service_account...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "1.3",
    "title": "Ensure that Security Key Enforcement is Enabled for All Admin Accounts",
    "existing_functions_mapped": [
      "iam_admin_accounts_security_key_enforcement"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [],
    "mapping_notes": "The existing function 'iam_admin_accounts_security_key_enforcement' directly covers the compliance requirement of ensuring that Security Key Enforcement is enabled for all admin accounts. Therefore, no new functions are needed, and the coverage is complete.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 1 (iam_admin_accounts_security_key_enforcement)\n- Unmapped Potential Functions: 663 (iam_users_authentication_mechanism, iam_api_keys_restricted_to_needed_apis, sql_instances_use_default_service_account...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "1.4",
    "title": "Ensure That There Are Only GCP-Managed Service Account Keys for Each Service Account",
    "existing_functions_mapped": [
      "iam_service_account_no_user_managed_keys"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [],
    "mapping_notes": "The existing function 'iam_service_account_no_user_managed_keys' directly covers the compliance requirement of ensuring only GCP-managed service account keys are used. Therefore, no new functions are needed, and no functions need to be renamed or consolidated for this compliance item.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 1 (iam_service_account_no_user_managed_keys)\n- Unmapped Potential Functions: 663 (iam_users_authentication_mechanism, iam_api_keys_restricted_to_needed_apis, sql_instances_use_default_service_account...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "1.5",
    "title": "Ensure That Service Account Has No Admin Privileges",
    "existing_functions_mapped": [
      "iam_service_account_no_admin_privileges"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [],
    "mapping_notes": "The existing function 'iam_service_account_no_admin_privileges' directly covers the compliance requirement of ensuring that a service account does not have admin privileges. Therefore, no new functions are needed, and no functions need to be renamed or consolidated for this compliance item.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 1 (iam_service_account_no_admin_privileges)\n- Unmapped Potential Functions: 739 (compute_engine_vm_emergency_mode_protection, iam_users_authentication_mechanism, iam_api_keys_restricted_to_needed_apis...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "1.6",
    "title": "Ensure That IAM Users Are Not Assigned the Service Account User or Service Account Token Creator Roles at Project Level",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [
      {
        "function_name": "iam_project_no_service_account_roles",
        "description": "Checks that IAM users are not assigned the Service Account User or Service Account Token Creator roles at the project level",
        "gcp_api_example": "gcloud iam roles list --project=PROJECT_ID",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "No existing functions in the provided database can cover this compliance requirement. A new function 'iam_project_no_service_account_roles' is proposed to fill this gap. This function will use the 'gcloud iam roles list' command to retrieve the roles assigned to IAM users at the project level and ensure that the Service Account User or Service Account Token Creator roles are not assigned.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 392 (iam_users_authentication_mechanism, iam_api_keys_restricted_to_needed_apis, sql_instances_use_default_service_account...)\n- New Functions Proposed: 1 (iam_project_no_service_account_roles)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "1.7",
    "title": "Ensure User-Managed/External Keys for Service Accounts Are Rotated Every 90 Days or Fewer",
    "existing_functions_mapped": [
      "iam_service_account_keys_rotated_within_max_age",
      "iam_service_account_keys_rotation"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 8,
    "new_functions_needed": [],
    "mapping_notes": "The compliance requirement is fully covered by the existing functions 'iam_service_account_keys_rotated_within_max_age' and 'iam_service_account_keys_rotation'. These functions check the rotation of service account keys within a specified period, which aligns with the compliance requirement of ensuring user-managed/external keys for service accounts are rotated every 90 days or fewer. Therefore, no new functions are needed, and no existing functions need to be renamed or consolidated.\n\nCoverage Analysis:\n- Coverage Score: 8/10\n- Existing Functions Mapped: 2 (iam_service_account_keys_rotated_within_max_age, iam_service_account_keys_rotation)\n- Unmapped Potential Functions: 662 (iam_users_authentication_mechanism, iam_api_keys_restricted_to_needed_apis, sql_instances_use_default_service_account...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "1.8",
    "title": "Ensure That Separation of Duties Is Enforced While Assigning Service Account Related Roles to Users",
    "existing_functions_mapped": [
      "iam_service_account_roles_separation_of_duties",
      "iam_roles_separation_of_duties_enforced",
      "iam_roles_duties_segregated",
      "iam_roles_define_separation_of_duties"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 8,
    "new_functions_needed": [],
    "mapping_notes": "The compliance requirement is fully covered by existing functions in the database. The functions 'iam_service_account_roles_separation_of_duties', 'iam_roles_separation_of_duties_enforced', 'iam_roles_duties_segregated', and 'iam_roles_define_separation_of_duties' collectively ensure that the principle of 'Separation of Duties' is enforced while assigning service-account related roles to users. No new functions are needed, and no existing functions need to be renamed or consolidated.\n\nCoverage Analysis:\n- Coverage Score: 8/10\n- Existing Functions Mapped: 4 (iam_service_account_roles_separation_of_duties, iam_roles_separation_of_duties_enforced, iam_roles_duties_segregated, iam_roles_define_separation_of_duties)\n- Unmapped Potential Functions: 388 (iam_users_authentication_mechanism, iam_api_keys_restricted_to_needed_apis, sql_instances_use_default_service_account...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "1.9",
    "title": "Ensure That Cloud KMS Cryptokeys Are Not Anonymously or Publicly Accessible",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 4,
    "new_functions_needed": [],
    "mapping_notes": "Failed to process due to API errors. Coverage score 4/10 calculated based on basic analysis."
  },
  {
    "compliance_id": "1.10",
    "title": "Ensure KMS Encryption Keys Are Rotated Within a Period of 90 Days",
    "existing_functions_mapped": [
      "kms_key_rotation_schedule_format",
      "kms_keys_rotation_within_90_days"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 8,
    "new_functions_needed": [],
    "mapping_notes": "The existing functions 'kms_key_rotation_schedule_format' and 'kms_keys_rotation_within_90_days' collectively cover the compliance requirement of ensuring KMS encryption keys are rotated within a period of 90 days. No new functions are needed, and no renaming or consolidation is required.\n\nCoverage Analysis:\n- Coverage Score: 8/10\n- Existing Functions Mapped: 2 (kms_key_rotation_schedule_format, kms_keys_rotation_within_90_days)\n- Unmapped Potential Functions: 324 (iam_api_keys_restricted_to_needed_apis, network_cdn_ssl_protocols_non_deprecated, network_load_balancer_ssl_proxy_custom_ssl_policy...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "1.11",
    "title": "Ensure That Separation of Duties Is Enforced While Assigning KMS Related Roles to Users",
    "existing_functions_mapped": [
      "kms_roles_separation_of_duties_enforced"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [],
    "mapping_notes": "The existing function 'kms_roles_separation_of_duties_enforced' directly covers the compliance requirement of enforcing separation of duties while assigning KMS related roles to users. Therefore, no new functions are needed and the coverage is complete.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 1 (kms_roles_separation_of_duties_enforced)\n- Unmapped Potential Functions: 325 (iam_api_keys_restricted_to_needed_apis, network_cdn_ssl_protocols_non_deprecated, network_load_balancer_ssl_proxy_custom_ssl_policy...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "1.12",
    "title": "Ensure API Keys Only Exist for Active Services",
    "existing_functions_mapped": [
      "iam_api_keys_active_services_only",
      "iam_api_keys_standard_authentication_enforced",
      "iam_api_keys_restricted_usage",
      "iam_api_keys_rotation_enforced",
      "iam_api_keys_host_app_restriction"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 8,
    "new_functions_needed": [],
    "mapping_notes": "The compliance requirement is fully covered by existing functions. The functions 'iam_api_keys_active_services_only', 'iam_api_keys_standard_authentication_enforced', 'iam_api_keys_restricted_usage', 'iam_api_keys_rotation_enforced', and 'iam_api_keys_host_app_restriction' collectively ensure that API keys are only used for active services, are restricted to necessary usage, are rotated regularly, and are restricted to the host application. No new functions are needed.\n\nCoverage Analysis:\n- Coverage Score: 8/10\n- Existing Functions Mapped: 5 (iam_api_keys_active_services_only, iam_api_keys_standard_authentication_enforced, iam_api_keys_restricted_usage, iam_api_keys_rotation_enforced, iam_api_keys_host_app_restriction)\n- Unmapped Potential Functions: 659 (iam_users_authentication_mechanism, iam_api_keys_restricted_to_needed_apis, sql_instances_use_default_service_account...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "1.13",
    "title": "Ensure API Keys Are Restricted To Use by Only Specified Hosts and Apps",
    "existing_functions_mapped": [
      "iam_api_keys_restricted_to_needed_apis",
      "iam_api_keys_active_services_only"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 10,
    "new_functions_needed": [
      {
        "function_name": "iam_api_keys_host_app_restriction",
        "description": "Checks if API keys are restricted to use by only specified hosts and apps",
        "gcp_api_example": "gcloud iam api-keys list --filter='name:projects/PROJECT_ID/keys/KEY_ID' --format='value(name,displayName,createTime,validityPeriod,endTime)'",
        "service_category": "Identity"
      }
    ],
    "mapping_notes": "The existing functions 'iam_api_keys_restricted_to_needed_apis' and 'iam_api_keys_active_services_only' partially cover the compliance requirement. However, they do not fully ensure that API keys are restricted to use by only specified hosts and apps. Therefore, a new function 'iam_api_keys_host_app_restriction' is proposed to fill this gap.\n\nCoverage Analysis:\n- Coverage Score: 10/10\n- Existing Functions Mapped: 2 (iam_api_keys_restricted_to_needed_apis, iam_api_keys_active_services_only)\n- Unmapped Potential Functions: 662 (iam_users_authentication_mechanism, sql_instances_use_default_service_account, iam_roles_policy_attachment...)\n- New Functions Proposed: 1 (iam_api_keys_host_app_restriction)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "1.14",
    "title": "Ensure API Keys Are Restricted to Only APIs That Application Needs Access",
    "existing_functions_mapped": [
      "iam_api_keys_restricted_to_needed_apis",
      "iam_api_keys_active_services_only",
      "iam_api_key_usage_restriction",
      "iam_api_key_restriction_enforced"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 8,
    "new_functions_needed": [],
    "mapping_notes": "The compliance requirement is fully covered by existing functions in the database. The functions 'iam_api_keys_restricted_to_needed_apis', 'iam_api_keys_active_services_only', 'iam_api_key_usage_restriction', and 'iam_api_key_restriction_enforced' collectively ensure that API keys are restricted to only the APIs that the application needs access to. No new functions are needed, and no existing functions need to be renamed or consolidated.\n\nCoverage Analysis:\n- Coverage Score: 8/10\n- Existing Functions Mapped: 4 (iam_api_keys_restricted_to_needed_apis, iam_api_keys_active_services_only, iam_api_key_usage_restriction, iam_api_key_restriction_enforced)\n- Unmapped Potential Functions: 660 (iam_users_authentication_mechanism, sql_instances_use_default_service_account, iam_roles_policy_attachment...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "1.15",
    "title": "Ensure API Keys Are Rotated Every 90 Days",
    "existing_functions_mapped": [
      "iam_api_keys_rotation_90_days"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [],
    "mapping_notes": "The existing function 'iam_api_keys_rotation_90_days' directly covers the compliance requirement of ensuring API keys are rotated every 90 days. Therefore, no new functions are needed, and no existing functions need to be renamed or consolidated for this compliance item.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 1 (iam_api_keys_rotation_90_days)\n- Unmapped Potential Functions: 663 (iam_users_authentication_mechanism, iam_api_keys_restricted_to_needed_apis, sql_instances_use_default_service_account...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "1.16",
    "title": "Ensure Essential Contacts is Configured for Organization",
    "existing_functions_mapped": [
      "iam_organization_essential_contacts_configured"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 4,
    "new_functions_needed": [],
    "mapping_notes": "The compliance requirement is fully covered by the existing function 'iam_organization_essential_contacts_configured'. This function checks if the essential contacts are configured for the organization, which aligns with the compliance requirement. Therefore, no new functions or renames are needed.\n\nCoverage Analysis:\n- Coverage Score: 4/10\n- Existing Functions Mapped: 1 (iam_organization_essential_contacts_configured)\n- Unmapped Potential Functions: 241 (monitoring_alerting_policy_notification_channel_configured, iam_roles_policy_attachment, iam_policy_grn_absent...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "1.17",
    "title": "Ensure Secrets are Not Stored in Cloud Functions Environment Variables by Using Secret Manager",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [
      {
        "function_name": "cloudfunctions_environment_variables_secret_manager",
        "description": "Checks if secrets are stored in Cloud Functions environment variables and recommends using Secret Manager",
        "gcp_api_example": "gcloud functions describe FUNCTION_NAME --format='value(environmentVariables)' --project=PROJECT_ID",
        "service_category": "Security"
      }
    ],
    "mapping_notes": "No existing functions in the database cover this compliance requirement. A new function is proposed to check if secrets are stored in Cloud Functions environment variables and recommends using Secret Manager for secure storage.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 740 (compute_engine_vm_emergency_mode_protection, iam_users_authentication_mechanism, iam_api_keys_restricted_to_needed_apis...)\n- New Functions Proposed: 1 (cloudfunctions_environment_variables_secret_manager)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "2.1",
    "title": "Ensure That Cloud Audit Logging Is Configured Properly",
    "existing_functions_mapped": [
      "logging_audit_logs_configured_properly",
      "logging_audit_logs_enabled",
      "logging_audit_logs_integrity_checking_enabled",
      "logging_audit_logs_evidence_preservation",
      "logging_audit_logs_export_configured",
      "logging_audit_logs_enable_multiregional",
      "logging_audit_logs_regular_review",
      "logging_audit_logs_access_transparency_enabled",
      "logging_audit_logs_integrity_verification_enabled",
      "logging_audit_logs_enable_administrative",
      "logging_audit_logs_configured_for_admin_and_data_access",
      "logging_audit_logs_configured_to_logging",
      "logging_audit_logs_configured_to_cloud_logging",
      "logging_audit_logs_cmek_configured",
      "logging_audit_logs_multiregion_enabled",
      "logging_audit_logs_retention_90_days",
      "logging_audit_logs_retention",
      "logging_audit_logs_vigilance",
      "logging_audit_logs_integrity_enabled",
      "logging_audit_logs_sink_configured",
      "logging_audit_logs_enabled_multiregion",
      "logging_audit_logs_kms_encryption_configured",
      "logging_audit_logs_encryption_with_kms",
      "logging_audit_logs_configured_for_cloud_logging",
      "logging_audit_logs_multiregion_enabled",
      "logging_audit_logs_centralized_export"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 8,
    "new_functions_needed": [],
    "mapping_notes": "The compliance requirement is to ensure that Cloud Audit Logging is configured properly to track all admin activities and read, write access to user data. The existing functions database has a comprehensive set of functions that cover this requirement. These functions check if audit logs are enabled, configured properly, integrity checking is enabled, evidence is preserved, export is configured, multiregional is enabled, regular review is conducted, access transparency is enabled, integrity verification is enabled, administrative activities are enabled, configured for admin and data access, configured to logging, configured to cloud logging, CMEK is configured, multiregion is enabled, retention is 90 days, vigilance is maintained, integrity is enabled, sink is configured, encryption with KMS is configured, and centralized export is enabled. Therefore, no new functions are needed and the coverage assessment is 10.\n\nCoverage Analysis:\n- Coverage Score: 8/10\n- Existing Functions Mapped: 26 (logging_audit_logs_configured_properly, logging_audit_logs_enabled, logging_audit_logs_integrity_checking_enabled, logging_audit_logs_evidence_preservation, logging_audit_logs_export_configured, logging_audit_logs_enable_multiregional, logging_audit_logs_regular_review, logging_audit_logs_access_transparency_enabled, logging_audit_logs_integrity_verification_enabled, logging_audit_logs_enable_administrative, logging_audit_logs_configured_for_admin_and_data_access, logging_audit_logs_configured_to_logging, logging_audit_logs_configured_to_cloud_logging, logging_audit_logs_cmek_configured, logging_audit_logs_multiregion_enabled, logging_audit_logs_retention_90_days, logging_audit_logs_retention, logging_audit_logs_vigilance, logging_audit_logs_integrity_enabled, logging_audit_logs_sink_configured, logging_audit_logs_enabled_multiregion, logging_audit_logs_kms_encryption_configured, logging_audit_logs_encryption_with_kms, logging_audit_logs_configured_for_cloud_logging, logging_audit_logs_multiregion_enabled, logging_audit_logs_centralized_export)\n- Unmapped Potential Functions: 279 (logging_elasticsearch_audit_logging_enabled, logging_information_system_activity_recording, monitoring_alerting_policy_notification_channel_configured...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "2.2",
    "title": "Ensure That Sinks Are Configured for All Log Entries",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "logging_sink_all_log_entries_configured",
        "description": "Checks if a sink is configured to export all log entries",
        "gcp_api_example": "gcloud logging sinks list --project=PROJECT_ID",
        "service_category": "Monitoring"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'logging_sink_all_log_entries_configured' is proposed to check if a sink is configured to export all log entries. This function can be implemented using the 'gcloud logging sinks list' command.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (logging_sink_all_log_entries_configured)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "2.3",
    "title": "Ensure That Retention Policies on Cloud Storage Buckets Used for Exporting Logs Are Configured Using Bucket Lock",
    "existing_functions_mapped": [
      "storage_bucket_retention_policy_configured_with_lock",
      "storage_bucket_retention_policy_enforced",
      "logging_log_bucket_retention_period_greater_than_minimum",
      "logging_logbucket_retention_period_greater_than_365_days",
      "logging_logbucket_retention_period_greater_than_minimum",
      "storage_bucket_retention_policy_minimum_period",
      "storage_bucket_retention_policy_compliance",
      "storage_bucket_retention_policy_enabled"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 8,
    "new_functions_needed": [],
    "mapping_notes": "The compliance requirement is to ensure that retention policies on Cloud Storage buckets used for exporting logs are configured using bucket lock. This requirement is fully covered by the existing functions in the database. The functions mapped cover the aspects of configuring and enforcing retention policies on storage buckets, ensuring the retention period is greater than a minimum or a specific number of days, and compliance with the retention policy. Therefore, no new functions are needed, and the coverage is assessed as complete.\n\nCoverage Analysis:\n- Coverage Score: 8/10\n- Existing Functions Mapped: 8 (storage_bucket_retention_policy_configured_with_lock, storage_bucket_retention_policy_enforced, logging_log_bucket_retention_period_greater_than_minimum, logging_logbucket_retention_period_greater_than_365_days, logging_logbucket_retention_period_greater_than_minimum, storage_bucket_retention_policy_minimum_period, storage_bucket_retention_policy_compliance, storage_bucket_retention_policy_enabled)\n- Unmapped Potential Functions: 252 (sql_instances_storage_encryption_enabled, bigquery_datasets_use_cmek, storage_objects_automated_collection_prevention...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "2.4",
    "title": "Ensure Log Metric Filter and Alerts Exist for Project Ownership Assignments/Changes",
    "existing_functions_mapped": [
      "iam_project_owner_role_restriction",
      "logging_iam_role_change_alert"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 10,
    "new_functions_needed": [
      {
        "function_name": "logging_project_ownership_change_alert",
        "description": "Checks if log metric filters and alerts exist for project ownership assignments/changes",
        "gcp_api_example": "gcloud logging metrics list --filter='resource.type=project AND protoPayload.methodName:SetIamPolicy AND protoPayload.serviceData.policyDelta.bindingDeltas.role:roles/owner'",
        "service_category": "Monitoring"
      }
    ],
    "mapping_notes": "The existing functions 'iam_project_owner_role_restriction' and 'logging_iam_role_change_alert' partially cover the compliance requirement. However, a new function 'logging_project_ownership_change_alert' is needed to specifically check for log metric filters and alerts for project ownership assignments/changes.\n\nCoverage Analysis:\n- Coverage Score: 10/10\n- Existing Functions Mapped: 2 (iam_project_owner_role_restriction, logging_iam_role_change_alert)\n- Unmapped Potential Functions: 530 (iam_users_authentication_mechanism, iam_api_keys_restricted_to_needed_apis, monitoring_alerting_policy_notification_channel_configured...)\n- New Functions Proposed: 1 (logging_project_ownership_change_alert)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "2.5",
    "title": "Ensure That the Log Metric Filter and Alerts Exist for Audit Configuration Changes",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 4,
    "new_functions_needed": [],
    "mapping_notes": "Failed to process due to API errors. Coverage score 4/10 calculated based on basic analysis."
  },
  {
    "compliance_id": "2.6",
    "title": "Ensure That the Log Metric Filter and Alerts Exist for Custom Role Changes",
    "existing_functions_mapped": [
      "logging_iam_role_change_alert"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [],
    "mapping_notes": "The existing function 'logging_iam_role_change_alert' directly covers the compliance requirement of establishing a metric filter and alarm for changes to IAM role creation, deletion, and updating activities. Therefore, no new functions are needed, and the coverage is complete.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 1 (logging_iam_role_change_alert)\n- Unmapped Potential Functions: 391 (iam_users_authentication_mechanism, iam_api_keys_restricted_to_needed_apis, sql_instances_use_default_service_account...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "2.7",
    "title": "Ensure That the Log Metric Filter and Alerts Exist for VPC Network Firewall Rule Changes",
    "existing_functions_mapped": [
      "network_vpc_firewall_log_metric_filter_alerts_exist",
      "logging_vpc_log_metric_filter_and_alerts_exist",
      "network_firewall_log_metric_alerts_exist",
      "logging_vpc_network_log_metric_filter_alerts_exist",
      "network_vpc_firewall_rule_change_alert",
      "logging_vpc_route_change_alerts_exist"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 8,
    "new_functions_needed": [],
    "mapping_notes": "The compliance requirement is fully covered by existing functions. The functions 'network_vpc_firewall_log_metric_filter_alerts_exist', 'logging_vpc_log_metric_filter_and_alerts_exist', 'network_firewall_log_metric_alerts_exist', 'logging_vpc_network_log_metric_filter_alerts_exist', 'network_vpc_firewall_rule_change_alert', and 'logging_vpc_route_change_alerts_exist' collectively ensure that log metric filters and alerts exist for VPC network firewall rule changes. No new functions or renames are needed.\n\nCoverage Analysis:\n- Coverage Score: 8/10\n- Existing Functions Mapped: 6 (network_vpc_firewall_log_metric_filter_alerts_exist, logging_vpc_log_metric_filter_and_alerts_exist, network_firewall_log_metric_alerts_exist, logging_vpc_network_log_metric_filter_alerts_exist, network_vpc_firewall_rule_change_alert, logging_vpc_route_change_alerts_exist)\n- Unmapped Potential Functions: 326 (monitoring_cloud_armor_security_metrics_enabled, network_cdn_ssl_protocols_non_deprecated, network_firewall_rules_restrict_rdp_internet_access...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "2.8",
    "title": "Ensure That the Log Metric Filter and Alerts Exist for VPC Network Route Changes",
    "existing_functions_mapped": [
      "logging_vpc_log_metric_filter_alerts_exist",
      "logging_vpc_route_change_alerts_exist",
      "network_vpc_route_change_alert"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 8,
    "new_functions_needed": [],
    "mapping_notes": "The compliance requirement is to ensure that a log metric filter and alerts exist for VPC network route changes. The existing functions 'logging_vpc_log_metric_filter_alerts_exist', 'logging_vpc_route_change_alerts_exist', and 'network_vpc_route_change_alert' can collectively cover this requirement. Therefore, no new functions are needed and the coverage is complete.\n\nCoverage Analysis:\n- Coverage Score: 8/10\n- Existing Functions Mapped: 3 (logging_vpc_log_metric_filter_alerts_exist, logging_vpc_route_change_alerts_exist, network_vpc_route_change_alert)\n- Unmapped Potential Functions: 329 (monitoring_cloud_armor_security_metrics_enabled, network_cdn_ssl_protocols_non_deprecated, network_firewall_rules_restrict_rdp_internet_access...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "2.9",
    "title": "Ensure That the Log Metric Filter and Alerts Exist for VPC Network Changes",
    "existing_functions_mapped": [
      "logging_vpc_log_metric_filter_alerts_exist",
      "logging_vpc_network_log_metric_filter_alerts_exist",
      "logging_vpc_route_change_alerts_exist",
      "network_vpc_firewall_log_metric_filter_alerts_exist",
      "network_firewall_log_metric_alerts_exist"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 8,
    "new_functions_needed": [],
    "mapping_notes": "The compliance requirement is to ensure that a log metric filter and alerts exist for VPC network changes. This requirement is already covered by existing functions in the database. The functions 'logging_vpc_log_metric_filter_alerts_exist', 'logging_vpc_network_log_metric_filter_alerts_exist', 'logging_vpc_route_change_alerts_exist', 'network_vpc_firewall_log_metric_filter_alerts_exist', and 'network_firewall_log_metric_alerts_exist' collectively provide the necessary checks for log metric filters and alerts related to VPC network changes. Therefore, no new functions are needed and the coverage is complete.\n\nCoverage Analysis:\n- Coverage Score: 8/10\n- Existing Functions Mapped: 5 (logging_vpc_log_metric_filter_alerts_exist, logging_vpc_network_log_metric_filter_alerts_exist, logging_vpc_route_change_alerts_exist, network_vpc_firewall_log_metric_filter_alerts_exist, network_firewall_log_metric_alerts_exist)\n- Unmapped Potential Functions: 327 (monitoring_cloud_armor_security_metrics_enabled, network_cdn_ssl_protocols_non_deprecated, network_firewall_rules_restrict_rdp_internet_access...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "2.10",
    "title": "Ensure That the Log Metric Filter and Alerts Exist for Cloud Storage IAM Permission Changes",
    "existing_functions_mapped": [
      "storage_bucket_iam_change_alert",
      "logging_log_buckets_cmek_encrypted",
      "logging_metric_filter_alerts_for_storage_iam_changes"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 8,
    "new_functions_needed": [],
    "mapping_notes": "The compliance requirement is fully covered by existing functions. The function 'storage_bucket_iam_change_alert' checks for alerts on IAM changes for Cloud Storage buckets. The function 'logging_log_buckets_cmek_encrypted' ensures that the logs are encrypted, providing security for the log data. The function 'logging_metric_filter_alerts_for_storage_iam_changes' checks for metric filter alerts for IAM changes in Cloud Storage, which is directly related to the compliance requirement.\n\nCoverage Analysis:\n- Coverage Score: 8/10\n- Existing Functions Mapped: 3 (storage_bucket_iam_change_alert, logging_log_buckets_cmek_encrypted, logging_metric_filter_alerts_for_storage_iam_changes)\n- Unmapped Potential Functions: 631 (iam_users_authentication_mechanism, iam_api_keys_restricted_to_needed_apis, sql_instances_use_default_service_account...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "2.11",
    "title": "Ensure That the Log Metric Filter and Alerts Exist for SQL Instance Configuration Changes",
    "existing_functions_mapped": [
      "logging_sql_instance_config_change_alerts_exist",
      "monitoring_sql_instance_config_change_alert"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 8,
    "new_functions_needed": [],
    "mapping_notes": "The compliance requirement is fully covered by the existing functions 'logging_sql_instance_config_change_alerts_exist' and 'monitoring_sql_instance_config_change_alert'. These functions check for the existence of log metric filters and alerts for SQL instance configuration changes, which aligns with the compliance requirement. Therefore, no new functions are needed, and no functions need to be renamed or consolidated.\n\nCoverage Analysis:\n- Coverage Score: 8/10\n- Existing Functions Mapped: 2 (logging_sql_instance_config_change_alerts_exist, monitoring_sql_instance_config_change_alert)\n- Unmapped Potential Functions: 358 (compute_engine_vm_emergency_mode_protection, sql_instances_use_default_service_account, compute_instance_remote_access_disabled...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "2.12",
    "title": "Ensure That Cloud DNS Logging Is Enabled for All VPC Networks",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 4,
    "new_functions_needed": [],
    "mapping_notes": "Failed to process due to API errors. Coverage score 4/10 calculated based on basic analysis."
  },
  {
    "compliance_id": "2.13",
    "title": "Ensure Cloud Asset Inventory Is Enabled",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [
      {
        "function_name": "cloud_asset_inventory_enabled",
        "description": "Checks if Cloud Asset Inventory is enabled for the project",
        "gcp_api_example": "gcloud asset search-all-resources --project=PROJECT_ID",
        "service_category": "Security"
      }
    ],
    "mapping_notes": "No existing functions in the database can cover this compliance requirement. A new function 'cloud_asset_inventory_enabled' is proposed to check if Cloud Asset Inventory is enabled for the project. This function can be implemented using the 'gcloud asset search-all-resources' command.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 392 (iam_users_authentication_mechanism, iam_api_keys_restricted_to_needed_apis, sql_instances_use_default_service_account...)\n- New Functions Proposed: 1 (cloud_asset_inventory_enabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "2.14",
    "title": "Ensure 'Access Transparency' is 'Enabled'",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "access_transparency_enabled",
        "description": "Checks if Access Transparency is enabled for the Google Cloud resources",
        "gcp_api_example": "gcloud alpha services identity get-access-transparency --project=PROJECT_ID",
        "service_category": "Security"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to the compliance requirement of ensuring Access Transparency is enabled. Therefore, a new function 'access_transparency_enabled' is proposed to fill this gap. This function will use the GCP 'get-access-transparency' API to check if Access Transparency is enabled for the Google Cloud resources.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (access_transparency_enabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "2.15",
    "title": "Ensure 'Access Approval' is 'Enabled'",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 4,
    "new_functions_needed": [],
    "mapping_notes": "Failed to process due to API errors. Coverage score 4/10 calculated based on basic analysis."
  },
  {
    "compliance_id": "2.16",
    "title": "Ensure Logging is enabled for HTTP(S) Load Balancer",
    "existing_functions_mapped": [
      "network_https_load_balancer_logging_enabled",
      "network_load_balancer_logging_enabled"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 8,
    "new_functions_needed": [],
    "mapping_notes": "The compliance requirement is to ensure that logging is enabled for HTTP(S) Load Balancer. The existing functions 'network_https_load_balancer_logging_enabled' and 'network_load_balancer_logging_enabled' from the function database can cover this requirement. Therefore, no new functions are needed and the coverage is complete.\n\nCoverage Analysis:\n- Coverage Score: 8/10\n- Existing Functions Mapped: 2 (network_https_load_balancer_logging_enabled, network_load_balancer_logging_enabled)\n- Unmapped Potential Functions: 617 (logging_elasticsearch_audit_logging_enabled, logging_information_system_activity_recording, monitoring_alerting_policy_notification_channel_configured...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.1",
    "title": "Ensure That the Default Network Does Not Exist in a Project",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "network_default_network_existence",
        "description": "Checks if the default network exists in a project",
        "gcp_api_example": "gcloud compute networks list --project=PROJECT_ID",
        "service_category": "Network"
      }
    ],
    "mapping_notes": "No existing functions in the provided database could be mapped to this compliance item. A new function 'network_default_network_existence' is proposed to check if the default network exists in a project. This function can be implemented using the 'gcloud compute networks list' command.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (network_default_network_existence)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.2",
    "title": "Ensure Legacy Networks Do Not Exist for Older Projects",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "compute_legacy_networks_absent",
        "description": "Checks if any legacy networks exist in the project",
        "gcp_api_example": "gcloud compute networks list --filter='mode:LEGACY' --project=PROJECT_ID",
        "service_category": "Compute"
      }
    ],
    "mapping_notes": "No existing functions in the provided list can be used to check for the existence of legacy networks in a GCP project. Therefore, a new function 'compute_legacy_networks_absent' is proposed. This function will use the 'gcloud compute networks list' command with a filter to list only legacy networks. If the command returns any networks, the function will return false, indicating non-compliance.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (compute_legacy_networks_absent)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.3",
    "title": "Ensure That DNSSEC Is Enabled for Cloud DNS",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 2,
    "new_functions_needed": [
      {
        "function_name": "cloud_dns_dnssec_enabled",
        "description": "Checks if DNSSEC is enabled for Cloud DNS",
        "gcp_api_example": "gcloud dns managed-zones describe --project=PROJECT_ID",
        "service_category": "Network"
      }
    ],
    "mapping_notes": "No existing functions in the database match the compliance requirement. A new function 'cloud_dns_dnssec_enabled' is proposed to check if DNSSEC is enabled for Cloud DNS.\n\nCoverage Analysis:\n- Coverage Score: 2/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 0 (None)\n- New Functions Proposed: 1 (cloud_dns_dnssec_enabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.4",
    "title": "Ensure That RSASHA1 Is Not Used for the Key-Signing Key in Cloud DNS DNSSEC",
    "existing_functions_mapped": [
      "dns_dnssec_keysigningkey_no_rsasha1"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [],
    "mapping_notes": "The existing function 'dns_dnssec_keysigningkey_no_rsasha1' directly covers the compliance requirement of ensuring that RSASHA1 is not used for the Key-Signing Key in Cloud DNS DNSSEC. Therefore, no new functions are needed, and the coverage is complete.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 1 (dns_dnssec_keysigningkey_no_rsasha1)\n- Unmapped Potential Functions: 325 (iam_api_keys_restricted_to_needed_apis, network_cdn_ssl_protocols_non_deprecated, network_load_balancer_ssl_proxy_custom_ssl_policy...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.5",
    "title": "Ensure That RSASHA1 Is Not Used for the Zone-Signing Key in Cloud DNS DNSSEC",
    "existing_functions_mapped": [
      "dns_dnssec_keysigningkey_no_rsasha1"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [],
    "mapping_notes": "The existing function 'dns_dnssec_keysigningkey_no_rsasha1' directly covers the compliance requirement to ensure that RSASHA1 is not used for the Zone-Signing Key in Cloud DNS DNSSEC. Therefore, no new functions are needed, and the coverage is complete.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 1 (dns_dnssec_keysigningkey_no_rsasha1)\n- Unmapped Potential Functions: 325 (iam_api_keys_restricted_to_needed_apis, network_cdn_ssl_protocols_non_deprecated, network_load_balancer_ssl_proxy_custom_ssl_policy...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.6",
    "title": "Ensure That SSH Access Is Restricted From the Internet",
    "existing_functions_mapped": [
      "network_firewall_restrict_ssh_rdp_ingress",
      "network_firewall_ssh_incoming_disabled",
      "network_firewall_ssh_incoming_restricted",
      "network_firewall_ssh_restricted",
      "network_firewall_deny_ssh",
      "network_firewall_rule_deny_ssh"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 8,
    "new_functions_needed": [],
    "mapping_notes": "The compliance requirement is to ensure that SSH access is restricted from the internet. This requirement is fully covered by the existing functions in the database that check for restrictions on SSH ingress in firewall rules. Therefore, no new functions are needed and the coverage is assessed as complete.\n\nCoverage Analysis:\n- Coverage Score: 8/10\n- Existing Functions Mapped: 6 (network_firewall_restrict_ssh_rdp_ingress, network_firewall_ssh_incoming_disabled, network_firewall_ssh_incoming_restricted, network_firewall_ssh_restricted, network_firewall_deny_ssh, network_firewall_rule_deny_ssh)\n- Unmapped Potential Functions: 674 (compute_engine_vm_emergency_mode_protection, monitoring_cloud_armor_security_metrics_enabled, sql_instances_use_default_service_account...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.7",
    "title": "Ensure That RDP Access Is Restricted From the Internet",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 4,
    "new_functions_needed": [],
    "mapping_notes": "Failed to process due to API errors. Coverage score 4/10 calculated based on basic analysis."
  },
  {
    "compliance_id": "3.8",
    "title": "Ensure that VPC Flow Logs is Enabled for Every Subnet in a VPC Network",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 4,
    "new_functions_needed": [],
    "mapping_notes": "Failed to process due to API errors. Coverage score 4/10 calculated based on basic analysis."
  },
  {
    "compliance_id": "3.9",
    "title": "Ensure No HTTPS or SSL Proxy Load Balancers Permit SSL Policies With Weak Cipher Suites",
    "existing_functions_mapped": [
      "network_load_balancer_ssl_proxy_custom_ssl_policy",
      "network_https_load_balancer_ssl_tls_certificate_compliance",
      "network_load_balancer_ssl_https_configured",
      "network_https_load_balancer_ssl_proxy_predefined_policy_enforced",
      "network_load_balancer_ssl_policy_predefined",
      "network_load_balancer_ssl_custom_policy",
      "network_load_balancer_ssl_certificates_predefined_policy",
      "network_https_load_balancer_ssl_policy_predefined"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 8,
    "new_functions_needed": [],
    "mapping_notes": "The existing functions in the database provide comprehensive coverage for this compliance item. They ensure that SSL policies for both HTTPS and SSL Proxy Load Balancers do not permit weak cipher suites by enforcing custom or predefined SSL policies.\n\nCoverage Analysis:\n- Coverage Score: 8/10\n- Existing Functions Mapped: 8 (network_load_balancer_ssl_proxy_custom_ssl_policy, network_https_load_balancer_ssl_tls_certificate_compliance, network_load_balancer_ssl_https_configured, network_https_load_balancer_ssl_proxy_predefined_policy_enforced, network_load_balancer_ssl_policy_predefined, network_load_balancer_ssl_custom_policy, network_load_balancer_ssl_certificates_predefined_policy, network_https_load_balancer_ssl_policy_predefined)\n- Unmapped Potential Functions: 573 (iam_api_keys_restricted_to_needed_apis, monitoring_cloud_armor_security_metrics_enabled, network_cdn_ssl_protocols_non_deprecated...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "3.10",
    "title": "Use Identity Aware Proxy (IAP) to Ensure Only Traffic From Google IP Addresses are 'Allowed'",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 4,
    "new_functions_needed": [],
    "mapping_notes": "Failed to process due to API errors. Coverage score 4/10 calculated based on basic analysis."
  },
  {
    "compliance_id": "4.1",
    "title": "Ensure That Instances Are Not Configured To Use the Default Service Account",
    "existing_functions_mapped": [
      "compute_instance_no_default_service_account",
      "compute_instance_no_default_service_account_full_access"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 8,
    "new_functions_needed": [],
    "mapping_notes": "The existing functions 'compute_instance_no_default_service_account' and 'compute_instance_no_default_service_account_full_access' collectively cover the compliance requirement of ensuring that instances are not configured to use the default service account. No new functions are needed, and no existing functions need to be renamed or consolidated for this compliance item.\n\nCoverage Analysis:\n- Coverage Score: 8/10\n- Existing Functions Mapped: 2 (compute_instance_no_default_service_account, compute_instance_no_default_service_account_full_access)\n- Unmapped Potential Functions: 738 (compute_engine_vm_emergency_mode_protection, iam_users_authentication_mechanism, iam_api_keys_restricted_to_needed_apis...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "4.2",
    "title": "Ensure That Instances Are Not Configured To Use the Default Service Account With Full Access to All Cloud APIs",
    "existing_functions_mapped": [
      "compute_instance_no_default_service_account",
      "compute_instance_no_default_service_account_full_access"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 8,
    "new_functions_needed": [],
    "mapping_notes": "The compliance requirement is fully covered by existing functions 'compute_instance_no_default_service_account' and 'compute_instance_no_default_service_account_full_access'. These functions check that instances are not configured to use the default service account, which aligns with the compliance requirement. Therefore, no new functions are needed and the coverage is assessed as complete.\n\nCoverage Analysis:\n- Coverage Score: 8/10\n- Existing Functions Mapped: 2 (compute_instance_no_default_service_account, compute_instance_no_default_service_account_full_access)\n- Unmapped Potential Functions: 738 (compute_engine_vm_emergency_mode_protection, iam_users_authentication_mechanism, iam_api_keys_restricted_to_needed_apis...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "4.3",
    "title": "Ensure \u201cBlock Project-Wide SSH Keys\u201d Is Enabled for VM Instances",
    "existing_functions_mapped": [
      "compute_instance_block_project_wide_ssh_keys_enabled"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [],
    "mapping_notes": "The existing function 'compute_instance_block_project_wide_ssh_keys_enabled' directly covers the compliance requirement to ensure that 'Block Project-Wide SSH Keys' is enabled for VM instances. Therefore, no new functions are needed, and the coverage is complete.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 1 (compute_instance_block_project_wide_ssh_keys_enabled)\n- Unmapped Potential Functions: 649 (compute_engine_vm_emergency_mode_protection, iam_api_keys_restricted_to_needed_apis, sql_instances_use_default_service_account...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "4.4",
    "title": "Ensure Oslogin Is Enabled for a Project",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [
      {
        "function_name": "compute_project_oslogin_enabled",
        "description": "Checks if OS Login is enabled for a GCP project",
        "gcp_api_example": "gcloud compute project-info describe --project=PROJECT_ID",
        "service_category": "Compute"
      }
    ],
    "mapping_notes": "No existing functions in the database can be used to check if OS Login is enabled for a GCP project. A new function, compute_project_oslogin_enabled, is proposed to fill this gap. This function will use the 'gcloud compute project-info describe' command to retrieve project metadata and check if OS Login is enabled.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 0 (None)\n- Unmapped Potential Functions: 664 (iam_users_authentication_mechanism, iam_api_keys_restricted_to_needed_apis, sql_instances_use_default_service_account...)\n- New Functions Proposed: 1 (compute_project_oslogin_enabled)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "4.5",
    "title": "Ensure \u2018Enable Connecting to Serial Ports\u2019 Is Not Enabled for VM Instance",
    "existing_functions_mapped": [
      "compute_instance_disable_serial_console"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [],
    "mapping_notes": "The existing function 'compute_instance_disable_serial_console' directly covers the compliance requirement of ensuring that connecting to serial ports is not enabled for VM instances. Therefore, no new functions are needed, and the coverage is complete.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 1 (compute_instance_disable_serial_console)\n- Unmapped Potential Functions: 359 (compute_engine_vm_emergency_mode_protection, sql_instances_use_default_service_account, compute_instance_remote_access_disabled...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "4.6",
    "title": "Ensure That IP Forwarding Is Not Enabled on Instances",
    "existing_functions_mapped": [
      "compute_instance_disable_ip_forwarding",
      "compute_instance_ip_forwarding_disabled"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 8,
    "new_functions_needed": [],
    "mapping_notes": "The compliance requirement is fully covered by existing functions 'compute_instance_disable_ip_forwarding' and 'compute_instance_ip_forwarding_disabled'. These functions check that IP forwarding is not enabled on Compute Engine instances, which aligns with the compliance requirement. No new functions, renames, or consolidations are needed.\n\nCoverage Analysis:\n- Coverage Score: 8/10\n- Existing Functions Mapped: 2 (compute_instance_disable_ip_forwarding, compute_instance_ip_forwarding_disabled)\n- Unmapped Potential Functions: 358 (compute_engine_vm_emergency_mode_protection, sql_instances_use_default_service_account, compute_instance_remote_access_disabled...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "4.7",
    "title": "Ensure VM Disks for Critical VMs Are Encrypted With Customer-Supplied Encryption Keys (CSEK)",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 4,
    "new_functions_needed": [],
    "mapping_notes": "Failed to process due to API errors. Coverage score 4/10 calculated based on basic analysis."
  },
  {
    "compliance_id": "4.8",
    "title": "Ensure Compute Instances Are Launched With Shielded VM Enabled",
    "existing_functions_mapped": [
      "compute_instance_shielded_vm_enabled"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [],
    "mapping_notes": "The existing function 'compute_instance_shielded_vm_enabled' directly covers the compliance requirement of ensuring that Compute instances are launched with Shielded VM enabled. Therefore, no new functions are needed, and no functions need to be renamed or consolidated for this compliance item.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 1 (compute_instance_shielded_vm_enabled)\n- Unmapped Potential Functions: 359 (compute_engine_vm_emergency_mode_protection, sql_instances_use_default_service_account, compute_instance_remote_access_disabled...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "4.9",
    "title": "Ensure That Compute Instances Do Not Have Public IP Addresses",
    "existing_functions_mapped": [
      "compute_instance_no_public_ip",
      "compute_instance_templates_no_public_access",
      "compute_instance_no_external_ip"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 8,
    "new_functions_needed": [],
    "mapping_notes": "The compliance requirement is fully covered by existing functions. The functions 'compute_instance_no_public_ip', 'compute_instance_templates_no_public_access', and 'compute_instance_no_external_ip' collectively ensure that compute instances do not have public IP addresses. No new functions or renames are needed.\n\nCoverage Analysis:\n- Coverage Score: 8/10\n- Existing Functions Mapped: 3 (compute_instance_no_public_ip, compute_instance_templates_no_public_access, compute_instance_no_external_ip)\n- Unmapped Potential Functions: 357 (compute_engine_vm_emergency_mode_protection, sql_instances_use_default_service_account, compute_instance_remote_access_disabled...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "4.10",
    "title": "Ensure That App Engine Applications Enforce HTTPS Connections",
    "existing_functions_mapped": [
      "app_engine_application_https_enforced"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [],
    "mapping_notes": "The existing function 'app_engine_application_https_enforced' directly covers the compliance requirement of enforcing HTTPS connections for App Engine applications. Therefore, no new functions are needed, and the coverage is complete.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 1 (app_engine_application_https_enforced)\n- Unmapped Potential Functions: 359 (compute_engine_vm_emergency_mode_protection, sql_instances_use_default_service_account, compute_instance_remote_access_disabled...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "4.11",
    "title": "Ensure That Compute Instances Have Confidential Computing Enabled",
    "existing_functions_mapped": [
      "compute_instance_confidential_computing_enabled"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [],
    "mapping_notes": "The compliance requirement is fully covered by the existing function 'compute_instance_confidential_computing_enabled' which checks if the confidential computing is enabled on compute instances. No new functions or renames are needed.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 1 (compute_instance_confidential_computing_enabled)\n- Unmapped Potential Functions: 649 (compute_engine_vm_emergency_mode_protection, iam_api_keys_restricted_to_needed_apis, sql_instances_use_default_service_account...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "4.12",
    "title": "Ensure the Latest Operating System Updates Are Installed On Your Virtual Machines in All Projects",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 4,
    "new_functions_needed": [],
    "mapping_notes": "Failed to process due to API errors. Coverage score 4/10 calculated based on basic analysis."
  },
  {
    "compliance_id": "5.1",
    "title": "Ensure That Cloud Storage Bucket Is Not Anonymously or Publicly Accessible",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 4,
    "new_functions_needed": [],
    "mapping_notes": "Failed to process due to API errors. Coverage score 4/10 calculated based on basic analysis."
  },
  {
    "compliance_id": "5.2",
    "title": "Ensure That Cloud Storage Buckets Have Uniform Bucket- Level Access Enabled",
    "existing_functions_mapped": [
      "storage_bucket_uniform_access_enabled"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [],
    "mapping_notes": "The existing function 'storage_bucket_uniform_access_enabled' directly covers the compliance requirement of ensuring that Cloud Storage buckets have uniform bucket-level access enabled. Therefore, no new functions are needed, and the coverage is complete.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 1 (storage_bucket_uniform_access_enabled)\n- Unmapped Potential Functions: 259 (sql_instances_storage_encryption_enabled, storage_bucket_retention_policy_configured_with_lock, bigquery_datasets_use_cmek...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "6.1.1",
    "title": "Ensure That a MySQL Instance Does Not Allow Anyone To Connect With Administrative Privileges",
    "existing_functions_mapped": [
      "sql_mysql_instance_admin_password_set",
      "sql_instance_no_admin_access",
      "sql_instance_admin_privileges_disabled"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 8,
    "new_functions_needed": [],
    "mapping_notes": "The existing functions 'sql_mysql_instance_admin_password_set', 'sql_instance_no_admin_access', and 'sql_instance_admin_privileges_disabled' collectively cover the compliance requirement of ensuring that a MySQL instance does not allow anyone to connect with administrative privileges. No new functions are needed, and no existing functions need to be renamed or consolidated for this compliance item.\n\nCoverage Analysis:\n- Coverage Score: 8/10\n- Existing Functions Mapped: 3 (sql_mysql_instance_admin_password_set, sql_instance_no_admin_access, sql_instance_admin_privileges_disabled)\n- Unmapped Potential Functions: 357 (compute_engine_vm_emergency_mode_protection, sql_instances_use_default_service_account, compute_instance_remote_access_disabled...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "6.1.2",
    "title": "Ensure \u2018Skip_show_database\u2019 Database Flag for Cloud SQL MySQL Instance Is Set to \u2018On\u2019",
    "existing_functions_mapped": [
      "sql_instance_skip_show_database_on"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [],
    "mapping_notes": "The existing function 'sql_instance_skip_show_database_on' directly maps to the compliance requirement of ensuring the 'Skip_show_database' flag for Cloud SQL MySQL instances is set to 'On'. Therefore, no new functions are needed, and the coverage is complete.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 1 (sql_instance_skip_show_database_on)\n- Unmapped Potential Functions: 604 (compute_engine_vm_emergency_mode_protection, sql_instances_use_default_service_account, compute_instance_remote_access_disabled...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "6.1.3",
    "title": "Ensure That the \u2018Local_infile\u2019 Database Flag for a Cloud SQL MySQL Instance Is Set to \u2018Off\u2019",
    "existing_functions_mapped": [
      "sql_instance_local_infile_flag_off"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [],
    "mapping_notes": "The existing function 'sql_instance_local_infile_flag_off' directly covers the compliance requirement of ensuring that the 'local_infile' database flag for a Cloud SQL MySQL instance is set to 'off'. Therefore, no new functions are needed, and no functions need to be renamed or consolidated for this compliance item.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 1 (sql_instance_local_infile_flag_off)\n- Unmapped Potential Functions: 604 (compute_engine_vm_emergency_mode_protection, sql_instances_use_default_service_account, compute_instance_remote_access_disabled...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "6.2.1",
    "title": "Ensure \u2018Log_error_verbosity\u2019 Database Flag for Cloud SQL PostgreSQL Instance Is Set to \u2018DEFAULT\u2019 or Stricter",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 4,
    "new_functions_needed": [],
    "mapping_notes": "Failed to process due to API errors. Coverage score 4/10 calculated based on basic analysis."
  },
  {
    "compliance_id": "6.2.2",
    "title": "Ensure That the \u2018Log_connections\u2019 Database Flag for Cloud SQL PostgreSQL Instance Is Set to \u2018On\u2019",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 4,
    "new_functions_needed": [],
    "mapping_notes": "Failed to process due to API errors. Coverage score 4/10 calculated based on basic analysis."
  },
  {
    "compliance_id": "6.2.3",
    "title": "Ensure That the \u2018Log_disconnections\u2019 Database Flag for Cloud SQL PostgreSQL Instance Is Set to \u2018On\u2019",
    "existing_functions_mapped": [
      "compute_instance_log_disconnections_enabled"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [],
    "mapping_notes": "The existing function 'compute_instance_log_disconnections_enabled' can be used to check if the 'log_disconnections' database flag for Cloud SQL PostgreSQL instance is set to 'on'. No new functions are needed as the existing function provides complete coverage for this compliance item.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 1 (compute_instance_log_disconnections_enabled)\n- Unmapped Potential Functions: 604 (compute_engine_vm_emergency_mode_protection, sql_instances_use_default_service_account, compute_instance_remote_access_disabled...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "6.2.4",
    "title": "Ensure \u2018Log_statement\u2019 Database Flag for Cloud SQL PostgreSQL Instance Is Set Appropriately",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 4,
    "new_functions_needed": [],
    "mapping_notes": "Failed to process due to API errors. Coverage score 4/10 calculated based on basic analysis."
  },
  {
    "compliance_id": "6.2.5",
    "title": "Ensure that the \u2018Log_min_messages\u2019 Flag for a Cloud SQL PostgreSQL Instance is set at minimum to 'Warning'",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 4,
    "new_functions_needed": [],
    "mapping_notes": "Failed to process due to API errors. Coverage score 4/10 calculated based on basic analysis."
  },
  {
    "compliance_id": "6.2.6",
    "title": "Ensure \u2018Log_min_error_statement\u2019 Database Flag for Cloud SQL PostgreSQL Instance Is Set to \u2018Error\u2019 or Stricter",
    "existing_functions_mapped": [
      "sql_postgresql_instance_log_statement_set"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [],
    "mapping_notes": "The existing function 'sql_postgresql_instance_log_statement_set' can be used to check the 'log_min_error_statement' flag for Cloud SQL PostgreSQL instances. It checks if the flag is set to 'error' or stricter, which aligns with the compliance requirement. Therefore, no new functions are needed and the coverage is complete.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 1 (sql_postgresql_instance_log_statement_set)\n- Unmapped Potential Functions: 604 (compute_engine_vm_emergency_mode_protection, sql_instances_use_default_service_account, compute_instance_remote_access_disabled...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "6.2.7",
    "title": "Ensure That the \u2018Log_min_duration_statement\u2019 Database Flag for Cloud SQL PostgreSQL Instance Is Set to '-1' (Disabled)",
    "existing_functions_mapped": [
      "sql_postgresql_instance_log_statement_set"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [],
    "mapping_notes": "The existing function 'sql_postgresql_instance_log_statement_set' can be used to check if the 'log_min_duration_statement' database flag for Cloud SQL PostgreSQL instance is set to '-1' (Disabled). Therefore, no new functions are needed and the coverage is complete.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 1 (sql_postgresql_instance_log_statement_set)\n- Unmapped Potential Functions: 604 (compute_engine_vm_emergency_mode_protection, sql_instances_use_default_service_account, compute_instance_remote_access_disabled...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "6.2.8",
    "title": "Ensure That 'cloudsql.enable_pgaudit' Database Flag for each Cloud Sql Postgresql Instance Is Set to 'on' For Centralized Logging",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 4,
    "new_functions_needed": [],
    "mapping_notes": "Failed to process due to API errors. Coverage score 4/10 calculated based on basic analysis."
  },
  {
    "compliance_id": "6.3.1",
    "title": "Ensure 'external scripts enabled' Database Flag for Cloud SQL SQL Server Instance Is Set to 'off'",
    "existing_functions_mapped": [
      "sql_instance_external_scripts_disabled"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [],
    "mapping_notes": "The existing function 'sql_instance_external_scripts_disabled' directly covers the compliance requirement of ensuring that the 'external scripts enabled' database flag for Cloud SQL SQL Server instances is set to 'off'. Therefore, no new functions are needed, and no functions need to be renamed or consolidated for this compliance item.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 1 (sql_instance_external_scripts_disabled)\n- Unmapped Potential Functions: 604 (compute_engine_vm_emergency_mode_protection, sql_instances_use_default_service_account, compute_instance_remote_access_disabled...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "6.3.2",
    "title": "Ensure 'cross db ownership chaining' Database Flag for Cloud SQL SQL Server Instance Is Set to 'off'",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 4,
    "new_functions_needed": [],
    "mapping_notes": "Failed to process due to API errors. Coverage score 4/10 calculated based on basic analysis."
  },
  {
    "compliance_id": "6.3.3",
    "title": "Ensure 'user Connections' Database Flag for Cloud SQL SQL Server Instance Is Set to a Non-limiting Value",
    "existing_functions_mapped": [
      "sql_instance_user_connections_unrestricted"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [],
    "mapping_notes": "The existing function 'sql_instance_user_connections_unrestricted' directly covers the compliance requirement of ensuring the 'user connections' database flag for Cloud SQL SQL Server instances is set to a non-limiting value. Therefore, no new functions are needed, and no functions need to be renamed or consolidated for this compliance item.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 1 (sql_instance_user_connections_unrestricted)\n- Unmapped Potential Functions: 604 (compute_engine_vm_emergency_mode_protection, sql_instances_use_default_service_account, compute_instance_remote_access_disabled...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "6.3.4",
    "title": "Ensure 'user options' Database Flag for Cloud SQL SQL Server Instance Is Not Configured",
    "existing_functions_mapped": [
      "sql_instance_user_options_disabled"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [],
    "mapping_notes": "The existing function 'sql_instance_user_options_disabled' directly covers the compliance requirement of ensuring that the 'user options' database flag for Cloud SQL SQL Server instances is not configured. Therefore, no new functions are needed, and the coverage is complete.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 1 (sql_instance_user_options_disabled)\n- Unmapped Potential Functions: 604 (compute_engine_vm_emergency_mode_protection, sql_instances_use_default_service_account, compute_instance_remote_access_disabled...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "6.3.5",
    "title": "Ensure 'remote access' Database Flag for Cloud SQL SQL Server Instance Is Set to 'off'",
    "existing_functions_mapped": [
      "sql_instance_remote_access_disabled"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [],
    "mapping_notes": "The existing function 'sql_instance_remote_access_disabled' directly covers the compliance requirement of ensuring the 'remote access' database flag for Cloud SQL SQL Server instances is set to 'off'. Therefore, no new functions are needed and the coverage is complete.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 1 (sql_instance_remote_access_disabled)\n- Unmapped Potential Functions: 604 (compute_engine_vm_emergency_mode_protection, sql_instances_use_default_service_account, compute_instance_remote_access_disabled...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "6.3.6",
    "title": "Ensure '3625 (trace flag)' Database Flag for all Cloud SQL SQL Server Instances Is Set to 'on'",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 4,
    "new_functions_needed": [],
    "mapping_notes": "Failed to process due to API errors. Coverage score 4/10 calculated based on basic analysis."
  },
  {
    "compliance_id": "6.3.7",
    "title": "Ensure 'contained database authentication' Database Flag for Cloud SQL SQL Server Instance Is Set to 'off'",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 4,
    "new_functions_needed": [],
    "mapping_notes": "Failed to process due to API errors. Coverage score 4/10 calculated based on basic analysis."
  },
  {
    "compliance_id": "6.4",
    "title": "Ensure That the Cloud SQL Database Instance Requires All Incoming Connections To Use SSL",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 4,
    "new_functions_needed": [],
    "mapping_notes": "Failed to process due to API errors. Coverage score 4/10 calculated based on basic analysis."
  },
  {
    "compliance_id": "6.5",
    "title": "Ensure That Cloud SQL Database Instances Do Not Implicitly Whitelist All Public IP Addresses",
    "existing_functions_mapped": [
      "sql_instance_no_public_ip",
      "sql_instances_no_public_access",
      "sql_instance_no_public_access"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 8,
    "new_functions_needed": [],
    "mapping_notes": "The compliance requirement is to ensure that Cloud SQL Database Instances do not implicitly whitelist all public IP addresses. This requirement is already covered by the existing functions 'sql_instance_no_public_ip', 'sql_instances_no_public_access', and 'sql_instance_no_public_access'. These functions check that SQL instances do not have public IP addresses and do not allow public access, which aligns with the compliance requirement. Therefore, no new functions are needed, and the coverage is complete.\n\nCoverage Analysis:\n- Coverage Score: 8/10\n- Existing Functions Mapped: 3 (sql_instance_no_public_ip, sql_instances_no_public_access, sql_instance_no_public_access)\n- Unmapped Potential Functions: 602 (compute_engine_vm_emergency_mode_protection, sql_instances_use_default_service_account, compute_instance_remote_access_disabled...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "6.6",
    "title": "Ensure That Cloud SQL Database Instances Do Not Have Public IPs",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 4,
    "new_functions_needed": [],
    "mapping_notes": "Failed to process due to API errors. Coverage score 4/10 calculated based on basic analysis."
  },
  {
    "compliance_id": "6.7",
    "title": "Ensure That Cloud SQL Database Instances Are Configured With Automated Backups",
    "existing_functions_mapped": [
      "sql_instances_backup_automated_enabled"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [],
    "mapping_notes": "The existing function 'sql_instances_backup_automated_enabled' directly covers the compliance requirement of ensuring that Cloud SQL Database Instances are configured with automated backups. Therefore, no new functions are needed, and no functions need to be renamed or consolidated for this compliance item.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 1 (sql_instances_backup_automated_enabled)\n- Unmapped Potential Functions: 604 (compute_engine_vm_emergency_mode_protection, sql_instances_use_default_service_account, compute_instance_remote_access_disabled...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "7.1",
    "title": "Ensure That BigQuery Datasets Are Not Anonymously or Publicly Accessible",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 4,
    "new_functions_needed": [],
    "mapping_notes": "Failed to process due to API errors. Coverage score 4/10 calculated based on basic analysis."
  },
  {
    "compliance_id": "7.2",
    "title": "Ensure That All BigQuery Tables Are Encrypted With Customer-Managed Encryption Key (CMEK)",
    "existing_functions_mapped": [
      "bigquery_tables_encrypted_with_cmek"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [],
    "mapping_notes": "The existing function 'bigquery_tables_encrypted_with_cmek' directly covers the compliance requirement of ensuring that all BigQuery tables are encrypted with a customer-managed encryption key (CMEK). Therefore, no new functions are needed, and no existing functions need to be renamed or consolidated for this compliance item.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 1 (bigquery_tables_encrypted_with_cmek)\n- Unmapped Potential Functions: 533 (iam_api_keys_restricted_to_needed_apis, network_cdn_ssl_protocols_non_deprecated, network_load_balancer_ssl_proxy_custom_ssl_policy...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "7.3",
    "title": "Ensure That a Default Customer-Managed Encryption Key (CMEK) Is Specified for All BigQuery Data Sets",
    "existing_functions_mapped": [
      "bigquery_datasets_use_cmek",
      "bigquery_dataset_encryption_with_specified_kms_key",
      "bigquery_datasets_encryption_cmek_enabled"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 8,
    "new_functions_needed": [],
    "mapping_notes": "The compliance requirement is fully covered by existing functions in the database. The functions 'bigquery_datasets_use_cmek', 'bigquery_dataset_encryption_with_specified_kms_key', and 'bigquery_datasets_encryption_cmek_enabled' collectively ensure that a default customer-managed encryption key (CMEK) is specified for all BigQuery data sets. No new functions are needed, and no existing functions need to be renamed or consolidated.\n\nCoverage Analysis:\n- Coverage Score: 8/10\n- Existing Functions Mapped: 3 (bigquery_datasets_use_cmek, bigquery_dataset_encryption_with_specified_kms_key, bigquery_datasets_encryption_cmek_enabled)\n- Unmapped Potential Functions: 531 (iam_api_keys_restricted_to_needed_apis, network_cdn_ssl_protocols_non_deprecated, network_load_balancer_ssl_proxy_custom_ssl_policy...)\n- New Functions Proposed: 0 (None)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "7.4",
    "title": "Ensure all data in BigQuery has been classified",
    "existing_functions_mapped": [
      "bigquery_data_classification_ensured"
    ],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 6,
    "new_functions_needed": [
      {
        "function_name": "bigquery_table_data_classification_verified",
        "description": "Checks if all data in BigQuery tables has been classified",
        "gcp_api_example": "bq show --format=prettyjson PROJECT_ID:DATASET.TABLE",
        "service_category": "BigQuery"
      }
    ],
    "mapping_notes": "The existing function 'bigquery_data_classification_ensured' partially covers the compliance requirement. However, it does not verify the classification of all data in BigQuery tables. Therefore, a new function 'bigquery_table_data_classification_verified' is proposed to fill this gap.\n\nCoverage Analysis:\n- Coverage Score: 6/10\n- Existing Functions Mapped: 1 (bigquery_data_classification_ensured)\n- Unmapped Potential Functions: 460 (monitoring_alerting_policy_notification_channel_configured, iam_roles_policy_attachment, iam_policy_grn_absent...)\n- New Functions Proposed: 1 (bigquery_table_data_classification_verified)\n\nTotal Coverage: The combination of mapped existing functions + unmapped potential functions + new proposed functions should provide comprehensive compliance coverage."
  },
  {
    "compliance_id": "8.1",
    "title": "Ensure that Dataproc Cluster is encrypted using Customer- Managed Encryption Key",
    "existing_functions_mapped": [],
    "functions_to_rename": [],
    "functions_to_consolidate": [],
    "coverage_assessment": 4,
    "new_functions_needed": [],
    "mapping_notes": "Failed to process due to API errors. Coverage score 4/10 calculated based on basic analysis."
  }
]
[
  {
    "function_name": "compute_instance_tmp_configured",
    "description": "Checks if /tmp directory in compute instances is configured as its own file system with noexec option",
    "gcp_api_example": "gcloud compute instances describe --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_tmp_partition_nodev_set",
    "description": "Checks if the nodev option is set on /tmp partition of a compute instance",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --format='get(disks[].initializeParams.diskType)' --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_nosuid_option_set",
    "description": "Checks if the nosuid option is set on /tmp partition of a compute instance",
    "gcp_api_example": "gcloud compute instances describe --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_noexec_option_set_tmp_partition",
    "description": "Checks if the noexec option is set on /tmp partition for compute instances",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --project=PROJECT_ID --zone=ZONE",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_nosuid_option_set",
    "description": "Checks if the nosuid option is set on /var partition of a compute instance",
    "gcp_api_example": "gcloud compute instances describe --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_noexec_option_set_on_var_partition",
    "description": "Checks if the noexec option is set on /var partition of a compute instance",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --project=PROJECT_ID --zone=ZONE",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_nodev_option_set_var_partition",
    "description": "Checks if the nodev option is set on /var partition for compute instances",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --format='get(disks[].initializeParams.diskType)' --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_home_partition_nodev_set",
    "description": "Checks if the nodev option is set on /home partition of a compute instance",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --format='get(disks[].initializeParams.image)' --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_nodev_option_set",
    "description": "Checks if the nodev option is set on /dev/shm partition for compute instances",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --format='get(disks[].options)' --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_nosuid_option_set",
    "description": "Checks if the nosuid option is set on /dev/shm partition for compute instances",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --format='get(disks[].initializeParams.diskType)' --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_noexec_option_set",
    "description": "Checks if the noexec option is set on /dev/shm partition for compute instances",
    "gcp_api_example": "gcloud compute instances describe --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_automounting_disabled",
    "description": "Checks if automounting is disabled on compute instances",
    "gcp_api_example": "gcloud compute instances describe --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "container_optimized_os_dm_verity_enabled",
    "description": "Checks if dm-verity is enabled on Container-Optimized OS",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --project=PROJECT_ID --zone=ZONE",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_single_user_mode_authentication_required",
    "description": "Checks if authentication is required for single user mode in compute instances",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_core_dumps_restricted",
    "description": "Checks if core dumps are restricted for compute instances",
    "gcp_api_example": "gcloud compute instances describe --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_xd_nx_support_enabled",
    "description": "Checks if the XD/NX support is enabled on Compute Engine instances",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --project=PROJECT_ID --zone=ZONE",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_aslr_enabled",
    "description": "Checks if Address Space Layout Randomization (ASLR) is enabled on Compute Instances",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --format='get(shieldedInstanceConfig.enableIntegrityMonitoring)' --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_motd_configured_properly",
    "description": "Checks if the message of the day is configured properly on compute instances",
    "gcp_api_example": "gcloud compute instances describe --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_local_login_banner_configured",
    "description": "Checks if the local login warning banner is configured properly on Compute instances",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --format='get(metadata.items[].key)' --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_login_banner_configured",
    "description": "Checks if the remote login warning banner is configured properly on compute instances",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --project=PROJECT_ID --zone=ZONE",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_motd_permissions_configured",
    "description": "Checks if the permissions on /etc/motd file in compute instances are correctly configured",
    "gcp_api_example": "gcloud compute instances get --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_etc_issue_permissions_configured",
    "description": "Checks if the permissions on /etc/issue file in compute instances are correctly configured",
    "gcp_api_example": "gcloud compute instances get --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_issue_net_permissions_configured",
    "description": "Checks if permissions on /etc/issue.net file in Compute instances are correctly configured",
    "gcp_api_example": "gcloud compute instances get --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_apparmor_installed",
    "description": "Checks if AppArmor is installed on compute instances",
    "gcp_api_example": "gcloud compute instances describe --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_time_synchronization_enabled",
    "description": "Checks if time synchronization is enabled on compute instances",
    "gcp_api_example": "gcloud compute instances describe --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_chrony_configured",
    "description": "Checks if chrony is configured on compute instances",
    "gcp_api_example": "gcloud compute instances describe --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_x_window_system_not_installed",
    "description": "Checks if X Window System is installed on Compute instances",
    "gcp_api_example": "gcloud compute instances describe --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_nfs_rpc_disabled",
    "description": "Checks if NFS and RPC are disabled on compute instances",
    "gcp_api_example": "gcloud compute instances describe --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_rsync_service_disabled",
    "description": "Checks if rsync service is disabled on compute instances",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --project=PROJECT_ID --zone=ZONE",
    "service_category": "Compute"
  },
  {
    "function_name": "network_icmp_redirects_disabled",
    "description": "Checks if ICMP redirects are disabled to prevent routing information being sent to other hosts",
    "gcp_api_example": "gcloud compute networks describe NETWORK_ID --format='get(IPv4Range)' --project=PROJECT_ID",
    "service_category": "Network"
  },
  {
    "function_name": "network_source_routed_packets_not_accepted",
    "description": "Checks if source routed packets are not accepted in the network",
    "gcp_api_example": "gcloud compute networks list --project=PROJECT_ID",
    "service_category": "Network"
  },
  {
    "function_name": "network_icmp_redirects_not_accepted",
    "description": "Checks if ICMP redirects are not accepted in the network",
    "gcp_api_example": "gcloud compute networks list --format='table(name, routingConfig.routingMode)' --project=PROJECT_ID",
    "service_category": "Network"
  },
  {
    "function_name": "network_icmp_secure_redirects_not_accepted",
    "description": "Checks if secure ICMP redirects are not accepted by verifying the net.ipv4.conf.all.secure_redirects setting",
    "gcp_api_example": "gcloud compute networks describe NETWORK_ID --project=PROJECT_ID",
    "service_category": "Network"
  },
  {
    "function_name": "network_packet_suspicious_logging_enabled",
    "description": "Checks if logging of suspicious packets with un-routable source addresses is enabled",
    "gcp_api_example": "gcloud compute networks list --format='table(name,logConfig.enable)' --project=PROJECT_ID",
    "service_category": "Network"
  },
  {
    "function_name": "network_icmp_broadcast_requests_ignored",
    "description": "Checks if the system is configured to ignore all ICMP echo and timestamp requests to broadcast and multicast addresses",
    "gcp_api_example": "gcloud compute networks describe NETWORK_ID --project=PROJECT_ID",
    "service_category": "Network"
  },
  {
    "function_name": "network_icmp_ignore_bogus_error_responses",
    "description": "Checks if the network is configured to ignore bogus ICMP responses",
    "gcp_api_example": "gcloud compute networks describe --project=PROJECT_ID",
    "service_category": "Network"
  },
  {
    "function_name": "compute_instance_reverse_path_filtering_enabled",
    "description": "Checks if reverse path filtering is enabled on all compute instances",
    "gcp_api_example": "gcloud compute instances describe --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_tcp_syn_cookies_enabled",
    "description": "Checks if TCP SYN Cookies is enabled on compute instances",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --format='get(tcpSynCookies)' --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "network_ipv6_router_advertisements_not_accepted",
    "description": "Checks if the system's ability to accept IPv6 router advertisements is disabled",
    "gcp_api_example": "gcloud compute networks subnets describe SUBNET_ID --project=PROJECT_ID",
    "service_category": "Network"
  },
  {
    "function_name": "network_firewall_ipv6_default_deny_policy",
    "description": "Checks if the firewall policy for IPv6 connections is set to deny by default",
    "gcp_api_example": "gcloud compute firewall-rules list --filter='disabled=FALSE AND direction=INGRESS AND destinationRanges=::/0' --format='table(name,network)'",
    "service_category": "Network"
  },
  {
    "function_name": "network_interface_ipv6_loopback_traffic_configured",
    "description": "Checks if the loopback interface is configured to accept traffic and all other interfaces deny traffic to the loopback network (::1)",
    "gcp_api_example": "gcloud compute networks subnets describe SUBNET_ID --project=PROJECT_ID --format='get(ipv6AccessType)'",
    "service_category": "Network"
  },
  {
    "function_name": "network_firewall_ipv6_outbound_established_connections_configured",
    "description": "Checks if the firewall rules for new outbound, and established IPv6 connections are configured",
    "gcp_api_example": "gcloud compute firewall-rules list --filter='IPProtocol=IPv6' --format=json",
    "service_category": "Network"
  },
  {
    "function_name": "network_loopback_traffic_configured",
    "description": "Checks if the loopback interface is configured to accept traffic and all other interfaces deny traffic to the loopback network",
    "gcp_api_example": "gcloud compute networks list --project=PROJECT_ID",
    "service_category": "Network"
  },
  {
    "function_name": "compute_instance_iptables_installed",
    "description": "Checks if iptables is installed on all compute instances",
    "gcp_api_example": "gcloud compute instances describe --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "stackdriver_logging_agent_image_check",
    "description": "Checks if the correct container image is set for the stackdriver logging agent",
    "gcp_api_example": "gcloud logging read --project=PROJECT_ID",
    "service_category": "Monitoring"
  },
  {
    "function_name": "journald_large_log_files_compression_configured",
    "description": "Checks if journald is configured to compress large log files",
    "gcp_api_example": "gcloud logging read --project=PROJECT_ID",
    "service_category": "Monitoring"
  },
  {
    "function_name": "compute_instance_journald_persistent_disk",
    "description": "Checks if journald is configured to write logfiles to persistent disk on compute instances",
    "gcp_api_example": "gcloud compute instances describe --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "log_files_permission_configured",
    "description": "Checks if all log files stored in /var/log/ have the correct permissions",
    "gcp_api_example": "gcloud logging read --project=PROJECT_ID",
    "service_category": "Monitoring"
  },
  {
    "function_name": "system_logrotate_configured",
    "description": "Checks if the system has logrotate configured to regularly rotate log files",
    "gcp_api_example": "gcloud logging logs list --project=PROJECT_ID",
    "service_category": "Monitoring"
  },
  {
    "function_name": "compute_sshd_config_permissions_configured",
    "description": "Checks if the permissions on /etc/ssh/sshd_config are configured correctly",
    "gcp_api_example": "gcloud compute ssh --project=PROJECT_ID --zone=ZONE INSTANCE_NAME --command='ls -l /etc/ssh/sshd_config'",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_ssh_private_key_permissions_configured",
    "description": "Checks if the permissions on SSH private host key files are properly configured on compute instances",
    "gcp_api_example": "gcloud compute instances describe --project=PROJECT_ID --zone=ZONE --format='value(metadata.items)'",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_ssh_public_host_key_permissions_configured",
    "description": "Checks if the permissions on SSH public host key files are properly configured on Compute instances",
    "gcp_api_example": "gcloud compute instances get --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_ssh_protocol_v2",
    "description": "Checks if SSH protocol is set to version 2 on compute instances",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --project=PROJECT_ID --zone=ZONE | grep ssh-rsa",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_ssh_log_level_info",
    "description": "Checks if SSH LogLevel is set to INFO on Compute Instances",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --format='get(metadata.ssh-keys)' --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_ssh_x11_forwarding_disabled",
    "description": "Checks if SSH X11 forwarding is disabled on compute instances",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --format='get(metadata.items[?key==\"ssh-keys\"].value)' --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_ssh_max_auth_tries",
    "description": "Checks that the SSH MaxAuthTries parameter is set to 4 or less on Compute Instances",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --format='get(metadata.items.sshMaxAuthTries)' --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_ssh_ignore_rhosts_enabled",
    "description": "Checks if the SSH IgnoreRhosts is enabled on Compute Instances",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --format='get(metadata.items.[ssh-ignore-rhosts])' --zone=ZONE --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_ssh_hostbased_authentication_disabled",
    "description": "Checks if SSH HostbasedAuthentication is disabled on all compute instances",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --format='get(metadata.items)' --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_ssh_root_login_disabled",
    "description": "Checks if SSH root login is disabled for compute instances",
    "gcp_api_example": "gcloud compute instances describe --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_ssh_permit_empty_passwords_disabled",
    "description": "Checks if the SSH server disallows login to accounts with empty password strings",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --format='get(metadata.items[].key,metadata.items[].value)' --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_ssh_permit_user_environment_disabled",
    "description": "Checks if the SSH PermitUserEnvironment is disabled in Compute Engine instances",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --format='get(metadata.items[].key)' --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "ssh_strong_ciphers_used",
    "description": "Checks if only strong ciphers are used during SSH communication",
    "gcp_api_example": "gcloud compute ssh --project=PROJECT_ID --zone=ZONE --command='ssh -Q cipher' INSTANCE_NAME",
    "service_category": "Compute"
  },
  {
    "function_name": "ssh_mac_algorithm_strong",
    "description": "Checks if only strong MAC algorithms are used in SSH communication",
    "gcp_api_example": "gcloud compute ssh --project=PROJECT_ID --zone=ZONE --command='cat /etc/ssh/sshd_config' INSTANCE_NAME",
    "service_category": "Compute"
  },
  {
    "function_name": "kms_key_exchange_algorithm_strong",
    "description": "Checks that only strong key exchange algorithms are used in KMS",
    "gcp_api_example": "gcloud kms keys versions get --project=PROJECT_ID --location=global --keyring=KEYRING_NAME --key=KEY_NAME",
    "service_category": "Security"
  },
  {
    "function_name": "compute_ssh_idle_timeout_interval_configured",
    "description": "Checks if SSH Idle Timeout Interval is configured for Compute instances",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --format='value(metadata.ssh-config)' --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_ssh_login_grace_time",
    "description": "Checks that the SSH LoginGraceTime for all compute instances is set to one minute or less",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --format='value(metadata.items.ssh-config.LoginGraceTime)' --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_ssh_banner_configured",
    "description": "Checks if the SSH banner is configured for Compute Instances",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --format='get(metadata.ssh-banner)' --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_ssh_pam_enabled",
    "description": "Checks if SSH PAM is enabled on Compute Instances",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --format='get(metadata.items[?key==\"ssh-enable-pam\"].value)'",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_ssh_allow_tcp_forwarding_disabled",
    "description": "Checks if SSH AllowTcpForwarding is disabled on all Compute instances",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --format='get(metadata.items[].key,metadata.items[].value)' --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_ssh_maxstartups_configured",
    "description": "Checks if the MaxStartups parameter is configured for SSH daemon to limit the number of concurrent unauthenticated connections",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --format='get(metadata.items[].key)' --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_ssh_max_sessions_limited",
    "description": "Checks if the SSH MaxSessions is set to 4 or less",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --format='get(metadata.items[].key,metadata.items[].value)' --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "iam_user_password_reuse_limited",
    "description": "Checks if the IAM user's password reuse is limited to prevent recycling of recent passwords",
    "gcp_api_example": "gcloud iam users describe --project=PROJECT_ID",
    "service_category": "Identity"
  },
  {
    "function_name": "iam_user_password_hashing_sha512",
    "description": "Checks if the password hashing algorithm for IAM users is SHA-512",
    "gcp_api_example": "gcloud iam users describe --project=PROJECT_ID",
    "service_category": "Identity"
  },
  {
    "function_name": "iam_user_password_expiration_days",
    "description": "Checks if the password expiration for IAM users is set to 365 days or less",
    "gcp_api_example": "gcloud iam users describe --project=PROJECT_ID",
    "service_category": "Identity"
  },
  {
    "function_name": "iam_user_min_password_change_days",
    "description": "Checks if the minimum days between password changes for IAM users is 7 or more",
    "gcp_api_example": "gcloud iam policies describe --project=PROJECT_ID",
    "service_category": "Identity"
  },
  {
    "function_name": "iam_user_password_expiration_warning_days",
    "description": "Checks if the password expiration warning days for IAM users is 7 or more",
    "gcp_api_example": "gcloud iam users describe --project=PROJECT_ID",
    "service_category": "Identity"
  },
  {
    "function_name": "iam_user_inactive_password_lock",
    "description": "Checks if user accounts that are inactive for 30 days after password expiration are disabled",
    "gcp_api_example": "gcloud iam service-accounts list --filter='email:USER_EMAIL' --format='value(email)' --project=PROJECT_ID",
    "service_category": "Identity"
  },
  {
    "function_name": "iam_user_password_change_date_past",
    "description": "Checks if all users' last password change date is in the past",
    "gcp_api_example": "gcloud iam service-accounts get-iam-policy --project=PROJECT_ID",
    "service_category": "Identity"
  },
  {
    "function_name": "iam_system_accounts_shell_access_restricted",
    "description": "Checks if system accounts are prevented from providing an interactive shell",
    "gcp_api_example": "gcloud iam service-accounts list --project=PROJECT_ID",
    "service_category": "Identity"
  },
  {
    "function_name": "os_root_account_default_gid_zero",
    "description": "Checks if the default group for the root account is GID 0",
    "gcp_api_example": "gcloud compute ssh 'instance-name' --command='id -g root'",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_default_umask_restriction",
    "description": "Checks if the default user umask on compute instances is 027 or more restrictive",
    "gcp_api_example": "gcloud compute instances describe --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "user_shell_timeout_limit",
    "description": "Checks if the default user shell timeout is 900 seconds or less",
    "gcp_api_example": "gcloud compute ssh --project=PROJECT_ID --zone=ZONE VM_NAME --command 'echo $TMOUT'",
    "service_category": "Compute"
  },
  {
    "function_name": "system_console_root_login_restricted",
    "description": "Checks if root login is restricted to system console",
    "gcp_api_example": "gcloud compute instances describe INSTANCE_ID --format='get(metadata.items[].key)' --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_su_command_restricted",
    "description": "Checks if the su command is restricted on compute instances",
    "gcp_api_example": "gcloud compute instances describe --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_etc_passwd_permissions_configured",
    "description": "Checks if permissions on /etc/passwd file in Compute instances are properly configured",
    "gcp_api_example": "gcloud compute ssh --project=PROJECT_ID --zone=ZONE INSTANCE_NAME --command='ls -l /etc/passwd'",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_shadow_file_permissions_configured",
    "description": "Checks if permissions on /etc/shadow file in compute instances are properly configured",
    "gcp_api_example": "gcloud compute ssh --project=PROJECT_ID --zone=ZONE INSTANCE_NAME --command='ls -l /etc/shadow'",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_etc_group_permissions_configured",
    "description": "Checks if permissions on /etc/group are properly configured on Compute instances",
    "gcp_api_example": "gcloud compute instances get --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "os_file_permission_configured",
    "description": "Checks if the permissions on a specified OS file are properly configured",
    "gcp_api_example": "gcloud compute ssh 'instance-name' --project='project-id' --zone='zone' --command='ls -l /etc/gshadow'",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_etc_passwd_permissions_configured",
    "description": "Checks if permissions on /etc/passwd- in Compute instances are properly configured",
    "gcp_api_example": "gcloud compute instances get --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_shadow_file_permissions_configured",
    "description": "Checks if permissions on /etc/shadow- file in Compute instances are properly configured",
    "gcp_api_example": "gcloud compute instances get --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "os_file_permissions_configured",
    "description": "Checks if permissions on /etc/group- are configured",
    "gcp_api_example": "gcloud compute ssh --project=PROJECT_ID --zone=ZONE 'ls -l /etc/group-'",
    "service_category": "Compute"
  },
  {
    "function_name": "os_file_permission_configured",
    "description": "Checks if the permissions on a specified OS file are configured correctly",
    "gcp_api_example": "gcloud compute ssh --project=PROJECT_ID --zone=ZONE 'cat /etc/gshadow-'",
    "service_category": "Compute"
  },
  {
    "function_name": "iam_user_password_not_empty",
    "description": "Checks if all IAM user accounts have non-empty password fields",
    "gcp_api_example": "gcloud iam service-accounts list --project=PROJECT_ID",
    "service_category": "Identity"
  },
  {
    "function_name": "compute_instance_no_legacy_passwd_entries",
    "description": "Checks if there are no legacy '+' entries in /etc/passwd of a compute instance",
    "gcp_api_example": "gcloud compute ssh --project=PROJECT_ID --zone=ZONE INSTANCE_NAME --command='grep \"+\" /etc/passwd'",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_no_legacy_entries_in_shadow",
    "description": "Checks if there are no legacy '+' entries in /etc/shadow of a compute instance",
    "gcp_api_example": "gcloud compute ssh --project=PROJECT_ID --zone=ZONE INSTANCE_NAME --command='sudo grep '+' /etc/shadow'",
    "service_category": "Compute"
  },
  {
    "function_name": "compute_instance_legacy_entries_removed",
    "description": "Checks if any legacy '+' entries exist in /etc/group of compute instances",
    "gcp_api_example": "gcloud compute instances get --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "os_login_root_uid_zero_only",
    "description": "Checks if root is the only account with UID 0",
    "gcp_api_example": "gcloud compute os-login describe-profile --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "root_path_integrity_check",
    "description": "Checks the integrity of the root PATH to ensure it is set correctly and does not include the current working directory or other writable directory",
    "gcp_api_example": "gcloud compute ssh --project=PROJECT_ID --zone=ZONE 'echo $PATH'",
    "service_category": "Compute"
  },
  {
    "function_name": "iam_user_home_directory_exists",
    "description": "Checks if all IAM users have an existing home directory",
    "gcp_api_example": "gcloud iam users list --project=PROJECT_ID",
    "service_category": "Identity"
  },
  {
    "function_name": "iam_user_home_directory_permission_check",
    "description": "Checks if users' home directories permissions are 750 or more restrictive",
    "gcp_api_example": "gcloud iam service-accounts get-iam-policy --project=PROJECT_ID",
    "service_category": "Identity"
  },
  {
    "function_name": "iam_user_home_directory_ownership",
    "description": "Checks if the user is the owner of their home directory",
    "gcp_api_example": "gcloud iam service-accounts get-iam-policy --project=PROJECT_ID",
    "service_category": "Identity"
  },
  {
    "function_name": "os_login_user_dot_files_permissions_restricted",
    "description": "Checks that users' dot files are not group or world writable",
    "gcp_api_example": "gcloud compute os-login ssh-keys list --user=USER_ID --project=PROJECT_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "iam_user_no_forward_files",
    "description": "Checks if any IAM user has .forward files",
    "gcp_api_example": "gcloud iam users list --project=PROJECT_ID",
    "service_category": "Identity"
  },
  {
    "function_name": "user_netrc_file_absent",
    "description": "Checks if any user has .netrc files present",
    "gcp_api_example": "gcloud compute ssh --project=PROJECT_ID --zone=ZONE instance-name --command='find /home -name .netrc'",
    "service_category": "Compute"
  },
  {
    "function_name": "os_user_netrc_file_access_restricted",
    "description": "Checks that .netrc files for all users are not group or world accessible",
    "gcp_api_example": "Not applicable as this is an OS-level check",
    "service_category": "Compute"
  },
  {
    "function_name": "user_rhosts_file_absent",
    "description": "Checks if any user has .rhosts files",
    "gcp_api_example": "gcloud compute ssh --project=PROJECT_ID --zone=ZONE VM_NAME --command 'find /home -name .rhosts'",
    "service_category": "Compute"
  },
  {
    "function_name": "os_group_existence_validation",
    "description": "Checks if all groups in /etc/passwd exist in /etc/group",
    "gcp_api_example": "Not applicable as this is an OS-level check",
    "service_category": "Compute"
  },
  {
    "function_name": "iam_user_no_duplicate_uids",
    "description": "Checks that no duplicate UIDs exist in the IAM user database",
    "gcp_api_example": "gcloud iam service-accounts list --project=PROJECT_ID",
    "service_category": "Identity"
  },
  {
    "function_name": "os_config_duplicate_gid_check",
    "description": "Checks for duplicate Group IDs (GIDs) in the /etc/group file",
    "gcp_api_example": "gcloud os-config os-inventory get --project=PROJECT_ID --instance=INSTANCE_ID",
    "service_category": "Compute"
  },
  {
    "function_name": "iam_user_duplicate_check",
    "description": "Checks for duplicate user names in IAM",
    "gcp_api_example": "gcloud iam service-accounts list --project=PROJECT_ID",
    "service_category": "Identity"
  },
  {
    "function_name": "iam_group_no_duplicate_names",
    "description": "Checks that no duplicate group names exist in IAM",
    "gcp_api_example": "gcloud iam groups list --project=PROJECT_ID",
    "service_category": "Identity"
  },
  {
    "function_name": "os_login_shadow_group_empty",
    "description": "Checks if the shadow group in the OS Login is empty",
    "gcp_api_example": "gcloud compute os-login describe-profile --project=PROJECT_ID",
    "service_category": "Compute"
  }
]
[
  {
    "id": "1.1.1.1",
    "title": "Ensure mounting of udf filesystems is disabled",
    "assessment": "Automated",
    "description": "The udf filesystem type is the universal disk format used to implement ISO/IEC 13346 and ECMA-167 specifications. This is an open vendor filesystem type for data storage on a broad range of media. This filesystem type is necessary to support writing DVDs and newer optical disc formats.",
    "rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.",
    "audit": "Run the following commands and verify the output is as indicated: # modprobe -n -v udf install /bin/true # lsmod | grep udf <No output>",
    "remediation": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf Example: vim /etc/modprobe.d/udf.conf and add the following line: install udf /bin/true Run the following command to unload the udf module: # rmmod udf",
    "function_names": [
      "filesystem_udf_mounting_disabled",
      "filesystem_udf_mount_restricted",
      "filesystem_udf_mount_prohibited",
      "filesystem_udf_mount_blocked",
      "filesystem_udf_mount_prevented"
    ]
  },
  {
    "id": "1.1.2",
    "title": "Ensure /tmp is configured",
    "assessment": "Automated",
    "description": "The /tmp directory is a world-writable directory used for temporary storage by all users and some applications.",
    "rationale": "Making /tmp its own file system allows an administrator to set the noexec option on the mount, making /tmp useless for an attacker to install executable code. It would also prevent an attacker from establishing a hardlink to a system setuid program and wait for it to be updated. Once the program was updated, the hardlink would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw. This can be accomplished by either mounting tmpfs to /tmp, or creating a separate partition for /tmp. Impact: Since the /tmp directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to a separate partition. Running out of /tmp space is a problem regardless of what kind of filesystem lies under it, but in a default installation a disk-based /tmp will essentially have the whole disk available, as it only creates a single / partition. On the other hand, a RAM-based /tmp as with tmpfs will almost certainly be much smaller, which can lead to applications filling up the filesystem much more easily. /tmp utilizing tmpfs can be resized using the size={size} parameter on the Options line on the tmp.mount file",
    "audit": "Run the following command and verify output shows /tmp is mounted: # mount | grep -E '\\s/tmp\\s' tmpfs on /tmp type tmpfs (rw,nosuid,nodev,noexec,relatime) Run the following command and verify that output shows static # systemctl is-enabled tmp.mount static",
    "remediation": "Run the following commands to configure mount options systemctl edit tmp.mount Edit the file to define the options that needs to be set. For example: [Mount] Options= Options=mode=1777,strictatime,noexec,nodev,nosuid Restart the tmp.mount systemctl daemon-reload # might be optional systemctl restart tmp.mount /etc is stateless on Container-Optimized OS. Therefore, /etc cannot be used to make these changes persistent across reboots. The steps mentioned above needs to be performed after every boot. References: 1. AJ Lewis, \"LVM HOWTO\", http://tldp.org/HOWTO/LVM-HOWTO/ 2. https://www.freedesktop.org/wiki/Software/systemd/APIFileSystems/",
    "function_names": [
      "filesystem_tmp_noexec_enabled",
      "filesystem_tmp_nodev_enabled",
      "filesystem_tmp_nosuid_enabled",
      "filesystem_tmp_separate_partition",
      "filesystem_tmp_restrictive_permissions",
      "filesystem_tmp_mounted_options_secure",
      "filesystem_tmp_no_world_writable",
      "filesystem_tmp_sticky_bit_enabled"
    ]
  },
  {
    "id": "1.1.3",
    "title": "Ensure nodev option set on /tmp partition",
    "assessment": "Automated",
    "description": "The nodev mount option specifies that the filesystem cannot contain special devices.",
    "rationale": "Since the /tmp filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create block or character special devices in /tmp .",
    "audit": "Verify that the nodev option is set if a /tmp partition exists Run the following command and verify that nothing is returned: # mount | grep -E '\\s/tmp\\s' | grep -v nodev",
    "remediation": "Run the following command to remount /tmp : # mount -o remount,nodev /tmp /etc is stateless on Container-Optimized OS. Therefore, /etc cannot be used to make these changes persistent across reboots. The steps mentioned above needs to be performed after every boot.",
    "function_names": [
      "compute_tmp_partition_nodev_enabled",
      "filesystem_tmp_partition_nodev_set",
      "linux_tmp_partition_nodev_required",
      "storage_tmp_partition_nodev_enforced",
      "os_tmp_partition_nodev_configured"
    ]
  },
  {
    "id": "1.1.4",
    "title": "Ensure nosuid option set on /tmp partition",
    "assessment": "Automated",
    "description": "The nosuid mount option specifies that the filesystem cannot contain setuid files.",
    "rationale": "Since the /tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot create setuid files in /tmp .",
    "audit": "Verify that the nosuid option is set if a /tmp partition exists Run the following command and verify that nothing is returned: # mount | grep -E '\\s/tmp\\s' | grep -v nosuid",
    "remediation": "Run the following command to remount /tmp : # mount -o remount,nosuid /tmp /etc is stateless on Container-Optimized OS. Therefore, /etc cannot be used to make these changes persistent across reboots. The steps mentioned above needs to be performed after every boot.",
    "function_names": [
      "filesystem_tmp_nosuid_enabled",
      "filesystem_tmp_partition_nosuid_set",
      "filesystem_tmp_mount_nosuid_configured",
      "filesystem_tmp_nosuid_option_present",
      "filesystem_tmp_nosuid_enforced"
    ]
  },
  {
    "id": "1.1.5",
    "title": "Ensure noexec option set on /tmp partition",
    "assessment": "Automated",
    "description": "The noexec mount option specifies that the filesystem cannot contain executable binaries.",
    "rationale": "Since the /tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from /tmp .",
    "audit": "Verify that the noexec option is set if a /tmp partition exists Run the following command and verify that nothing is returned: # mount | grep -E '\\s/tmp\\s' | grep -v noexec",
    "remediation": "Run the following command to remount /tmp : # mount -o remount,noexec /tmp /etc is stateless on Container-Optimized OS. Therefore, /etc cannot be used to make these changes persistent across reboots. The steps mentioned above needs to be performed after every boot.",
    "function_names": [
      "compute_filesystem_noexec_enabled",
      "compute_tmp_partition_noexec_enabled",
      "filesystem_tmp_noexec_option_set",
      "linux_partition_noexec_enabled",
      "os_tmp_noexec_mount_option_set"
    ]
  },
  {
    "id": "1.1.6",
    "title": "Ensure nosuid option set on /var partition",
    "assessment": "Automated",
    "description": "The nosuid mount option specifies that the filesystem cannot contain setuid files.",
    "rationale": "Since the /var filesystem is only intended for temporary dynamic data, set this option to ensure that users cannot create setuid files in /var.",
    "audit": "Verify that the nosuid option is set if a /var partition exists. Run the following command and verify that nothing is returned: # mount | grep -E '\\s/var\\s' | grep -v nosuid",
    "remediation": "Run the following command to remount /var : # mount -o remount,nosuid /var /etc is stateless on Container-Optimized OS. Therefore, /etc cannot be used to make these changes persistent across reboots. The steps mentioned above needs to be performed after every boot.",
    "function_names": [
      "filesystem_var_partition_nosuid_enabled",
      "filesystem_var_partition_nosuid_set",
      "filesystem_var_partition_nosuid_configured",
      "filesystem_var_partition_nosuid_mount_option_enabled",
      "filesystem_var_partition_nosuid_mount_option_set"
    ]
  },
  {
    "id": "1.1.7",
    "title": "Ensure noexec option set on /var partition",
    "assessment": "Automated",
    "description": "The noexec mount option specifies that the filesystem cannot contain executable binaries.",
    "rationale": "Since the /var filesystem is only intended for services to write data and not execute, set this option to ensure that users cannot run executable binaries from /var.",
    "audit": "Verify that the noexec option is set if a /var partition exists. Run the following command and verify that nothing is returned: # mount | grep -E '\\s/var\\s' | grep -v noexec",
    "remediation": "Run the following command to remount /var : # mount -o remount,noexec /var /etc is stateless on Container-Optimized OS. Therefore, /etc cannot be used to make these changes persistent across reboots. The steps mentioned above needs to be performed after every boot.",
    "function_names": [
      "compute_var_partition_noexec_enabled",
      "compute_filesystem_noexec_option_set",
      "compute_mount_noexec_var_partition",
      "compute_partition_noexec_restriction",
      "compute_var_noexec_mount_option"
    ]
  },
  {
    "id": "1.1.8",
    "title": "Ensure nodev option set on /var partition",
    "assessment": "Automated",
    "description": "The nodev mount option specifies that the filesystem cannot contain special devices.",
    "rationale": "Since the /var filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create block or character special devices in /var .",
    "audit": "Verify that the nodev option is set if a /var partition exists. Run the following command and verify that nothing is returned: # mount | grep -E '\\s/var\\s' | grep -v nodev",
    "remediation": "Run the following command to remount /var : # mount -o remount,nodev /var /etc is stateless on Container-Optimized OS. Therefore, /etc cannot be used to make these changes persistent across reboots. The steps mentioned above needs to be performed after every boot.",
    "function_names": [
      "compute_filesystem_nodev_enabled",
      "compute_partition_nodev_enabled",
      "filesystem_var_nodev_enabled",
      "filesystem_mount_nodev_enabled",
      "compute_var_partition_nodev_enabled"
    ]
  },
  {
    "id": "1.1.9",
    "title": "Ensure nodev option set on /home partition",
    "assessment": "Automated",
    "description": "The nodev mount option specifies that the filesystem cannot contain special devices.",
    "rationale": "Since the user partitions are not intended to support devices, set this option to ensure that users cannot attempt to create block or character special devices.",
    "audit": "Verify that the nodev option is set if a /home partition exists. Run the following command and verify that nothing is returned: # mount | grep -E '\\s/home\\s' | grep -v nodev",
    "remediation": "Run the following command to remount /var : # mount -o remount,nodev /home /etc is stateless on Container-Optimized OS. Therefore, /etc cannot be used to make these changes persistent across reboots. The steps mentioned above needs to be performed after every boot. Additional Information: The actions in this recommendation refer to the /home partition, which is the default user partition that is defined in many distributions. If you have created other user partitions, it is recommended that the Remediation and Audit steps be applied to these partitions as well.",
    "function_names": [
      "compute_home_partition_nodev_enabled",
      "filesystem_home_partition_nodev_set",
      "linux_home_partition_nodev_required",
      "mount_home_partition_nodev_enforced",
      "storage_home_partition_nodev_configured"
    ]
  },
  {
    "id": "1.1.10",
    "title": "Ensure nodev option set on /dev/shm partition",
    "assessment": "Automated",
    "description": "The nodev mount option specifies that the filesystem cannot contain special devices.",
    "rationale": "Since the /dev/shm filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create special devices in /dev/shm partitions.",
    "audit": "Verify that the nodev option is set if a /dev/shm partition exists. Run the following command and verify that nothing is returned: # mount | grep -E '\\s/dev/shm\\s' | grep -v nodev",
    "remediation": "Run the following command to remount /dev/shm : # mount -o remount,nodev /dev/shm /etc is stateless on Container-Optimized OS. Therefore, /etc cannot be used to make these changes persistent across reboots. The steps mentioned above needs to be performed after every boot.",
    "function_names": [
      "compute_shm_partition_nodev_enabled",
      "compute_shm_partition_nodev_set",
      "compute_shm_partition_nodev_configured",
      "compute_shm_partition_nodev_required",
      "compute_shm_partition_nodev_restricted"
    ]
  },
  {
    "id": "1.1.11",
    "title": "Ensure nosuid option set on /dev/shm partition",
    "assessment": "Automated",
    "description": "The nosuid mount option specifies that the filesystem cannot contain setuid files.",
    "rationale": "Setting this option on a file system prevents users from introducing privileged programs onto the system and allowing non-root users to execute them.",
    "audit": "Verify that the nosuid option is set if a /dev/shm partition exists. Run the following command and verify that nothing is returned: # mount | grep -E '\\s/dev/shm\\s' | grep -v nosuid",
    "remediation": "Run the following command to remount /dev/shm : # mount -o remount,nosuid /dev/shm /etc is stateless on Container-Optimized OS. Therefore, /etc cannot be used to make these changes persistent across reboots. The steps mentioned above needs to be performed after every boot.",
    "function_names": [
      "filesystem_dev_shm_nosuid_enabled",
      "filesystem_dev_shm_nosuid_set",
      "filesystem_partition_nosuid_enabled",
      "filesystem_shm_partition_nosuid_set",
      "linux_dev_shm_nosuid_enabled",
      "linux_partition_nosuid_set",
      "os_dev_shm_nosuid_enabled",
      "os_partition_nosuid_set"
    ]
  },
  {
    "id": "1.1.12",
    "title": "Ensure noexec option set on /dev/shm partition",
    "assessment": "Automated",
    "description": "The noexec mount option specifies that the filesystem cannot contain executable binaries.",
    "rationale": "Setting this option on a file system prevents users from executing programs from shared memory. This deters users from introducing potentially malicious software on the system.",
    "audit": "Verify that the noexec option is set if a /dev/shm partition exists. Run the following command and verify that nothing is returned: # mount | grep -E '\\s/dev/shm\\s' | grep -v noexec",
    "remediation": "Run the following command to remount /dev/shm: # mount -o remount,noexec /dev/shm /etc is stateless on Container-Optimized OS. Therefore, /etc cannot be used to make these changes persistent across reboots. The steps mentioned above needs to be performed after every boot.",
    "function_names": [
      "compute_partition_noexec_enabled",
      "compute_shm_partition_noexec_enabled",
      "linux_partition_noexec_enabled",
      "linux_shm_partition_noexec_enabled",
      "filesystem_partition_noexec_enabled",
      "filesystem_shm_partition_noexec_enabled"
    ]
  },
  {
    "id": "1.1.13",
    "title": "Disable Automounting",
    "assessment": "Automated",
    "description": "autofs allows automatic mounting of devices, typically including CD/DVDs and USB drives.",
    "rationale": "With automounting enabled anyone with physical access could attach a USB drive or disc and have its contents available in system even if they lacked permissions to mount it themselves. Impact: The use of portable hard drives is very common for workstation users. If your organization allows the use of portable storage or media on workstations and physical access controls to workstations is considered adequate there is little value add in turning off automounting.",
    "audit": "# systemctl is-enabled autofs disabled Verify result is not \"enabled\".",
    "remediation": "Run the following command to disable autofs: # systemctl disable autofs Additional Information: Additional methods of disabling a service exist. Consult your distribution documentation for appropriate methods. This control should align with the tolerance of the use of portable drives and optical media in the organization. On a server requiring an admin to manually mount media can be part of defense-in-depth to reduce the risk of unapproved software or information being introduced or proprietary software or information being exfiltrated. If admins commonly use flash drives and Server access has sufficient physical controls, requiring manual mounting may not increase security."
  },
  {
    "id": "1.2.1",
    "title": "Ensure dm-verity is enabled",
    "assessment": "Automated",
    "description": "device-mapper-verity (dm-verity) kernel feature feature provides transparent integrity checking of block devices using a cryptographic digest provided by the kernel crypto API. When a dm-verity device is configured, it is expected that the caller has been authenticated in some way (cryptographic signatures, etc). After instantiation, all hashes will be verified on-demand during disk access. If they cannot be verified up to the root node of the tree, the root hash, then the I/O will fail. This should detect tampering with any data on the device and the hash data.",
    "rationale": "The Container-Optimized OS root filesystem is always mounted as read-only. Additionally, its checksum is computed at build time and verified by the kernel on each boot. This mechanism prevents against attackers from \"owning\" the machine through permanent local changes.",
    "audit": "Verify dm-verity is enabled in kernel config with the following command: # zcat /proc/config.gz | grep CONFIG_DM_VERITY CONFIG_DM_VERITY=y",
    "remediation": "An OS image update that has the dm-verity enabled kernel is required. References: 1. AIDE stable manual: http://aide.sourceforge.net/stable/manual.html Additional Information: The prelinking feature can interfere with AIDE because it alters binaries to speed up their start up times. Run prelink -ua to restore the binaries to their prelinked state, thus avoiding false positives from AIDE.",
    "function_names": [
      "compute_disk_dm_verity_enabled",
      "compute_block_device_integrity_checking_enabled",
      "compute_storage_cryptographic_digest_enabled",
      "compute_device_root_hash_verification_enabled",
      "compute_disk_tamper_protection_enabled"
    ]
  },
  {
    "id": "1.3.1",
    "title": "Ensure authentication required for single user mode",
    "assessment": "Automated",
    "description": "Single user mode (rescue mode) is used for recovery when the system detects an issue during boot or by manual selection from the bootloader.",
    "rationale": "Requiring authentication in single user mode (rescue mode) prevents an unauthorized user from rebooting the system into single user to gain root privileges without credentials.",
    "audit": "Run the following commands and verify that /sbin/sulogin or /usr/sbin/sulogin is used as shown: # grep /systemd-sulogin-shell /usr/lib/systemd/system/rescue.service ExecStart=-/usr/lib/systemd/systemd-sulogin-shell rescue # grep /systemd-sulogin-shell /usr/lib/systemd/system/emergency.service ExecStart=-/usr/lib/systemd/systemd-sulogin-shell emergency",
    "remediation": "Rootfs is read-only file system. Therefore, update to an OS image which requires single user mode authentication.",
    "function_names": [
      "system_authentication_single_user_mode_required",
      "system_recovery_mode_authentication_enabled",
      "bootloader_single_user_authentication_enabled",
      "system_rescue_mode_password_protected",
      "system_boot_single_user_authentication_required"
    ]
  },
  {
    "id": "1.4.1",
    "title": "Ensure core dumps are restricted",
    "assessment": "Automated",
    "description": "A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file. The system provides the ability to set a soft limit for core dumps, but this can be overridden by the user.",
    "rationale": "Setting a hard limit on core dumps prevents users from overriding the soft variable. If core dumps are required, consider setting limits for user groups (see limits.conf(5) ). In addition, setting the fs.suid_dumpable variable to 0 will prevent setuid programs from dumping core.",
    "audit": "Run the following commands and verify output matches: # grep \"hard core\" /etc/security/limits.conf /etc/security/limits.d/* * hard core 0 # sysctl fs.suid_dumpable fs.suid_dumpable = 0 Run the following commands to check if systemd-coredump is installed: # systemctl is-enabled systemd-coredump@.service # systemctl is-enabled systemd-coredump.socket if static is returned systemd-coredump is installed",
    "remediation": "Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file: * hard core 0 Run the following command to set the active kernel parameter: # sysctl -w fs.suid_dumpable=0 If systemd-coredump@ is installed: edit /etc/systemd/coredump.conf and add/modify the following lines: Storage=none ProcessSizeMax=0  Run the command: systemctl daemon-reload /etc is stateless on Container-Optimized OS. Therefore, /etc cannot be used to make these changes persistent across reboots. The steps mentioned above needs to be performed after every boot.",
    "function_names": [
      "system_core_dump_restricted",
      "system_core_dump_disabled",
      "system_core_dump_size_limited",
      "system_core_dump_soft_limit_enforced",
      "system_core_dump_hard_limit_set",
      "system_core_dump_storage_protected",
      "system_core_dump_user_override_blocked",
      "system_core_dump_pattern_restricted",
      "system_core_dump_permissions_secure",
      "system_core_dump_directory_restricted"
    ]
  },
  {
    "id": "1.4.2",
    "title": "Ensure XD/NX support is enabled",
    "assessment": "Automated",
    "description": "The NX bit (no-execute) is a technology used in CPUs to segregate areas of memory for use by either storage of processor instructions or for storage of data. An operating system with support for the NX bit may mark certain areas of memory as non- executable. The processor will then refuse to execute any code residing in these areas of memory. This ability can help prevent exploitation of buffer overflow vulnerabilities and should be activated whenever possible. Recent processors in the x86 family support the ability to prevent code execution on a per memory page basis. On AMD processors, this ability is called No Execute (NX), on Intel processors it is called Execute Disable (XD) and on ARM processors it is called Execute Never (XN). Extra steps must be taken to ensure that this protection is enabled, particularly on 32-bit x86 systems. Other processors, such as Itanium and POWER, have included such support since inception and the standard kernel for those platforms supports the feature. Starting from ARMv6, the XN bit is supported by default and the kernel cannot disable it. For this reason, this recommend is not applicable for Container-Optimized OS ARM images.",
    "rationale": "Enabling any feature that can protect against buffer overflow attacks enhances the security of the system.",
    "audit": "Run the following command and verify your kernel has identified and activated NX/XD protection. # journalctl | grep 'protection: active' kernel: NX (Execute Disable) protection: active OR on systems without journalctl [[ -n $(grep noexec[0-9]*=off /proc/cmdline) || -z $(grep -E -i ' (pae|nx) ' /proc/cpuinfo) || -n $(grep '\\sNX\\s.*\\sprotection:\\s' /var/log/dmesg | grep - v active) ]] && echo \"NX Protection is not active\" Nothing should be returned",
    "remediation": "On 32 bit systems install a kernel with PAE support, no installation is required on 64 bit systems: If necessary configure your bootloader to load the new kernel and reboot the system. You may need to enable NX or XD support in your bios. Additional Information: Ensure your system supports the XD or NX bit and has PAE support before implementing this recommendation as this may prevent it from booting if these are not supported by your hardware.",
    "function_names": [
      "compute_system_nx_bit_enabled",
      "compute_system_xd_support_enabled",
      "compute_system_execute_disable_enabled",
      "compute_system_no_execute_enabled",
      "compute_system_memory_protection_enabled",
      "compute_system_overflow_protection_enabled",
      "compute_system_32bit_nx_enabled",
      "compute_system_64bit_nx_enabled",
      "compute_system_arm_xn_enabled",
      "compute_system_cpu_security_enabled"
    ]
  },
  {
    "id": "1.4.3",
    "title": "Ensure address space layout randomization (ASLR) is enabled",
    "assessment": "Automated",
    "description": "Address space layout randomization (ASLR) is an exploit mitigation technique which randomly arranges the address space of key data areas of a process.",
    "rationale": "Randomly placing virtual memory regions will make it difficult to write memory page exploits as the memory placement will be consistently shifting.",
    "audit": "Run the following command and verify output matches: # sysctl kernel.randomize_va_space kernel.randomize_va_space = 2 # grep \"kernel\\.randomize_va_space\" /etc/sysctl.conf /etc/sysctl.d/* kernel.randomize_va_space = 2",
    "remediation": "Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file: kernel.randomize_va_space = 2 Run the following command to set the active kernel parameter: # sysctl -w kernel.randomize_va_space=2",
    "function_names": [
      "compute_instance_aslr_enabled",
      "compute_vm_aslr_enabled",
      "compute_workload_aslr_enabled",
      "compute_system_aslr_enabled",
      "compute_kernel_aslr_enabled",
      "compute_process_aslr_enabled",
      "compute_memory_aslr_enabled",
      "compute_security_aslr_enabled"
    ]
  },
  {
    "id": "1.5.1.1",
    "title": "Ensure message of the day is configured properly",
    "assessment": "Automated",
    "description": "The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users. Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \\m - machine architecture \\r - operating system release \\s - operating system name \\v - operating system version",
    "rationale": "Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the \" uname -a \" command once they have logged in.",
    "audit": "Run the following command and verify that the contents match site policy: # cat /etc/motd Run the following command and verify no results are returned: # grep -E -i \"(\\\\v|\\\\r|\\\\m|\\\\s|$(grep '^ID=' /etc/os-release | cut -d= -f2 | sed -e 's/\"//g'))\" /etc/motd",
    "remediation": "Edit the /etc/motd file with the appropriate contents according to your site policy, remove any instances of \\m , \\r , \\s , \\v or references to the OS platform /etc is stateless on Container-Optimized OS. Therefore, the steps mentioned above needs to be performed after every boot.",
    "function_names": [
      "compute_motd_configured_properly",
      "compute_motd_no_os_info",
      "compute_motd_no_sensitive_data",
      "compute_motd_custom_message",
      "compute_motd_no_default_content"
    ]
  },
  {
    "id": "1.5.1.2",
    "title": "Ensure local login warning banner is configured properly",
    "assessment": "Automated",
    "description": "The contents of the /etc/issue file are displayed to users prior to login for local terminals. Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \\m - machine architecture \\r - operating system release \\s - operating system name \\v - operating system version - or the operating system's name",
    "rationale": "Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the \" uname -a \" command once they have logged in.",
    "audit": "Run the following command and verify that the contents match site policy: # cat /etc/issue Run the following command and verify no results are returned: # grep -E -i \"(\\\\v|\\\\r|\\\\m|\\\\s|$(grep '^ID=' /etc/os-release | cut -d= -f2 | sed -e 's/\"//g'))\" /etc/issue",
    "remediation": "Edit the /etc/issue file with the appropriate contents according to your site policy, remove any instances of \\m , \\r , \\s , \\v or references to the OS platform # echo \"Authorized uses only. All activity may be monitored and reported.\" > /etc/issue /etc is stateless on Container-Optimized OS. Therefore, the steps mentioned above needs to be performed after every boot.",
    "function_names": [
      "compute_issue_banner_configured",
      "compute_login_banner_content_valid",
      "compute_issue_file_os_info_restricted",
      "compute_local_banner_mingetty_options_disabled",
      "compute_issue_file_no_sensitive_info"
    ]
  },
  {
    "id": "1.5.1.3",
    "title": "Ensure remote login warning banner is configured properly",
    "assessment": "Automated",
    "description": "The contents of the /etc/issue.net file are displayed to users prior to login for remote connections from configured services. Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \\m - machine architecture \\r - operating system release \\s - operating system name \\v - operating system version",
    "rationale": "Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the \" uname -a \" command once they have logged in.",
    "audit": "Run the following command and verify that the contents match site policy: # cat /etc/issue.net Run the following command and verify no results are returned: # grep -E -i \"(\\\\v|\\\\r|\\\\m|\\\\s|$(grep '^ID=' /etc/os-release | cut -d= -f2 | sed -e 's/\"//g'))\" /etc/issue.net",
    "remediation": "Edit the /etc/issue.net file with the appropriate contents according to your site policy, remove any instances of \\m , \\r , \\s , \\v or references to the OS platform # echo \"Authorized uses only. All activity may be monitored and reported.\" > /etc/issue.net /etc is stateless on Container-Optimized OS. Therefore, the steps mentioned above needs to be performed after every boot.",
    "function_names": [
      "compute_instance_remote_login_banner_configured",
      "compute_os_issue_net_banner_configured",
      "compute_os_login_warning_banner_configured",
      "compute_instance_os_info_disclosure_disabled",
      "compute_remote_access_banner_configured",
      "compute_os_version_disclosure_disabled",
      "compute_issue_net_banner_configured",
      "compute_remote_login_banner_configured"
    ]
  },
  {
    "id": "1.5.1.4",
    "title": "Ensure permissions on /etc/motd are configured",
    "assessment": "Automated",
    "description": "The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users.",
    "rationale": "If the /etc/motd file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information.",
    "audit": "Run the following command and verify Uid and Gid are both 0/root and Access is 644 : # stat /etc/motd Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)",
    "remediation": "Run the following commands to set permissions on /etc/motd : # chown root:root /etc/motd # chmod 644 /etc/motd /etc is stateless on Container-Optimized OS. Therefore, the steps mentioned above needs to be performed after every boot.",
    "function_names": [
      "compute_motd_file_permissions_configured",
      "compute_motd_file_readonly",
      "compute_motd_file_restricted_owner",
      "compute_motd_file_no_world_writable",
      "compute_motd_file_secure_permissions"
    ]
  },
  {
    "id": "1.5.1.5",
    "title": "Ensure permissions on /etc/issue are configured",
    "assessment": "Automated",
    "description": "The contents of the /etc/issue file are displayed to users prior to login for local terminals.",
    "rationale": "If the /etc/issue file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information.",
    "audit": "Run the following command and verify Uid and Gid are both 0/root and Access is 644 : # stat /etc/issue Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)",
    "remediation": "Run the following commands to set permissions on /etc/issue : # chown root:root /etc/issue # chmod 644 /etc/issue /etc is stateless on Container-Optimized OS. Therefore, the steps mentioned above needs to be performed after every boot.",
    "function_names": [
      "os_file_issue_permissions_configured",
      "os_file_issue_readonly_restricted",
      "os_file_issue_owner_root",
      "os_file_issue_group_root",
      "os_file_issue_mode_644",
      "os_file_issue_no_world_writable",
      "os_file_issue_no_group_writable",
      "os_file_issue_no_sticky_bit",
      "os_file_issue_no_suid",
      "os_file_issue_no_sgid"
    ]
  },
  {
    "id": "1.5.1.6",
    "title": "Ensure permissions on /etc/issue.net are configured",
    "assessment": "Automated",
    "description": "The contents of the /etc/issue.net file are displayed to users prior to login for remote connections from configured services.",
    "rationale": "If the /etc/issue.net file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information.",
    "audit": "Run the following command and verify Uid and Gid are both 0/root and Access is 644 : # stat /etc/issue.net Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)",
    "remediation": "Run the following commands to set permissions on /etc/issue.net : # chown root:root /etc/issue.net # chmod 644 /etc/issue.net /etc is stateless on Container-Optimized OS. Therefore, the steps mentioned above needs to be performed after every boot.",
    "function_names": [
      "linux_file_issue_net_permissions_configured",
      "linux_file_issue_net_secure_permissions",
      "linux_file_issue_net_restricted_access",
      "linux_file_issue_net_owner_root",
      "linux_file_issue_net_group_root",
      "linux_file_issue_net_mode_644"
    ]
  },
  {
    "id": "1.6",
    "title": "Ensure AppArmor is installed",
    "assessment": "Automated",
    "description": "SELinux and AppArmor provide Mandatory Access Controls.",
    "rationale": "Without a Mandatory Access Control system installed only the default Discretionary Access Control system will be available.",
    "audit": "Verify that AppArmor is installed with the following command: # grep '\\\"name\\\": \\\"apparmor\\\"' /etc/cos-package-info.json \"name\": \"apparmor\",",
    "remediation": "Update to an OS image that includes the the apparmor package. Additional Information: SELinux and AppArmor both have several package names in use on different distributions. Research the appropriate packages for your environment.",
    "function_names": [
      "compute_instance_app_armor_installed",
      "compute_system_app_armor_enabled",
      "compute_security_app_armor_configured",
      "compute_os_app_armor_active",
      "compute_mandatory_access_control_app_armor_present"
    ]
  },
  {
    "id": "2.1.1.1",
    "title": "Ensure time synchronization is in use",
    "assessment": "Manual",
    "description": "System time should be synchronized between all systems in an environment. This is typically done by establishing an authoritative time server or set of servers and having all systems synchronize their clocks to them.",
    "rationale": "Time synchronization is important to support time sensitive security mechanisms like Kerberos and also ensures log files have consistent time records across the enterprise, which aids in forensic investigations.",
    "audit": "On physical systems or virtual systems where host based time synchronization is not available verify that chrony is installed with the following command: # grep '\\\"name\\\": \\\"chrony\\\"' /etc/cos-package-info.json \"name\": \"chrony\", On virtual systems where host based time synchronization is available consult your virtualization software documentation and verify that host based synchronization is in use.",
    "remediation": "On physical systems or virtual systems where host based time synchronization is not available update to an image that comes with chrony package installed. On virtual systems where host based time synchronization is available consult your virtualization software documentation and setup host based synchronization. Additional Information: systemd-timesyncd is part of systemd. Some versions of systemd have been compiled without systemd-timesycnd. On these distributions, chrony or NTP should be used instead of systemd-timesycnd.",
    "function_names": [
      "compute_instance_time_sync_enabled",
      "compute_vm_time_sync_enabled",
      "cloud_time_sync_enabled",
      "system_time_sync_enabled",
      "environment_time_sync_enabled",
      "time_server_sync_enabled",
      "time_sync_authoritative_source_enabled",
      "time_sync_ntp_enabled",
      "time_sync_chrony_enabled",
      "time_sync_all_instances_enabled"
    ]
  },
  {
    "id": "2.1.1.2",
    "title": "Ensure chrony is configured",
    "assessment": "Automated",
    "description": "chrony is a daemon which implements the Network Time Protocol (NTP) is designed to synchronize system clocks across a variety of systems and use a source that is highly accurate. More information on chrony can be found at http://chrony.tuxfamily.org/. chrony can be configured to be a client and/or a server.",
    "rationale": "If chrony is in use on the system proper configuration is vital to ensuring time synchronization is working properly. This recommendation only applies if chrony is in use on the system.",
    "audit": "Run the following command and verify remote server is configured properly: # grep -E \"^(server|pool)\" /etc/chrony/chrony.conf server <remote-server> Multiple servers may be configured. Run the following command and verify the first field for the chronyd process is ntp or chrony: # ps -ef | grep chronyd ntp     491     1  0 20:32 ?        00:00:00 /usr/sbin/chronyd Or # ps -ef | grep chronyd chrony     491     1  0 20:32 ?        00:00:00 /usr/sbin/chronyd",
    "remediation": "Update to an OS image that has the correct chrony configuration.",
    "function_names": [
      "time_sync_chrony_configured",
      "time_sync_chrony_client_enabled",
      "time_sync_chrony_server_enabled",
      "time_sync_chrony_ntp_sources_configured",
      "time_sync_chrony_high_accuracy_source",
      "time_sync_chrony_daemon_running",
      "time_sync_chrony_service_enabled"
    ]
  },
  {
    "id": "2.1.2",
    "title": "Ensure X Window System is not installed",
    "assessment": "Automated",
    "description": "The X Window System provides a Graphical User Interface (GUI) where users can have multiple windows in which to run programs and various add on. The X Windows system is typically used on workstations where users login, but not on servers where users typically do not login.",
    "rationale": "Unless your organization specifically requires graphical login access via X Windows, remove it to reduce the potential attack surface. Impact: Many Linux systems run applications which require a Java runtime. Some Linux Java packages have a dependency on specific X Windows xorg-x11-fonts. One workaround to avoid this dependency is to use the \"headless\" Java packages for your specific Java runtime, if provided by your distribution.",
    "audit": "Verify X Windows System is not installed. The following command should return empty result. # grep xorg /etc/cos-package-info.json",
    "remediation": "An OS image update that does not include X Window System is required.",
    "function_names": [
      "compute_instance_x_window_system_not_installed",
      "compute_server_x_window_system_removed",
      "compute_system_x_window_system_disabled",
      "compute_os_x_window_system_uninstalled",
      "compute_software_x_window_system_absent"
    ]
  },
  {
    "id": "2.1.3",
    "title": "Ensure NFS and RPC are not enabled",
    "assessment": "Automated",
    "description": "The Network File System (NFS) is one of the first and most widely distributed file systems in the UNIX environment. It provides the ability for systems to mount file systems of other servers through the network.",
    "rationale": "If the system does not export NFS shares or act as an NFS client, it is recommended that these services be disabled to reduce the remote attack surface.",
    "audit": "Run the following commands to verify the nfs-server and rpcbind are not enabled: # systemctl is-enabled nfs-server disabled # systemctl is-enabled rpcbind disabled Verify result is not \"enabled\" for both.",
    "remediation": "Run the following commands to disable the nfs-server and rpcbind: # systemctl --now disable nfs-server # systemctl --now disable rpcbind /etc is stateless on Container-Optimized OS. Therefore, the steps mentioned above needs to be performed after every boot. Additional Information: Additional methods of disabling a service exist. Consult your distribution documentation for appropriate methods.",
    "function_names": [
      "compute_instance_nfs_disabled",
      "compute_instance_rpc_disabled",
      "compute_instance_unwanted_services_disabled",
      "compute_instance_nfs_rpc_disabled",
      "network_service_nfs_disabled",
      "network_service_rpc_disabled",
      "network_service_unwanted_protocols_disabled",
      "os_configuration_nfs_disabled",
      "os_configuration_rpc_disabled",
      "os_configuration_unwanted_services_disabled"
    ]
  },
  {
    "id": "2.1.4",
    "title": "Ensure rsync service is not enabled",
    "assessment": "Automated",
    "description": "The rsyncd service can be used to synchronize files between systems over network links.",
    "rationale": "The rsyncd service presents a security risk as it uses unencrypted protocols for communication.",
    "audit": "Run the following command to verify rsyncd is not enabled: # systemctl is-enabled rsyncd disabled Verify result is not \"enabled\".",
    "remediation": "Run the following command to disable rsyncd : # systemctl --now disable rsyncd /etc is stateless on Container-Optimized OS. Therefore, the steps mentioned above needs to be performed after every boot. Additional Information: Additional methods of disabling a service exist. Consult your distribution documentation for appropriate methods. On some distributions the rsync service is known as rsync, not rsyncd.",
    "function_names": [
      "compute_rsync_service_disabled",
      "compute_rsync_service_not_enabled",
      "compute_rsync_service_inactive",
      "compute_rsync_service_uninstalled",
      "compute_rsync_service_removed"
    ]
  },
  {
    "id": "3.1.1",
    "title": "Ensure packet redirect sending is disabled",
    "assessment": "Automated",
    "description": "ICMP Redirects are used to send routing information to other hosts. As a host itself does not act as a router (in a host only configuration), there is no need to send redirects.",
    "rationale": "An attacker could use a compromised host to send invalid ICMP redirects to other router devices in an attempt to corrupt routing and have users access a system set up by the attacker as opposed to a valid system.",
    "audit": "Run the following commands and verify output matches: # sysctl net.ipv4.conf.all.send_redirects net.ipv4.conf.all.send_redirects = 0 # sysctl net.ipv4.conf.default.send_redirects net.ipv4.conf.default.send_redirects = 0 # grep \"net\\.ipv4\\.conf\\.all\\.send_redirects\" /etc/sysctl.conf /etc/sysctl.d/* net.ipv4.conf.all.send_redirects = 0 # grep \"net\\.ipv4\\.conf\\.default\\.send_redirects\" /etc/sysctl.conf /etc/sysctl.d/* net.ipv4.conf.default.send_redirects= 0",
    "remediation": "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.conf.all.send_redirects = 0 net.ipv4.conf.default.send_redirects = 0 Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.conf.all.send_redirects=0 # sysctl -w net.ipv4.conf.default.send_redirects=0 # sysctl -w net.ipv4.route.flush=1 /etc is stateless on Container-Optimized OS. Therefore, /etc cannot be used to make these changes persistent across reboots. The steps mentioned above needs to be performed after every boot.",
    "function_names": [
      "compute_network_packet_redirect_disabled",
      "network_interface_icmp_redirect_disabled",
      "instance_network_redirect_disabled",
      "vpc_icmp_redirect_disabled",
      "network_acl_redirect_disabled"
    ]
  },
  {
    "id": "3.2.1",
    "title": "Ensure source routed packets are not accepted",
    "assessment": "Automated",
    "description": "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.",
    "rationale": "Setting net.ipv4.conf.all.accept_source_route, net.ipv4.conf.default.accept_source_route, net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing.",
    "audit": "Run the following commands and verify output matches: # sysctl net.ipv4.conf.all.accept_source_route net.ipv4.conf.all.accept_source_route = 0 # sysctl net.ipv4.conf.default.accept_source_route net.ipv4.conf.default.accept_source_route = 0 # sysctl net.ipv6.conf.all.accept_source_route net.ipv6.conf.all.accept_source_route = 0 # sysctl net.ipv6.conf.default.accept_source_route net.ipv6.conf.default.accept_source_route = 0",
    "remediation": "Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.conf.all.accept_source_route=0 # sysctl -w net.ipv4.conf.default.accept_source_route=0 # sysctl -w net.ipv6.conf.all.accept_source_route=0 # sysctl -w net.ipv6.conf.default.accept_source_route=0 # sysctl -w net.ipv4.route.flush=1 # sysctl -w net.ipv6.route.flush=1 /etc is stateless on Container-Optimized OS. Therefore, /etc cannot be used to make these changes persistent across reboots. The steps mentioned above needs to be performed after every boot.",
    "function_names": [
      "network_interface_source_routing_disabled",
      "ec2_instance_source_routing_disabled",
      "vpc_network_source_routing_disabled",
      "subnet_source_routing_disabled",
      "firewall_source_routing_blocked",
      "network_acl_source_routing_denied",
      "security_group_source_routing_denied",
      "route_table_source_routing_disabled"
    ]
  },
  {
    "id": "3.2.2",
    "title": "Ensure ICMP redirects are not accepted",
    "assessment": "Automated",
    "description": "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects and net.ipv6.conf.all.accept_redirects to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.",
    "rationale": "Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured.",
    "audit": "Run the following commands and verify output matches: # sysctl net.ipv4.conf.all.accept_redirects net.ipv4.conf.all.accept_redirects = 0 # sysctl net.ipv4.conf.default.accept_redirects net.ipv4.conf.default.accept_redirects = 0 # sysctl net.ipv6.conf.all.accept_redirects net.ipv6.conf.all.accept_redirects = 0 # sysctl net.ipv6.conf.default.accept_redirects net.ipv6.conf.default.accept_redirects = 0",
    "remediation": "Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.conf.all.accept_redirects=0 # sysctl -w net.ipv4.conf.default.accept_redirects=0 # sysctl -w net.ipv6.conf.all.accept_redirects=0 # sysctl -w net.ipv6.conf.default.accept_redirects=0 # sysctl -w net.ipv4.route.flush=1 # sysctl -w net.ipv6.route.flush=1 /etc is stateless on Container-Optimized OS. Therefore, /etc cannot be used to make these changes persistent across reboots. The steps mentioned above needs to be performed after every boot.",
    "function_names": [
      "network_interface_icmp_redirects_disabled",
      "network_interface_ipv4_icmp_redirects_disabled",
      "network_interface_ipv6_icmp_redirects_disabled",
      "network_interface_all_icmp_redirects_disabled",
      "network_interface_routing_table_protected"
    ]
  },
  {
    "id": "3.2.3",
    "title": "Ensure secure ICMP redirects are not accepted",
    "assessment": "Automated",
    "description": "Secure ICMP redirects are the same as ICMP redirects, except they come from gateways listed on the default gateway list. It is assumed that these gateways are known to your system, and that they are likely to be secure.",
    "rationale": "It is still possible for even known gateways to be compromised. Setting net.ipv4.conf.all.secure_redirects to 0 protects the system from routing table updates by possibly compromised known gateways.",
    "audit": "Run the following commands and verify output matches: # sysctl net.ipv4.conf.all.secure_redirects net.ipv4.conf.all.secure_redirects = 0 # sysctl net.ipv4.conf.default.secure_redirects net.ipv4.conf.default.secure_redirects = 0",
    "remediation": "Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.conf.all.secure_redirects=0 # sysctl -w net.ipv4.conf.default.secure_redirects=0 # sysctl -w net.ipv4.route.flush=1 /etc is stateless on Container-Optimized OS. Therefore, /etc cannot be used to make these changes persistent across reboots. The steps mentioned above needs to be performed after every boot.",
    "function_names": [
      "network_interface_icmp_redirects_disabled",
      "network_interface_secure_icmp_redirects_disabled",
      "network_interface_untrusted_icmp_redirects_blocked",
      "network_interface_default_gateway_icmp_redirects_allowed",
      "network_interface_icmp_redirects_restricted_to_gateways"
    ]
  },
  {
    "id": "3.2.4",
    "title": "Ensure suspicious packets are logged",
    "assessment": "Automated",
    "description": "When enabled, this feature logs packets with un-routable source addresses to the kernel log.",
    "rationale": "Enabling this feature and logging these packets allows an administrator to investigate the possibility that an attacker is sending spoofed packets to their system.",
    "audit": "Run the following commands and verify output matches: # sysctl net.ipv4.conf.all.log_martians net.ipv4.conf.all.log_martians = 1 # sysctl net.ipv4.conf.default.log_martians net.ipv4.conf.default.log_martians = 1",
    "remediation": "Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.conf.all.log_martians=1 # sysctl -w net.ipv4.conf.default.log_martians=1 # sysctl -w net.ipv4.route.flush=1 /etc is stateless on Container-Optimized OS. Therefore, /etc cannot be used to make these changes persistent across reboots. The steps mentioned above needs to be performed after every boot.",
    "function_names": [
      "network_interface_suspicious_packets_logging_enabled",
      "vpc_flow_logs_suspicious_packets_logging_enabled",
      "network_acl_suspicious_packets_logging_enabled",
      "security_group_suspicious_packets_logging_enabled",
      "firewall_suspicious_packets_logging_enabled",
      "network_logging_suspicious_packets_enabled",
      "kernel_log_suspicious_packets_enabled",
      "packet_filter_suspicious_packets_logging_enabled"
    ]
  },
  {
    "id": "3.2.5",
    "title": "Ensure broadcast ICMP requests are ignored",
    "assessment": "Automated",
    "description": "Setting net.ipv4.icmp_echo_ignore_broadcasts to 1 will cause the system to ignore all ICMP echo and timestamp requests to broadcast and multicast addresses.",
    "rationale": "Accepting ICMP echo and timestamp requests with broadcast or multicast destinations for your network could be used to trick your host into starting (or participating) in a Smurf attack. A Smurf attack relies on an attacker sending large amounts of ICMP broadcast messages with a spoofed source address. All hosts receiving this message and responding would send echo-reply messages back to the spoofed address, which is probably not routable. If many hosts respond to the packets, the amount of traffic on the network could be significantly multiplied.",
    "audit": "Run the following commands and verify output matches: # sysctl net.ipv4.icmp_echo_ignore_broadcasts net.ipv4.icmp_echo_ignore_broadcasts = 1 # grep \"net\\.ipv4\\.icmp_echo_ignore_broadcasts\" /etc/sysctl.conf /etc/sysctl.d/* net.ipv4.icmp_echo_ignore_broadcasts = 1",
    "remediation": "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.icmp_echo_ignore_broadcasts = 1 Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1 # sysctl -w net.ipv4.route.flush=1 /etc is stateless on Container-Optimized OS. Therefore, /etc cannot be used to make these changes persistent across reboots. The steps mentioned above needs to be performed after every boot.",
    "function_names": [
      "compute_network_broadcast_icmp_ignored",
      "compute_network_icmp_echo_ignore_broadcasts_enabled",
      "network_interface_broadcast_icmp_disabled",
      "network_kernel_icmp_echo_ignore_broadcasts_set",
      "linux_network_icmp_broadcast_protection_enabled"
    ]
  },
  {
    "id": "3.2.6",
    "title": "Ensure bogus ICMP responses are ignored",
    "assessment": "Automated",
    "description": "Setting icmp_ignore_bogus_error_responses to 1 prevents the kernel from logging bogus responses (RFC-1122 non-compliant) from broadcast reframes, keeping file systems from filling up with useless log messages.",
    "rationale": "Some routers (and some attackers) will send responses that violate RFC-1122 and attempt to fill up a log file system with many useless error messages.",
    "audit": "Run the following commands and verify output matches: # sysctl net.ipv4.icmp_ignore_bogus_error_responses net.ipv4.icmp_ignore_bogus_error_responses = 1 # grep \"net.ipv4.icmp_ignore_bogus_error_responses\" /etc/sysctl.conf /etc/sysctl.d/* net.ipv4.icmp_ignore_bogus_error_responses = 1",
    "remediation": "Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.icmp_ignore_bogus_error_responses = 1 Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1 # sysctl -w net.ipv4.route.flush=1 /etc is stateless on Container-Optimized OS. Therefore, /etc cannot be used to make these changes persistent across reboots. The steps mentioned above needs to be performed after every boot.",
    "function_names": [
      "kernel_network_icmp_ignore_bogus_error_responses_enabled",
      "sysctl_network_icmp_bogus_responses_ignored",
      "linux_network_icmp_error_responses_filtered",
      "os_network_icmp_bogus_responses_blocked",
      "system_network_icmp_rfc1122_compliance_enabled"
    ]
  },
  {
    "id": "3.2.7",
    "title": "Ensure Reverse Path Filtering is enabled",
    "assessment": "Automated",
    "description": "Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 forces the Linux kernel to utilize reverse path filtering on a received packet to determine if the packet was valid. Essentially, with reverse path filtering, if the return packet does not go out the same interface that the corresponding source packet came from, the packet is dropped (and logged if log_martians is set).",
    "rationale": "Setting these flags is a good way to deter attackers from sending your system bogus packets that cannot be responded to. One instance where this feature breaks down is if asymmetrical routing is employed. This would occur when using dynamic routing protocols (bgp, ospf, etc) on your system. If you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing.",
    "audit": "Run the following commands and verify output matches: # sysctl net.ipv4.conf.all.rp_filter net.ipv4.conf.all.rp_filter = 1 # sysctl net.ipv4.conf.default.rp_filter net.ipv4.conf.default.rp_filter = 1 # grep \"net\\.ipv4\\.conf\\.all\\.rp_filter\" /etc/sysctl.conf /etc/sysctl.d/* net.ipv4.conf.all.rp_filter = 1 # grep \"net\\.ipv4\\.conf\\.default\\.rp_filter\" /etc/sysctl.conf /etc/sysctl.d/* net.ipv4.conf.default.rp_filter = 1",
    "remediation": "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.conf.all.rp_filter = 1 net.ipv4.conf.default.rp_filter = 1 Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.conf.all.rp_filter=1 # sysctl -w net.ipv4.conf.default.rp_filter=1 # sysctl -w net.ipv4.route.flush=1 /etc is stateless on Container-Optimized OS. Therefore, /etc cannot be used to make these changes persistent across reboots. The steps mentioned above needs to be performed after every boot.",
    "function_names": [
      "compute_network_reverse_path_filtering_enabled",
      "compute_network_rp_filter_all_enabled",
      "compute_network_rp_filter_default_enabled",
      "compute_network_martian_logging_enabled",
      "compute_network_invalid_packet_dropping_enabled"
    ]
  },
  {
    "id": "3.2.8",
    "title": "Ensure TCP SYN Cookies is enabled",
    "assessment": "Automated",
    "description": "When tcp_syncookies is set, the kernel will handle TCP SYN packets normally until the half-open connection queue is full, at which time, the SYN cookie functionality kicks in. SYN cookies work by not using the SYN queue at all. Instead, the kernel simply replies to the SYN with a SYN|ACK, but will include a specially crafted TCP sequence number that encodes the source and destination IP address and port number and the time the packet was sent. A legitimate connection would send the ACK packet of the three way handshake with the specially crafted sequence number. This allows the system to verify that it has received a valid response to a SYN cookie and allow the connection, even though there is no corresponding SYN in the queue.",
    "rationale": "Attackers use SYN flood attacks to perform a denial of service attacked on a system by sending many SYN packets without completing the three way handshake. This will quickly use up slots in the kernel's half-open connection queue and prevent legitimate connections from succeeding. SYN cookies allow the system to keep accepting valid connections, even if under a denial of service attack.",
    "audit": "Run the following commands and verify output matches: # sysctl net.ipv4.tcp_syncookies net.ipv4.tcp_syncookies = 1 # grep \"net\\.ipv4\\.tcp_syncookies\" /etc/sysctl.conf /etc/sysctl.d/* net.ipv4.tcp_syncookies = 1",
    "remediation": "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.tcp_syncookies = 1 Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.tcp_syncookies=1 # sysctl -w net.ipv4.route.flush=1 /etc is stateless on Container-Optimized OS. Therefore, /etc cannot be used to make these changes persistent across reboots. The steps mentioned above needs to be performed after every boot.",
    "function_names": [
      "compute_instance_tcp_syncookies_enabled",
      "compute_network_tcp_syncookies_enabled",
      "compute_kernel_tcp_syncookies_enabled",
      "compute_system_tcp_syncookies_enabled",
      "compute_security_tcp_syncookies_enabled"
    ]
  },
  {
    "id": "3.2.9",
    "title": "Ensure IPv6 router advertisements are not accepted",
    "assessment": "Automated",
    "description": "This setting disables the system's ability to accept IPv6 router advertisements.",
    "rationale": "It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes.",
    "audit": "Run the following commands and verify output matches: # sysctl net.ipv6.conf.all.accept_ra net.ipv6.conf.all.accept_ra = 0 # sysctl net.ipv6.conf.default.accept_ra net.ipv6.conf.default.accept_ra = 0",
    "remediation": "Run the following commands to set the active kernel parameters: # sysctl -w net.ipv6.conf.all.accept_ra=0 # sysctl -w net.ipv6.conf.default.accept_ra=0 # sysctl -w net.ipv6.route.flush=1 /etc is stateless on Container-Optimized OS. Therefore, /etc cannot be used to make these changes persistent across reboots. The steps mentioned above needs to be performed after every boot.",
    "function_names": [
      "compute_instance_ipv6_router_advertisements_disabled",
      "network_interface_ipv6_router_advertisements_disabled",
      "vpc_ipv6_router_advertisements_disabled",
      "subnet_ipv6_router_advertisements_disabled",
      "os_network_ipv6_router_advertisements_disabled",
      "vm_ipv6_router_advertisements_disabled",
      "firewall_ipv6_router_advertisements_disabled",
      "cloud_network_ipv6_router_advertisements_disabled"
    ]
  },
  {
    "id": "3.3.1.1",
    "title": "Ensure IPv6 default deny firewall policy",
    "assessment": "Automated",
    "description": "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.",
    "rationale": "With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage.",
    "audit": "Run the following command and verify that the policy for the INPUT, OUTPUT, and FORWARD chains is DROP or REJECT: # ip6tables -L Chain INPUT (policy DROP) Chain FORWARD (policy DROP) Chain OUTPUT (policy DROP)",
    "remediation": "Run the following commands to implement a default DROP policy: # ip6tables -P INPUT DROP # ip6tables -P OUTPUT DROP # ip6tables -P FORWARD DROP Additional Information: Changing firewall settings while connected over network can result in being locked out of the system. Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well.",
    "function_names": [
      "compute_firewall_ipv6_default_deny",
      "network_firewall_ipv6_default_deny",
      "vpc_firewall_ipv6_default_deny",
      "cloud_firewall_ipv6_default_deny",
      "security_group_ipv6_default_deny",
      "network_acl_ipv6_default_deny",
      "cloud_network_ipv6_default_deny",
      "cloud_security_ipv6_default_deny"
    ]
  },
  {
    "id": "3.3.1.2",
    "title": "Ensure IPv6 loopback traffic is configured",
    "assessment": "Automated",
    "description": "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (::1).",
    "rationale": "Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (::1) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.",
    "audit": "Run the following commands and verify output includes the listed rules in order (packet and byte counts may differ): # ip6tables -L INPUT -v -n Chain INPUT (policy DROP 0 packets, 0 bytes) pkts bytes target     prot opt in     out     source destination 0     0 ACCEPT     all      lo     *       ::/0                 ::/0 0     0 DROP       all      *      *       ::1                  ::/0 # ip6tables -L OUTPUT -v -n Chain OUTPUT (policy DROP 0 packets, 0 bytes) pkts bytes target     prot opt in     out     source destination 0     0 ACCEPT     all      *      lo      ::/0                 ::/0",
    "remediation": "Run the following commands to implement the loopback rules: # ip6tables -A INPUT -i lo -j ACCEPT # ip6tables -A OUTPUT -o lo -j ACCEPT # ip6tables -A INPUT -s ::1 -j DROP Additional Information: Changing firewall settings while connected over network can result in being locked out of the system. Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well.",
    "function_names": [
      "network_interface_loopback_ipv6_configured",
      "network_interface_loopback_traffic_allowed",
      "network_interface_non_loopback_traffic_denied",
      "network_interface_loopback_deny_all_except_self",
      "network_interface_ipv6_loopback_protected"
    ]
  },
  {
    "id": "3.3.1.3",
    "title": "Ensure IPv6 outbound and established connections are configured",
    "assessment": "Manual",
    "description": "Configure the firewall rules for new outbound, and established IPv6 connections.",
    "rationale": "If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage.",
    "audit": "Run the following command and verify all rules for new outbound, and established connections match site policy: # ip6tables -L -v -n",
    "remediation": "Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections: # ip6tables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT # ip6tables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT # ip6tables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT # ip6tables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT # ip6tables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT # ip6tables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT Additional Information: Changing firewall settings while connected over network can result in being locked out of the system. Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well.",
    "function_names": [
      "firewall_ipv6_outbound_configured",
      "firewall_ipv6_established_configured",
      "firewall_ipv6_connections_configured",
      "firewall_ipv6_rules_configured",
      "network_firewall_ipv6_outbound_enabled",
      "network_firewall_ipv6_established_enabled",
      "network_firewall_ipv6_connections_enabled",
      "network_firewall_ipv6_rules_enabled"
    ]
  },
  {
    "id": "3.3.1.4",
    "title": "Ensure IPv6 firewall rules exist for all open ports",
    "assessment": "Manual",
    "description": "Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.",
    "rationale": "Without a firewall rule configured for open ports default firewall policy will drop all packets to these ports.",
    "audit": "Run the following command to determine open ports: # ss -6tuln Netid  State      Recv-Q Send-Q    Local Address:Port                   Peer Address:Port udp    UNCONN     0      0                   ::1:123 :::* udp    UNCONN     0      0                    :::123 :::* tcp    LISTEN     0      128                  :::22 :::* tcp    LISTEN     0      20                  ::1:25 :::* Run the following command to determine firewall rules: # ip6tables -L INPUT -v -n Chain INPUT (policy DROP 0 packets, 0 bytes) pkts bytes target     prot opt in     out     source destination 0     0 ACCEPT     all      lo     *       ::/0                 ::/0 0     0 DROP       all      *      *       ::1                  ::/0 0     0 ACCEPT     tcp      *      *       ::/0                 ::/0 tcp dpt:22 state NEW Verify all open ports listening on non-localhost addresses have at least one firewall rule. The last line identified by the \"tcp dpt:22 state NEW\" identifies it as a firewall rule for new connections on tcp port 22.",
    "remediation": "For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections: # ip6tables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT Additional Information: Changing firewall settings while connected over network can result in being locked out of the system. Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well. The remediation command opens up the port to traffic from all sources. Consult iptables documentation and set any restrictions in compliance with site policy.",
    "function_names": [
      "compute_firewall_ipv6_rules_exist",
      "compute_firewall_open_ports_ipv6_protected",
      "network_firewall_ipv6_rules_all_ports",
      "network_firewall_open_ports_ipv6_configured",
      "compute_instance_ipv6_firewall_rules_present",
      "network_security_group_ipv6_rules_required",
      "compute_firewall_ipv6_open_ports_restricted",
      "network_firewall_ipv6_traffic_rules_enabled"
    ]
  },
  {
    "id": "3.3.2.1",
    "title": "Ensure default deny firewall policy",
    "assessment": "Automated",
    "description": "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.",
    "rationale": "With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage.",
    "audit": "Run the following command and verify that the policy for the INPUT , OUTPUT , and FORWARD chains is DROP or REJECT : # iptables -L Chain INPUT (policy DROP) Chain FORWARD (policy DROP) Chain OUTPUT (policy DROP)",
    "remediation": "Run the following commands to implement a default DROP policy: # iptables -P INPUT DROP # iptables -P OUTPUT DROP # iptables -P FORWARD DROP Additional Information: Changing firewall settings while connected over network can result in being locked out of the system. Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well.",
    "function_names": [
      "compute_firewall_default_deny_policy",
      "network_firewall_default_deny_all",
      "vpc_firewall_default_deny_rule",
      "cloud_firewall_default_deny_traffic",
      "security_group_default_deny_all",
      "network_acl_default_deny_policy",
      "firewall_default_deny_inbound",
      "firewall_default_deny_outbound"
    ]
  },
  {
    "id": "3.3.2.2",
    "title": "Ensure loopback traffic is configured",
    "assessment": "Automated",
    "description": "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8).",
    "rationale": "Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.",
    "audit": "Run the following commands and verify output includes the listed rules in order (packet and byte counts may differ): # iptables -L INPUT -v -n Chain INPUT (policy DROP 0 packets, 0 bytes) pkts bytes target     prot opt in     out     source destination 0     0 ACCEPT     all  --  lo     *       0.0.0.0/0            0.0.0.0/0 0     0 DROP       all  --  *      *       127.0.0.0/8          0.0.0.0/0 # iptables -L OUTPUT -v -n Chain OUTPUT (policy DROP 0 packets, 0 bytes) pkts bytes target     prot opt in     out     source destination 0     0 ACCEPT     all  --  *      lo      0.0.0.0/0            0.0.0.0/0",
    "remediation": "Run the following commands to implement the loopback rules: # iptables -A INPUT -i lo -j ACCEPT # iptables -A OUTPUT -o lo -j ACCEPT # iptables -A INPUT -s 127.0.0.0/8 -j DROP Additional Information: Changing firewall settings while connected over network can result in being locked out of the system. Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well.",
    "function_names": [
      "network_interface_loopback_configured",
      "network_interface_loopback_traffic_allowed",
      "network_interface_non_loopback_traffic_denied",
      "network_interface_loopback_network_protected",
      "network_interface_loopback_127_0_0_0_8_denied"
    ]
  },
  {
    "id": "3.3.2.3",
    "title": "Ensure outbound and established connections are configured",
    "assessment": "Manual",
    "description": "Configure the firewall rules for new outbound, and established connections.",
    "rationale": "If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage.",
    "audit": "Run the following command and verify all rules for new outbound, and established connections match site policy: # iptables -L -v -n",
    "remediation": "Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections: # iptables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT # iptables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT # iptables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT # iptables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT # iptables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT # iptables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT Additional Information: Changing firewall settings while connected over network can result in being locked out of the system. Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well."
  },
  {
    "id": "3.3.3",
    "title": "Ensure iptables is installed",
    "assessment": "Automated",
    "description": "iptables allows configuration of the IPv4 and IPv6 tables in the linux kernel and the rules stored within them. Most firewall configuration utilities operate as a front end to iptables.",
    "rationale": "iptables is required for firewall management and configuration.",
    "audit": "Run the following command and verify iptables is installed: grep '\\\"name\\\": \\\"iptables\\\"' /etc/cos-package-info.json \"name\": \"iptables\"",
    "remediation": "Update to an OS image that includes the iptables package.",
    "function_names": [
      "compute_instance_iptables_installed",
      "compute_firewall_iptables_installed",
      "linux_kernel_iptables_installed",
      "network_security_iptables_installed",
      "host_firewall_iptables_installed"
    ]
  },
  {
    "id": "4.1.1.1",
    "title": "Ensure correct container image is set for stackdriver logging agent",
    "assessment": "Automated",
    "description": "stackdriver-logging service runs stackdriver container image to export logs to Cloud Logging. Note: This recommendation is not applicable for COS images using Fluent-bit as it isn't containerized.",
    "rationale": "If the logging agent is not set correctly, the logs cannot be exported to Cloud Logging.",
    "audit": "Verify LOGGING_AGENT_DOCKER_IMAGE is set to a correct stackdriver container image. Use the following command to verify: # grep LOGGING_AGENT_DOCKER_IMAGE /etc/stackdriver/env_vars LOGGING_AGENT_DOCKER_IMAGE=\"gcr.io/stackdriver-agents/stackdriver-logging- agent:<version>\"",
    "remediation": "Edit the LOGGING_AGENT_DOCKER_IMAGE variable in the /etc/stackdriver/env_vars file to set the correct logging agent. Run the following command to restart stackdriver-logging service : # systemctl restart stackdriver-logging /etc is stateless on Container-Optimized OS. Therefore, /etc cannot be used to make these changes persistent across reboots. The steps mentioned above needs to be performed after every boot.",
    "function_names": [
      "compute_container_stackdriver_image_correct",
      "compute_container_logging_agent_image_valid",
      "compute_container_logging_image_compliance",
      "compute_container_stackdriver_image_verified",
      "compute_container_logging_agent_image_standard"
    ]
  },
  {
    "id": "4.1.1.2",
    "title": "Ensure Logging Service is Running",
    "assessment": "Manual",
    "description": "Some form of logging for the OS should be used. On COS Stackdriver-logging agent or fluent-bit logging agent are provided and can be activated simply by following the guides. It is not require to use these for logging but they are simple to set up and will work well.",
    "rationale": "If no logging is running, their will be less of a trail for audit if things go wrong. It is a good practice to have logging enabled for better visibility.",
    "audit": "This audit procedure is only if you are using one of the supporting logging services described. Stackdriver-Logging Agent Run the following command to verify stackdriver-logging is running: # systemctl status stackdriver-logging | grep Active Active: active (running) since <Day date time> Fluent-bit Logging Or if your system has fluent-bit, run the following command to verify fluent-bit is running: # systemctl status fluent-bit | grep Active Active: active (running) since <Day date time>",
    "remediation": "This remediation is only if you want to use one of the supported logging services described. Stackdriver-logging Agent Run the following command to enable stackdriver-logging : # systemctl start stackdriver-logging Fluent-bit Logging Run the following command to enable fluent-bit : # systemctl start fluent-bit Works for Both Simply update the instance metadata to enable logging as follows: # gcloud compute instances add-metadata <instance-name> \\ --zone <compute-zone> \\ --metadata google-logging-enabled=true",
    "function_names": [
      "compute_instance_logging_agent_enabled",
      "compute_instance_stackdriver_logging_enabled",
      "compute_instance_fluentbit_logging_enabled",
      "compute_instance_logging_service_running",
      "compute_instance_logging_agent_installed",
      "compute_instance_logging_agent_configured",
      "compute_instance_logging_agent_active",
      "compute_instance_logging_enabled",
      "compute_instance_logging_service_activated",
      "compute_instance_logging_agent_operational"
    ]
  },
  {
    "id": "4.1.1.3",
    "title": "Ensure logging is configured",
    "assessment": "Manual",
    "description": "For an image using stackdriver, the /etc/stackdriver/logging.config.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages. An image using fluent-bit uses /usr/share/fluent-bit/fluent- bit.conf for the same purpose.",
    "rationale": "A great deal of important security-related information is sent via logging (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.).",
    "audit": "Review the contents of the /etc/stackdriver/logging.config.d/*.conf if using an image with stackdriver or /usr/share/fluent-bit/fluent-bit.conf if using an image with fluent-bit to ensure appropriate logging is set. In addition, run the following command and verify that the log files are logging information: # ls -l /var/log/",
    "remediation": "Edit the contents of /etc/stackdriver/logging.config.d/*.conf if using an image with stackdriver or /usr/share/fluent-bit/fluent-bit.conf if using an image with fluent-bit as appropriate for your environment. Then run the following commands to reload the logging configuration: For stackdriver-logging: # systemctl restart stackdriver-logging For fluent-bit: # systemctl restart fluent-bit /etc is stateless on Container-Optimized OS. Therefore, /etc cannot be used to make these changes persistent across reboots. The steps mentioned above need to be performed after every boot for images using stackdriver. This is not the case for fluent- bit as the logging agent is in /usr/share/ which isn't stateless so changes will be persistent across reboots. References: 1. See the rsyslog.conf(5) man page for more information.",
    "function_names": [
      "compute_image_stackdriver_logging_enabled",
      "compute_image_fluentbit_logging_enabled",
      "compute_image_logging_config_present",
      "compute_image_logging_rules_configured",
      "compute_image_logging_files_configured"
    ]
  },
  {
    "id": "4.1.2.1",
    "title": "Ensure journald is configured to compress large log files",
    "assessment": "Automated",
    "description": "The journald system includes the capability of compressing overly large files to avoid filling up the system with logs or making the logs unmanageably large.",
    "rationale": "Uncompressed large files may unexpectedly fill a filesystem leading to resource unavailability. Compressing logs prior to write can prevent sudden, unexpected filesystem impacts.",
    "audit": "Review /etc/systemd/journald.conf and verify that large files will be compressed: # grep -e Compress /etc/systemd/journald.conf # Compress=yes",
    "remediation": "Edit the /etc/systemd/journald.conf file and add the following line: Compress=yes Reload the configuration to be effective. # systemctl force-reload systemd-journald /etc is stateless on Container-Optimized OS. Therefore, /etc cannot be used to make these changes persistent across reboots. The steps mentioned above needs to be performed after every boot. References: 1. https://github.com/konstruktoid/hardening/blob/master/systemd.adoc#etcsystemd journaldconf Additional Information: The main configuration file /etc/systemd/journald.conf is read before any of the custom *.conf files. If there are custom configs present, they override the main configuration parameters",
    "function_names": [
      "journald_log_compression_enabled",
      "journald_large_log_compression_enabled",
      "journald_log_file_compression_enabled",
      "journald_log_size_compression_enabled",
      "journald_log_compression_active"
    ]
  },
  {
    "id": "4.1.2.2",
    "title": "Ensure journald is configured to write logfiles to persistent disk",
    "assessment": "Automated",
    "description": "Data from journald may be stored in volatile memory or persisted locally on the server. Logs in memory will be lost upon a system reboot. By persisting logs to local disk on the server they are protected from loss.",
    "rationale": "Writing log data to disk will provide the ability to forensically reconstruct events which may have impacted the operations or security of a system even after a system crash or reboot.",
    "audit": "Review /etc/systemd/journald.conf and verify that logs are persisted to disk: # grep -e Storage /etc/systemd/journald.conf # Storage=persistent",
    "remediation": "Edit the /etc/systemd/journald.conf file and add the following line: Storage=persistent /etc is stateless on Container-Optimized OS. Therefore, /etc cannot be used to make these changes persistent across reboots. The steps mentioned above needs to be performed after every boot. References: 1. https://github.com/konstruktoid/hardening/blob/master/systemd.adoc#etcsystemd journaldconf Additional Information: The main configuration file /etc/systemd/journald.conf is read before any of the custom *.conf files. If there are custom configs present, they override the main configuration parameters",
    "function_names": [
      "journald_logfiles_persistent_disk_enabled",
      "journald_logfiles_persistent_storage_enabled",
      "journald_logfiles_non_volatile_storage_enabled",
      "journald_logfiles_disk_persistence_enabled",
      "journald_logfiles_reboot_protected_enabled"
    ]
  },
  {
    "id": "4.1.3",
    "title": "Ensure permissions on all logfiles are configured",
    "assessment": "Automated",
    "description": "Log files stored in /var/log/ contain logged information from many services on the system, or on log hosts others as well.",
    "rationale": "It is important to ensure that log files have the correct permissions to ensure that sensitive data is archived and protected.",
    "audit": "Run the following command and verify that other has no permissions on any files and group does not have write or execute permissions on any files: # find /var/log -type f -ls",
    "remediation": "Run the following commands to set permissions on all existing log files: find /var/log -type f -exec chmod g-wx,o-rwx \"{}\" + -o -type d -exec chmod g- w,o-rwx \"{}\" + Additional Information: You may also need to change the configuration for your logging software or services for any logs that had incorrect permissions.",
    "function_names": [
      "compute_logfile_permissions_configured",
      "compute_logfile_permissions_restricted",
      "compute_logfile_permissions_secure",
      "compute_logfile_permissions_correct",
      "compute_logfile_permissions_protected",
      "compute_logfile_permissions_enforced",
      "compute_logfile_permissions_compliant",
      "compute_logfile_permissions_locked_down"
    ]
  },
  {
    "id": "4.2",
    "title": "Ensure logrotate is configured",
    "assessment": "Manual",
    "description": "The system includes the capability of rotating log files regularly to avoid filling up the system with logs or making the logs unmanageably large.",
    "rationale": "By keeping the log files smaller and more manageable, a system administrator can easily archive these files to another system and spend less time looking through inordinately large log files.",
    "audit": "Review /etc/logrotate.conf and /etc/logrotate.d/* and verify logs are rotated according to site policy.",
    "remediation": "Edit /etc/logrotate.conf and /etc/logrotate.d/* to ensure logs are rotated according to site policy. /etc is stateless on Container-Optimized OS. Therefore, /etc cannot be used to make these changes persistent across reboots. The steps mentioned above needs to be performed after every boot. Additional Information: If no maxage setting is set for logrotate a situation can occur where logrotate is interrupted and fails to delete rotated logfiles. It is recommended to set this to a value greater than the longest any log file should exist on your system to ensure that any such logfile is removed but standard rotation settings are not overridden.",
    "function_names": [
      "system_logrotate_configured",
      "system_logrotate_retention_set",
      "system_logrotate_size_limits_enabled",
      "system_logrotate_compression_enabled",
      "system_logrotate_frequency_configured",
      "system_logrotate_post_rotation_script_configured",
      "system_logrotate_old_logs_removed",
      "system_logrotate_permissions_restricted",
      "system_logrotate_date_format_standardized",
      "system_logrotate_error_handling_enabled"
    ]
  },
  {
    "id": "5.1.1",
    "title": "Ensure permissions on /etc/ssh/sshd_config are configured",
    "assessment": "Automated",
    "description": "The /etc/ssh/sshd_config file contains configuration specifications for sshd. The command below sets the owner and group of the file to root.",
    "rationale": "The /etc/ssh/sshd_config file needs to be protected from unauthorized changes by non-privileged users.",
    "audit": "Run the following command and verify Uid and Gid are both 0/root and Access does not grant permissions to group or other: # stat /etc/ssh/sshd_config Access: (0600/-rw-------)  Uid: (    0/    root)   Gid: (    0/    root)",
    "remediation": "Run the following commands to set ownership and permissions on /etc/ssh/sshd_config: # chown root:root /etc/ssh/sshd_config # chmod og-rwx /etc/ssh/sshd_config",
    "function_names": [
      "sshd_config_file_owner_root",
      "sshd_config_file_group_root",
      "sshd_config_file_permissions_configured",
      "sshd_config_file_secure_ownership",
      "sshd_config_file_restrictive_permissions"
    ]
  },
  {
    "id": "5.1.2",
    "title": "Ensure permissions on SSH private host key files are configured",
    "assessment": "Automated",
    "description": "An SSH private key is one of two files used in SSH public key authentication. In this authentication method, the possession of the private key is proof of identity. Only a private key that corresponds to a public key will be able to authenticate successfully. The private keys need to be stored and handled carefully, and no copies of the private key should be distributed.",
    "rationale": "If an unauthorized user obtains the private SSH host key file, the host could be impersonated",
    "audit": "Run the following command and verify Uid is 0/root and Gid is 0/root. Ensure group and other do not have permissions # find /etc/ssh -xdev -type f -name 'ssh_host_*_key' -exec stat {} \\; File: ‘/etc/ssh/ssh_host_rsa_key’ Size: 1679            Blocks: 8          IO Block: 4096   regular file Device: ca01h/51713d    Inode: 8628138     Links: 1 Access: (0600/-rw-------)  Uid: (    0/    root)   Gid: (  0/root) Access: 2018-10-22 18:24:56.861750616 +0000 Modify: 2018-10-22 18:24:56.861750616 +0000 Change: 2018-10-22 18:24:56.873750616 +0000 Birth: - File: ‘/etc/ssh/ssh_host_ecdsa_key’ Size: 227             Blocks: 8          IO Block: 4096   regular file Device: ca01h/51713d    Inode: 8631760     Links: 1 Access: (0600/-rw-------)  Uid: (    0/    root)   Gid: (  0/root) Access: 2018-10-22 18:24:56.897750616 +0000 Modify: 2018-10-22 18:24:56.897750616 +0000 Change: 2018-10-22 18:24:56.905750616 +0000 Birth: - File: ‘/etc/ssh/ssh_host_ed25519_key’ Size: 387             Blocks: 8          IO Block: 4096   regular file Device: ca01h/51713d    Inode: 8631762     Links: 1 Access: (0600/-rw-------)  Uid: (    0/    root)   Gid: ( 0/root) Access: 2018-10-22 18:24:56.945750616 +0000 Modify: 2018-10-22 18:24:56.945750616 +0000 Change: 2018-10-22 18:24:56.957750616 +0000 Birth: -",
    "remediation": "Run the following commands to set ownership and permissions on the private SSH host key files # find /etc/ssh -xdev -type f -name 'ssh_host_*_key' -exec chown root:root {} \\; # find /etc/ssh -xdev -type f -name 'ssh_host_*_key' -exec chmod 0600 {} \\;",
    "function_names": [
      "compute_ssh_key_permissions_restricted",
      "compute_private_key_file_permissions_configured",
      "compute_ssh_host_key_file_permissions_secure",
      "compute_ssh_private_key_file_mode_restricted",
      "compute_ssh_key_file_permissions_compliant"
    ]
  },
  {
    "id": "5.1.3",
    "title": "Ensure permissions on SSH public host key files are configured",
    "assessment": "Automated",
    "description": "An SSH public key is one of two files used in SSH public key authentication. In this authentication method, a public key is a key that can be used for verifying digital signatures generated using a corresponding private key. Only a public key that corresponds to a private key will be able to authenticate successfully.",
    "rationale": "If a public host key file is modified by an unauthorized user, the SSH service may be compromised.",
    "audit": "Run the following command and verify Access does not grant write or execute permissions to group or other for all returned files # find /etc/ssh -xdev -type f -name 'ssh_host_*_key.pub' -exec stat {} \\; File: ‘/etc/ssh/ssh_host_rsa_key.pub’ Size: 382             Blocks: 8          IO Block: 4096   regular file Device: ca01h/51713d    Inode: 8631758     Links: 1 Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root) Access: 2018-10-22 18:24:56.861750616 +0000 Modify: 2018-10-22 18:24:56.861750616 +0000 Change: 2018-10-22 18:24:56.881750616 +0000 Birth: - File: ‘/etc/ssh/ssh_host_ecdsa_key.pub’ Size: 162             Blocks: 8          IO Block: 4096   regular file Device: ca01h/51713d    Inode: 8631761     Links: 1 Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root) Access: 2018-10-22 18:24:56.897750616 +0000 Modify: 2018-10-22 18:24:56.897750616 +0000 Change: 2018-10-22 18:24:56.917750616 +0000 Birth: - File: ‘/etc/ssh/ssh_host_ed25519_key.pub’ Size: 82              Blocks: 8          IO Block: 4096   regular file Device: ca01h/51713d    Inode: 8631763     Links: 1 Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root) Access: 2018-10-22 18:24:56.945750616 +0000 Modify: 2018-10-22 18:24:56.945750616 +0000 Change: 2018-10-22 18:24:56.961750616 +0000 Birth: -",
    "remediation": "Run the following commands to set permissions and ownership on the SSH host public key files # find /etc/ssh -xdev -type f -name 'ssh_host_*_key.pub' -exec chmod 0644 {} \\; #find /etc/ssh -xdev -type f -name 'ssh_host_*_key.pub' -exec chown root:root {} \\;",
    "function_names": [
      "compute_ssh_public_key_file_permissions_configured",
      "compute_ssh_host_key_file_permissions_restricted",
      "compute_ssh_key_file_permissions_secure",
      "compute_ssh_public_key_file_access_controlled",
      "compute_ssh_host_key_file_ownership_correct"
    ]
  },
  {
    "id": "5.1.4",
    "title": "Ensure SSH Protocol is set to 2",
    "assessment": "Automated",
    "description": "Older versions of SSH support two different and incompatible protocols: SSH1 and SSH2. SSH1 was the original protocol and was subject to security issues. SSH2 is more advanced and secure.",
    "rationale": "SSH v1 suffers from insecurities that do not affect SSH v2.",
    "audit": "Run the following command and verify that output matches: # grep ^Protocol /etc/ssh/sshd_config Protocol 2",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: Protocol 2 Additional Information: This command not longer exists in newer versions of SSH. This check is still being included for systems that may be running an older version of SSH. As of openSSH version 7.4 this parameter will not cause an issue when included.",
    "function_names": [
      "compute_instance_ssh_protocol_v2",
      "compute_ssh_protocol_v2_only",
      "compute_ssh_protocol_no_v1",
      "compute_instance_ssh_v2_enabled",
      "compute_ssh_v2_required"
    ]
  },
  {
    "id": "5.1.5",
    "title": "Ensure SSH LogLevel is appropriate",
    "assessment": "Automated",
    "description": "INFO level is the basic level that only records login activity of SSH users. In many situations, such as Incident Response, it is important to determine when a particular user was active on a system. The logout record can eliminate those users who disconnected, which helps narrow the field. VERBOSE level specifies that login and logout activity as well as the key fingerprint for any SSH key used for login will be logged. This information is important for SSH key management, especially in legacy environments.",
    "rationale": "SSH provides several logging levels with varying amounts of verbosity. DEBUG is specifically not recommended other than strictly for debugging SSH communications since it provides so much data that it is difficult to identify important security information.",
    "audit": "Run the following command and verify that output matches: # sshd -T | grep loglevel LogLevel VERBOSE OR loglevel INFO",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: LogLevel VERBOSE OR LogLevel INFO Default Value: LogLevel INFO References: 1. https://www.ssh.com/ssh/sshd_config/",
    "function_names": [
      "compute_ssh_loglevel_info_enabled",
      "compute_ssh_loglevel_verbose_enabled",
      "compute_ssh_loglevel_login_logout_logging",
      "compute_ssh_loglevel_key_fingerprint_logging",
      "compute_ssh_loglevel_incident_response_ready"
    ]
  },
  {
    "id": "5.1.6",
    "title": "Ensure SSH X11 forwarding is disabled",
    "assessment": "Automated",
    "description": "The X11Forwarding parameter provides the ability to tunnel X11 traffic through the connection to enable remote graphic connections.",
    "rationale": "Disable X11 forwarding unless there is an operational requirement to use X11 applications directly. There is a small risk that the remote X11 servers of users who are logged in via SSH with X11 forwarding could be compromised by other users on the X11 server. Note that even if X11 forwarding is disabled, users can always install their own forwarders.",
    "audit": "Run the following command and verify that output matches: # sshd -T | grep x11forwarding X11Forwarding no",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: X11Forwarding no",
    "function_names": [
      "compute_instance_ssh_x11_forwarding_disabled",
      "compute_vm_ssh_x11_forwarding_disabled",
      "ssh_config_x11_forwarding_disabled",
      "linux_ssh_x11_forwarding_disabled",
      "os_ssh_x11_forwarding_disabled"
    ]
  },
  {
    "id": "5.1.7",
    "title": "Ensure SSH MaxAuthTries is set to 4 or less",
    "assessment": "Automated",
    "description": "The MaxAuthTries parameter specifies the maximum number of authentication attempts permitted per connection. When the login failure count reaches half the number, error messages will be written to the journald logs detailing the login failure.",
    "rationale": "Setting the MaxAuthTries parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. While the recommended setting is 4, set the number based on site policy.",
    "audit": "Run the following command and verify that output MaxAuthTries is 4 or less: # sshd -T | grep maxauthtries MaxAuthTries 4",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: MaxAuthTries 4 Default Value: MaxAuthTries 6",
    "function_names": [
      "compute_ssh_max_auth_tries_less_than_or_equal_4",
      "ssh_config_max_auth_tries_compliant",
      "compute_instance_ssh_auth_attempts_limited",
      "ssh_max_auth_tries_secure_config",
      "compute_ssh_auth_retries_restricted"
    ]
  },
  {
    "id": "5.1.8",
    "title": "Ensure SSH IgnoreRhosts is enabled",
    "assessment": "Automated",
    "description": "The IgnoreRhosts parameter specifies that .rhosts and .shosts files will not be used in RhostsRSAAuthentication or HostbasedAuthentication.",
    "rationale": "Setting this parameter forces users to enter a password when authenticating with ssh.",
    "audit": "Run the following command and verify that output matches: # sshd -T | grep ignorerhosts IgnoreRhosts yes",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: IgnoreRhosts yes Default Value: IgnoreRhosts yes",
    "function_names": [
      "compute_ssh_ignorerhosts_enabled",
      "compute_ssh_rhosts_auth_disabled",
      "compute_ssh_hostbased_auth_disabled",
      "compute_ssh_rhosts_rsa_auth_disabled",
      "compute_ssh_secure_auth_enabled"
    ]
  },
  {
    "id": "5.1.9",
    "title": "Ensure SSH HostbasedAuthentication is disabled",
    "assessment": "Automated",
    "description": "The HostbasedAuthentication parameter specifies if authentication is allowed through trusted hosts via the user of .rhosts, or /etc/hosts.equiv, along with successful public key client host authentication. This option only applies to SSH Protocol Version 2.",
    "rationale": "Even though the .rhosts files are ineffective if support is disabled in /etc/pam.conf, disabling the ability to use .rhosts files in SSH provides an additional layer of protection.",
    "audit": "Run the following command and verify that output matches: # sshd -T | grep hostbasedauthentication HostbasedAuthentication no",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: HostbasedAuthentication no Default Value: HostbasedAuthentication no",
    "function_names": [
      "compute_ssh_hostbased_authentication_disabled",
      "compute_ssh_hostbased_authentication_protocol_v2_disabled",
      "ssh_hostbased_authentication_disabled",
      "ssh_hostbased_authentication_protocol_v2_disabled"
    ]
  },
  {
    "id": "5.1.10",
    "title": "Ensure SSH root login is disabled",
    "assessment": "Automated",
    "description": "The PermitRootLogin parameter specifies if the root user can log in using ssh. The default is no.",
    "rationale": "Disallowing root logins over SSH requires system admins to authenticate using their own individual account, then escalating to root via sudo or su. This in turn limits opportunity for non-repudiation and provides a clear audit trail in the event of a security incident",
    "audit": "Run the following command and verify that output matches: # sshd -T | grep permitrootlogin PermitRootLogin no",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: PermitRootLogin no Default Value: PermitRootLogin without-password",
    "function_names": [
      "compute_ssh_root_login_disabled",
      "compute_ssh_permit_root_login_no",
      "compute_ssh_root_access_restricted",
      "compute_ssh_root_login_prohibited",
      "compute_ssh_secure_root_login_config"
    ]
  },
  {
    "id": "5.1.11",
    "title": "Ensure SSH PermitEmptyPasswords is disabled",
    "assessment": "Automated",
    "description": "The PermitEmptyPasswords parameter specifies if the SSH server allows login to accounts with empty password strings.",
    "rationale": "Disallowing remote shell access to accounts that have an empty password reduces the probability of unauthorized access to the system",
    "audit": "Run the following command and verify that output matches: # sshd -T | grep permitemptypasswords PermitEmptyPasswords no",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: PermitEmptyPasswords no Default Value: PermitEmptyPasswords no",
    "function_names": [
      "compute_ssh_permit_empty_passwords_disabled",
      "ssh_config_permit_empty_passwords_disabled",
      "linux_ssh_permit_empty_passwords_disabled",
      "sshd_config_permit_empty_passwords_disabled",
      "instance_ssh_permit_empty_passwords_disabled"
    ]
  },
  {
    "id": "5.1.12",
    "title": "Ensure SSH PermitUserEnvironment is disabled",
    "assessment": "Automated",
    "description": "The PermitUserEnvironment option allows users to present environment options to the ssh daemon.",
    "rationale": "Permitting users the ability to set environment variables through the SSH daemon could potentially allow users to bypass security controls (e.g. setting an execution path that has ssh executing trojan'd programs)",
    "audit": "Run the following command and verify that output matches: # sshd -T | grep permituserenvironment PermitUserEnvironment no",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: PermitUserEnvironment no Default Value: PermitUserEnvironment no",
    "function_names": [
      "compute_ssh_permit_user_environment_disabled",
      "ssh_config_permit_user_environment_disabled",
      "linux_ssh_permit_user_environment_disabled",
      "sshd_permit_user_environment_disabled",
      "instance_ssh_permit_user_environment_disabled"
    ]
  },
  {
    "id": "5.1.13",
    "title": "Ensure only strong Ciphers are used",
    "assessment": "Automated",
    "description": "This variable limits the ciphers that SSH can use during communication.",
    "rationale": "Weak ciphers that are used for authentication to the cryptographic module cannot be relied upon to provide confidentiality or integrity, and system data may be compromised The DES, Triple DES, and Blowfish ciphers, as used in SSH, have a birthday bound of approximately four billion blocks, which makes it easier for remote attackers to obtain cleartext data via a birthday attack against a long-duration encrypted session, aka a \"Sweet32\" attack The RC4 algorithm, as used in the TLS protocol and SSL protocol, does not properly combine state data with key data during the initialization phase, which makes it easier for remote attackers to conduct plaintext-recovery attacks against the initial bytes of a stream by sniffing network traffic that occasionally relies on keys affected by the Invariance Weakness, and then using a brute-force approach involving LSB values, aka the \"Bar Mitzvah\" issue The passwords used during an SSH session encrypted with RC4 can be recovered by an attacker who is able to capture and replay the session Error handling in the SSH protocol; Client and Server, when using a block cipher algorithm in Cipher Block Chaining (CBC) mode, makes it easier for remote attackers to recover certain plaintext data from an arbitrary block of ciphertext in an SSH session via unknown vectors The mm_newkeys_from_blob function in monitor_wrap.c, when an AES-GCM cipher is used, does not properly initialize memory for a MAC context data structure, which allows remote authenticated users to bypass intended ForceCommand and login-shell restrictions via packet data that provides a crafted callback address",
    "audit": "Run the following command and verify that output does not contain any of the listed weak ciphers # sshd -T | grep ciphers Weak Ciphers: 3des-cbc aes128-cbc aes192-cbc aes256-cbc arcfour arcfour128 arcfour256 blowfish-cbc cast128-cbc rijndael-cbc@lysator.liu.se",
    "remediation": "Edit the /etc/ssh/sshd_config file add/modify the Ciphers line to contain a comma separated list of the site approved ciphers Example: Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128- gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr Default Value: ciphers aes128-gcm@openssh.com,aes256-gcm@openssh.com,chacha20- poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr References: 1. https://nvd.nist.gov/vuln/detail/CVE-2016-2183 2. https://nvd.nist.gov/vuln/detail/CVE-2015-2808 3. https://www.kb.cert.org/vuls/id/565052 4. https://www.openssh.com/txt/cbc.adv 5. https://nvd.nist.gov/vuln/detail/CVE-2008-5161 6. https://nvd.nist.gov/vuln/detail/CVE-2013-4548 7. https://www.kb.cert.org/vuls/id/565052 8. https://www.openssh.com/txt/cbc.adv 9. SSHD_CONFIG(5) Additional Information: Some organizations may have stricter requirements for approved ciphers. Ensure that ciphers used are in compliance with site policy. The only \"strong\" ciphers currently FIPS 140-2 compliant are: aes256-ctr,aes192- ctr,aes128-ctr CVE-2013-4548 referenced above applies to OpenSSH versions 6.2 and 6.3. If running these versions of Open SSH, Please upgrade to version 6.4 or later to fix the vulnerability, or disable AES-GCM in the server configuration. The Following are the supported ciphers in openSSH: 3des-cbc aes128-cbc aes192-cbc aes256-cbc aes128-ctr aes192-ctr aes256-ctr aes128-gcm@openssh.com aes256-gcm@openssh.com arcfour arcfour128 arcfour256 blowfish-cbc cast128-cbc rijndael-cbc@lysator.liu.se chacha20-poly1305@openssh.com",
    "function_names": [
      "compute_ssh_strong_ciphers_enabled",
      "compute_ssh_weak_ciphers_disabled",
      "compute_ssh_ciphers_restricted",
      "compute_ssh_ciphers_compliant",
      "compute_ssh_ciphers_secure_only"
    ]
  },
  {
    "id": "5.1.14",
    "title": "Ensure only strong MAC algorithms are used",
    "assessment": "Automated",
    "description": "This variable limits the types of MAC algorithms that SSH can use during communication.",
    "rationale": "MD5 and 96-bit MAC algorithms are considered weak and have been shown to increase exploitability in SSH downgrade attacks. Weak algorithms continue to have a great deal of attention as a weak spot that can be exploited with expanded computing power. An attacker that breaks the algorithm could take advantage of a MiTM position to decrypt the SSH tunnel and capture credentials and information",
    "audit": "Run the following command and verify that output does not contain any of the listed weak MAC algorithms: # sshd -T | grep -i \"MACs\" Weak MAC algorithms: hmac-md5 hmac-md5-96 hmac-ripemd160 hmac-sha1 hmac-sha1-96 umac-64@openssh.com umac-128@openssh.com hmac-md5-etm@openssh.com hmac-md5-96-etm@openssh.com hmac-ripemd160-etm@openssh.com hmac-sha1-etm@openssh.com hmac-sha1-96-etm@openssh.com umac-64-etm@openssh.com umac-128-etm@openssh.com",
    "remediation": "Edit the /etc/ssh/sshd_config file and add/modify the MACs line to contain a comma separated list of the site approved MACs Example: MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2- 512,hmac-sha2-256 Default Value: macs umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256- etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1- etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2- 256,hmac-sha2-512,hmac-sha1 References: 1. More information on SSH downgrade attacks can be found here: http://www.mitls.org/pages/attacks/SLOTH 2. SSHD_CONFIG(5) Additional Information: Some organizations may have stricter requirements for approved MACs. Ensure that MACs used are in compliance with site policy. The only \"strong\" MACs currently FIPS 140-2 approved are hmac-sha2-256 and hmac- sha2-512 The Supported MACs are: hmac-md5 hmac-md5-96 hmac-ripemd160 hmac-sha1 hmac-sha1-96 hmac-sha2-256 hmac-sha2-512 umac-64@openssh.com umac-128@openssh.com hmac-md5-etm@openssh.com hmac-md5-96-etm@openssh.com hmac-ripemd160-etm@openssh.com hmac-sha1-etm@openssh.com hmac-sha1-96-etm@openssh.com hmac-sha2-256-etm@openssh.com hmac-sha2-512-etm@openssh.com umac-64-etm@openssh.com umac-128-etm@openssh.com",
    "function_names": [
      "ssh_config_strong_mac_algorithms",
      "ssh_config_mac_algorithms_restricted",
      "ssh_config_weak_mac_algorithms_disabled",
      "ssh_config_secure_mac_algorithms_enabled",
      "ssh_config_mac_algorithms_compliant",
      "ssh_config_mac_algorithms_approved_only",
      "ssh_config_mac_algorithms_strong_cipher_suite",
      "ssh_config_mac_algorithms_cis_compliant"
    ]
  },
  {
    "id": "5.1.15",
    "title": "Ensure only strong Key Exchange algorithms are used",
    "assessment": "Automated",
    "description": "Key exchange is any method in cryptography by which cryptographic keys are exchanged between two parties, allowing use of a cryptographic algorithm. If the sender and receiver wish to exchange encrypted messages, each must be equipped to encrypt messages to be sent and decrypt messages received",
    "rationale": "Key exchange methods that are considered weak should be removed. A key exchange method may be weak because too few bits are used, or the hashing algorithm is considered too weak. Using weak algorithms could expose connections to man-in-the- middle attacks",
    "audit": "Run the following command and verify that output does not contain any of the listed weak Key Exchange algorithms # sshd -T | grep kexalgorithms Weak Key Exchange Algorithms: diffie-hellman-group1-sha1 diffie-hellman-group14-sha1 diffie-hellman-group-exchange-sha1",
    "remediation": "Edit the /etc/ssh/sshd_config file add/modify the KexAlgorithms line to contain a comma separated list of the site approved key exchange algorithms Example: KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,diffie-hellman- group14-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18- sha512,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie- hellman-group-exchange-sha256 Default Value: kexalgorithms curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2- nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange- sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman- group14-sha256 Additional Information: Kex algorithms have a higher preference the earlier they appear in the list Some organizations may have stricter requirements for approved Key exchange algorithms. Ensure that Key exchange algorithms used are in compliance with site policy. The only Key Exchange Algorithms currently FIPS 140-2 approved are: ecdh-sha2- nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange- sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman- group14-sha256 The Key Exchange algorithms supported by OpenSSH 7 are: curve25519-sha256 curve25519-sha256@libssh.org diffie-hellman-group1-sha1 diffie-hellman-group14-sha1 diffie-hellman-group-exchange-sha1 diffie-hellman-group-exchange-sha256 ecdh-sha2-nistp256 ecdh-sha2-nistp384 ecdh-sha2-nistp521",
    "function_names": [
      "compute_ssl_certificate_strong_key_exchange",
      "compute_ssl_certificate_secure_key_exchange_algorithms",
      "compute_ssl_certificate_weak_key_exchange_disabled",
      "compute_ssl_certificate_key_exchange_min_ecdh_256",
      "compute_ssl_certificate_key_exchange_min_dhe_2048",
      "compute_ssl_certificate_key_exchange_no_rsa_1024",
      "compute_ssl_certificate_key_exchange_no_anonymous_diffie_hellman",
      "compute_ssl_certificate_key_exchange_no_null_cipher",
      "compute_ssl_certificate_key_exchange_no_export_grade",
      "compute_ssl_certificate_key_exchange_no_weak_prime"
    ]
  },
  {
    "id": "5.1.16",
    "title": "Ensure SSH Idle Timeout Interval is configured",
    "assessment": "Automated",
    "description": "The two options ClientAliveInterval and ClientAliveCountMax control the timeout of ssh sessions. When the ClientAliveInterval variable is set, ssh sessions that have no activity for the specified length of time are terminated. When the ClientAliveCountMax variable is set, sshd will send client alive messages at every ClientAliveInterval interval. When the number of consecutive client alive messages are sent with no response from the client, the ssh session is terminated. For example, if the ClientAliveInterval is set to 15 seconds and the ClientAliveCountMax is set to 3, the client ssh session will be terminated after 45 seconds of idle time.",
    "rationale": "Having no timeout value associated with a connection could allow an unauthorized user access to another user's ssh session (e.g. user walks away from their computer and doesn't lock the screen). Setting a timeout value at least reduces the risk of this happening.. While the recommended setting is 300 seconds (5 minutes), set this timeout value based on site policy. The recommended setting for ClientAliveCountMax is 0. In this case, the client session will be terminated after 5 minutes of idle time and no keepalive messages will be sent.",
    "audit": "Run the following commands and verify ClientAliveInterval is between 1 and 300 and ClientAliveCountMax is 3 or less: # sshd -T | grep clientaliveinterval ClientAliveInterval 300 # sshd -T | grep clientalivecountmax ClientAliveCountMax 0",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameters according to site policy: ClientAliveInterval 300 ClientAliveCountMax 0 Default Value: ClientAliveInterval 420 ClientAliveCountMax 3",
    "function_names": [
      "compute_ssh_client_alive_interval_configured",
      "compute_ssh_client_alive_count_max_configured",
      "compute_ssh_idle_timeout_configured",
      "compute_ssh_session_termination_enabled",
      "compute_ssh_alive_messages_enabled"
    ]
  },
  {
    "id": "5.1.17",
    "title": "Ensure SSH LoginGraceTime is set to one minute or less",
    "assessment": "Automated",
    "description": "The LoginGraceTime parameter specifies the time allowed for successful authentication to the SSH server. The longer the Grace period is the more open unauthenticated connections can exist. Like other session controls in this session the Grace Period should be limited to appropriate organizational limits to ensure the service is available for needed access.",
    "rationale": "Setting the LoginGraceTime parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. It will also limit the number of concurrent unauthenticated connections While the recommended setting is 60 seconds (1 Minute), set the number based on site policy.",
    "audit": "Run the following command and verify that output LoginGraceTime is between 1 and 60: # sshd -T | grep logingracetime LoginGraceTime 60",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: LoginGraceTime 60 Default Value: LoginGraceTime 120",
    "function_names": [
      "compute_ssh_login_grace_time_one_minute_or_less",
      "compute_ssh_login_grace_time_within_limit",
      "ssh_config_login_grace_time_compliant",
      "ssh_login_grace_time_restricted",
      "compute_ssh_session_timeout_enforced"
    ]
  },
  {
    "id": "5.1.18",
    "title": "Ensure SSH warning banner is configured",
    "assessment": "Automated",
    "description": "The Banner parameter specifies a file whose contents must be sent to the remote user before authentication is permitted. By default, no banner is displayed.",
    "rationale": "Banners are used to warn connecting users of the particular site's policy regarding connection. Presenting a warning message prior to the normal user login may assist the prosecution of trespassers on the computer system.",
    "audit": "Run the following command and verify that output matches: # sshd -T | grep banner Banner /etc/issue.net",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: Banner /etc/issue.net",
    "function_names": [
      "compute_instance_ssh_banner_configured",
      "compute_ssh_banner_file_exists",
      "compute_ssh_banner_content_valid",
      "compute_instance_ssh_banner_enabled",
      "compute_ssh_banner_permissions_restricted"
    ]
  },
  {
    "id": "5.1.19",
    "title": "Ensure SSH PAM is enabled",
    "assessment": "Automated",
    "description": "UsePAM Enables the Pluggable Authentication Module interface. If set to “yes” this will enable PAM authentication using ChallengeResponseAuthentication and PasswordAuthentication in addition to PAM account and session module processing for all authentication types",
    "rationale": "When usePAM is set to yes, PAM runs through account and session types properly. This is important if you want to restrict access to services based off of IP, time or other factors of the account. Additionally, you can make sure users inherit certain environment variables on login or disallow access to the server Impact: If UsePAM is enabled, you will not be able to run sshd(8) as a non-root user.",
    "audit": "Run the following command and verify that output matches: # sshd -T | grep -i usepam usepam yes",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: UsePAM yes Default Value: usePAM yes",
    "function_names": [
      "compute_ssh_pam_enabled",
      "compute_ssh_use_pam_enabled",
      "compute_ssh_auth_pam_enabled",
      "compute_ssh_challenge_response_auth_enabled",
      "compute_ssh_password_auth_pam_enabled",
      "compute_ssh_session_module_processing_enabled",
      "compute_ssh_auth_modules_enabled"
    ]
  },
  {
    "id": "5.1.20",
    "title": "Ensure SSH AllowTcpForwarding is disabled",
    "assessment": "Automated",
    "description": "SSH port forwarding is a mechanism in SSH for tunneling application ports from the client to the server, or servers to clients. It can be used for adding encryption to legacy applications, going through firewalls, and some system administrators and IT professionals use it for opening backdoors into the internal network from their home machines",
    "rationale": "Leaving port forwarding enabled can expose the organization to security risks and back- doors. SSH connections are protected with strong encryption. This makes their contents invisible to most deployed network monitoring and traffic filtering solutions. This invisibility carries considerable risk potential if it is used for malicious purposes such as data exfiltration. Cybercriminals or malware could exploit SSH to hide their unauthorized communications, or to exfiltrate stolen data from the target network Impact: SSH tunnels are widely used in many corporate environments that employ mainframe systems as their application backends. In those environments the applications themselves may have very limited native support for security. By utilizing tunneling, compliance with SOX, HIPAA, PCI-DSS, and other standards can be achieved without having to modify the applications.",
    "audit": "Run the following command and verify that output matches: # sshd -T | grep -i allowtcpforwarding AllowTcpForwarding no",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: AllowTcpForwarding no Default Value: AllowTcpForwarding yes References: 1. https://www.ssh.com/ssh/tunneling/example",
    "function_names": [
      "compute_ssh_tcp_forwarding_disabled",
      "compute_instance_ssh_tcp_forwarding_disabled",
      "ssh_config_tcp_forwarding_disabled",
      "ssh_allow_tcp_forwarding_disabled",
      "compute_ssh_allow_tcp_forwarding_disabled"
    ]
  },
  {
    "id": "5.1.21",
    "title": "Ensure SSH MaxStartups is configured",
    "assessment": "Automated",
    "description": "The MaxStartups parameter specifies the maximum number of concurrent unauthenticated connections to the SSH daemon.",
    "rationale": "To protect a system from denial of service due to a large number of pending authentication connection attempts, use the rate limiting function of MaxStartups to protect availability of sshd logins and prevent overwhelming the daemon.",
    "audit": "Run the following command and verify that output MaxStartups is 10:30:60 or matches site policy: # sshd -T | grep -i maxstartups # maxstartups 10:30:60",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: maxstartups 10:30:60",
    "function_names": [
      "compute_ssh_maxstartups_configured",
      "compute_ssh_connection_limits_set",
      "compute_ssh_unauthenticated_connections_limited",
      "compute_ssh_daemon_maxstartups_enabled",
      "compute_ssh_concurrent_connection_threshold_set"
    ]
  },
  {
    "id": "5.1.22",
    "title": "Ensure SSH MaxSessions is set to 4 or less",
    "assessment": "Automated",
    "description": "The MaxSessions parameter specifies the maximum number of open sessions permitted from a given connection.",
    "rationale": "To protect a system from denial of service due to a large number of concurrent sessions, use the rate limiting function of MaxSessions to protect availability of sshd logins and prevent overwhelming the daemon.",
    "audit": "Run the following command and verify that output MaxSessions is 4 or less, or matches site policy: # sshd -T | grep -i maxsessions # maxsessions 4",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: MaxSessions 4",
    "function_names": [
      "compute_ssh_max_sessions_limited",
      "compute_ssh_max_sessions_configured",
      "compute_ssh_max_sessions_compliant",
      "compute_ssh_max_sessions_restricted",
      "compute_ssh_max_sessions_enforced"
    ]
  },
  {
    "id": "5.2.1",
    "title": "Ensure password creation requirements are configured",
    "assessment": "Automated",
    "description": "The pam_passwdqc.so module checks the strength of passwords. It performs checks such as making sure a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more based on the following options set in the /etc/security/passwdqc.conf: • min=disabled,disabled,disabled,disabled,14 - The password must be 14 characters or more and consists of four character classes. • max=40 - The maximum allowed password length is 40. • passphrase=3 - The number of words required for a passphrase is at least 3. • match=4 - The length of common substring required to conclude that a password is at least partially based on information found in a character string is 4. • similar=deny - The password that is similar to the old one is going to be denied. • random=47 - The size of randomly-generated passphrases in bits is 47. • enforce=everyone - Warn everyone for weak passwords. • retry=3 - Let the user provide a password 3 times if the user fails to provide a sufficiently strong password and enter it twice the first time. For more details, refer to pam_passwdqc module documentation. The settings shown above are one possible policy. Alter these values to conform to your own organization's password policies.",
    "rationale": "Strong passwords protect systems from being hacked through brute force methods.",
    "audit": "Verify password creation requirements conform to organization policy in /etc/security/passwdqc.conf with the following command. # cat /etc/security/passwdqc.conf min=disabled,disabled,disabled,disabled,14 max=40 passphrase=3 match=4 similar=deny random=47 enforce=everyone retry=3 Run the following command and verify that the output is similar to: grep  pam_passwdqc.so /etc/pam.d/system-auth password required pam_passwdqc.so config=/etc/security/passwdqc.conf",
    "remediation": "Edit the file /etc/security/passwdqc.conf and add or modify the following lines for password length and complexity to conform to site policy: min=disabled,disabled,disabled,disabled,14 max=40 passphrase=3 match=4 similar=deny random=47 enforce=everyone retry=3 Edit the /etc/pam.d/system-auth files to include the appropriate options for pam_passwdqc.so and to conform to site policy: password required pam_passwdqc.so config=/etc/security/passwdqc.conf Additional Information: Consult your documentation for the appropriate PAM file and module. Additional module options may be set, recommendation requirements only cover including try_first_pass and minlen set to 14 or more. Settings in /etc/security/pwquality.conf must use spaces around the = symbol.",
    "function_names": [
      "pam_password_min_length_14",
      "pam_password_max_length_40",
      "pam_password_passphrase_words_3",
      "pam_password_substring_match_4",
      "pam_password_similar_deny",
      "pam_password_random_bits_47",
      "pam_password_enforce_everyone",
      "pam_password_retry_3",
      "pam_password_strength_requirements_enabled",
      "pam_password_policy_configured"
    ]
  },
  {
    "id": "5.2.2",
    "title": "Ensure password reuse is limited",
    "assessment": "Manual",
    "description": "The /etc/security/opasswd file stores the users' old passwords and can be checked to ensure that users are not recycling recent passwords.",
    "rationale": "Forcing users not to reuse their past 5 passwords make it less likely that an attacker will be able to guess the password. Note that these change only apply to accounts configured on the local system.",
    "audit": "Verify remembered password history is 5 or more. This setting is commonly configured with the pam_unix.so or pam_pwhistory.so remember options found in /etc/pam.d/common-password or /etc/pam.d/system-auth . Examples: password required pam_pwhistory.so remember=5 password required pam_unix.so remember=5",
    "remediation": "Set remembered password history to conform to site policy. Many distributions provide tools for updating PAM configuration, consult your documentation for details. If no tooling is provided edit the appropriate /etc/pam.d/ configuration file and add or modify the pam_pwhistory.so or pam_unix.so lines to include the remember option: password required pam_pwhistory.so remember=5 password required pam_unix.so remember=5 Additional Information: Consult your documentation for the appropriate PAM file and module. Additional module options may be set, recommendation only covers those listed here.",
    "function_names": [
      "linux_password_reuse_limited",
      "linux_opasswd_file_exists",
      "linux_password_history_enabled",
      "linux_password_reuse_prevention_enabled",
      "linux_opasswd_file_configured",
      "linux_password_reuse_restriction_active",
      "linux_opasswd_file_protected",
      "linux_password_reuse_policy_enforced"
    ]
  },
  {
    "id": "5.2.3",
    "title": "Ensure password hashing algorithm is SHA-512",
    "assessment": "Manual",
    "description": "The commands below change password encryption from md5 to sha512 (a much stronger hashing algorithm). All existing accounts will need to perform a password change to upgrade the stored hashes to the new algorithm.",
    "rationale": "The SHA-512 algorithm provides much stronger hashing than MD5, thus providing additional protection to the system by increasing the level of effort for an attacker to successfully determine passwords. Note that these changes only apply to accounts configured on the local system.",
    "audit": "Verify password hashing algorithm is sha512. This setting is commonly configured with the pam_unix.so sha512 option found in /etc/pam.d/common-password or /etc/pam.d/system-auth and /etc/pam.d/password-auth . Example: password required pam_unix.so sha512",
    "remediation": "Set password hashing algorithm to sha512. Many distributions provide tools for updating PAM configuration, consult your documentation for details. If no tooling is provided edit the appropriate /etc/pam.d/ configuration file and add or modify the pam_unix.so lines to include the sha512 option: password required pam_unix.so sha512 Additional Information: Consult your documentation for the appropriate PAM file and module. Additional module options may be set, recommendation only covers those listed here. If it is determined that the password algorithm being used is not SHA-512, once it is changed, it is recommended that all user ID's be immediately expired and forced to change their passwords on next login. To accomplish that, the following commands can be used. Any system accounts that need to be expired should be carefully done separately by the system administrator to prevent any potential problems. # cat /etc/passwd | awk -F: '( $3 >= 500 && $1 != \"nfsnobody\" ) { print $1 }' | xargs -n 1 chage -d 0 This command assumes a system UID split at 500. Some distributions split at UID 1000 instead, consult your documentation and/or the UID_MIN setting in /etc/login.defs to determine which is appropriate for you.",
    "function_names": [
      "iam_password_hashing_sha512",
      "iam_user_password_sha512_enabled",
      "iam_account_password_sha512_required",
      "iam_authentication_sha512_enforced",
      "iam_password_policy_sha512_compliant"
    ]
  },
  {
    "id": "5.3.1.1",
    "title": "Ensure password expiration is 365 days or less",
    "assessment": "Automated",
    "description": "The PASS_MAX_DAYS parameter in /etc/login.defs allows an administrator to force passwords to expire once they reach a defined age. It is recommended that the PASS_MAX_DAYS parameter be set to less than or equal to 365 days.",
    "rationale": "The window of opportunity for an attacker to leverage compromised credentials or successfully compromise credentials via an online brute force attack is limited by the age of the password. Therefore, reducing the maximum age of a password also reduces an attacker's window of opportunity.",
    "audit": "Run the following command and verify PASS_MAX_DAYS conforms to site policy (no more than 365 days): # grep PASS_MAX_DAYS /etc/login.defs PASS_MAX_DAYS 365 Run the following command and Review list of users and PASS_MAX_DAYS to verify that all users' PASS_MAX_DAYS conforms to site policy (no more than 365 days): # grep -E '^[^:]+:[^!*]' /etc/shadow | cut -d: -f1,5 <user>:<PASS_MAX_DAYS>",
    "remediation": "Set the PASS_MAX_DAYS parameter to conform to site policy in /etc/login.defs : PASS_MAX_DAYS 365 Modify user parameters for all users with a password set to match: # chage --maxdays 365 <user> Additional Information: You can also check this setting in /etc/shadow directly. The 5th field should be 365 or less for all users with a password. Note: A value of -1 will disable password expiration. Additionally the password expiration must be greater than the minimum days between password changes or users will be unable to change their password.",
    "function_names": [
      "linux_login_defs_password_expiration_365d_or_less",
      "linux_password_policy_max_days_365_or_less",
      "linux_auth_password_expiry_within_365d",
      "linux_security_password_max_age_365d",
      "linux_account_password_expiration_365d_limit"
    ]
  },
  {
    "id": "5.3.1.2",
    "title": "Ensure minimum days between password changes is 7 or more",
    "assessment": "Automated",
    "description": "The PASS_MIN_DAYS parameter in /etc/login.defs allows an administrator to prevent users from changing their password until a minimum number of days have passed since the last time the user changed their password. It is recommended that PASS_MIN_DAYS parameter be set to 7 or more days.",
    "rationale": "By restricting the frequency of password changes, an administrator can prevent users from repeatedly changing their password in an attempt to circumvent password reuse controls.",
    "audit": "Run the following command and verify PASS_MIN_DAYS conforms to site policy (no less than 7 days): # grep PASS_MIN_DAYS /etc/login.defs PASS_MIN_DAYS 7 Run the following command and Review list of users and PAS_MIN_DAYS to Verify that all users' PAS_MIN_DAYS conform s to site policy (no less than 7 days): # grep -E ^[^:]+:[^\\!*] /etc/shadow | cut -d: -f1,4 <user>:<PASS_MIN_DAYS>",
    "remediation": "Set the PASS_MIN_DAYS parameter to 7 in /etc/login.defs : PASS_MIN_DAYS 7 Modify user parameters for all users with a password set to match: # chage --mindays 7 <user> Additional Information: You can also check this setting in /etc/shadow directly. The 4th field should be 7 or more for all users with a password.",
    "function_names": [
      "linux_password_min_days_7_or_more",
      "login_defs_password_min_days_configured",
      "password_policy_min_days_compliance",
      "linux_auth_password_change_interval",
      "system_auth_password_min_days_enforced"
    ]
  },
  {
    "id": "5.3.1.3",
    "title": "Ensure password expiration warning days is 7 or more",
    "assessment": "Automated",
    "description": "The PASS_WARN_AGE parameter in /etc/login.defs allows an administrator to notify users that their password will expire in a defined number of days. It is recommended that the PASS_WARN_AGE parameter be set to 7 or more days.",
    "rationale": "Providing an advance warning that a password will be expiring gives users time to think of a secure password. Users caught unaware may choose a simple password or write it down where it may be discovered.",
    "audit": "Run the following command and verify PASS_WARN_AGE conforms to site policy (No less than 7 days): # grep PASS_WARN_AGE /etc/login.defs PASS_WARN_AGE 7 Verify all users with a password have their number of days of warning before password expires set to 7 or more: Run the following command and Review list of users and PASS_WARN_AGE to verify that all users' PASS_WARN_AGE conforms to site policy (No less than 7 days): # grep -E ^[^:]+:[^\\!*] /etc/shadow | cut -d: -f1,6 <user>:<PASS_WARN_AGE>",
    "remediation": "Set the PASS_WARN_AGE parameter to 7 in /etc/login.defs : PASS_WARN_AGE 7 Modify user parameters for all users with a password set to match: # chage --warndays 7 <user> Additional Information: You can also check this setting in /etc/shadow directly. The 6th field should be 7 or more for all users with a password.",
    "function_names": [
      "linux_password_warn_age_min_7d",
      "login_defs_password_expiration_warning_days_min_7",
      "system_auth_password_warn_age_sufficient",
      "linux_password_policy_warn_age_compliance",
      "auth_config_password_expiration_warning_days_set"
    ]
  },
  {
    "id": "5.3.1.4",
    "title": "Ensure inactive password lock is 30 days or less",
    "assessment": "Automated",
    "description": "User accounts that have been inactive for over a given period of time can be automatically disabled. It is recommended that accounts that are inactive for 30 days after password expiration be disabled.",
    "rationale": "Inactive accounts pose a threat to system security since the users are not logging in to notice failed login attempts or other anomalies.",
    "audit": "Run the following command and verify INACTIVE conforms to sire policy (no more than 30 days): # useradd -D | grep INACTIVE INACTIVE=30 Verify all users with a password have Password inactive no more than 30 days after password expires: Run the following command and Review list of users and INACTIVE to verify that all users' INACTIVE conforms to site policy (no more than 30 days): # grep -E ^[^:]+:[^\\!*] /etc/shadow | cut -d: -f1,7 <user>:<INACTIVE>",
    "remediation": "Run the following command to set the default password inactivity period to 30 days: # useradd -D -f 30 Modify user parameters for all users with a password set to match: # chage --inactive 30 <user> Additional Information: You can also check this setting in /etc/shadow directly. The 7th field should be 30 or less for all users with a password. Note: A value of -1 would disable this setting.",
    "function_names": [
      "iam_user_inactive_password_lock_30d",
      "iam_user_password_lock_enabled",
      "iam_user_password_expiry_lock_30d",
      "iam_user_inactive_account_lock_30d",
      "iam_user_password_policy_lock_30d"
    ]
  },
  {
    "id": "5.3.1.5",
    "title": "Ensure all users last password change date is in the past",
    "assessment": "Automated",
    "description": "All users should have a password change date in the past.",
    "rationale": "If a users recorded password change date is in the future then they could bypass any set password expiration.",
    "audit": "Run the following command and verify nothing is returned # for usr in $(cut -d: -f1 /etc/shadow); do [[ $(chage --list $usr | grep '^Last password change' | cut -d: -f2) > $(date) ]] && echo \"$usr :$(chage -- list $usr | grep '^Last password change' | cut -d: -f2)\"; done",
    "remediation": "Investigate any users with a password change date in the future and correct them. Locking the account, expiring the password, or resetting the password manually may be appropriate.",
    "function_names": [
      "iam_user_password_change_date_valid",
      "iam_user_password_change_date_recent",
      "iam_user_password_change_date_not_future",
      "iam_user_password_change_date_compliant",
      "iam_user_password_change_date_past_required"
    ]
  },
  {
    "id": "5.3.2",
    "title": "Ensure system accounts are secured",
    "assessment": "Automated",
    "description": "There are a number of accounts provided with most distributions that are used to manage applications and are not intended to provide an interactive shell.",
    "rationale": "It is important to make sure that accounts that are not being used by regular users are prevented from being used to provide an interactive shell. By default, most distributions set the password field for these accounts to an invalid string, but it is also recommended that the shell field in the password file be set to the nologin shell. This prevents the account from potentially being used to run any commands.",
    "audit": "Run the following commands and verify no results are returned: awk -F: '($1!=\"root\" && $1!=\"sync\" && $1!=\"shutdown\" && $1!=\"halt\" && $1!~/^\\+/ && $3>='\"$(awk '/^\\s*SYS_UID_MIN/{print $2}' /etc/login.defs)\"' && $3<='\"$(awk '/^\\s*SYS_UID_MAX/{print $2}' /etc/login.defs)\"' && $7!=\"'\"$(which nologin)\"'\" && $7!=\"/bin/false\") {print}' /etc/passwd awk -F: '($1!=\"root\" && $1!~/^\\+/ && $3>='\"$(awk '/^\\s*SYS_UID_MIN/{print $2}' /etc/login.defs)\"' && $3<='\"$(awk '/^\\s*SYS_UID_MAX/{print $2}' /etc/login.defs)\"') {print $1}' /etc/passwd | xargs -I '{}' passwd -S '{}' | awk '($2!=\"L\" && $2!=\"LK\") {print $1}'",
    "remediation": "Run the commands appropriate for your distribution: Set the shell for any accounts returned by the audit to nologin: # usermod -s $(which nologin) <user> Lock any non root accounts returned by the audit: # usermod -L <user> The following command will set all system accounts to a non login shell: awk -F: '($1!=\"root\" && $1!=\"sync\" && $1!=\"shutdown\" && $1!=\"halt\" && $1!~/^\\+/ && $3>='\"$(awk '/^\\s*SYS_UID_MIN/{print $2}' /etc/login.defs)\"' && $3<='\"$(awk '/^\\s*SYS_UID_MAX/{print $2}' /etc/login.defs)\"' && $7!=\"'\"$(which nologin)\"'\" && $7!=\"/bin/false\") {print $1}' /etc/passwd | while read user; do usermod -s $(which nologin) $user; done The following command will automatically lock not root system accounts: awk -F: '($1!=\"root\" && $1!~/^\\+/ && $3>='\"$(awk '/^\\s*SYS_UID_MIN/{print $2}' /etc/login.defs)\"' && $3<='\"$(awk '/^\\s*SYS_UID_MAX/{print $2}' /etc/login.defs)\"') {print $1}' /etc/passwd | xargs -I '{}' passwd -S '{}' | awk '($2!=\"L\" && $2!=\"LK\") {print $1}' | while read user; do usermod -L $user; done Additional Information: The root, sync, shutdown, and halt users are exempted from requiring a non-login shell.",
    "function_names": [
      "system_accounts_no_interactive_shell",
      "system_accounts_no_login_enabled",
      "system_accounts_no_password_set",
      "system_accounts_no_home_directory",
      "system_accounts_no_ssh_keys",
      "system_accounts_locked",
      "system_accounts_no_sudo_privileges",
      "system_accounts_no_shell_access",
      "system_accounts_no_user_groups",
      "system_accounts_no_custom_scripts"
    ]
  },
  {
    "id": "5.3.3",
    "title": "Ensure default group for the root account is GID 0",
    "assessment": "Automated",
    "description": "The usermod command can be used to specify which group the root user belongs to. This affects permissions of files that are created by the root user.",
    "rationale": "Using GID 0 for the root account helps prevent root -owned files from accidentally becoming accessible to non-privileged users.",
    "audit": "Run the following command and verify the result is 0 : # grep \"^root:\" /etc/passwd | cut -f4 -d: 0",
    "remediation": "Run the following command to set the root user default group to GID 0 : # usermod -g 0 root",
    "function_names": [
      "linux_root_group_default_gid_0",
      "linux_root_group_gid_0",
      "linux_root_account_group_gid_0",
      "linux_root_user_group_gid_0",
      "linux_root_group_gid_0_default"
    ]
  },
  {
    "id": "5.3.4",
    "title": "Ensure default user umask is 027 or more restrictive",
    "assessment": "Automated",
    "description": "The default umask determines the permissions of files created by users. The user creating the file has the discretion of making their files and directories readable by others via the chmod command. Users who wish to allow their files and directories to be readable by others by default may choose a different default umask by inserting the umask command into the standard shell configuration files ( .profile , .bashrc , etc.) in their home directories.",
    "rationale": "Setting a very secure default value for umask ensures that users make a conscious choice about their file permissions. A default umask setting of 077 causes files and directories created by users to not be readable by any other user on the system. A umask of 027 would make files and directories readable by users in the same Unix group, while a umask of 022 would make files readable by every user on the system.",
    "audit": "Run the following commands and verify all umask lines returned are 027 or more restrictive. # grep \"umask\" /etc/bash/bashrc umask 027 # grep \"umask\" /etc/profile /etc/profile.d/*.sh umask 027",
    "remediation": "Edit the /etc/bash/bashrc, /etc/profile and /etc/profile.d/*.sh files (and the appropriate files for any other shell supported on your system) and add or edit any umask parameters as follows: umask 027 Additional Information: The audit and remediation in this recommendation apply to bash and shell. If other shells are supported on the system, it is recommended that their configuration files also are checked. Other methods of setting a default user umask exist however the shell configuration files are the last run and will override other settings if they exist therefor our recommendation is to configure in the shell configuration files. If other methods are in use in your environment they should be audited and the shell configs should be verified to not override.",
    "function_names": [
      "compute_user_umask_restrictive",
      "compute_user_umask_027_or_stricter",
      "compute_user_default_umask_secure",
      "compute_user_umask_min_027",
      "compute_user_file_permissions_restricted"
    ]
  },
  {
    "id": "5.3.5",
    "title": "Ensure default user shell timeout is 900 seconds or less",
    "assessment": "Automated",
    "description": "The default TMOUT determines the shell timeout for users. The TMOUT value is measured in seconds.",
    "rationale": "Having no timeout value associated with a shell could allow an unauthorized user access to another user's shell session (e.g. user walks away from their computer and doesn't lock the screen). Setting a timeout value at least reduces the risk of this happening.",
    "audit": "Run the following commands and verify all TMOUT lines returned are 900 or less and at least one exists in each file. # grep \"^TMOUT\" /etc/bash/bashrc TMOUT=900 # grep \"^TMOUT\" /etc/profile TMOUT=900",
    "remediation": "Edit the /etc/bash/bashrc and /etc/profile files (and the appropriate files for any other shell supported on your system) and add or edit any umask parameters as follows: TMOUT=900 Additional Information: The audit and remediation in this recommendation apply to bash and shell. If other shells are supported on the system, it is recommended that their configuration files also are checked. Other methods of setting a timeout exist for other shells not covered here. Ensure that the timeout conforms to your local policy.",
    "function_names": [
      "linux_user_shell_timeout_less_than_900s",
      "linux_session_shell_timeout_enforced",
      "linux_default_shell_timeout_compliant",
      "linux_user_tmout_value_valid",
      "linux_shell_timeout_900s_or_less"
    ]
  },
  {
    "id": "5.4",
    "title": "Ensure root login is restricted to system console",
    "assessment": "Manual",
    "description": "The file /etc/securetty contains a list of valid terminals that may be logged in directly as root.",
    "rationale": "Since the system console has special properties to handle emergency situations, it is important to ensure that the console is in a physically secure location and that unauthorized consoles have not been defined.",
    "audit": "# cat /etc/securetty",
    "remediation": "Remove entries for any consoles that are not in a physically secure location.",
    "function_names": [
      "compute_instance_root_console_restricted",
      "compute_instance_securetty_configured",
      "compute_instance_direct_root_login_disabled",
      "compute_instance_console_only_root_access",
      "compute_instance_securetty_root_restricted"
    ]
  },
  {
    "id": "5.5",
    "title": "Ensure access to the su command is restricted",
    "assessment": "Automated",
    "description": "The su command allows a user to run a command or shell as another user. The program has been superseded by sudo , which allows for more granular control over privileged access. Normally, the su command can be executed by any user. By uncommenting the pam_wheel.so statement in /etc/pam.d/su , the su command will only allow users in the wheel group to execute su .",
    "rationale": "Restricting the use of su , and using sudo in its place, provides system administrators better control of the escalation of user privileges to execute privileged commands. The sudo utility also provides a better logging and audit mechanism, as it can log each command executed via sudo , whereas su can only record that a user executed the su program.",
    "audit": "Run the following command and verify output includes matching line: # grep pam_wheel.so /etc/pam.d/su auth required pam_wheel.so use_uid Run the following command and verify users in wheel group match site policy: # grep wheel /etc/group wheel:!:10:root,<user list>",
    "remediation": "Add the following line to the /etc/pam.d/su file: auth required pam_wheel.so use_uid Create a comma separated list of users in the wheel statement in the /etc/group file: wheel:!:10:root,<user list> /etc is stateless on Container-Optimized OS. Therefore, /etc cannot be used to make these changes persistent across reboots. The steps mentioned above needs to be performed after every boot.",
    "function_names": [
      "linux_su_access_restricted",
      "linux_su_pam_wheel_enabled",
      "linux_su_wheel_group_required",
      "linux_su_privileged_access_controlled",
      "linux_su_sudo_replacement_enforced"
    ]
  },
  {
    "id": "6.1.1",
    "title": "Ensure permissions on /etc/passwd are configured",
    "assessment": "Automated",
    "description": "The /etc/passwd file contains user account information that is used by many system utilities and therefore must be readable for these utilities to operate.",
    "rationale": "It is critical to ensure that the /etc/passwd file is protected from unauthorized write access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.",
    "audit": "Run the following command and verify Uid and Gid are both 0/root and Access is 644 : # stat /etc/passwd Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)",
    "remediation": "Run the following command to set permissions on /etc/passwd : # chown root:root /etc/passwd # chmod 644 /etc/passwd",
    "function_names": [
      "linux_file_passwd_permissions_configured",
      "linux_file_passwd_readable",
      "linux_file_passwd_secure_permissions",
      "linux_file_passwd_owner_root",
      "linux_file_passwd_group_root",
      "linux_file_passwd_mode_644",
      "linux_file_passwd_no_world_writable",
      "linux_file_passwd_restricted_access"
    ]
  },
  {
    "id": "6.1.2",
    "title": "Ensure permissions on /etc/shadow are configured",
    "assessment": "Automated",
    "description": "The /etc/shadow file is used to store the information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information.",
    "rationale": "If attackers can gain read access to the /etc/shadow file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the /etc/shadow file (such as expiration) could also be useful to subvert the user accounts.",
    "audit": "Run the following command and verify verify Uid is 0/root, Gid is 0/root or <gid>/shadow, and Access is 640 or more restrictive: # stat /etc/shadow Access: (0640/-rw-r-----)  Uid: (    0/    root)   Gid: (    0/    root)",
    "remediation": "Run the one of the following chown commands as appropriate and the chmod to set permissions on /etc/shadow : # chown root:root /etc/shadow # chown root:shadow /etc/shadow # chmod o-rwx,g-wx /etc/shadow",
    "function_names": [
      "linux_file_shadow_permissions_configured",
      "linux_file_shadow_ownership_configured",
      "linux_file_shadow_group_configured",
      "linux_file_shadow_read_restricted",
      "linux_file_shadow_write_restricted",
      "linux_file_shadow_execute_restricted",
      "linux_file_shadow_mode_640",
      "linux_file_shadow_root_owned",
      "linux_file_shadow_shadow_group_owned"
    ]
  },
  {
    "id": "6.1.3",
    "title": "Ensure permissions on /etc/group are configured",
    "assessment": "Automated",
    "description": "The /etc/group file contains a list of all the valid groups defined in the system. The command below allows read/write access for root and read access for everyone else.",
    "rationale": "The /etc/group file needs to be protected from unauthorized changes by non- privileged users, but needs to be readable as this information is used with many non- privileged programs.",
    "audit": "Run the following command and verify Uid and Gid are both 0/root and Access is 644 : # stat /etc/group Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)",
    "remediation": "Run the following command to set permissions on /etc/group : # chown root:root /etc/group # chmod 644 /etc/group",
    "function_names": [
      "compute_file_group_permissions_configured",
      "compute_file_group_readonly_non_root",
      "compute_file_group_owner_root",
      "compute_file_group_mode_644",
      "compute_file_group_no_world_writable",
      "compute_file_group_no_unauthorized_access",
      "compute_file_group_secure_permissions",
      "compute_file_group_restrictive_access_control"
    ]
  },
  {
    "id": "6.1.4",
    "title": "Ensure permissions on /etc/gshadow are configured",
    "assessment": "Automated",
    "description": "The /etc/gshadow file is used to store the information about groups that is critical to the security of those accounts, such as the hashed password and other security information.",
    "rationale": "If attackers can gain read access to the /etc/gshadow file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the /etc/gshadow file (such as group administrators) could also be useful to subvert the group.",
    "audit": "Run the following command and verify Uid is 0/root, Gid is 0/root or <gid>/shadow, and Access is 640 or more restrictive: # stat /etc/gshadow Access: (0640/-rw-r-----)  Uid: (    0/    root)   Gid: (    0/    root)",
    "remediation": "Run the one of the following chown commands as appropriate and the chmod to set permissions on /etc/gshadow : # chown root:root /etc/gshadow # chown root:shadow /etc/gshadow # chmod o-rwx,g-rw /etc/gshadow",
    "function_names": [
      "linux_file_gshadow_permissions_configured",
      "linux_file_gshadow_owner_root",
      "linux_file_gshadow_group_shadow",
      "linux_file_gshadow_mode_000",
      "linux_file_gshadow_no_world_writable",
      "linux_file_gshadow_no_world_readable",
      "linux_file_gshadow_no_group_writable",
      "linux_file_gshadow_no_other_permissions"
    ]
  },
  {
    "id": "6.1.5",
    "title": "Ensure permissions on /etc/passwd- are configured",
    "assessment": "Automated",
    "description": "The /etc/passwd- file contains backup user account information.",
    "rationale": "It is critical to ensure that the /etc/passwd- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.",
    "audit": "Run the following command and verify Uid and Gid are both 0/root and Access is 644 or more restrictive: # stat /etc/passwd- Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)",
    "remediation": "Run the following command to set permissions on /etc/passwd- : # chown root:root /etc/passwd- # chmod u-x,go-wx /etc/passwd-",
    "function_names": [
      "linux_file_passwd_backup_permissions_configured",
      "linux_file_passwd_backup_owner_root",
      "linux_file_passwd_backup_group_root",
      "linux_file_passwd_backup_mode_600",
      "linux_file_passwd_backup_not_world_readable",
      "linux_file_passwd_backup_not_world_writable",
      "linux_file_passwd_backup_not_group_writable"
    ]
  },
  {
    "id": "6.1.6",
    "title": "Ensure permissions on /etc/shadow- are configured",
    "assessment": "Automated",
    "description": "The /etc/shadow- file is used to store backup information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information.",
    "rationale": "It is critical to ensure that the /etc/shadow- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.",
    "audit": "Run the following command and verify verify Uid is 0/root, Gid is 0/root or <gid>/shadow, and Access is 640 or more restrictive: # stat /etc/shadow- Access: (0640/-rw-r-----)  Uid: (    0/    root)   Gid: (    0/    root)",
    "remediation": "Run the one of the following chown commands as appropriate and the chmod to set permissions on /etc/shadow- : # chown root:root /etc/shadow- # chown root:shadow /etc/shadow- # chmod o-rwx,g-rw /etc/shadow-",
    "function_names": [
      "linux_file_shadow_backup_permissions_configured",
      "linux_file_shadow_backup_owner_root",
      "linux_file_shadow_backup_group_root",
      "linux_file_shadow_backup_mode_0000",
      "linux_file_shadow_backup_no_world_readable",
      "linux_file_shadow_backup_no_world_writable",
      "linux_file_shadow_backup_no_group_writable",
      "linux_file_shadow_backup_no_other_writable"
    ]
  },
  {
    "id": "6.1.7",
    "title": "Ensure permissions on /etc/group- are configured",
    "assessment": "Automated",
    "description": "The /etc/group- file contains a backup list of all the valid groups defined in the system.",
    "rationale": "It is critical to ensure that the /etc/group- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.",
    "audit": "Run the following command and verify Uid and Gid are both 0/root and Access is 644 or more restrictive: # stat /etc/group- Access: (0644/-rw-------)  Uid: (    0/    root)   Gid: (    0/    root)",
    "remediation": "Run the following command to set permissions on /etc/group- : # chown root:root /etc/group- # chmod u-x,go-wx /etc/group-",
    "function_names": [
      "linux_file_group_backup_permissions_configured",
      "linux_file_group_backup_ownership_configured",
      "linux_file_group_backup_mode_restricted",
      "linux_file_group_backup_access_controlled",
      "linux_file_group_backup_integrity_verified"
    ]
  },
  {
    "id": "6.1.8",
    "title": "Ensure permissions on /etc/gshadow- are configured",
    "assessment": "Automated",
    "description": "The /etc/gshadow- file is used to store backup information about groups that is critical to the security of those accounts, such as the hashed password and other security information.",
    "rationale": "It is critical to ensure that the /etc/gshadow- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.",
    "audit": "Run the following command and verify verify Uid is 0/root, Gid is 0/root or <gid>/shadow, and Access is 640 or more restrictive: # stat /etc/gshadow- Access: (0640/-rw-r-----)  Uid: (    0/    root)   Gid: (    0/    root)",
    "remediation": "Run the one of the following chown commands as appropriate and the chmod to set permissions on /etc/gshadow- : # chown root:root /etc/gshadow- # chown root:shadow /etc/gshadow- # chmod o-rwx,g-rw /etc/gshadow-",
    "function_names": [
      "linux_file_gshadow_backup_permissions_configured",
      "linux_file_gshadow_backup_secure_ownership",
      "linux_file_gshadow_backup_restrict_access",
      "linux_file_gshadow_backup_no_world_readable",
      "linux_file_gshadow_backup_no_world_writable",
      "linux_file_gshadow_backup_no_world_executable",
      "linux_file_gshadow_backup_group_ownership_correct",
      "linux_file_gshadow_backup_user_ownership_correct",
      "linux_file_gshadow_backup_mode_640_or_stricter",
      "linux_file_gshadow_backup_no_unauthorized_access"
    ]
  },
  {
    "id": "6.2.1",
    "title": "Ensure password fields are not empty",
    "assessment": "Automated",
    "description": "An account with an empty password field means that anybody may log in as that user without providing a password.",
    "rationale": "All accounts must have passwords or be locked to prevent the account from being used by an unauthorized user.",
    "audit": "Run the following command and verify that no output is returned: # awk -F: '($2 == \"\" ) { print $1 \" does not have a password \"}' /etc/shadow",
    "remediation": "If any accounts in the /etc/shadow file do not have a password, run the following command to lock the account until it can be determined why it does not have a password: # passwd -l <username> Also, check to see if the account is logged in and investigate what it is being used for to determine if it needs to be forced off.",
    "function_names": [
      "iam_user_password_not_empty",
      "iam_user_password_configured",
      "iam_user_password_required",
      "iam_user_password_non_empty",
      "iam_user_password_set"
    ]
  },
  {
    "id": "6.2.2",
    "title": "Ensure no legacy \"+\" entries exist in /etc/passwd",
    "assessment": "Automated",
    "description": "The character + in various files used to be markers for systems to insert data from NIS maps at a certain point in a system configuration file. These entries are no longer required on most systems, but may exist in files that have been imported from other platforms.",
    "rationale": "These entries may provide an avenue for attackers to gain privileged access on the system.",
    "audit": "Run the following command and verify that no output is returned: # grep '^\\+:' /etc/passwd",
    "remediation": "Remove any legacy '+' entries from /etc/passwd if they exist.",
    "function_names": [
      "linux_passwd_no_legacy_plus_entries",
      "linux_auth_no_nis_map_entries",
      "linux_passwd_no_legacy_nis_entries",
      "linux_system_no_plus_entries_passwd",
      "linux_auth_no_legacy_plus_markers"
    ]
  },
  {
    "id": "6.2.3",
    "title": "Ensure no legacy \"+\" entries exist in /etc/shadow",
    "assessment": "Automated",
    "description": "The character + in various files used to be markers for systems to insert data from NIS maps at a certain point in a system configuration file. These entries are no longer required on most systems, but may exist in files that have been imported from other platforms.",
    "rationale": "These entries may provide an avenue for attackers to gain privileged access on the system.",
    "audit": "Run the following command and verify that no output is returned: # grep '^\\+:' /etc/shadow",
    "remediation": "Remove any legacy '+' entries from /etc/shadow if they exist.",
    "function_names": [
      "linux_shadow_no_legacy_plus_entries",
      "linux_shadow_no_nis_entries",
      "linux_shadow_no_legacy_markers",
      "linux_shadow_no_legacy_character_entries",
      "linux_shadow_no_legacy_nis_markers"
    ]
  },
  {
    "id": "6.2.4",
    "title": "Ensure no legacy \"+\" entries exist in /etc/group",
    "assessment": "Automated",
    "description": "The character + in various files used to be markers for systems to insert data from NIS maps at a certain point in a system configuration file. These entries are no longer required on most systems, but may exist in files that have been imported from other platforms.",
    "rationale": "These entries may provide an avenue for attackers to gain privileged access on the system.",
    "audit": "Run the following command and verify that no output is returned: # grep '^\\+:' /etc/group",
    "remediation": "Remove any legacy '+' entries from /etc/group if they exist.",
    "function_names": [
      "system_group_no_legacy_plus_entries",
      "system_group_no_nis_map_entries",
      "system_group_no_insecure_entries",
      "system_group_no_legacy_character_entries",
      "system_group_no_legacy_nis_entries"
    ]
  },
  {
    "id": "6.2.5",
    "title": "Ensure root is the only UID 0 account",
    "assessment": "Automated",
    "description": "Any account with UID 0 has superuser privileges on the system.",
    "rationale": "This access must be limited to only the default root account and only from the system console. Administrative access must be through an unprivileged account using an approved mechanism as noted in Item 5.6 Ensure access to the su command is restricted.",
    "audit": "Run the following command and verify that only \"root\" is returned: # awk -F: '($3 == 0) { print $1 }' /etc/passwd root",
    "remediation": "Remove any users other than root with UID 0 or assign them a new UID if appropriate.",
    "function_names": [
      "iam_user_root_only_uid_0",
      "iam_account_root_only_uid_0",
      "compute_instance_root_only_uid_0",
      "linux_system_root_only_uid_0",
      "os_user_root_only_uid_0"
    ]
  },
  {
    "id": "6.2.6",
    "title": "Ensure root PATH Integrity",
    "assessment": "Automated",
    "description": "The root user can execute any command on the system and could be fooled into executing programs unintentionally if the PATH is not set correctly.",
    "rationale": "Including the current working directory (.) or other writable directory in root 's executable path makes it likely that an attacker can gain superuser access by forcing an administrator operating as root to execute a Trojan horse program.",
    "audit": "Run the following script and verify no results are returned: #!/bin/bash PATH=\"$(sudo -Hiu root env | grep '^PATH' | cut -d= -f2)\" echo \"$PATH\" | grep -q \"::\" && echo \"Empty directory in PATH (::)\" echo \"$PATH\" | grep -q \":$\" && echo \"Trailing : in PATH\" for dir in $(echo \"$PATH\" | tr \":\" \" \"); do if [ -d \"$dir\" ]; then ls -ldH \"$dir\" | awk 'substr($1,6,1) != \"-\" {print $9, \"is group writable\"} substr($1,9,1) != \"-\" {print $9, \"is world writable\"} $3 != \"root\" {print $9, \"is not owned by root\"}' else base_dir=$(echo \"$dir\" | cut -d \"/\" -f2) # Ignore if directory is on read-only partition rw=$(findmnt -T \"/$base_dir\" | sed '1d' | grep -v \"\\sro,\") if [ -n \"$rw\" ]; then echo \"$dir is not a directory\" fi fi done",
    "remediation": "Correct or justify any items discovered in the Audit step.",
    "function_names": [
      "system_path_root_integrity",
      "system_path_root_secure",
      "system_path_root_unaltered",
      "system_path_root_default",
      "system_path_root_protected",
      "system_path_root_immutable",
      "system_path_root_verified",
      "system_path_root_restricted",
      "system_path_root_locked",
      "system_path_root_standardized"
    ]
  },
  {
    "id": "6.2.7",
    "title": "Ensure all users' home directories exist",
    "assessment": "Automated",
    "description": "Users can be defined in /etc/passwd without a home directory or with a home directory that does not actually exist.",
    "rationale": "If the user's home directory does not exist or is unassigned, the user will be placed in \"/\" and will not be able to write any files or have local environment variables set.",
    "audit": "Run the following script and verify no results are returned: #!/bin/bash grep -E -v '^(halt|sync|shutdown)' /etc/passwd | awk -F: '($7 != \"'\"$(which nologin)\"'\" && $7 != \"/bin/false\") { print $1 \" \" $6 }' | while read -r user dir; do if [ ! -d \"$dir\" ]; then echo \"The home directory ($dir) of user $user does not exist.\" fi done",
    "remediation": "If any users' home directories do not exist, create them and make sure the respective user owns the directory. Users without an assigned home directory should be removed or assigned a home directory as appropriate. Additional Information: The audit script checks all users UID 500 and above except nfsnobody. Some distributions split at UID 1000 instead, consult your documentation and/or the UID_MIN setting in /etc/login.defs to determine which is appropriate for you. On some distributions the /sbin/nologin should be replaced with /usr/sbin/nologin.",
    "function_names": [
      "linux_user_home_directory_exists",
      "linux_user_home_directory_valid",
      "linux_user_home_directory_configured",
      "linux_user_home_directory_present",
      "linux_user_home_directory_assigned"
    ]
  },
  {
    "id": "6.2.8",
    "title": "Ensure users' home directories permissions are 750 or more restrictive",
    "assessment": "Automated",
    "description": "While the system administrator can establish secure permissions for users' home directories, the users can easily override these.",
    "rationale": "Group or world-writable user home directories may enable malicious users to steal or modify other users' data or to gain another user's system privileges.",
    "audit": "Run the following script and verify no results are returned: #!/bin/bash grep -E -v '^(halt|sync|shutdown)' /etc/passwd | awk -F: '($7 != \"'\"$(which nologin)\"'\" && $7 != \"/bin/false\") { print $1 \" \" $6 }' | while read user dir; do if [ ! -d \"$dir\" ]; then echo \"The home directory ($dir) of user $user does not exist.\" else dirperm=$(ls -ld $dir | cut -f1 -d\" \") if [ $(echo $dirperm | cut -c6) != \"-\" ]; then echo \"Group Write permission set on the home directory ($dir) of user $user\" fi if [ $(echo $dirperm | cut -c8) != \"-\" ]; then echo \"Other Read permission set on the home directory ($dir) of user $user\" fi if [ $(echo $dirperm | cut -c9) != \"-\" ]; then echo \"Other Write permission set on the home directory ($dir) of user $user\" fi if [ $(echo $dirperm | cut -c10) != \"-\" ]; then echo \"Other Execute permission set on the home directory ($dir) of user $user\" fi fi done",
    "remediation": "Making global modifications to user home directories without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user file permissions and determine the action to be taken in accordance with site policy. Additional Information: On some distributions the /sbin/nologin should be replaced with /usr/sbin/nologin.",
    "function_names": [
      "linux_home_directory_permissions_restrictive",
      "linux_home_directory_permissions_750_or_stricter",
      "linux_home_directory_permissions_secure",
      "linux_home_directory_permissions_compliant",
      "linux_home_directory_permissions_enforced"
    ]
  },
  {
    "id": "6.2.9",
    "title": "Ensure users own their home directories",
    "assessment": "Automated",
    "description": "The user home directory is space defined for the particular user to set local environment variables and to store personal files.",
    "rationale": "Since the user is accountable for files stored in the user home directory, the user must be the owner of the directory.",
    "audit": "Run the following script and verify no results are returned: #!/bin/bash grep -E -v '^(halt|sync|shutdown)' /etc/passwd | awk -F: '($7 != \"'\"$(which nologin)\"'\" && $7 != \"/bin/false\") { print $1 \" \" $6 }' | while read user dir; do if [ ! -d \"$dir\" ]; then echo \"The home directory ($dir) of user $user does not exist.\" else owner=$(stat -L -c \"%U\" \"$dir\") if [ \"$owner\" != \"$user\" ]; then echo \"The home directory ($dir) of user $user is owned by $owner.\" fi fi done",
    "remediation": "Change the ownership of any home directories that are not owned by the defined user to the correct user. Additional Information: On some distributions the /sbin/nologin should be replaced with /usr/sbin/nologin.",
    "function_names": [
      "compute_user_home_directory_owner_correct",
      "compute_user_home_directory_permissions_secure",
      "compute_user_home_directory_ownership_valid",
      "compute_user_home_directory_access_restricted",
      "compute_user_home_directory_ownership_enforced"
    ]
  },
  {
    "id": "6.2.10",
    "title": "Ensure users' dot files are not group or world writable",
    "assessment": "Automated",
    "description": "While the system administrator can establish secure permissions for users' \"dot\" files, the users can easily override these.",
    "rationale": "Group or world-writable user configuration files may enable malicious users to steal or modify other users' data or to gain another user's system privileges.",
    "audit": "Run the following script and verify no results are returned: #!/bin/bash grep -E -v '^(halt|sync|shutdown)' /etc/passwd | awk -F: '($7 != \"'\"$(which nologin)\"'\" && $7 != \"/bin/false\") { print $1 \" \" $6 }' | while read user dir; do if [ ! -d \"$dir\" ]; then echo \"The home directory ($dir) of user $user does not exist.\" else for file in $dir/.[A-Za-z0-9]*; do if [ ! -h \"$file\" -a -f \"$file\" ]; then fileperm=$(ls -ld $file | cut -f1 -d\" \") if [ $(echo $fileperm | cut -c6)  != \"-\" ]; then echo \"Group Write permission set on file $file\" fi if [ $(echo $fileperm | cut -c9)  != \"-\" ]; then echo \"Other Write permission set on file $file\" fi fi done fi done",
    "remediation": "Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user dot file permissions and determine the action to be taken in accordance with site policy. Additional Information: On some distributions the /sbin/nologin should be replaced with /usr/sbin/nologin.",
    "function_names": [
      "linux_user_dot_files_group_writable_disabled",
      "linux_user_dot_files_world_writable_disabled",
      "linux_user_dot_files_permissions_restricted",
      "linux_user_home_directory_dot_files_secure_permissions",
      "linux_user_dot_files_secure_ownership"
    ]
  },
  {
    "id": "6.2.11",
    "title": "Ensure no users have .forward files",
    "assessment": "Automated",
    "description": "The .forward file specifies an email address to forward the user's mail to.",
    "rationale": "Use of the .forward file poses a security risk in that sensitive data may be inadvertently transferred outside the organization. The .forward file also poses a risk as it can be used to execute commands that may perform unintended actions.",
    "audit": "Run the following script and verify no results are returned: #!/bin/bash grep -E -v '^(root|halt|sync|shutdown)' /etc/passwd | awk -F: '($7 != \"'\"$(which nologin)\"'\" && $7 != \"/bin/false\") { print $1 \" \" $6 }' | while read user dir; do if [ ! -d \"$dir\" ]; then echo \"The home directory ($dir) of user $user does not exist.\" else if [ ! -h \"$dir/.forward\" -a -f \"$dir/.forward\" ]; then echo \".forward file $dir/.forward exists\" fi fi done",
    "remediation": "Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user .forward files and determine the action to be taken in accordance with site policy. Additional Information: On some distributions the /sbin/nologin should be replaced with /usr/sbin/nologin.",
    "function_names": [
      "linux_user_forward_file_disabled",
      "linux_user_forward_file_absent",
      "linux_user_forward_file_restricted",
      "linux_user_forward_file_prohibited",
      "linux_user_forward_file_removed"
    ]
  },
  {
    "id": "6.2.12",
    "title": "Ensure no users have .netrc files",
    "assessment": "Automated",
    "description": "The .netrc file contains data for logging into a remote host for file transfers via FTP.",
    "rationale": "The .netrc file presents a significant security risk since it stores passwords in unencrypted form. Even if FTP is disabled, user accounts may have brought over .netrc files from other systems which could pose a risk to those systems.",
    "audit": "Run the following script and verify no results are returned: #!/bin/bash grep -E -v '^(root|halt|sync|shutdown)' /etc/passwd | awk -F: '($7 != \"'\"$(which nologin)\"'\" && $7 != \"/bin/false\") { print $1 \" \" $6 }' | while read user dir; do if [ ! -d \"$dir\" ]; then echo \"The home directory ($dir) of user $user does not exist.\" else if [ ! -h \"$dir/.netrc\" -a -f \"$dir/.netrc\" ]; then echo \".netrc file $dir/.netrc exists\" fi fi done",
    "remediation": "Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user .netrc files and determine the action to be taken in accordance with site policy. Additional Information: On some distributions the /sbin/nologin should be replaced with /usr/sbin/nologin.",
    "function_names": [
      "compute_user_no_netrc_files",
      "compute_user_netrc_files_absent",
      "compute_user_netrc_files_prohibited",
      "compute_user_netrc_files_restricted",
      "compute_user_netrc_files_disallowed"
    ]
  },
  {
    "id": "6.2.13",
    "title": "Ensure users' .netrc Files are not group or world accessible",
    "assessment": "Automated",
    "description": "While the system administrator can establish secure permissions for users' .netrc files, the users can easily override these.",
    "rationale": ".netrc files may contain unencrypted passwords that may be used to attack other systems.",
    "audit": "Run the following script and verify no results are returned: #!/bin/bash grep -E -v '^(root|halt|sync|shutdown)' /etc/passwd | awk -F: '($7 != \"'\"$(which nologin)\"'\" && $7 != \"/bin/false\") { print $1 \" \" $6 }' | while read user dir; do if [ ! -d \"$dir\" ]; then echo \"The home directory ($dir) of user $user does not exist.\" else for file in $dir/.netrc; do if [ ! -h \"$file\" -a -f \"$file\" ]; then fileperm=$(ls -ld $file | cut -f1 -d\" \") if [ $(echo $fileperm | cut -c5)  != \"-\" ]; then echo \"Group Read set on $file\" fi if [ $(echo $fileperm | cut -c6)  != \"-\" ]; then echo \"Group Write set on $file\" fi if [ $(echo $fileperm | cut -c7)  != \"-\" ]; then echo \"Group Execute set on $file\" fi if [ $(echo $fileperm | cut -c8)  != \"-\" ]; then echo \"Other Read set on $file\" fi if [ $(echo $fileperm | cut -c9)  != \"-\" ]; then echo \"Other Write set on $file\" fi if [ $(echo $fileperm | cut -c10)  != \"-\" ]; then echo \"Other Execute set on $file\" fi fi done fi done",
    "remediation": "Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user .netrc file permissions and determine the action to be taken in accordance with site policy. Additional Information: While the complete removal of .netrc files is recommended if any are required on the system secure permissions must be applied. On some distributions the /sbin/nologin should be replaced with /usr/sbin/nologin.",
    "function_names": [
      "user_netrc_file_group_access_restricted",
      "user_netrc_file_world_access_restricted",
      "user_netrc_file_permissions_secure",
      "user_netrc_file_no_group_access",
      "user_netrc_file_no_world_access",
      "user_netrc_file_strict_permissions",
      "user_netrc_file_access_controlled",
      "user_netrc_file_protected_permissions"
    ]
  },
  {
    "id": "6.2.14",
    "title": "Ensure no users have .rhosts files",
    "assessment": "Automated",
    "description": "While no .rhosts files are shipped by default, users can easily create them.",
    "rationale": "This action is only meaningful if .rhosts support is permitted in the file /etc/pam.conf . Even though the .rhosts files are ineffective if support is disabled in /etc/pam.conf , they may have been brought over from other systems and could contain information useful to an attacker for those other systems.",
    "audit": "Run the following script and verify no results are returned: #!/bin/bash grep -E -v '^(root|halt|sync|shutdown)' /etc/passwd | awk -F: '($7 != \"'\"$(which nologin)\"'\" && $7 != \"/bin/false\") { print $1 \" \" $6 }' | while read user dir; do if [ ! -d \"$dir\" ]; then echo \"The home directory ($dir) of user $user does not exist.\" else for file in $dir/.rhosts; do if [ ! -h \"$file\" -a -f \"$file\" ]; then echo \".rhosts file in $dir\" fi done fi done",
    "remediation": "Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user .rhosts files and determine the action to be taken in accordance with site policy. Additional Information: On some distributions the /sbin/nologin should be replaced with /usr/sbin/nologin.",
    "function_names": [
      "compute_instance_rhosts_files_absent",
      "compute_user_rhosts_files_disabled",
      "compute_system_rhosts_files_prohibited",
      "compute_account_rhosts_files_restricted",
      "compute_environment_rhosts_files_banned"
    ]
  },
  {
    "id": "6.2.15",
    "title": "Ensure all groups in /etc/passwd exist in /etc/group",
    "assessment": "Automated",
    "description": "Over time, system administration errors and changes can lead to groups being defined in /etc/passwd but not in /etc/group .",
    "rationale": "Groups defined in the /etc/passwd file but not in the /etc/group file pose a threat to system security since group permissions are not properly managed.",
    "audit": "Run the following script and verify no results are returned: #!/bin/bash for i in $(cut -s -d: -f4 /etc/passwd | sort -u ); do grep -q \":$i:\" /etc/group if [ $? -ne 0 ]; then echo \"Group $i is referenced by /etc/passwd but does not exist in /etc/group\" fi done",
    "remediation": "Analyze the output of the Audit step above and perform the appropriate action to correct any discrepancies found.",
    "function_names": [
      "linux_system_groups_consistent",
      "linux_passwd_groups_exist_in_group",
      "linux_group_sync_valid",
      "linux_system_groups_validated",
      "linux_passwd_group_consistency",
      "linux_group_membership_consistent",
      "linux_system_groups_aligned",
      "linux_passwd_group_sync",
      "linux_group_definition_consistent",
      "linux_system_groups_verified"
    ]
  },
  {
    "id": "6.2.16",
    "title": "Ensure no duplicate UIDs exist",
    "assessment": "Automated",
    "description": "Although the useradd program will not let you create a duplicate User ID (UID), it is possible for an administrator to manually edit the /etc/passwd file and change the UID field.",
    "rationale": "Users must be assigned unique UIDs for accountability and to ensure appropriate access protections.",
    "audit": "Run the following script and verify no results are returned: #!/bin/bash cut -f3 -d\":\" /etc/passwd | sort -n | uniq -c | while read x ; do [ -z \"$x\" ] && break set - $x if [ $1 -gt 1 ]; then users=$(awk -F: '($3 == n) { print $1 }' n=$2 /etc/passwd | xargs) echo \"Duplicate UID ($2): $users\" fi done",
    "remediation": "Based on the results of the audit script, establish unique UIDs and review all files owned by the shared UIDs to determine which UID they are supposed to belong to.",
    "function_names": [
      "linux_user_unique_uid",
      "linux_user_no_duplicate_uids",
      "linux_passwd_unique_uid",
      "linux_passwd_no_duplicate_uids",
      "linux_account_unique_uid",
      "linux_account_no_duplicate_uids"
    ]
  },
  {
    "id": "6.2.17",
    "title": "Ensure no duplicate GIDs exist",
    "assessment": "Automated",
    "description": "Although the groupadd program will not let you create a duplicate Group ID (GID), it is possible for an administrator to manually edit the /etc/group file and change the GID field.",
    "rationale": "User groups must be assigned unique GIDs for accountability and to ensure appropriate access protections.",
    "audit": "Run the following script and verify no results are returned: #!/bin/bash cut -f3 -d\":\" /etc/group | sort -n | uniq -c | while read x ; do [ -z \"$x\" ] && break set - $x if [ $1 -gt 1 ]; then groups=$(awk -F: '($3 == n) { print $1 }' n=$2 /etc/group | xargs) echo \"Duplicate GID ($2): $groups\" fi done",
    "remediation": "Based on the results of the audit script, establish unique GIDs and review all files owned by the shared GID to determine which group they are supposed to belong to. Additional Information: You can also use the grpck command to check for other inconsistencies in the /etc/group file.",
    "function_names": [
      "linux_group_unique_gid",
      "linux_group_no_duplicate_gid",
      "linux_group_gid_unique",
      "linux_group_gid_no_duplicates",
      "linux_group_gid_consistency"
    ]
  },
  {
    "id": "6.2.18",
    "title": "Ensure no duplicate user names exist",
    "assessment": "Automated",
    "description": "Although the useradd program will not let you create a duplicate user name, it is possible for an administrator to manually edit the /etc/passwd file and change the user name.",
    "rationale": "If a user is assigned a duplicate user name, it will create and have access to files with the first UID for that username in /etc/passwd . For example, if \"test4\" has a UID of 1000 and a subsequent \"test4\" entry has a UID of 2000, logging in as \"test4\" will use UID 1000. Effectively, the UID is shared, which is a security problem.",
    "audit": "Run the following script and verify no results are returned: #!/bin/bash cut -f1 -d\":\" /etc/passwd | sort -n | uniq -c | while read x ; do [ -z \"$x\" ] && break set - $x if [ $1 -gt 1 ]; then uids=$(awk -F: '($1 == n) { print $3 }' n=$2 /etc/passwd | xargs) echo \"Duplicate User Name ($2): $uids\" fi done",
    "remediation": "Based on the results of the audit script, establish unique user names for the users. File ownerships will automatically reflect the change as long as the users have unique UIDs.",
    "function_names": [
      "iam_user_no_duplicate_names",
      "linux_user_no_duplicate_names",
      "system_user_no_duplicate_names",
      "local_user_no_duplicate_names",
      "passwd_file_no_duplicate_users"
    ]
  },
  {
    "id": "6.2.19",
    "title": "Ensure no duplicate group names exist",
    "assessment": "Automated",
    "description": "Although the groupadd program will not let you create a duplicate group name, it is possible for an administrator to manually edit the /etc/group file and change the group name.",
    "rationale": "If a group is assigned a duplicate group name, it will create and have access to files with the first GID for that group in /etc/group . Effectively, the GID is shared, which is a security problem.",
    "audit": "Run the following script and verify no results are returned: #!/bin/bash cut -f1 -d\":\" /etc/group | sort -n | uniq -c | while read x ; do [ -z \"$x\" ] && break set - $x if [ $1 -gt 1 ]; then gids=$(gawk -F: '($1 == n) { print $3 }' n=$2 /etc/group | xargs) echo \"Duplicate Group Name ($2): $gids\" fi done",
    "remediation": "Based on the results of the audit script, establish unique names for the user groups. File group ownerships will automatically reflect the change as long as the groups have unique GIDs.",
    "function_names": [
      "iam_group_unique_names",
      "linux_group_no_duplicates",
      "system_group_name_uniqueness",
      "etc_group_unique_entries",
      "local_group_duplicate_prevention"
    ]
  },
  {
    "id": "6.2.20",
    "title": "Ensure shadow group is empty",
    "assessment": "Automated",
    "description": "The shadow group allows system programs which require access the ability to read the /etc/shadow file. No users should be assigned to the shadow group.",
    "rationale": "Any users assigned to the shadow group would be granted read access to the /etc/shadow file. If attackers can gain read access to the /etc/shadow file, they can easily run a password cracking program against the hashed passwords to break them. Other security information that is stored in the /etc/shadow file (such as expiration) could also be useful to subvert additional user accounts.",
    "audit": "Run the following commands and verify no results are returned: # grep ^shadow:[^:]*:[^:]*:[^:]+ /etc/group # awk -F: '($4 == \"<shadow-gid>\") { print }' /etc/passwd",
    "remediation": "Remove all users from the shadow group, and change the primary group of any users with shadow as their primary group.",
    "function_names": [
      "linux_group_shadow_empty",
      "linux_group_shadow_no_users",
      "linux_group_shadow_unassigned",
      "linux_group_shadow_restricted",
      "linux_group_shadow_default_only"
    ]
  }
]
{"key": "427207fd8324bd83ee1fe2f4b00629f612e6e4c8fddabf2cccfcf2ca7ff6cbdc", "value": {"batch_results": [{"compliance_id": "1.1.a", "title": "PCI Secure Software 1.1.a", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "s3_bucket_sensitive_data_identification", "boto3_api": "s3.list_objects_v2()", "service": "s3", "rationale": "Identify sensitive data stored in S3 buckets by examining object metadata and tags."}, {"name": "rds_sensitive_data_identification", "boto3_api": "rds.describe_db_instances()", "service": "rds", "rationale": "Identify sensitive data stored in RDS instances by examining database configurations and tags."}, {"name": "ec2_instance_sensitive_data_identification", "boto3_api": "ec2.describe_instances()", "service": "ec2", "rationale": "Identify sensitive data processed by EC2 instances by examining instance metadata and tags."}], "mapping_notes": "No existing functions directly identify sensitive data across AWS services. New functions are needed to programmatically identify sensitive data in S3, RDS, and EC2."}, {"compliance_id": "1.1.b", "title": "PCI Secure Software 1.1.b", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "ec2_instance_storage_sensitive_data_check", "boto3_api": "ec2.describe_volumes()", "service": "ec2", "rationale": "Check for sensitive data stored in EC2 instance volumes by examining volume tags and metadata."}, {"name": "rds_instance_storage_sensitive_data_check", "boto3_api": "rds.describe_db_snapshots()", "service": "rds", "rationale": "Check for sensitive data stored in RDS snapshots by examining snapshot tags and metadata."}], "mapping_notes": "No existing functions directly check for sensitive data storage locations. New functions are needed to identify sensitive data in EC2 and RDS storage."}, {"compliance_id": "1.1.c", "title": "PCI Secure Software 1.1.c", "existing_functions_mapped": ["s3_bucket_encryption_enabled", "rds_instance_storage_encrypted", "ec2_ami_encryption_check"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "lambda_function_sensitive_data_protection_check", "boto3_api": "lambda.get_function_configuration()", "service": "lambda", "rationale": "Check for security controls protecting sensitive data in Lambda functions by examining environment variables and configurations."}], "mapping_notes": "Existing functions cover encryption for S3, RDS, and EC2, but additional checks are needed for Lambda functions to ensure comprehensive coverage of security controls for sensitive data."}]}}
{"key": "acbd9dae2309923575d249be71af4795444937af37bb5f02fd6fd10c0cf7a502", "value": {"batch_results": [{"compliance_id": "1.2.b", "title": "PCI Secure Software 1.2.b", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "ec2_instance_storage_encryption_check", "boto3_api": "ec2.describe_instances()", "service": "ec2", "rationale": "Check if EC2 instance storage is encrypted to protect sensitive data."}, {"name": "rds_instance_storage_encryption_check", "boto3_api": "rds.describe_db_instances()", "service": "rds", "rationale": "Ensure RDS instance storage is encrypted to secure sensitive data."}, {"name": "s3_bucket_encryption_enabled", "boto3_api": "s3.get_bucket_encryption()", "service": "s3", "rationale": "Verify S3 buckets have encryption enabled to protect sensitive data."}], "mapping_notes": "No existing functions directly address the requirement to identify and describe storage of sensitive data across various storage types."}, {"compliance_id": "1.2.c", "title": "PCI Secure Software 1.2.c", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "lambda_function_third_party_integration_check", "boto3_api": "lambda.list_functions()", "service": "lambda", "rationale": "Check if Lambda functions integrate with third-party services and follow best practices."}, {"name": "apigateway_third_party_integration_check", "boto3_api": "apigateway.get_rest_apis()", "service": "apigateway", "rationale": "Ensure API Gateway integrations with third-party services adhere to security guidelines."}], "mapping_notes": "No existing functions cover the verification of third-party software integration and adherence to guidance."}, {"compliance_id": "1.3", "title": "PCI Secure Software 1.3", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "iam_role_critical_asset_classification_check", "boto3_api": "iam.list_roles()", "service": "iam", "rationale": "Identify IAM roles associated with critical assets and ensure proper classification."}, {"name": "ec2_critical_asset_tagging_check", "boto3_api": "ec2.describe_tags()", "service": "ec2", "rationale": "Verify EC2 instances are tagged as critical assets and classified appropriately."}], "mapping_notes": "No existing functions address the classification and inventory of critical assets."}]}}
{"key": "9184cef417e44412dc05238bf2713f486883b6e2710cbd4f8593cd1f92f79531", "value": {"batch_results": [{"compliance_id": "2.1.d", "title": "PCI Secure Software 2.1.d", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "ec2_instance_vulnerable_ports_check", "boto3_api": "ec2.describe_instances()", "service": "ec2", "rationale": "Check for instances with open ports that have known vulnerabilities."}, {"name": "lambda_function_vulnerable_runtime_check", "boto3_api": "lambda.list_functions()", "service": "lambda", "rationale": "Identify Lambda functions using runtimes with known vulnerabilities."}], "mapping_notes": "No existing functions directly check for publicly disclosed vulnerabilities in exposed interfaces."}, {"compliance_id": "2.1.e", "title": "PCI Secure Software 2.1.e", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "ec2_instance_vulnerable_protocols_mitigation_check", "boto3_api": "ec2.describe_security_groups()", "service": "ec2", "rationale": "Ensure security groups mitigate risks from known vulnerable protocols."}, {"name": "rds_instance_vulnerable_ports_mitigation_check", "boto3_api": "rds.describe_db_instances()", "service": "rds", "rationale": "Verify RDS instances have mitigations for known vulnerable ports."}], "mapping_notes": "No existing functions address mitigation methods for known vulnerabilities in exposed interfaces."}, {"compliance_id": "2.1.f", "title": "PCI Secure Software 2.1.f", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "lambda_function_third_party_module_access_check", "boto3_api": "lambda.list_functions()", "service": "lambda", "rationale": "Check if Lambda functions expose third-party modules without proper mitigation."}, {"name": "ec2_instance_third_party_module_access_check", "boto3_api": "ec2.describe_instances()", "service": "ec2", "rationale": "Ensure EC2 instances do not expose third-party modules without proper mitigation."}], "mapping_notes": "No existing functions verify the disabling or mitigation of third-party module access."}]}}
{"key": "f4b8376054cf4bcfae84ac315135f9c497995eaefb231172ca6bae29b151a405", "value": {"batch_results": [{"compliance_id": "2.3.a", "title": "PCI Secure Software 2.3.a", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "iam_check_default_credentials_disabled", "boto3_api": "iam.list_users()", "service": "iam", "rationale": "Check if any IAM users are using default credentials or have not changed their initial passwords."}, {"name": "rds_check_default_db_credentials_disabled", "boto3_api": "rds.describe_db_instances()", "service": "rds", "rationale": "Verify that RDS instances do not use default database credentials."}], "mapping_notes": "No existing functions directly check for default credentials or keys being disabled or changed."}, {"compliance_id": "2.3.b", "title": "PCI Secure Software 2.3.b", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "ec2_check_default_key_pairs_not_used", "boto3_api": "ec2.describe_key_pairs()", "service": "ec2", "rationale": "Ensure that EC2 instances are not using default key pairs for SSH access."}, {"name": "acm_check_default_certificates_not_used", "boto3_api": "acm.list_certificates()", "service": "acm", "rationale": "Verify that ACM does not have default certificates in use."}], "mapping_notes": "No existing functions validate the non-use of default credentials or keys in software."}, {"compliance_id": "2.3.c", "title": "PCI Secure Software 2.3.c", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "This requirement involves guidance documentation, which cannot be programmatically checked using boto3 APIs."}]}}
{"key": "cf416c1d4bb86703bc2987e98908b3fa246c0fadb15686761572079a4c6dc338", "value": {"batch_results": [{"compliance_id": "2.3.d", "title": "PCI Secure Software 2.3.d", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "iam_user_default_credentials_check", "boto3_api": "iam.list_users()", "service": "iam", "rationale": "Check if any IAM user is using default credentials after initial setup."}], "mapping_notes": "No existing function directly checks for default authentication credentials usage after installation."}, {"compliance_id": "2.3.e", "title": "PCI Secure Software 2.3.e", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "kms_key_usage_check", "boto3_api": "kms.describe_key()", "service": "kms", "rationale": "Ensure cryptographic keys used for authentication are not used for other purposes."}], "mapping_notes": "No existing function checks if cryptographic keys are used solely for authentication."}, {"compliance_id": "2.4.a", "title": "PCI Secure Software 2.4.a", "existing_functions_mapped": ["iam_user_least_privilege_policy_check", "awslambda_function_least_privilege_policy_check"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "ec2_instance_role_least_privilege_check", "boto3_api": "ec2.describe_iam_instance_profile_associations()", "service": "ec2", "rationale": "Verify EC2 instances are using roles with least privilege."}], "mapping_notes": "Existing functions partially cover the requirement by checking IAM and Lambda roles, but do not cover EC2 instance roles."}]}}
{"key": "d9dcd71c7a389ecde8abdb456e47b1019874b92ebfca6099d3a20d3946d0bb5b", "value": {"batch_results": [{"compliance_id": "2.4.b", "title": "PCI Secure Software 2.4.b", "existing_functions_mapped": ["awslambda_function_least_privilege_policy_check", "aurora_database_user_role_least_privilege_check", "aurora_iam_least_privilege_policy_check"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "ec2_instance_iam_role_least_privilege_check", "boto3_api": "ec2.describe_iam_instance_profile_associations()", "service": "ec2", "rationale": "Check if EC2 instances are using IAM roles with least privilege."}], "mapping_notes": "Existing functions cover least privilege checks for Lambda and Aurora, but not for EC2 instances."}, {"compliance_id": "2.4.c", "title": "PCI Secure Software 2.4.c", "existing_functions_mapped": ["awslambda_function_iam_role_check", "awslambda_function_no_admin_privileges"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "rds_instance_iam_role_check", "boto3_api": "rds.describe_db_instances()", "service": "rds", "rationale": "Ensure RDS instances have appropriate IAM roles assigned."}], "mapping_notes": "Existing functions partially cover IAM role checks for Lambda, but additional checks are needed for RDS."}, {"compliance_id": "2.4.d", "title": "PCI Secure Software 2.4.d", "existing_functions_mapped": ["awslambda_function_using_supported_runtimes", "cloudfront_distributions_using_deprecated_ssl_protocols"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "ec2_instance_ami_latest_version_check", "boto3_api": "ec2.describe_images()", "service": "ec2", "rationale": "Ensure EC2 instances are using the latest AMI versions."}], "mapping_notes": "Existing functions check for deprecated runtimes and protocols, but additional checks for EC2 AMIs are needed."}]}}
{"key": "72b1dccfb47d4aecbfd9a68ad371c22bcb69c172b76b3a57228f62dae9733bf8", "value": {"batch_results": [{"compliance_id": "3.1.a", "title": "PCI Secure Software 3.1.a", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "rds_instance_data_retention_period_check", "boto3_api": "rds.describe_db_instances()", "service": "rds", "rationale": "Check if RDS instances have a data retention policy that aligns with the intended functionality of the software."}, {"name": "s3_bucket_data_retention_policy_check", "boto3_api": "s3.get_bucket_lifecycle_configuration()", "service": "s3", "rationale": "Verify if S3 buckets have lifecycle policies that ensure data is retained only as necessary."}], "mapping_notes": "No existing functions directly address data retention policies for sensitive data."}, {"compliance_id": "3.1.b", "title": "PCI Secure Software 3.1.b", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "rds_instance_sensitive_data_retention_check", "boto3_api": "rds.describe_db_instances()", "service": "rds", "rationale": "Ensure RDS instances retain sensitive data only as necessary and supported by evidence."}, {"name": "s3_bucket_sensitive_data_retention_check", "boto3_api": "s3.get_bucket_lifecycle_configuration()", "service": "s3", "rationale": "Ensure S3 buckets retain sensitive data only as necessary and supported by evidence."}], "mapping_notes": "No existing functions directly address the retention of sensitive data in line with evidence."}, {"compliance_id": "3.1.c", "title": "PCI Secure Software 3.1.c", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "lambda_function_debug_mode_sensitive_data_check", "boto3_api": "lambda.get_function_configuration()", "service": "lambda", "rationale": "Check if Lambda functions have debug modes that store sensitive data and ensure it is protected."}, {"name": "ec2_instance_debug_mode_sensitive_data_check", "boto3_api": "ec2.describe_instances()", "service": "ec2", "rationale": "Verify if EC2 instances have debug modes that store sensitive data and ensure it is protected."}], "mapping_notes": "No existing functions directly address the storage of sensitive data for debugging purposes."}]}}
{"key": "11da922631738dbda14501adb5f426c372a2addf20c0bbf14707359f33c601ec", "value": {"batch_results": [{"compliance_id": "3.1.d", "title": "PCI Secure Software 3.1.d", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "s3_bucket_lifecycle_policy_check", "boto3_api": "s3.get_bucket_lifecycle_configuration()", "service": "s3", "rationale": "To ensure that S3 buckets have lifecycle policies configured to manage the retention period of sensitive data."}], "mapping_notes": "No existing functions directly address the configuration of retention periods for sensitive data. A new function to check S3 bucket lifecycle policies is suggested."}, {"compliance_id": "3.2.a", "title": "PCI Secure Software 3.2.a", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "rds_instance_snapshot_retention_check", "boto3_api": "rds.describe_db_snapshots()", "service": "rds", "rationale": "To verify that RDS instances have appropriate snapshot retention policies for transient sensitive data."}], "mapping_notes": "No existing functions cover the retention and secure deletion of transient sensitive data. A new function to check RDS snapshot retention is suggested."}, {"compliance_id": "3.2.b", "title": "PCI Secure Software 3.2.b", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "lambda_function_ephemeral_storage_check", "boto3_api": "lambda.get_function_configuration()", "service": "lambda", "rationale": "To ensure that Lambda functions do not retain transient sensitive data beyond their execution duration."}], "mapping_notes": "No existing functions verify the use of transient data in AWS Lambda. A new function to check ephemeral storage usage in Lambda is suggested."}]}}
{"key": "e46a2344d00a18de308bbe7a66f2f49df5c0223985853bba9de7afebb15326e0", "value": {"batch_results": [{"compliance_id": "3.3.b", "title": "PCI Secure Software 3.3.b", "existing_functions_mapped": ["acm_certificates_with_secure_key_algorithms", "s3_bucket_encryption_enabled", "rds_instance_storage_encrypted", "cloudfront_distributions_https_enabled"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "ec2_ebs_volume_encryption_enabled", "boto3_api": "ec2.describe_volumes()", "service": "ec2", "rationale": "To ensure EBS volumes are encrypted to protect sensitive data."}, {"name": "dynamodb_table_encryption_enabled", "boto3_api": "dynamodb.describe_table()", "service": "dynamodb", "rationale": "To verify that DynamoDB tables are encrypted to protect sensitive data."}], "mapping_notes": "Existing functions cover some aspects of encryption for data at rest, but additional checks for EBS and DynamoDB are needed."}, {"compliance_id": "3.3.c", "title": "PCI Secure Software 3.3.c", "existing_functions_mapped": ["acm_certificates_with_secure_key_algorithms", "cloudfront_distributions_https_enabled"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "kms_key_rotation_enabled", "boto3_api": "kms.get_key_rotation_status()", "service": "kms", "rationale": "To ensure cryptographic keys are rotated regularly as part of strong cryptography practices."}], "mapping_notes": "Existing functions partially cover cryptographic implementations, but key rotation checks are necessary for compliance."}, {"compliance_id": "3.3.d", "title": "PCI Secure Software 3.3.d", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "lambda_function_environment_variables_encryption_enabled", "boto3_api": "lambda.get_function_configuration()", "service": "lambda", "rationale": "To ensure that environment variables in Lambda functions are encrypted to protect sensitive data."}, {"name": "s3_bucket_access_logging_enabled", "boto3_api": "s3.get_bucket_logging()", "service": "s3", "rationale": "To verify that access logging is enabled for S3 buckets to monitor data access and integrity."}], "mapping_notes": "No existing functions directly address non-cryptographic protections, necessitating new checks for environment variable encryption and access logging."}]}}
{"key": "a70568f65b258b449da7f17599379e6147d9f493995131773545b26132ab3c6d", "value": {"batch_results": [{"compliance_id": "3.3.e", "title": "PCI Secure Software 3.3.e", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "s3_bucket_encryption_enabled", "boto3_api": "s3.get_bucket_encryption()", "service": "s3", "rationale": "Ensure that S3 buckets are encrypted to protect the confidentiality and integrity of sensitive data."}, {"name": "rds_instance_storage_encrypted", "boto3_api": "rds.describe_db_instances()", "service": "rds", "rationale": "Verify that RDS instances have storage encryption enabled to protect sensitive data."}], "mapping_notes": "No existing functions directly address the requirement to provide guidance on configuring protection methods for sensitive data."}, {"compliance_id": "3.4.a", "title": "PCI Secure Software 3.4.a", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "ec2_ebs_volume_encryption_enabled", "boto3_api": "ec2.describe_volumes()", "service": "ec2", "rationale": "Check if EBS volumes are encrypted to ensure data is irretrievable when deleted."}], "mapping_notes": "No existing functions address the secure deletion of persistent sensitive data."}, {"compliance_id": "3.4.b", "title": "PCI Secure Software 3.4.b", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "kms_key_deletion_scheduled", "boto3_api": "kms.list_keys()", "service": "kms", "rationale": "Ensure that cryptographic keys used for encryption are scheduled for deletion to render data unrecoverable."}], "mapping_notes": "No existing functions address the secure deletion of non-transient sensitive data, including cryptographic key deletion."}]}}
{"key": "142993f70715b0eaed9c19f15b214f69958b0346eeb461d13d4a30024fd61d28", "value": {"batch_results": [{"compliance_id": "3.4.c", "title": "PCI Secure Software 3.4.c", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "ec2_instance_ebs_volume_data_wipe_check", "boto3_api": "ec2.describe_volumes()", "service": "ec2", "rationale": "Check if EBS volumes are configured to securely delete data when no longer required."}, {"name": "rds_instance_data_wipe_check", "boto3_api": "rds.describe_db_instances()", "service": "rds", "rationale": "Ensure RDS instances are configured to securely delete data when no longer required."}], "mapping_notes": "No existing functions directly address secure deletion of persistent sensitive data."}, {"compliance_id": "3.5.a", "title": "PCI Secure Software 3.5.a", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "lambda_function_ephemeral_storage_data_wipe_check", "boto3_api": "lambda.get_function_configuration()", "service": "lambda", "rationale": "Verify that Lambda functions are configured to securely delete transient data from ephemeral storage."}], "mapping_notes": "No existing functions directly address secure deletion of transient sensitive data from temporary storage."}, {"compliance_id": "3.5.b", "title": "PCI Secure Software 3.5.b", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "ec2_instance_transient_data_erasure_check", "boto3_api": "ec2.describe_instances()", "service": "ec2", "rationale": "Ensure EC2 instances are configured to handle transient data erasure effectively, considering abstraction layers."}], "mapping_notes": "No existing functions directly address the complications in erasing transient sensitive data due to platform or implementation level issues."}]}}
{"key": "f3edad99d0ba93ab0a25faaa6bfd623a57df9019cfca93d79f30426d786be91a", "value": {"batch_results": [{"compliance_id": "3.5.c", "title": "PCI Secure Software 3.5.c", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "ec2_instance_ebs_volume_data_wipe_check", "boto3_api": "ec2.describe_volumes()", "service": "ec2", "rationale": "Check if EBS volumes are securely wiped after use to ensure no sensitive data residue."}, {"name": "lambda_function_ephemeral_storage_data_wipe_check", "boto3_api": "lambda.get_function_configuration()", "service": "lambda", "rationale": "Ensure Lambda functions do not leave sensitive data in ephemeral storage after execution."}], "mapping_notes": "No existing functions directly address secure deletion of transient sensitive data."}, {"compliance_id": "3.6.a", "title": "PCI Secure Software 3.6.a", "existing_functions_mapped": ["cloudwatch_log_group_no_secrets_in_logs", "cloudwatch_log_metric_filter_unauthorized_api_calls"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "ec2_instance_side_channel_protection_check", "boto3_api": "ec2.describe_instances()", "service": "ec2", "rationale": "Ensure EC2 instances are configured to mitigate side-channel attacks."}, {"name": "rds_instance_error_log_sensitive_data_check", "boto3_api": "rds.describe_db_log_files()", "service": "rds", "rationale": "Check RDS error logs for unintended sensitive data exposure."}], "mapping_notes": "Existing functions cover some aspects like logs, but do not address side-channel attacks or unintended data exposure through execution environments."}, {"compliance_id": "3.6.b", "title": "PCI Secure Software 3.6.b", "existing_functions_mapped": ["cloudfront_distribution_security_headers_check", "cloudfront_distribution_sri_enabled"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "s3_bucket_data_encryption_check", "boto3_api": "s3.get_bucket_encryption()", "service": "s3", "rationale": "Ensure S3 buckets use encryption to protect sensitive data."}, {"name": "rds_instance_data_masking_check", "boto3_api": "rds.describe_db_instances()", "service": "rds", "rationale": "Verify RDS instances implement data masking to prevent unintended data disclosure."}], "mapping_notes": "Existing functions address some security headers and integrity, but additional checks for encryption and data masking are needed."}]}}
{"key": "381870315e1449a8810f9655fabfe8034dcb21337082c307f9eeeb461ec248f3", "value": {"batch_results": [{"compliance_id": "3.6.c", "title": "PCI Secure Software 3.6.c", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "This requirement involves guidance and documentation, which cannot be programmatically checked using boto3 APIs."}, {"compliance_id": "3.6.d", "title": "PCI Secure Software 3.6.d", "existing_functions_mapped": ["cloudwatch_log_group_no_secrets_in_logs", "cloudtrail_logs_s3_bucket_is_not_publicly_accessible"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "ec2_instance_no_sensitive_data_in_user_data", "boto3_api": "ec2.describe_instance_attribute()", "service": "ec2", "rationale": "Check if EC2 instance user data contains sensitive information."}], "mapping_notes": "Existing functions partially cover the requirement by ensuring logs do not contain secrets and are not publicly accessible. Additional checks are needed for sensitive data in EC2 user data."}, {"compliance_id": "4.1.a", "title": "PCI Secure Software 4.1.a", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "This requirement involves documentation of attack scenarios, which cannot be programmatically checked using boto3 APIs."}]}}
{"key": "b8872cb119ed2d46e0d7df8b62ff39d9038d91fb32c3c4fbd0a305265d6966d3", "value": {"batch_results": [{"compliance_id": "4.1.b", "title": "PCI Secure Software 4.1.b", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "This requirement involves examining evidence of industry-standard methods or guidelines used to identify attack scenarios, which cannot be programmatically checked using AWS configurations."}, {"compliance_id": "4.1.c", "title": "PCI Secure Software 4.1.c", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "This requirement involves examining evidence of ownership, methodologies, and documentation related to software security, which cannot be programmatically checked using AWS configurations."}, {"compliance_id": "4.2.a", "title": "PCI Secure Software 4.2.a", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "This requirement involves examining evidence of mitigation methods for threats, which cannot be programmatically checked using AWS configurations."}]}}
{"key": "acc34908506c52c7e1854a5313e5bc8a04a82c7411e1c6b3a8bc0a431b936179", "value": {"batch_results": [{"compliance_id": "4.2.e", "title": "PCI Secure Software 4.2.e", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "lambda_function_execution_environment_security_checks", "boto3_api": "lambda.get_function_configuration()", "service": "lambda", "rationale": "Check if Lambda functions have security configurations like VPC, environment variables encryption, and runtime security checks enabled."}], "mapping_notes": "No existing functions directly check for software security controls in execution environments. A new function is needed to verify Lambda execution environment security settings."}, {"compliance_id": "5.1.a", "title": "PCI Secure Software 5.1.a", "existing_functions_mapped": ["iam_user_mfa_enabled", "iam_role_least_privilege_policy_check"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "iam_role_authentication_mechanisms_check", "boto3_api": "iam.get_role()", "service": "iam", "rationale": "Verify that IAM roles have appropriate authentication mechanisms based on critical asset classification."}], "mapping_notes": "Existing functions cover MFA and least privilege, but do not fully address authentication requirements for all roles based on critical asset classification."}, {"compliance_id": "5.1.b", "title": "PCI Secure Software 5.1.b", "existing_functions_mapped": ["iam_user_mfa_enabled", "iam_role_least_privilege_policy_check"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "iam_authentication_mechanisms_implementation_check", "boto3_api": "iam.list_mfa_devices()", "service": "iam", "rationale": "Ensure that authentication mechanisms are implemented correctly for access to critical assets."}], "mapping_notes": "Existing functions partially cover authentication mechanisms, but additional checks are needed to ensure correct implementation for critical assets."}]}}
{"key": "1ea0c26f295c955f176cb97812d6d440a300b89763957242c8c763b3d00ed3f7", "value": {"batch_results": [{"compliance_id": "5.3.a", "title": "PCI Secure Software 5.3.a", "existing_functions_mapped": ["cognito_user_pool_advanced_security_enabled", "cognito_user_pool_blocks_compromised_credentials_sign_in_attempts", "cognito_user_pool_mfa_enabled"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "cognito_user_pool_password_policy_check", "boto3_api": "cognito-idp.describe_user_pool()", "service": "cognito", "rationale": "To ensure password policies are enforced to prevent weak passwords."}], "mapping_notes": "Existing functions cover some aspects of authentication security, but additional checks on password policies are needed."}, {"compliance_id": "5.3.b", "title": "PCI Secure Software 5.3.b", "existing_functions_mapped": ["cognito_user_pool_password_policy_minimum_length_14", "cognito_user_pool_password_policy_lowercase", "cognito_user_pool_password_policy_uppercase", "cognito_user_pool_password_policy_number", "cognito_user_pool_password_policy_symbol"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "cognito_user_pool_password_policy_complexity_check", "boto3_api": "cognito-idp.describe_user_pool()", "service": "cognito", "rationale": "To ensure password complexity requirements are enforced."}], "mapping_notes": "Password policy checks are partially covered, but complexity checks need to be explicitly verified."}, {"compliance_id": "5.3.c", "title": "PCI Secure Software 5.3.c", "existing_functions_mapped": ["cognito_user_pool_client_prevent_user_existence_errors", "cognito_user_pool_client_token_revocation_enabled"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "cognito_user_pool_authentication_vulnerability_check", "boto3_api": "cognito-idp.describe_user_pool()", "service": "cognito", "rationale": "To ensure that authentication methods do not expose vulnerabilities."}], "mapping_notes": "Existing functions address some vulnerabilities, but a comprehensive check for authentication vulnerabilities is needed."}]}}
{"key": "59be06300ec87bd648380c7333c045209458b14b66cc56a0c2ddc99db8c62ad5", "value": {"batch_results": [{"compliance_id": "6.1.e", "title": "PCI Secure Software 6.1.e", "existing_functions_mapped": ["cloudtrail_logs_s3_bucket_is_not_publicly_accessible", "cloudtrail_kms_encryption_enabled", "cloudwatch_log_group_kms_encryption_enabled", "backup_vaults_encrypted"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "ec2_ebs_volume_encryption_enabled", "boto3_api": "ec2.describe_volumes()", "service": "ec2", "rationale": "Check if EBS volumes are encrypted to ensure sensitive data is secured at rest."}, {"name": "rds_instance_storage_encrypted", "boto3_api": "rds.describe_db_instances()", "service": "rds", "rationale": "Ensure RDS instances have storage encryption enabled to protect sensitive data."}], "mapping_notes": "Existing functions cover some aspects of data encryption and access control, but additional checks for EBS and RDS encryption are needed."}, {"compliance_id": "6.1.f", "title": "PCI Secure Software 6.1.f", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "lambda_function_runtime_vulnerability_check", "boto3_api": "lambda.list_functions()", "service": "lambda", "rationale": "Check for known vulnerabilities in Lambda function runtimes to ensure third-party software security."}, {"name": "ec2_ami_vulnerability_check", "boto3_api": "ec2.describe_images()", "service": "ec2", "rationale": "Verify that AMIs used in EC2 instances do not have known vulnerabilities."}], "mapping_notes": "No existing functions directly address the assessment of third-party software vulnerabilities."}, {"compliance_id": "6.2.a", "title": "PCI Secure Software 6.2.a", "existing_functions_mapped": ["cloudfront_distributions_https_enabled", "cloudfront_distributions_origin_traffic_encrypted", "cloudtrail_s3_dataevents_read_enabled", "cloudtrail_s3_dataevents_write_enabled"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "s3_bucket_ssl_enforced", "boto3_api": "s3.get_bucket_policy()", "service": "s3", "rationale": "Ensure that S3 buckets enforce SSL for data transmission to secure sensitive data during transmission."}, {"name": "apigateway_rest_api_tls_enabled", "boto3_api": "apigateway.get_rest_apis()", "service": "apigateway", "rationale": "Verify that API Gateway REST APIs have TLS enabled to protect sensitive data in transit."}], "mapping_notes": "Existing functions cover some aspects of data transmission security, but additional checks for S3 and API Gateway are needed."}]}}
{"key": "66762ebdf965251b01be983792e92477c32fde5d55ea8c013965deea4aa2dcff", "value": {"batch_results": [{"compliance_id": "6.2.b", "title": "PCI Secure Software 6.2.b", "existing_functions_mapped": ["cloudfront_distributions_https_enabled", "cloudfront_distributions_origin_traffic_encrypted", "cloudtrail_kms_encryption_enabled", "s3_bucket_encryption_enabled"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "ec2_instance_ebs_encryption_enabled", "boto3_api": "ec2.describe_volumes()", "service": "ec2", "rationale": "Ensure EBS volumes attached to EC2 instances are encrypted to secure data in transit."}, {"name": "rds_instance_ssl_encryption_enabled", "boto3_api": "rds.describe_db_instances()", "service": "rds", "rationale": "Verify that RDS instances enforce SSL connections to secure data in transit."}], "mapping_notes": "Existing functions cover some aspects of data encryption in transit, but additional checks are needed for EC2 and RDS."}, {"compliance_id": "6.2.c", "title": "PCI Secure Software 6.2.c", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "This requirement involves guidance documentation, which cannot be programmatically checked using boto3 APIs."}, {"compliance_id": "6.2.d", "title": "PCI Secure Software 6.2.d", "existing_functions_mapped": ["cloudfront_distributions_https_enabled", "cloudfront_distributions_https_sni_enabled"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "elb_listener_tls_version_check", "boto3_api": "elbv2.describe_listeners()", "service": "elbv2", "rationale": "Ensure that ELB listeners enforce a secure version of TLS for data transmission."}, {"name": "apigateway_rest_api_tls_version_check", "boto3_api": "apigateway.get_rest_apis()", "service": "apigateway", "rationale": "Verify that API Gateway REST APIs enforce a secure version of TLS for data transmission."}], "mapping_notes": "Existing functions cover HTTPS enforcement for CloudFront, but additional checks are needed for ELB and API Gateway."}]}}
{"key": "aee159e2a1c0befd3d3c73b48c2ead767e297cb3fb5d8abbe53236c030fd4f2e", "value": {"batch_results": [{"compliance_id": "6.2.e", "title": "PCI Secure Software 6.2.e", "existing_functions_mapped": ["cloudfront_distributions_https_enabled", "cloudfront_distributions_origin_traffic_encrypted", "aurora_data_in_transit_encryption_check", "aurora_instance_ssl_encryption_enabled"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "s3_bucket_ssl_enforced", "boto3_api": "s3.get_bucket_policy()", "service": "s3", "rationale": "Ensure that S3 buckets enforce SSL for data in transit."}, {"name": "rds_instance_ssl_enforced", "boto3_api": "rds.describe_db_instances()", "service": "rds", "rationale": "Ensure that RDS instances enforce SSL for data in transit."}], "mapping_notes": "Existing functions cover some services like CloudFront and Aurora, but additional checks are needed for S3 and RDS to ensure SSL is enforced for all data in transit."}, {"compliance_id": "6.3.a", "title": "PCI Secure Software 6.3.a", "existing_functions_mapped": ["acm_certificates_with_secure_key_algorithms", "cloudfront_distributions_using_deprecated_ssl_protocols"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "kms_key_rotation_enabled", "boto3_api": "kms.get_key_rotation_status()", "service": "kms", "rationale": "Ensure that KMS keys have automatic rotation enabled to comply with cryptography requirements."}], "mapping_notes": "Existing functions check for secure algorithms and deprecated protocols, but additional checks for key management practices like KMS key rotation are needed."}, {"compliance_id": "6.3.b", "title": "PCI Secure Software 6.3.b", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "ec2_instance_ebs_encryption_by_default", "boto3_api": "ec2.get_ebs_encryption_by_default()", "service": "ec2", "rationale": "Ensure that EBS volumes are encrypted by default to protect sensitive data."}, {"name": "lambda_function_environment_variables_encrypted", "boto3_api": "lambda.get_function_configuration()", "service": "lambda", "rationale": "Ensure that Lambda function environment variables are encrypted to protect sensitive data."}], "mapping_notes": "No existing functions directly address the requirement for guidance on configuring cryptographic methods during installation or initialization. New functions are suggested to ensure encryption is enforced by default."}]}}
{"key": "141b72234522a5fcf98883ac0f986208e5b8d3274fd293dc405f3c8ab0a642f6", "value": {"batch_results": [{"compliance_id": "6.3.c", "title": "PCI Secure Software 6.3.c", "existing_functions_mapped": ["acm_certificates_with_secure_key_algorithms"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "kms_key_usage_check", "boto3_api": "kms.describe_key()", "service": "kms", "rationale": "To ensure that KMS keys are not used for purposes other than intended, such as using private keys for confidentiality."}], "mapping_notes": "Existing function checks for secure key algorithms but does not verify key usage restrictions."}, {"compliance_id": "8.1.a", "title": "PCI Secure Software 8.1.a", "existing_functions_mapped": ["cloudtrail_event_details_logging_enabled", "cloudtrail_log_file_validation_enabled", "cloudtrail_logs_s3_bucket_is_not_publicly_accessible"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "iam_user_access_tracking_enabled", "boto3_api": "iam.get_account_authorization_details()", "service": "iam", "rationale": "To ensure all access attempts are tracked and traceable to a unique user."}], "mapping_notes": "CloudTrail functions provide partial coverage by logging events, but specific user access tracking needs additional checks."}, {"compliance_id": "8.2.a", "title": "PCI Secure Software 8.2.a", "existing_functions_mapped": ["cloudtrail_event_type_logging_enabled", "cloudtrail_security_group_changes_logging_enabled", "cloudtrail_s3_dataevents_read_enabled", "cloudtrail_s3_dataevents_write_enabled"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "cloudtrail_privileged_mode_operations_logging", "boto3_api": "cloudtrail.describe_trails()", "service": "cloudtrail", "rationale": "To ensure logging of privileged mode operations and other critical activities."}], "mapping_notes": "Existing functions cover some logging aspects, but additional logging for privileged operations and security control changes is needed."}]}}
{"key": "4914cf6db755cb480359e89da5aa068b5f1db8dafef59b5c89db79fee48cd0d2", "value": {"batch_results": [{"compliance_id": "8.2.b", "title": "PCI Secure Software 8.2.b", "existing_functions_mapped": ["cloudtrail_event_details_logging_enabled", "cloudtrail_log_file_validation_enabled", "cloudtrail_logs_s3_bucket_is_not_publicly_accessible"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "cloudtrail_event_user_identification_check", "boto3_api": "cloudtrail.describe_trails()", "service": "cloudtrail", "rationale": "Ensure that CloudTrail logs include unique user identification for each event."}], "mapping_notes": "Existing functions cover event details and log integrity, but do not explicitly ensure unique user identification."}, {"compliance_id": "8.2.c", "title": "PCI Secure Software 8.2.c", "existing_functions_mapped": ["cloudwatch_log_group_no_secrets_in_logs"], "coverage_assessment": "complete", "new_functions_needed": [], "mapping_notes": "The existing function ensures that confidential data is not recorded in logs, satisfying the requirement."}, {"compliance_id": "8.3.a", "title": "PCI Secure Software 8.3.a", "existing_functions_mapped": ["cloudtrail_log_file_validation_enabled", "cloudtrail_kms_encryption_enabled", "cloudwatch_log_group_kms_encryption_enabled"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "cloudtrail_log_retention_policy_check", "boto3_api": "cloudtrail.get_trail_status()", "service": "cloudtrail", "rationale": "Ensure that log retention policies are configured to protect the completeness and integrity of activity records."}], "mapping_notes": "Existing functions cover log integrity and encryption, but do not fully address retention policy configuration."}]}}
{"key": "705cde6de1d5f036c2d6af76822a700c482de8b5d17c07138ec1474363c7b35c", "value": {"batch_results": [{"compliance_id": "8.3.b", "title": "PCI Secure Software 8.3.b", "existing_functions_mapped": ["cloudtrail_log_access_logging_enabled", "cloudtrail_logs_s3_bucket_is_not_publicly_accessible"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "cloudtrail_log_server_integration_check", "boto3_api": "cloudtrail.describe_trails()", "service": "cloudtrail", "rationale": "To ensure integration with external log servers is correctly configured."}], "mapping_notes": "Existing functions cover secure access and non-public accessibility of logs, but do not verify integration with third-party log servers."}, {"compliance_id": "8.3.c", "title": "PCI Secure Software 8.3.c", "existing_functions_mapped": ["cloudtrail_kms_encryption_enabled", "cloudtrail_log_file_validation_enabled"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "cloudtrail_log_authentication_protection_check", "boto3_api": "cloudtrail.describe_trails()", "service": "cloudtrail", "rationale": "To ensure authentication parameters for log access are protected."}], "mapping_notes": "Existing functions ensure encryption and validation of logs, but do not cover authentication protection during transmission."}, {"compliance_id": "8.4.a", "title": "PCI Secure Software 8.4.a", "existing_functions_mapped": ["cloudtrail_log_retention_period_check"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "cloudtrail_log_append_only_check", "boto3_api": "cloudtrail.describe_trails()", "service": "cloudtrail", "rationale": "To ensure logs are append-only and not overwritten upon restart."}, {"name": "cloudtrail_log_file_privileges_check", "boto3_api": "s3.get_bucket_acl()", "service": "s3", "rationale": "To verify file privileges are set to maintain log integrity."}], "mapping_notes": "Existing function checks retention but does not ensure append-only behavior or file privilege settings."}]}}
{"key": "8ff1d2a4859c2c1f7eb01be0d6797cd46ebaf0df358e58fd5007d1a28e70a8d4", "value": {"batch_results": [{"compliance_id": "8.4.b", "title": "PCI Secure Software 8.4.b", "existing_functions_mapped": ["cloudtrail_log_file_validation_enabled", "cloudwatch_log_group_integrity_check"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "cloudwatch_log_group_space_availability_check", "boto3_api": "cloudwatch.describe_alarms()", "service": "cloudwatch", "rationale": "To ensure that there is sufficient space available for logging and to alert if space is insufficient."}], "mapping_notes": "Existing functions cover log integrity and validation but do not address handling of log space exhaustion or dataset locking."}, {"compliance_id": "9.1.a", "title": "PCI Secure Software 9.1.a", "existing_functions_mapped": ["cloudwatch_alarm_for_security_control_failures", "cloudwatch_log_metric_filter_policy_changes"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "cloudwatch_log_metric_filter_executable_integrity_check", "boto3_api": "cloudwatch.describe_metric_filters()", "service": "cloudwatch", "rationale": "To detect unauthorized changes to software executables and configuration files."}], "mapping_notes": "Current functions detect policy changes and security control failures but do not specifically address executable integrity."}, {"compliance_id": "9.1.b", "title": "PCI Secure Software 9.1.b", "existing_functions_mapped": ["cloudwatch_log_group_integrity_check"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "cloudwatch_log_group_periodic_integrity_check", "boto3_api": "cloudwatch.describe_log_groups()", "service": "cloudwatch", "rationale": "To ensure integrity checks are performed at least every 36 hours."}], "mapping_notes": "Existing function checks log group integrity but does not ensure periodic checks every 36 hours."}]}}
{"key": "37d2c94d0f61d23c06de31360c39b030084ee03042aa64cee4c296545dd0220e", "value": {"batch_results": [{"compliance_id": "9.1.c", "title": "PCI Secure Software 9.1.c", "existing_functions_mapped": ["cloudwatch_log_group_kms_encryption_enabled", "cloudtrail_kms_encryption_enabled"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "cloudwatch_anomaly_detection_encryption_check", "boto3_api": "cloudwatch.describe_alarms()", "service": "cloudwatch", "rationale": "To ensure that anomaly detection methods using cryptographic primitives are protected with encryption."}], "mapping_notes": "Existing functions cover encryption for logs and trails, but specific anomaly detection encryption checks are needed."}, {"compliance_id": "9.1.d", "title": "PCI Secure Software 9.1.d", "existing_functions_mapped": ["cloudwatch_log_group_no_secrets_in_logs", "cloudwatch_log_group_kms_encryption_enabled"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "cloudwatch_anomaly_detection_sensitive_data_protection_check", "boto3_api": "cloudwatch.describe_alarms()", "service": "cloudwatch", "rationale": "To ensure that stored values used in anomaly detection are protected as sensitive data."}], "mapping_notes": "Existing functions ensure no secrets in logs and encryption, but specific checks for anomaly detection data protection are needed."}, {"compliance_id": "9.1.e", "title": "PCI Secure Software 9.1.e", "existing_functions_mapped": ["cloudwatch_log_group_integrity_check"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "cloudwatch_anomaly_detection_integrity_protection_check", "boto3_api": "cloudwatch.describe_alarms()", "service": "cloudwatch", "rationale": "To ensure integrity protections are in place for configuration or dataset values modified during execution."}], "mapping_notes": "Existing functions cover log integrity, but specific checks for integrity protection during anomaly detection are needed."}]}}
{"key": "4b348670a9d0d62d76909b2693476795443338e7528f76ff66e5b0435ad6209e", "value": {"batch_results": [{"compliance_id": "9.1.f", "title": "PCI Secure Software 9.1.f", "existing_functions_mapped": ["cloudwatch_log_metric_filter_unauthorized_api_calls", "cloudwatch_log_metric_filter_authentication_failures"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "waf_rate_limiting_enabled", "boto3_api": "waf.get_rate_based_rule()", "service": "waf", "rationale": "To ensure that rate limiting is enabled to prevent brute-force attacks on input fields."}], "mapping_notes": "Existing functions cover detection of unauthorized API calls and authentication failures, but do not specifically address rate limiting for brute-force prevention."}, {"compliance_id": "9.1.g", "title": "PCI Secure Software 9.1.g", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "cloudwatch_third_party_integration_check", "boto3_api": "cloudwatch.describe_alarms()", "service": "cloudwatch", "rationale": "To verify integration with third-party tools for attack detection capabilities."}], "mapping_notes": "No existing functions directly address the requirement to verify third-party tool integration for attack detection."}, {"compliance_id": "10.1.a", "title": "PCI Secure Software 10.1.a", "existing_functions_mapped": ["cloudwatch_alarm_for_unusual_events", "cloudwatch_intrusion_detection_alerts_configured"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "securityhub_findings_for_common_attacks", "boto3_api": "securityhub.get_findings()", "service": "securityhub", "rationale": "To identify and assess common attack methods against the software."}], "mapping_notes": "Existing functions provide some coverage for unusual events and intrusion detection, but do not specifically identify common attack methods."}]}}
{"key": "ff85ecb9c9ffe3f24889749b9fd6cc0f0adf9208a4f9a63a56c7263ac0265636", "value": {"batch_results": [{"compliance_id": "10.2.b", "title": "PCI Secure Software 10.2.b", "existing_functions_mapped": ["codebuild_project_vulnerability_scan_enabled", "codebuild_project_secure_coding_practices_check"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "codebuild_project_third_party_vulnerability_scan_enabled", "boto3_api": "codebuild.batch_get_projects()", "service": "codebuild", "rationale": "To ensure third-party components are scanned for vulnerabilities."}], "mapping_notes": "Existing functions cover vulnerability scanning and secure coding practices but do not explicitly cover third-party components or the use of automated tools for the entire code base."}, {"compliance_id": "10.2.c", "title": "PCI Secure Software 10.2.c", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "codebuild_project_vulnerability_ranking_system_check", "boto3_api": "codebuild.batch_get_projects()", "service": "codebuild", "rationale": "To verify the use of an industry-standard vulnerability-ranking system."}, {"name": "codebuild_project_vulnerability_remediation_plan_check", "boto3_api": "codebuild.batch_get_projects()", "service": "codebuild", "rationale": "To ensure a remediation plan is maintained for detected vulnerabilities."}], "mapping_notes": "No existing functions address the classification of vulnerabilities or the maintenance of a remediation plan."}, {"compliance_id": "11.1.a", "title": "PCI Secure Software 11.1.a", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "codebuild_project_security_update_release_criteria_check", "boto3_api": "codebuild.batch_get_projects()", "service": "codebuild", "rationale": "To verify that criteria for releasing security updates are defined and followed."}], "mapping_notes": "No existing functions cover the criteria for releasing software updates to fix security vulnerabilities."}]}}
{"key": "61fb9e1ee21e46fcea4b5c3128e4168106091cbf817aa8d9b0911ab6df884ad3", "value": {"batch_results": [{"compliance_id": "11.1.b", "title": "PCI Secure Software 11.1.b", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "ec2_ami_patch_compliance_check", "boto3_api": "ec2.describe_images()", "service": "ec2", "rationale": "Check if AMIs are patched with the latest security updates."}, {"name": "rds_instance_patch_level_check", "boto3_api": "rds.describe_db_instances()", "service": "rds", "rationale": "Ensure RDS instances are running the latest patch level."}], "mapping_notes": "No existing functions directly address the timely availability of software updates for known vulnerabilities."}, {"compliance_id": "11.2.a", "title": "PCI Secure Software 11.2.a", "existing_functions_mapped": ["codebuild_project_logging_enabled", "codebuild_project_s3_logs_encrypted"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "s3_bucket_versioning_enabled", "boto3_api": "s3.get_bucket_versioning()", "service": "s3", "rationale": "Ensure S3 buckets used for software distribution have versioning enabled to maintain integrity."}], "mapping_notes": "Existing functions cover logging and encryption but do not fully ensure the integrity of software code during transmission."}, {"compliance_id": "11.2.b", "title": "PCI Secure Software 11.2.b", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "codeartifact_package_integrity_check", "boto3_api": "codeartifact.list_packages()", "service": "codeartifact", "rationale": "Verify the integrity of packages in CodeArtifact repositories."}], "mapping_notes": "No existing functions address user input or interaction for validating software code integrity."}]}}
{"key": "d2cbea1b4feec452e068d4b37d205db38c2160e8ad23dab749523ab28e264b9a", "value": {"batch_results": [{"compliance_id": "11.2.c", "title": "PCI Secure Software 11.2.c", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "s3_bucket_tls_encryption_enabled", "boto3_api": "s3.get_bucket_encryption()", "service": "s3", "rationale": "To ensure that software distribution via S3 buckets uses TLS for secure transmission."}, {"name": "cloudfront_distribution_tls_enabled", "boto3_api": "cloudfront.get_distribution_config()", "service": "cloudfront", "rationale": "To verify that CloudFront distributions use TLS for secure content delivery."}], "mapping_notes": "No existing functions directly check for cryptographically secure methods in software distribution. New functions are needed to ensure TLS is used in S3 and CloudFront."}, {"compliance_id": "11.2.d", "title": "PCI Secure Software 11.2.d", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "This requirement involves stakeholder notification and guidance, which cannot be programmatically checked using boto3 APIs."}, {"compliance_id": "11.2.e", "title": "PCI Secure Software 11.2.e", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "This requirement involves stakeholder notification about vulnerabilities, which cannot be programmatically checked using boto3 APIs."}]}}
{"key": "86944fa8ca0e0c7a8969548ce3f9de9ec84c5b9dc545a2b5f71d764093694ed1", "value": {"batch_results": [{"compliance_id": "11.2.f", "title": "PCI Secure Software 11.2.f", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "codebuild_project_source_code_integrity_check", "boto3_api": "codebuild.batch_get_projects()", "service": "codebuild", "rationale": "Ensure that the source code used in builds is verified for integrity."}, {"name": "s3_bucket_versioning_enabled", "boto3_api": "s3.get_bucket_versioning()", "service": "s3", "rationale": "Ensure that versioning is enabled on S3 buckets storing software updates to maintain integrity."}], "mapping_notes": "No existing functions directly address the secure delivery and integrity of software updates. New functions are suggested to ensure source code integrity and versioning of update storage."}, {"compliance_id": "12.1.a", "title": "PCI Secure Software 12.1.a", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "This requirement pertains to documentation and guidance, which cannot be programmatically checked using boto3 APIs."}, {"compliance_id": "12.1.b", "title": "PCI Secure Software 12.1.b", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "This requirement involves documentation and guidance for secure installation and configuration, which is not programmatically checkable with boto3 APIs."}]}}
{"key": "b25d898333514d7dd853f711eaa070d65b14528b0080c0818de413109911b9b2", "value": {"batch_results": [{"compliance_id": "A.1.1", "title": "PCI Secure Software A.1.1", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "rds_instance_no_sensitive_data_storage", "boto3_api": "rds.describe_db_instances()", "service": "rds", "rationale": "Check RDS instances for configurations that might store sensitive authentication data."}, {"name": "s3_bucket_no_sensitive_data_storage", "boto3_api": "s3.list_objects_v2()", "service": "s3", "rationale": "Ensure S3 buckets do not store sensitive authentication data."}], "mapping_notes": "No existing functions directly address the storage of sensitive authentication data. New functions are needed to check RDS and S3 configurations."}, {"compliance_id": "A.2.1", "title": "PCI Secure Software A.2.1", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "s3_bucket_data_retention_policy_check", "boto3_api": "s3.get_bucket_lifecycle_configuration()", "service": "s3", "rationale": "Check if S3 buckets have lifecycle policies for secure deletion of cardholder data."}], "mapping_notes": "No existing functions provide guidance on secure deletion of cardholder data. A new function is needed to check S3 lifecycle policies."}, {"compliance_id": "A.2.2.a", "title": "PCI Secure Software A.2.2.a", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "rds_instance_pan_masking_check", "boto3_api": "rds.describe_db_instances()", "service": "rds", "rationale": "Ensure RDS instances have configurations to mask PAN displays."}], "mapping_notes": "No existing functions address the masking of PAN displays. A new function is needed to verify RDS configurations for PAN masking."}]}}
{"key": "df9c4b7776a55e560d2db0c19c79dfc453f1f2115e22f429c6970ee79fbcc40e", "value": {"batch_results": [{"compliance_id": "A.2.2.b", "title": "PCI Secure Software A.2.2.b", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "rds_instance_pan_masking_enabled", "boto3_api": "rds.describe_db_instances()", "service": "rds", "rationale": "Check if RDS instances have PAN masking features enabled to protect cardholder data."}], "mapping_notes": "No existing functions directly address PAN masking for stored cardholder data."}, {"compliance_id": "A.2.2.c", "title": "PCI Secure Software A.2.2.c", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "This requirement involves guidance and documentation, which cannot be programmatically checked using boto3 APIs."}, {"compliance_id": "A.2.2.d", "title": "PCI Secure Software A.2.2.d", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "rds_instance_pan_display_authorization_check", "boto3_api": "rds.describe_db_instances()", "service": "rds", "rationale": "Verify that RDS instances require explicit authorization to display any element of the PAN."}], "mapping_notes": "No existing functions directly address the requirement for masking PAN by default and requiring authorization for display."}]}}
{"key": "be48ab671459a87242ed281d44dccf8b595317205cbbbdf193a8bc376ecf9b03", "value": {"batch_results": [{"compliance_id": "A.2.3.a", "title": "PCI Secure Software A.2.3.a", "existing_functions_mapped": ["cloudtrail_logs_s3_bucket_is_not_publicly_accessible", "s3_bucket_encryption_enabled"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "rds_instance_storage_encrypted", "boto3_api": "rds.describe_db_instances()", "service": "rds", "rationale": "Ensure RDS instances storing cardholder data are encrypted."}, {"name": "dynamodb_table_encryption_enabled", "boto3_api": "dynamodb.describe_table()", "service": "dynamodb", "rationale": "Ensure DynamoDB tables storing cardholder data are encrypted."}], "mapping_notes": "Existing functions cover encryption for S3 and CloudTrail logs, but additional checks are needed for RDS and DynamoDB encryption."}, {"compliance_id": "A.2.3.b", "title": "PCI Secure Software A.2.3.b", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "This requirement involves guidance and documentation, which cannot be programmatically checked using boto3 APIs."}, {"compliance_id": "A.2.3.c", "title": "PCI Secure Software A.2.3.c", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "This requirement involves testing software logic for tokenization and truncation, which cannot be programmatically checked using boto3 APIs."}]}}
{"key": "83dd2e36ea1506dd049f56a2e071f391fffe119f928a030065ab70a1d9e8b75b", "value": {"batch_results": [{"compliance_id": "A.2.3.d", "title": "PCI Secure Software A.2.3.d", "existing_functions_mapped": ["backup_recovery_point_encrypted", "backup_vaults_encrypted"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "s3_object_encryption_enabled", "boto3_api": "s3.get_bucket_encryption()", "service": "s3", "rationale": "To ensure that files generated for export or backup in S3 are encrypted, rendering PAN unreadable."}], "mapping_notes": "Existing functions cover backup encryption but do not specifically address file exports or removable media. A new function for S3 object encryption is suggested to fill this gap."}, {"compliance_id": "A.2.3.e", "title": "PCI Secure Software A.2.3.e", "existing_functions_mapped": ["cloudtrail_logs_s3_bucket_is_not_publicly_accessible", "cloudtrail_kms_encryption_enabled"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "cloudwatch_log_group_kms_encryption_enabled", "boto3_api": "logs.describe_log_groups()", "service": "cloudwatch", "rationale": "To ensure that any log files potentially containing PAN are encrypted, rendering PAN unreadable."}], "mapping_notes": "Existing functions ensure logs are not publicly accessible and are encrypted, but do not specifically address PAN in logs. A new function for CloudWatch log group encryption is suggested."}, {"compliance_id": "B.1.1", "title": "PCI Secure Software B.1.1", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "This requirement pertains to documentation, which cannot be programmatically checked using boto3 APIs. No functions are suggested."}]}}
{"key": "1ab84a4cb2523c29b6dd17b77ef68506de1944375ade4315e7380b83388e0311", "value": {"batch_results": [{"compliance_id": "B.1.2", "title": "PCI Secure Software B.1.2", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "This requirement pertains to documentation and data flow descriptions, which cannot be programmatically checked using AWS configurations."}, {"compliance_id": "B.1.3", "title": "PCI Secure Software B.1.3", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "This requirement involves documentation of configurable options affecting security, which is not programmatically verifiable through AWS resource configurations."}, {"compliance_id": "B.2.1", "title": "PCI Secure Software B.2.1", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "This requirement is about software design for specific hardware (PCI-approved POI devices), which cannot be verified through AWS resource configurations."}]}}
{"key": "9090b7bae5a72d8441b0dc80dccd2f65e9da1ab6e97fd12487c48e2909da7ff7", "value": {"batch_results": [{"compliance_id": "B.2.5", "title": "PCI Secure Software B.2.5", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "lambda_function_no_clear_text_data_sharing", "boto3_api": "lambda.get_function_configuration()", "service": "lambda", "rationale": "Ensure Lambda functions do not share clear-text account data with other software."}], "mapping_notes": "No existing functions directly address the prevention of clear-text data sharing between software components."}, {"compliance_id": "B.2.6", "title": "PCI Secure Software B.2.6", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "ec2_instance_shared_resources_security_check", "boto3_api": "ec2.describe_instances()", "service": "ec2", "rationale": "Verify EC2 instances use shared resources securely according to security policies."}], "mapping_notes": "No existing functions ensure secure integration of shared resources as per vendor security guidance."}, {"compliance_id": "B.2.7", "title": "PCI Secure Software B.2.7", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "iam_policy_application_segregation_enforced", "boto3_api": "iam.get_policy()", "service": "iam", "rationale": "Ensure IAM policies enforce application segregation and are not bypassed."}], "mapping_notes": "No existing functions check for bypassing or rendering ineffective application segregation."}]}}
{"key": "6fc3a7c7a2fe30bba6cb995193711050d2655f7c634580175e32f7a4d1f6d605", "value": {"batch_results": [{"compliance_id": "B.2.8", "title": "PCI Secure Software B.2.8", "existing_functions_mapped": ["awslambda_function_code_signing_enabled"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "ec2_ami_code_signing_enabled", "boto3_api": "ec2.describe_images()", "service": "ec2", "rationale": "Ensure that AMI images are cryptographically signed to verify integrity and authenticity."}], "mapping_notes": "The existing function 'awslambda_function_code_signing_enabled' partially covers the requirement for Lambda functions. Additional checks are needed for EC2 AMIs."}, {"compliance_id": "B.2.9", "title": "PCI Secure Software B.2.9", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "s3_object_integrity_check", "boto3_api": "s3.get_object()", "service": "s3", "rationale": "Verify the integrity of software prompt files stored in S3 using checksums or signatures."}], "mapping_notes": "No existing functions directly address the integrity protection of software prompt files. A new function is needed to ensure S3 object integrity."}, {"compliance_id": "B.3.1", "title": "PCI Secure Software B.3.1", "existing_functions_mapped": ["apigatewayv2_api_authorizers_enabled", "appsync_field_level_logging_enabled"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "lambda_function_input_validation_enabled", "boto3_api": "lambda.get_function_configuration()", "service": "lambda", "rationale": "Ensure Lambda functions validate all user and external inputs to mitigate attacks."}], "mapping_notes": "Existing functions partially cover input validation for API Gateway and AppSync. Additional checks are needed for Lambda functions."}]}}
{"key": "4705547bae380be914cabbf0fb16f586b918f02d906b14d21330bb8a538f5c17", "value": {"batch_results": [{"compliance_id": "B.3.2", "title": "PCI Secure Software B.3.2", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "No existing functions directly address return value checks and error handling in AWS configurations."}, {"compliance_id": "B.3.3", "title": "PCI Secure Software B.3.3", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "No existing functions directly address race condition avoidance in AWS configurations."}, {"compliance_id": "B.4.1", "title": "PCI Secure Software B.4.1", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "No existing functions directly address the documentation and process for software vulnerability testing prior to updates or releases."}]}}
{"key": "1f46477f2122b09c532f42fbd632d8cad7b244f1a7e9804739a46e0f7fb9c9cd", "value": {"batch_results": [{"compliance_id": "B.5.1", "title": "PCI Secure Software B.5.1", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "This requirement pertains to implementation guidance documentation, which cannot be programmatically checked using boto3 APIs."}, {"compliance_id": "B.5.2", "title": "PCI Secure Software B.5.2", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "This requirement involves adherence to vendor guidance for secure configuration, which is not programmatically verifiable through AWS resource configurations."}, {"compliance_id": "C.1.1", "title": "PCI Secure Software C.1.1", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "The requirement for a software bill of materials (SBOM) is related to documentation and cannot be verified through AWS resource configurations using boto3 APIs."}]}}
{"key": "fa4914c88ef4bed0bca5043cafd9f9eaf7f0a30ddf1d144a8fbb1a7d879eeb68", "value": {"batch_results": [{"compliance_id": "C.1.2", "title": "PCI Secure Software C.1.2", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "lambda_function_dependencies_check", "boto3_api": "lambda.get_function_configuration()", "service": "lambda", "rationale": "To programmatically check the dependencies of Lambda functions as part of the SBOM."}, {"name": "ec2_instance_ami_dependencies_check", "boto3_api": "ec2.describe_images()", "service": "ec2", "rationale": "To identify the software components and dependencies used in EC2 AMIs."}], "mapping_notes": "No existing functions directly address the requirement to describe primary components and services in use, along with their dependencies."}, {"compliance_id": "C.1.3", "title": "PCI Secure Software C.1.3", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "rds_instance_software_dependencies_check", "boto3_api": "rds.describe_db_instances()", "service": "rds", "rationale": "To gather information on software dependencies in RDS instances used in production environments."}, {"name": "apigateway_dependencies_check", "boto3_api": "apigateway.get_rest_apis()", "service": "apigateway", "rationale": "To identify dependencies in API Gateway configurations as part of the SBOM."}], "mapping_notes": "No existing functions cover the requirement to include software dependencies in the production environment for 'as a service' software."}, {"compliance_id": "C.1.4", "title": "PCI Secure Software C.1.4", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "s3_bucket_object_metadata_check", "boto3_api": "s3.list_objects_v2()", "service": "s3", "rationale": "To track metadata of S3 objects, which can be part of the software supply chain."}, {"name": "ecs_task_definition_dependencies_check", "boto3_api": "ecs.describe_task_definition()", "service": "ecs", "rationale": "To track ECS task definitions and their dependencies across the software supply chain."}], "mapping_notes": "No existing functions provide sufficient information about each component or service for tracking across the software supply chain."}]}}
{"key": "6616461ad4e4bcc481360b4c5112ec7fb36bcf63e9d605ab4d78d9ccd3620180", "value": {"batch_results": [{"compliance_id": "C.1.5", "title": "PCI Secure Software C.1.5", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "codebuild_project_sbom_generation_check", "boto3_api": "codebuild.list_projects()", "service": "codebuild", "rationale": "Check if SBOM generation is configured in CodeBuild projects when software is updated."}], "mapping_notes": "No existing function directly checks for SBOM generation upon software updates."}, {"compliance_id": "C.1.6", "title": "PCI Secure Software C.1.6", "existing_functions_mapped": ["codebuild_project_vulnerability_scan_enabled"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "codeartifact_vulnerability_monitoring_enabled", "boto3_api": "codeartifact.list_repositories()", "service": "codeartifact", "rationale": "Ensure vulnerability monitoring is enabled for third-party components in CodeArtifact."}], "mapping_notes": "Existing function covers vulnerability scanning in CodeBuild, but not for all third-party components."}, {"compliance_id": "C.1.7", "title": "PCI Secure Software C.1.7", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "s3_object_authenticity_verification_enabled", "boto3_api": "s3.get_object()", "service": "s3", "rationale": "Verify authenticity of components fetched from S3 by checking object integrity and signatures."}], "mapping_notes": "No existing function verifies the authenticity of third-party hosted components."}]}}
{"key": "6419529f8ca61622c3aeff4c7a7163092fe2bab23dbcbdde2fc39f764555cfe8", "value": {"batch_results": [{"compliance_id": "C.2.1", "title": "PCI Secure Software C.2.1", "existing_functions_mapped": ["cloudfront_distributions_https_enabled", "cloudfront_distributions_origin_traffic_encrypted", "cloudfront_distributions_s3_origin_access_control", "awslambda_function_not_publicly_accessible"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "apigateway_rest_api_authorizers_enabled", "boto3_api": "apigateway.get_authorizers()", "service": "apigateway", "rationale": "Ensure that API Gateway REST APIs have authorizers enabled to authenticate access."}], "mapping_notes": "Existing functions cover HTTPS and access control for CloudFront and Lambda, but API Gateway authorizers need to be checked for authentication."}, {"compliance_id": "C.2.1.1", "title": "PCI Secure Software C.2.1.1", "existing_functions_mapped": ["cognito_user_pool_mfa_enabled", "cognito_user_pool_password_policy_minimum_length_14", "cognito_user_pool_password_policy_lowercase", "cognito_user_pool_password_policy_uppercase", "cognito_user_pool_password_policy_number", "cognito_user_pool_password_policy_symbol"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "iam_user_mfa_enabled", "boto3_api": "iam.list_mfa_devices()", "service": "iam", "rationale": "Ensure IAM users have MFA enabled for strong authentication."}], "mapping_notes": "Cognito user pool settings cover password policies and MFA, but IAM user MFA needs to be checked."}, {"compliance_id": "C.2.1.2", "title": "PCI Secure Software C.2.1.2", "existing_functions_mapped": ["cognito_user_pool_advanced_security_enabled", "cognito_user_pool_blocks_compromised_credentials_sign_in_attempts", "cognito_user_pool_blocks_potential_malicious_sign_in_attempts"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "kms_key_rotation_enabled", "boto3_api": "kms.get_key_rotation_status()", "service": "kms", "rationale": "Ensure KMS keys used for encryption have automatic rotation enabled to protect credentials."}], "mapping_notes": "Cognito settings cover advanced security features, but KMS key rotation is needed for robust credential protection."}]}}
{"key": "4520d4cab80a43e089e6b019328dde4a09dc61fc57689192c42a8aacc3fb19ea", "value": {"batch_results": [{"compliance_id": "C.2.1.3", "title": "PCI Secure Software C.2.1.3", "existing_functions_mapped": ["awslambda_function_iam_role_check", "awslambda_function_least_privilege_policy_check", "cloudfront_distributions_using_waf"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "apigateway_rest_api_authorizers_enabled", "boto3_api": "apigateway.get_authorizers()", "service": "apigateway", "rationale": "Ensure that API Gateway REST APIs have authorizers enabled to enforce authentication decisions."}], "mapping_notes": "Existing functions cover IAM role checks and WAF usage, but do not fully address authentication enforcement within the software itself."}, {"compliance_id": "C.2.2", "title": "PCI Secure Software C.2.2", "existing_functions_mapped": ["cloudfront_distributions_https_enabled", "cloudfront_distributions_using_waf", "awslambda_function_not_publicly_accessible"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "ec2_security_group_restrict_internet_access", "boto3_api": "ec2.describe_security_groups()", "service": "ec2", "rationale": "Check that EC2 security groups restrict access to Internet-accessible interfaces to authorized users only."}], "mapping_notes": "Existing functions ensure HTTPS and WAF usage, but do not fully restrict access to authorized users only."}, {"compliance_id": "C.2.3", "title": "PCI Secure Software C.2.3", "existing_functions_mapped": ["cloudfront_distributions_using_waf", "awslambda_function_cross_account_access_check"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "s3_bucket_policy_restrict_public_access", "boto3_api": "s3.get_bucket_policy()", "service": "s3", "rationale": "Ensure S3 bucket policies restrict access to authorized users only, preventing public access."}], "mapping_notes": "Existing functions cover WAF usage and cross-account access checks, but do not fully restrict access to authorized users for all resources."}]}}
{"key": "9e93142a13e2cdbd592fe35db88bdc4835dbd8c833cce3fd49c3b5d8d7bf4d8d", "value": {"batch_results": [{"compliance_id": "C.2.1", "title": "PCI Secure Software C.2.1", "existing_functions_mapped": ["cognito_user_pool_mfa_enabled", "cognito_user_pool_password_policy_minimum_length_14"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "iam_user_mfa_enabled", "boto3_api": "iam.list_users()", "service": "iam", "rationale": "To ensure that all users accessing sensitive functions have MFA enabled."}], "mapping_notes": "Mapped existing functions related to user authentication but identified a gap in checking MFA for IAM users."}, {"compliance_id": "C.2.2", "title": "PCI Secure Software C.2.2", "existing_functions_mapped": ["cognito_user_pool_blocks_compromised_credentials_sign_in_attempts", "cognito_user_pool_blocks_potential_malicious_sign_in_attempts"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "iam_user_no_public_access", "boto3_api": "iam.list_users()", "service": "iam", "rationale": "To check that IAM users do not have public access to sensitive resources."}], "mapping_notes": "Existing functions provide some coverage for blocking unauthorized access but do not fully address public access restrictions."}, {"compliance_id": "C.2.3", "title": "PCI Secure Software C.2.3", "existing_functions_mapped": ["cognito_user_pool_client_prevent_user_existence_errors", "cognito_user_pool_client_token_revocation_enabled"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "lambda_function_no_public_access", "boto3_api": "lambda.list_functions()", "service": "lambda", "rationale": "To ensure that Lambda functions exposed through the internet are restricted to authorized users only."}], "mapping_notes": "Existing functions help prevent unauthorized access but do not cover all resources exposed through internet-accessible interfaces."}]}}
{"key": "49d08085e6840ac89a38e6e8fd390f9b0f7e6d40807b7be93ec02aea909e85f4", "value": {"batch_results": [{"compliance_id": "C.3.5", "title": "PCI Secure Software C.3.5", "existing_functions_mapped": ["cloudfront_distribution_csp_policy_check", "cloudfront_distribution_script_integrity_check", "cloudfront_distribution_security_headers_check", "cloudfront_distributions_https_enabled", "cloudfront_distributions_using_waf"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "waf_web_acl_protection_enabled", "boto3_api": "waf.get_web_acl()", "service": "waf", "rationale": "Ensure WAF is configured to protect against hostile object creation and data tampering."}], "mapping_notes": "Existing functions cover some aspects of web security, such as CSP and HTTPS, but additional WAF checks are needed for comprehensive protection."}, {"compliance_id": "C.3.6", "title": "PCI Secure Software C.3.6", "existing_functions_mapped": ["cloudfront_distribution_csp_policy_check", "cloudfront_distributions_https_enabled"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "cloudfront_distribution_cors_policy_check", "boto3_api": "cloudfront.get_distribution_config()", "service": "cloudfront", "rationale": "Check for proper CORS policy configurations to prevent multi-origin resource sharing attacks."}], "mapping_notes": "While CSP and HTTPS provide some protection, a specific check for CORS policies is necessary to fully address multi-origin resource sharing vulnerabilities."}, {"compliance_id": "C.4.1", "title": "PCI Secure Software C.4.1", "existing_functions_mapped": ["cloudfront_distributions_https_enabled", "cloudfront_distributions_origin_traffic_encrypted", "cloudtrail_kms_encryption_enabled"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "s3_bucket_ssl_requests_only", "boto3_api": "s3.get_bucket_policy()", "service": "s3", "rationale": "Ensure S3 buckets only accept SSL requests to protect sensitive data in transit."}], "mapping_notes": "Existing functions cover HTTPS and KMS encryption, but additional checks for SSL-only S3 bucket access are needed to ensure all sensitive data transmissions are encrypted."}]}}

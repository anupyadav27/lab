{"key": "e0099f7b0f02fb5e9584ccfda94f48015335e9b901b7dc8dec00efce416ce311", "value": {"batch_results": [{"compliance_id": "AC-1", "title": "NIST AC-1", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "AC-1 focuses on policy and procedural documentation, which cannot be implemented programmatically using Kubernetes APIs."}, {"compliance_id": "AC-2", "title": "NIST AC-2", "existing_functions_mapped": ["rbac_minimize_pod_creation_access", "rbac_minimize_privileged_service_account_assignment", "rbac_minimize_secret_access", "rbac_minimize_wildcard_use_roles"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_rbac_account_monitoring", "kubernetes_api": "k8s.api.list_users()", "service": "k8s_rbac", "rationale": "To monitor and manage user accounts and roles programmatically."}, {"name": "k8s_rbac_account_lifecycle_management", "kubernetes_api": "k8s.api.manage_user_lifecycle()", "service": "k8s_rbac", "rationale": "To automate the creation, modification, and deletion of user accounts in accordance with defined policies."}], "mapping_notes": "Existing RBAC functions cover some aspects of account management, but additional functions are needed to fully automate account lifecycle and monitoring."}, {"compliance_id": "AC-3", "title": "NIST AC-3", "existing_functions_mapped": ["apiserver_auth_mode_include_rbac", "enforce_pod_security_policies", "create_pod_security_policies"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_rbac_access_enforcement", "kubernetes_api": "k8s.api.enforce_access_policies()", "service": "k8s_rbac", "rationale": "To ensure that access enforcement policies are consistently applied across all resources."}], "mapping_notes": "While existing functions provide some access control mechanisms, additional enforcement functions are needed for comprehensive coverage."}, {"compliance_id": "AC-4", "title": "NIST AC-4", "existing_functions_mapped": ["namespace_network_policy_enforcement_check", "core_namespace_network_policy_check", "network_policy_isolation_check"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_network_flow_control", "kubernetes_api": "k8s.api.manage_network_flows()", "service": "k8s_network", "rationale": "To programmatically enforce information flow policies within and between Kubernetes clusters."}], "mapping_notes": "Network policies provide some control over information flow, but additional functions are needed to enforce complex flow policies."}, {"compliance_id": "AC-5", "title": "NIST AC-5", "existing_functions_mapped": ["rbac_minimize_privileged_service_account_assignment", "rbac_minimize_wildcard_use_roles"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_rbac_separation_of_duties", "kubernetes_api": "k8s.api.enforce_separation_of_duties()", "service": "k8s_rbac", "rationale": "To enforce separation of duties by ensuring that roles and permissions are assigned according to defined policies."}], "mapping_notes": "Existing RBAC functions help minimize privilege but do not fully enforce separation of duties without additional role management."}]}}

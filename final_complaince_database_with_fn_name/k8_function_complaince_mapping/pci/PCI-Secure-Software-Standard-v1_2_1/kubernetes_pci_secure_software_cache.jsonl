{"key": "0ebff5f99c16d7c96faff29cfe0d8e6395166f328414542cc5995c2e556cd220", "value": {"batch_results": [{"compliance_id": "1.1.1.1.a", "title": "PCI Secure Software 1.1.1.1.a", "existing_functions_mapped": ["k8s_secret_secure_distribution", "rbac_minimize_secret_access"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_data_inventory_tracking", "kubernetes_api": "k8s.api.list_resources()", "service": "k8s_core", "rationale": "To maintain an inventory of all sensitive data stored, processed, or transmitted by the software."}], "mapping_notes": "Existing functions help secure secrets but do not provide a complete inventory of sensitive data."}, {"compliance_id": "1.1.1.1.b", "title": "PCI Secure Software 1.1.1.1.b", "existing_functions_mapped": ["k8s_secret_secure_distribution"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_storage_location_tracking", "kubernetes_api": "k8s.api.get_pod_volumes()", "service": "k8s_core", "rationale": "To track where sensitive data is stored, including temporary and non-volatile storage."}], "mapping_notes": "Existing functions secure secret distribution but do not track storage locations."}, {"compliance_id": "1.1.1.1.c", "title": "PCI Secure Software 1.1.1.1.c", "existing_functions_mapped": ["apply_security_context_to_containers", "enforce_pod_security_policies"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_sensitive_data_protection_controls", "kubernetes_api": "k8s.api.get_security_policies()", "service": "k8s_core", "rationale": "To describe and verify security controls implemented to protect sensitive data."}], "mapping_notes": "Existing functions enforce security contexts but do not fully describe all security controls for sensitive data."}, {"compliance_id": "1.1.1.1.d", "title": "PCI Secure Software 1.1.1.1.d", "existing_functions_mapped": ["k8s_secret_key_rotation", "k8s_secret_key_retirement"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_sensitive_data_validation_testing", "kubernetes_api": "k8s.api.run_tests()", "service": "k8s_testing", "rationale": "To validate evidence of sensitive data handling as per requirements 1.1.a through 1.1.c."}], "mapping_notes": "Existing functions manage key rotation but do not validate all evidence of sensitive data handling."}, {"compliance_id": "1.1.1.1.e", "title": "PCI Secure Software 1.1.1.1.e", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "k8s_transaction_type_identification", "kubernetes_api": "k8s.api.get_transaction_data()", "service": "k8s_core", "rationale": "To identify transaction types and card data elements supported by the software."}], "mapping_notes": "No existing functions directly support identifying transaction types and card data elements."}]}}
{"key": "1fac7c8741536ecb50347259493c4580dee88eb00c085561f44eebb0284f3dc6", "value": {"batch_results": [{"compliance_id": "2.2.2.2.c", "title": "PCI Secure Software 2.2.2.2.c", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "k8s_service_enable_security_controls_on_init", "kubernetes_api": "k8s.api.patch()", "service": "k8s_service", "rationale": "Automatically enable security controls during service initialization to ensure compliance with security requirements."}], "mapping_notes": "No existing Kubernetes function directly enables security controls upon installation or initialization. A new function is needed to ensure security features are enabled by default."}, {"compliance_id": "2.3.2.3.a", "title": "PCI Secure Software 2.3.2.3.a", "existing_functions_mapped": ["k8s_secret_key_rotation", "k8s_secret_secure_distribution"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_rbac_check_default_credentials", "kubernetes_api": "k8s.api.list()", "service": "k8s_rbac", "rationale": "Identify and report default credentials in use to ensure they are changed post-installation."}], "mapping_notes": "Existing functions handle key rotation and secure distribution but do not specifically address default credentials. Additional checks are needed to identify default credentials."}, {"compliance_id": "2.3.2.3.b", "title": "PCI Secure Software 2.3.2.3.b", "existing_functions_mapped": ["k8s_secret_key_rotation", "k8s_secret_secure_distribution"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_rbac_verify_default_credentials_removal", "kubernetes_api": "k8s.api.get()", "service": "k8s_rbac", "rationale": "Verify that default credentials are not present or used after installation."}], "mapping_notes": "Existing functions support secure key management but do not verify the removal of default credentials. A new function is needed for verification."}, {"compliance_id": "2.3.2.3.c", "title": "PCI Secure Software 2.3.2.3.c", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "k8s_rbac_user_input_for_credential_change", "kubernetes_api": "k8s.api.update()", "service": "k8s_rbac", "rationale": "Facilitate user input for changing default credentials to ensure compliance with security requirements."}], "mapping_notes": "No existing Kubernetes function facilitates user input for credential changes. A new function is required to handle this process."}, {"compliance_id": "2.3.2.3.d", "title": "PCI Secure Software 2.3.2.3.d", "existing_functions_mapped": ["k8s_secret_key_rotation", "k8s_secret_secure_distribution"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_rbac_enforce_non_default_credentials", "kubernetes_api": "k8s.api.enforce()", "service": "k8s_rbac", "rationale": "Ensure that default credentials are not used by enforcing non-default credentials post-installation."}], "mapping_notes": "Existing functions manage secure key distribution but do not enforce the use of non-default credentials. Additional enforcement is necessary."}]}}
{"key": "6ce1e1ddbc283baf4c33b018c36b77f588dddced0c97ae9749a1b3f2e5faa021", "value": {"batch_results": [{"compliance_id": "3.1.3.1.c", "title": "PCI Secure Software 3.1.3.1.c", "existing_functions_mapped": ["core_minimize_admission_hostpath_volumes", "core_minimize_privileged_containers", "k8s_secret_secure_distribution"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_pod_sensitive_data_debugging_control", "kubernetes_api": "k8s.api.patch_pod()", "service": "k8s_pod", "rationale": "To ensure sensitive data used for debugging is explicitly enabled and securely deleted upon closure."}], "mapping_notes": "Existing functions help in minimizing exposure and securing secrets, but do not fully address the need for explicit user interaction and secure deletion of debugging data."}, {"compliance_id": "3.1.3.1.d", "title": "PCI Secure Software 3.1.3.1.d", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "k8s_pod_sensitive_data_retention_configuration", "kubernetes_api": "k8s.api.update_configmap()", "service": "k8s_pod", "rationale": "To programmatically configure and enforce retention periods for sensitive data."}], "mapping_notes": "No existing Kubernetes functions directly address the configuration of retention periods for sensitive data."}, {"compliance_id": "3.2.3.2.a", "title": "PCI Secure Software 3.2.3.2.a", "existing_functions_mapped": ["k8s_secret_key_rotation", "k8s_secret_secure_distribution"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_pod_transient_data_secure_deletion", "kubernetes_api": "k8s.api.delete_pod()", "service": "k8s_pod", "rationale": "To ensure transient data is securely deleted after use."}], "mapping_notes": "Existing functions help secure secrets but do not cover the secure deletion of transient data in memory."}, {"compliance_id": "3.2.3.2.b", "title": "PCI Secure Software 3.2.3.2.b", "existing_functions_mapped": ["k8s_pod_prevent_key_substitution"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_pod_transient_data_immutability_check", "kubernetes_api": "k8s.api.get_pod()", "service": "k8s_pod", "rationale": "To verify that transient data does not use immutable objects."}], "mapping_notes": "Existing functions help prevent key substitution but do not verify the immutability of transient data."}, {"compliance_id": "3.2.3.2.c", "title": "PCI Secure Software 3.2.3.2.c", "existing_functions_mapped": ["core_minimize_privileged_containers", "k8s_secret_secure_distribution"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_pod_transient_data_debugging_control", "kubernetes_api": "k8s.api.patch_pod()", "service": "k8s_pod", "rationale": "To ensure transient data for debugging is explicitly enabled and securely deleted upon closure."}], "mapping_notes": "Existing functions help in securing data but do not fully address the need for explicit user interaction and secure deletion of transient debugging data."}]}}
{"key": "4040b4af54a29aff1d746052443964e1c323d3345e952698ef410eb2501f8878", "value": {"batch_results": [{"compliance_id": "3.3.3.3.e", "title": "PCI Secure Software 3.3.3.3.e", "existing_functions_mapped": ["k8s_secret_secure_distribution", "rbac_minimize_secret_access"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_pod_user_input_guidance_check", "kubernetes_api": "k8s.api.get_pod_annotations()", "service": "k8s_pod", "rationale": "To ensure guidance on configuring protection methods is provided through annotations or labels."}], "mapping_notes": "Existing functions cover secure distribution and access control of secrets but do not address user input guidance."}, {"compliance_id": "3.4.3.4.a", "title": "PCI Secure Software 3.4.3.4.a", "existing_functions_mapped": ["keep_terminated_pod_volumes_check"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_pod_secure_data_deletion", "kubernetes_api": "k8s.api.delete_pod_with_secure_wipe()", "service": "k8s_pod", "rationale": "To ensure persistent sensitive data is securely deleted and rendered unrecoverable."}], "mapping_notes": "Current function checks for volume retention but does not ensure data is irretrievable."}, {"compliance_id": "3.4.3.4.b", "title": "PCI Secure Software 3.4.3.4.b", "existing_functions_mapped": ["etcd_data_directory_permissions_check", "etcd_data_directory_ownership_check"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_storage_secure_deletion", "kubernetes_api": "k8s.api.secure_delete_storage()", "service": "k8s_storage", "rationale": "To ensure secure deletion of non-transient sensitive data considering platform-specific issues."}], "mapping_notes": "Existing functions ensure data directory security but not secure deletion of data."}, {"compliance_id": "3.4.3.4.c", "title": "PCI Secure Software 3.4.3.4.c", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "k8s_pod_forensic_data_residue_check", "kubernetes_api": "k8s.api.scan_pod_filesystem()", "service": "k8s_pod", "rationale": "To identify any non-transient sensitive data residue in the execution environment."}], "mapping_notes": "No existing functions address forensic analysis for data residue."}, {"compliance_id": "3.5.3.5.a", "title": "PCI Secure Software 3.5.3.5.a", "existing_functions_mapped": ["k8s_secret_key_rotation"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_pod_transient_data_secure_deletion", "kubernetes_api": "k8s.api.delete_temp_data_securely()", "service": "k8s_pod", "rationale": "To ensure transient sensitive data is securely deleted from temporary storage."}], "mapping_notes": "Key rotation helps with transient data security but does not ensure secure deletion."}]}}
{"key": "73d52145ac83407899f06396853fd04ed95fdd1570d859e4c7dc394681924c5a", "value": {"batch_results": [{"compliance_id": "3.5.3.5.b", "title": "PCI Secure Software 3.5.3.5.b", "existing_functions_mapped": ["keep_terminated_pod_volumes_check", "core_minimize_privileged_containers"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_pod_transient_data_erasure", "kubernetes_api": "k8s.api.delete_pod()", "service": "k8s_pod", "rationale": "Ensure that transient data is securely erased by deleting pods and their associated volumes once they are no longer needed."}], "mapping_notes": "Existing functions help minimize privileged access and check for terminated pod volumes. However, a specific function to ensure erasure of transient data is needed."}, {"compliance_id": "3.5.3.5.c", "title": "PCI Secure Software 3.5.3.5.c", "existing_functions_mapped": ["keep_terminated_pod_volumes_check"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_pod_sensitive_data_residue_check", "kubernetes_api": "k8s.api.inspect_pod_volumes()", "service": "k8s_pod", "rationale": "Inspect pod volumes to ensure no sensitive data residue remains after pod termination."}], "mapping_notes": "While terminated pod volumes are checked, a function to specifically inspect for sensitive data residue is necessary."}, {"compliance_id": "3.6.3.6.a", "title": "PCI Secure Software 3.6.3.6.a", "existing_functions_mapped": ["apiserver_audit_policy_minimal_check", "apiserver_disable_profiling"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_pod_side_channel_protection", "kubernetes_api": "k8s.api.configure_pod_security()", "service": "k8s_pod", "rationale": "Implement security measures to protect against side-channel attacks on pods."}], "mapping_notes": "Current functions provide basic audit and profiling controls, but additional measures are needed to protect against side-channel attacks."}, {"compliance_id": "3.6.3.6.b", "title": "PCI Secure Software 3.6.3.6.b", "existing_functions_mapped": ["k8s_secret_secure_distribution", "rbac_minimize_secret_access"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_pod_cryptographic_protection", "kubernetes_api": "k8s.api.apply_encryption()", "service": "k8s_pod", "rationale": "Ensure cryptographic protection is applied to sensitive data within pods."}], "mapping_notes": "While secret distribution and access are controlled, specific cryptographic protections for sensitive data within pods are needed."}, {"compliance_id": "3.6.3.6.c", "title": "PCI Secure Software 3.6.3.6.c", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "k8s_pod_user_interaction_protection", "kubernetes_api": "k8s.api.configure_user_interaction()", "service": "k8s_pod", "rationale": "Ensure that user interactions with pods are protected and guidance is provided for secure configurations."}], "mapping_notes": "No existing functions address user interaction protection or guidance, necessitating a new function."}]}}
{"key": "f1cb29cd780e011a90da376d407ab9377a41b1d19bb3980efd46e435256c599b", "value": {"batch_results": [{"compliance_id": "5.4.5.4.a", "title": "PCI Secure Software requirement 5.4.a", "existing_functions_mapped": ["k8s_rbac_split_knowledge_enforcement", "k8s_rbac_separation_of_duties", "rbac_minimize_secret_access"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_rbac_access_control_audit", "kubernetes_api": "k8s.api.audit()", "service": "k8s_rbac", "rationale": "To verify that access controls are properly enforced and to audit access to critical assets."}], "mapping_notes": "Existing functions help enforce RBAC policies but do not provide a direct audit mechanism for access control verification."}, {"compliance_id": "5.4.5.4.b", "title": "PCI Secure Software requirement 5.4.b", "existing_functions_mapped": ["k8s_rbac_split_knowledge_enforcement", "k8s_rbac_separation_of_duties", "rbac_minimize_secret_access"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_rbac_access_attempt_logging", "kubernetes_api": "k8s.api.logging()", "service": "k8s_rbac", "rationale": "To log and analyze access attempts to critical assets, including unauthorized access attempts."}], "mapping_notes": "Existing functions enforce RBAC but do not log access attempts, which is necessary for compliance."}, {"compliance_id": "6.1.6.1.a", "title": "PCI Secure Software requirement 6.1.a", "existing_functions_mapped": ["k8s_secret_secure_distribution", "k8s_secret_key_rotation", "k8s_secret_key_retirement"], "coverage_assessment": "complete", "new_functions_needed": [], "mapping_notes": "Existing functions ensure that sensitive data is managed securely, including rotation and secure distribution."}, {"compliance_id": "6.1.6.1.b", "title": "PCI Secure Software requirement 6.1.b", "existing_functions_mapped": ["k8s_secret_secure_distribution", "k8s_secret_key_rotation", "k8s_secret_key_retirement"], "coverage_assessment": "complete", "new_functions_needed": [], "mapping_notes": "Existing functions provide sufficient controls for protecting sensitive data during storage."}, {"compliance_id": "6.1.6.1.c", "title": "PCI Secure Software requirement 6.1.c", "existing_functions_mapped": ["k8s_secret_secure_distribution", "k8s_secret_key_rotation"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_secret_encryption_method_validation", "kubernetes_api": "k8s.api.encryption()", "service": "k8s_secret", "rationale": "To validate that encryption methods used for sensitive data comply with established standards."}], "mapping_notes": "Existing functions manage secrets but do not validate the compliance of encryption methods used."}]}}
{"key": "df9e23d45c6b3f467b8479268af2a2e236b08a139b3a8956f34c343d7c445f00", "value": {"batch_results": [{"compliance_id": "6.2.6.2.c", "title": "PCI Secure Software 6.2.c", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "k8s_service_third_party_feature_configuration_check", "kubernetes_api": "k8s.api.get_third_party_features()", "service": "k8s_service", "rationale": "To programmatically verify that third-party features used for data transmission are configured correctly."}], "mapping_notes": "No existing Kubernetes functions directly verify third-party feature configurations for data transmission security."}, {"compliance_id": "6.2.6.2.d", "title": "PCI Secure Software 6.2.d", "existing_functions_mapped": ["apiserver_tls_cert_file_set", "apiserver_kubelet_tls_auth"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_service_enforce_secure_protocols", "kubernetes_api": "k8s.api.enforce_secure_protocols()", "service": "k8s_service", "rationale": "To ensure all ingress and egress methods enforce secure protocols with endpoint authentication."}], "mapping_notes": "Existing functions cover TLS setup but do not enforce secure protocols across all ingress/egress methods."}, {"compliance_id": "6.2.6.2.e", "title": "PCI Secure Software 6.2.e", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "k8s_service_enforce_strong_cryptography", "kubernetes_api": "k8s.api.enforce_strong_cryptography()", "service": "k8s_service", "rationale": "To enforce strong cryptography for all data transmissions."}], "mapping_notes": "No existing Kubernetes functions enforce the use of strong cryptography for data transmission."}, {"compliance_id": "6.3.6.3.a", "title": "PCI Secure Software 6.3.a", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "k8s_service_cryptography_compliance_check", "kubernetes_api": "k8s.api.check_cryptography_compliance()", "service": "k8s_service", "rationale": "To verify that cryptography use complies with applicable standards."}], "mapping_notes": "No existing Kubernetes functions verify cryptography compliance with standards."}, {"compliance_id": "6.3.6.3.b", "title": "PCI Secure Software 6.3.b", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "k8s_service_third_party_crypto_configuration_check", "kubernetes_api": "k8s.api.get_third_party_crypto_configuration()", "service": "k8s_service", "rationale": "To verify that third-party cryptographic methods are configured correctly."}], "mapping_notes": "No existing Kubernetes functions verify third-party cryptographic method configurations."}]}}
{"key": "98045bb773cb76d7f62754d465984b5dfa9ba3b1ff4de05e32b3e9fd1185e82d", "value": {"batch_results": [{"compliance_id": "9.1.9.1.f", "title": "PCI Secure Software 9.1.f", "existing_functions_mapped": ["k8s_rbac_account_lockout_policy", "k8s_rbac_password_complexity_policy"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_rbac_input_rate_limiting", "kubernetes_api": "k8s.api.rate_limit()", "service": "k8s_rbac", "rationale": "To programmatically enforce input rate limiting to prevent brute-force attacks on sensitive fields."}], "mapping_notes": "Existing functions address account lockout and password complexity but do not cover input rate limiting. A new function is needed to enforce rate limiting on inputs."}, {"compliance_id": "9.1.9.1.g", "title": "PCI Secure Software 9.1.g", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "k8s_service_third_party_tool_configuration", "kubernetes_api": "k8s.api.configure_tool()", "service": "k8s_service", "rationale": "To programmatically configure third-party tools for attack detection, ensuring they are set up correctly within Kubernetes."}], "mapping_notes": "No existing functions directly support configuring third-party tools for attack detection. A new function is required to automate this configuration."}, {"compliance_id": "10.1.10.1.a", "title": "PCI Secure Software 10.1.a", "existing_functions_mapped": ["apiserver_audit_policy_minimal_check", "k8s_network_nsc_configuration_review"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_service_attack_method_identification", "kubernetes_api": "k8s.api.identify_attacks()", "service": "k8s_service", "rationale": "To identify common attack methods against the software using Kubernetes APIs."}], "mapping_notes": "Existing functions provide some level of audit and configuration review but do not specifically identify attack methods. A new function is needed for comprehensive coverage."}, {"compliance_id": "10.1.10.1.b", "title": "PCI Secure Software 10.1.b", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "k8s_service_attack_validation", "kubernetes_api": "k8s.api.validate_attacks()", "service": "k8s_service", "rationale": "To validate identified attacks against industry-standard references using Kubernetes APIs."}], "mapping_notes": "No existing functions validate identified attacks against standards like OWASP and CWE. A new function is needed for this validation."}, {"compliance_id": "10.1.10.1.c", "title": "PCI Secure Software 10.1.c", "existing_functions_mapped": ["controllermanager_garbage_collection", "k8s_secret_key_rotation"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_service_mitigation_validation", "kubernetes_api": "k8s.api.validate_mitigations()", "service": "k8s_service", "rationale": "To validate the existence and effectiveness of mitigations against identified attacks in the software release process."}], "mapping_notes": "Existing functions provide some mitigation through garbage collection and key rotation but do not validate mitigations against identified attacks. A new function is required for ongoing validation."}]}}
{"key": "585034ef78852775d60898f68730614a205c007b5020d9c64f165649e2ee11f7", "value": {"batch_results": [{"compliance_id": "11.2.11.2.a", "title": "PCI Secure Software 11.2.11.2.a", "existing_functions_mapped": ["apiserver_tls_cert_file_set", "apiserver_etcd_cafile_set"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_pod_verify_update_integrity", "kubernetes_api": "k8s.api.pod.verifyIntegrity()", "service": "k8s_pod", "rationale": "To programmatically verify the integrity of software updates during transmission and installation."}], "mapping_notes": "Existing functions ensure secure communication channels, but do not fully verify software update integrity."}, {"compliance_id": "11.2.11.2.b", "title": "PCI Secure Software 11.2.11.2.b", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "k8s_pod_user_input_validation", "kubernetes_api": "k8s.api.pod.userInputValidation()", "service": "k8s_pod", "rationale": "To programmatically validate user input or interaction for software code integrity."}], "mapping_notes": "No existing Kubernetes functions address user input validation for software code integrity."}, {"compliance_id": "11.2.11.2.c", "title": "PCI Secure Software 11.2.11.2.c", "existing_functions_mapped": ["apiserver_tls_cert_file_set"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_service_chain_of_trust_verification", "kubernetes_api": "k8s.api.service.verifyChainOfTrust()", "service": "k8s_service", "rationale": "To ensure a chain of trust in software distribution when cryptographic methods are not used."}], "mapping_notes": "TLS settings provide secure connections but do not establish a full chain of trust."}, {"compliance_id": "11.2.11.2.d", "title": "PCI Secure Software 11.2.11.2.d", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "k8s_service_update_notification", "kubernetes_api": "k8s.api.service.notifyUpdates()", "service": "k8s_service", "rationale": "To programmatically notify stakeholders of software updates and provide installation guidance."}], "mapping_notes": "No existing Kubernetes functions address stakeholder notification for software updates."}, {"compliance_id": "11.2.11.2.e", "title": "PCI Secure Software 11.2.11.2.e", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "k8s_service_vulnerability_notification", "kubernetes_api": "k8s.api.service.notifyVulnerabilities()", "service": "k8s_service", "rationale": "To notify stakeholders of detected vulnerabilities and provide suggested mitigations."}], "mapping_notes": "No existing Kubernetes functions address vulnerability notification and mitigation guidance."}]}}
{"key": "1aac7387c006090374ceb3cdcb841628e505caf7dbab539c9d67808ad57aab3b", "value": {"batch_results": [{"compliance_id": "A.2.A.2.2.a", "title": "PCI Secure Software A.2.A.2.2.a", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "k8s_pod_mask_pan_display", "kubernetes_api": "k8s.api.patch()", "service": "k8s_pod", "rationale": "A function to ensure PAN is masked in application logs and outputs within pods."}], "mapping_notes": "No existing Kubernetes function directly addresses PAN masking in application displays. A new function is needed to enforce masking at the application level within pods."}, {"compliance_id": "A.2.A.2.2.b", "title": "PCI Secure Software A.2.A.2.2.b", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "k8s_pod_mask_pan_display", "kubernetes_api": "k8s.api.patch()", "service": "k8s_pod", "rationale": "A function to ensure PAN is masked in application logs and outputs within pods."}], "mapping_notes": "Similar to A.2.A.2.2.a, this requirement needs a function to enforce PAN masking in application displays within pods."}, {"compliance_id": "A.2.A.2.2.c", "title": "PCI Secure Software A.2.A.2.2.c", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "This requirement involves guidance and documentation, which cannot be implemented programmatically using Kubernetes APIs."}, {"compliance_id": "A.2.A.2.2.d", "title": "PCI Secure Software A.2.A.2.2.d", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "k8s_pod_default_pan_masking", "kubernetes_api": "k8s.api.patch()", "service": "k8s_pod", "rationale": "A function to ensure PAN is completely masked by default in application displays within pods."}], "mapping_notes": "No existing Kubernetes function ensures default masking of PAN. A new function is needed to enforce this at the application level within pods."}, {"compliance_id": "A.2.A.2.3.a", "title": "PCI Secure Software A.2.A.2.3.a", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "k8s_secret_pan_encryption", "kubernetes_api": "k8s.api.create_secret()", "service": "k8s_secret", "rationale": "A function to ensure PAN is stored using strong cryptography in Kubernetes secrets."}], "mapping_notes": "No existing Kubernetes function directly ensures PAN is rendered unreadable. A new function is needed to enforce encryption of PAN in storage."}]}}
{"key": "7e4069f24c11853132bcc7961800e0388cad3814585f7d4f7b63e4061b031189", "value": {"batch_results": [{"compliance_id": "B.2.B.2.4", "title": "PCI Secure Software B.2.B.2.4", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "k8s_pod_enforce_rng_usage", "kubernetes_api": "k8s.api.pod.spec()", "service": "k8s_pod", "rationale": "Ensure that pods use only approved random number generation functions."}], "mapping_notes": "No existing Kubernetes functions directly enforce the use of specific RNG functions. A new function is needed to ensure compliance with this requirement."}, {"compliance_id": "B.2.B.2.5", "title": "PCI Secure Software B.2.B.2.5", "existing_functions_mapped": ["rbac_minimize_secret_access", "k8s_secret_secure_distribution"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_pod_prevent_cleartext_data_sharing", "kubernetes_api": "k8s.api.pod.spec()", "service": "k8s_pod", "rationale": "Prevent pods from sharing clear-text account data with other software."}], "mapping_notes": "Existing functions help minimize secret access and secure distribution but do not fully prevent clear-text data sharing."}, {"compliance_id": "B.2.B.2.6", "title": "PCI Secure Software B.2.B.2.6", "existing_functions_mapped": ["namespace_boundaries_enforcement_check", "enforce_pod_security_policies"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_pod_secure_shared_resource_integration", "kubernetes_api": "k8s.api.pod.spec()", "service": "k8s_pod", "rationale": "Ensure secure integration of shared resources according to security guidance."}], "mapping_notes": "Namespace and security policies provide partial coverage, but specific integration checks are needed."}, {"compliance_id": "B.2.B.2.7", "title": "PCI Secure Software B.2.B.2.7", "existing_functions_mapped": ["namespace_boundaries_enforcement_check", "k8s_rbac_separation_of_duties"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_pod_prevent_application_segregation_bypass", "kubernetes_api": "k8s.api.pod.spec()", "service": "k8s_pod", "rationale": "Ensure that pods do not bypass application segregation."}], "mapping_notes": "Existing functions enforce boundaries and separation of duties but do not specifically address bypass prevention."}, {"compliance_id": "B.2.B.2.8", "title": "PCI Secure Software B.2.B.2.8", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "k8s_pod_cryptographic_signature_verification", "kubernetes_api": "k8s.api.pod.spec()", "service": "k8s_pod", "rationale": "Verify cryptographic signatures of software files in pods."}], "mapping_notes": "No existing Kubernetes functions verify cryptographic signatures of software files. A new function is required to ensure compliance."}]}}
{"key": "283b9562fde8604dfd2e5703f508df81aa2adb3675de1a0016a502e4dc4e9866", "value": {"batch_results": [{"compliance_id": "B.2.B.2.9", "title": "PCI Secure Software B.2.B.2.9", "existing_functions_mapped": ["etcd_data_directory_permissions_check", "etcd_data_directory_ownership_check", "etcd_certfile_and_keyfile_set"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_pod_integrity_verification", "kubernetes_api": "k8s.api.verifyPodIntegrity()", "service": "k8s_pod", "rationale": "To ensure the integrity of software prompt files within pods, a function to verify file integrity using checksums or signatures is needed."}], "mapping_notes": "Existing functions cover the integrity of data directories and certificates but do not specifically address prompt file integrity within pods."}, {"compliance_id": "B.3.B.3.1", "title": "PCI Secure Software B.3.B.3.1", "existing_functions_mapped": ["enforce_pod_security_policies", "k8s_service_scope_validation"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_pod_input_validation", "kubernetes_api": "k8s.api.validatePodInputs()", "service": "k8s_pod", "rationale": "A function to validate all user and external inputs to pods is necessary to ensure compliance with input validation requirements."}], "mapping_notes": "While pod security policies and service scope validation help restrict inputs, a specific function for input validation is needed."}, {"compliance_id": "B.3.B.3.2", "title": "PCI Secure Software B.3.B.3.2", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "k8s_pod_error_handling", "kubernetes_api": "k8s.api.handlePodErrors()", "service": "k8s_pod", "rationale": "A function to ensure return values are checked and error conditions are handled securely within pods is needed."}], "mapping_notes": "No existing Kubernetes functions directly address secure error handling and return value checks."}, {"compliance_id": "B.3.B.3.3", "title": "PCI Secure Software B.3.B.3.3", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "k8s_pod_race_condition_prevention", "kubernetes_api": "k8s.api.preventRaceConditions()", "service": "k8s_pod", "rationale": "A function to detect and prevent race conditions within pod operations is needed to ensure compliance."}], "mapping_notes": "Race condition prevention is not covered by existing Kubernetes functions."}, {"compliance_id": "B.4.B.4.1", "title": "PCI Secure Software B.4.B.4.1", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "k8s_pod_vulnerability_testing", "kubernetes_api": "k8s.api.testPodVulnerabilities()", "service": "k8s_pod", "rationale": "A function to automate vulnerability testing of pods before updates or releases is needed."}], "mapping_notes": "No existing Kubernetes functions automate the process of vulnerability testing prior to software updates or releases."}]}}
{"key": "67ff7a9e53549a304049b4bbc54686ea4f82d1c27d8881213ab8db304057e015", "value": {"batch_results": [{"compliance_id": "B.5.B.5.1", "title": "PCI Secure Software B.5.1", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "This requirement is related to providing implementation guidance, which is not a technical control that can be enforced or verified programmatically using Kubernetes APIs."}, {"compliance_id": "B.5.B.5.2", "title": "PCI Secure Software B.5.2", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "This requirement pertains to adherence to vendor guidance, which is not a technical control that can be implemented or verified using Kubernetes APIs."}, {"compliance_id": "C.1.C.1.1", "title": "PCI Secure Software C.1.1", "existing_functions_mapped": [], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_pod_generate_sbom", "kubernetes_api": "k8s.api.list_pods()", "service": "k8s_pod", "rationale": "To programmatically generate a software bill of materials (SBOM) for all software components and services running in Kubernetes pods."}], "mapping_notes": "Kubernetes does not natively provide an SBOM, but a function to list all pods and their images can assist in generating an SBOM."}, {"compliance_id": "C.1.C.1.2", "title": "PCI Secure Software C.1.2", "existing_functions_mapped": [], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_pod_dependency_mapping", "kubernetes_api": "k8s.api.list_pods()", "service": "k8s_pod", "rationale": "To map primary and secondary dependencies of components within Kubernetes pods, aiding in the creation of a detailed SBOM."}], "mapping_notes": "While Kubernetes can list pods and their images, it does not inherently map dependencies, requiring additional functionality."}, {"compliance_id": "C.1.C.1.3", "title": "PCI Secure Software C.1.3", "existing_functions_mapped": [], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_service_sbom_integration", "kubernetes_api": "k8s.api.list_services()", "service": "k8s_service", "rationale": "To integrate SBOM information with Kubernetes services, detailing software dependencies in the production environment."}], "mapping_notes": "Kubernetes services can be listed, but integrating SBOM details requires additional functionality to describe dependencies."}]}}
{"key": "39e35982aca1a415d4156ea733c5868de2aa6adc6215965020653c2f819a96f3", "value": {"batch_results": [{"compliance_id": "C.2.C.2.1.1", "title": "PCI Secure Software C.2.1.1", "existing_functions_mapped": ["k8s_rbac_separation_of_duties", "k8s_rbac_account_lockout_policy"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_rbac_authentication_mechanism_check", "kubernetes_api": "rbac.authorization.k8s.io/v1.RoleBinding", "service": "k8s_rbac", "rationale": "To verify that industry-standard authentication mechanisms are implemented for user access."}], "mapping_notes": "Existing functions partially cover user access controls, but a specific check for authentication mechanisms is needed."}, {"compliance_id": "C.2.C.2.1.2", "title": "PCI Secure Software C.2.1.2", "existing_functions_mapped": ["k8s_rbac_password_complexity_policy", "k8s_secret_key_rotation"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_rbac_authentication_credentials_strength_check", "kubernetes_api": "rbac.authorization.k8s.io/v1.Role", "service": "k8s_rbac", "rationale": "To ensure that authentication credentials are sufficiently strong and robust."}], "mapping_notes": "Existing functions address some aspects of credential management, but a specific strength check is required."}, {"compliance_id": "C.2.C.2.1.3", "title": "PCI Secure Software C.2.1.3", "existing_functions_mapped": ["k8s_rbac_separation_of_duties"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_rbac_authentication_decision_enforcement_check", "kubernetes_api": "rbac.authorization.k8s.io/v1.ClusterRole", "service": "k8s_rbac", "rationale": "To verify that authentication decisions are enforced within a secure area."}], "mapping_notes": "Existing functions provide some separation of duties but do not specifically check for secure enforcement of authentication decisions."}, {"compliance_id": "C.2.C.2.2", "title": "PCI Secure Software C.2.2", "existing_functions_mapped": ["k8s_rbac_disable_inactive_accounts", "k8s_rbac_account_lockout_policy"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_network_internet_access_restriction_check", "kubernetes_api": "networking.k8s.io/v1.NetworkPolicy", "service": "k8s_network", "rationale": "To ensure that access to Internet-accessible interfaces is restricted to authorized users."}], "mapping_notes": "Existing functions help manage user accounts but do not specifically address network access restrictions."}, {"compliance_id": "C.2.C.2.3", "title": "PCI Secure Software C.2.3", "existing_functions_mapped": ["k8s_rbac_separation_of_duties", "k8s_rbac_disable_inactive_accounts"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_network_access_control_check", "kubernetes_api": "networking.k8s.io/v1.NetworkPolicy", "service": "k8s_network", "rationale": "To ensure that access to software functions through Internet-accessible interfaces is restricted to authorized users."}], "mapping_notes": "Existing functions manage user access but do not specifically check for restrictions on software functions exposed via the network."}]}}
{"key": "b845488657eddda191a873435e4175cfb1b2b75159c46b07eb9dffde86c44815", "value": {"batch_results": [{"compliance_id": "C.2.C.2.3.1", "title": "PCI Secure Software C.2.3.1", "existing_functions_mapped": ["k8s_rbac_split_knowledge_enforcement", "k8s_rbac_separation_of_duties"], "coverage_assessment": "complete", "new_functions_needed": [], "mapping_notes": "Existing functions ensure enforcement of access control rules at both function and resource levels."}, {"compliance_id": "C.2.C.2.3.2", "title": "PCI Secure Software C.2.3.2", "existing_functions_mapped": ["k8s_rbac_split_knowledge_enforcement", "k8s_rbac_account_lockout_policy"], "coverage_assessment": "partial", "new_functions_needed": [], "mapping_notes": "Existing functions enforce authorization rules, but additional functions may be needed for comprehensive coverage."}, {"compliance_id": "C.2.C.2.3.3", "title": "PCI Secure Software C.2.3.3", "existing_functions_mapped": ["k8s_rbac_split_knowledge_enforcement", "k8s_rbac_separation_of_duties"], "coverage_assessment": "complete", "new_functions_needed": [], "mapping_notes": "Existing functions enforce access control decisions within a secure area of the architecture."}, {"compliance_id": "C.2.C.2.1", "title": "PCI Secure Software C.2.1", "existing_functions_mapped": ["k8s_rbac_account_lockout_policy", "k8s_rbac_password_complexity_policy"], "coverage_assessment": "partial", "new_functions_needed": [], "mapping_notes": "Existing functions provide some authentication mechanisms, but further enhancements may be necessary."}, {"compliance_id": "C.2.C.2.2", "title": "PCI Secure Software C.2.2", "existing_functions_mapped": ["k8s_rbac_disable_inactive_accounts", "k8s_rbac_account_lockout_policy"], "coverage_assessment": "partial", "new_functions_needed": [], "mapping_notes": "Existing functions restrict access, but additional controls may be required for explicit authorization."}]}}
{"key": "dd27c15695e05838d9daa4374261b1b8d06c6196a65ef20eee30f6240013089e", "value": {"batch_results": [{"compliance_id": "C.2.C.2.3", "title": "PCI Secure Software C.2.3", "existing_functions_mapped": ["k8s_rbac_separation_of_duties", "k8s_rbac_split_knowledge_enforcement", "rbac_minimize_secret_access"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_service_internet_access_restriction", "kubernetes_api": "k8s.networking.v1.NetworkPolicy()", "service": "k8s_network", "rationale": "To ensure that only explicitly authorized users can access services exposed to the internet."}], "mapping_notes": "Existing RBAC functions cover user access control but do not specifically address internet-exposed interfaces. A new function is needed to restrict internet access."}, {"compliance_id": "C.3.C.3.2.2", "title": "PCI Secure Software C.3.2.2", "existing_functions_mapped": ["core_minimize_privileged_containers", "apply_security_context_to_containers"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_pod_parser_restriction", "kubernetes_api": "k8s.api.v1.PodSecurityPolicy()", "service": "k8s_pod", "rationale": "To enforce restrictive configurations for parsers and interpreters within pods."}], "mapping_notes": "Current functions manage container privileges but do not specifically target parser/interpreter configurations."}, {"compliance_id": "C.3.C.3.3", "title": "PCI Secure Software C.3.3", "existing_functions_mapped": ["kubelet_set_pod_pid_limit", "kubelet_manage_iptables"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_pod_resource_starvation_protection", "kubernetes_api": "k8s.api.v1.ResourceQuota()", "service": "k8s_pod", "rationale": "To prevent resource starvation attacks by limiting resource usage per pod."}], "mapping_notes": "Existing functions help manage resource limits but do not fully address resource starvation protection."}, {"compliance_id": "C.3.C.3.4", "title": "PCI Secure Software C.3.4", "existing_functions_mapped": ["enforce_pod_security_policies", "core_security_context_check"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_service_malicious_file_detection", "kubernetes_api": "k8s.api.v1.PodSecurityPolicy()", "service": "k8s_service", "rationale": "To detect and prevent malicious file content in internet-accessible interfaces."}], "mapping_notes": "Current functions enforce security policies but do not specifically target malicious file content."}, {"compliance_id": "C.3.C.3.5", "title": "PCI Secure Software C.3.5", "existing_functions_mapped": ["k8s_pod_prevent_key_substitution", "rbac_minimize_privileged_service_account_pod_creation"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_service_object_creation_protection", "kubernetes_api": "k8s.api.v1.PodSecurityPolicy()", "service": "k8s_service", "rationale": "To protect against hostile object creation and data tampering in internet-accessible interfaces."}], "mapping_notes": "Existing functions address key substitution and privileged access but do not fully cover object creation and data tampering."}]}}
{"key": "ef05c60d23b0c22d2b266c7aee63dcd119af54a4bfa6a76dca89be4a71cedd7b", "value": {"batch_results": [{"compliance_id": "C.3.C.3.6", "title": "PCI Secure Software C.3.6", "existing_functions_mapped": ["k8s_service_insecure_protocols_detection"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "k8s_service_enable_cors_protection", "kubernetes_api": "k8s.api.method()", "service": "k8s_service_name", "rationale": "This function is needed to ensure that CORS policies are enforced to protect against multi-origin resource sharing attacks."}], "mapping_notes": "Existing function can detect insecure protocols but does not enforce CORS protection, which is necessary for this requirement."}, {"compliance_id": "C.4.C.4.1", "title": "PCI Secure Software C.4.1", "existing_functions_mapped": ["apiserver_tls_cert_file_set"], "coverage_assessment": "complete", "new_functions_needed": [], "mapping_notes": "The existing function ensures that TLS certificates are set, which supports the requirement for encrypting sensitive data transmissions."}]}}

{
  "mapping_summary": {
    "total_items": 10,
    "timestamp": "2025-08-18T01:28:27.186583",
    "coverage_breakdown": {
      "complete": 10,
      "partial": 0,
      "none": 0
    }
  },
  "mapping_results": [
    {
      "compliance_id": "2.1",
      "title": "Ensure 'Microsoft Entra Authentication' is 'Enabled'",
      "existing_functions_mapped": [
        "identity_authentication_secure_state"
      ],
      "functions_to_rename": [],
      "functions_to_consolidate": [
        {
          "old_functions": [
            "entra_authentication_enabled",
            "entra_authentication_enabled_all_regions",
            "entra_authentication_enabled_min_tls_1_2",
            "entra_authentication_enabled_over_90d",
            "entra_authentication_enabled_all_users"
          ],
          "new_consolidated_function": "identity_authentication_enabled",
          "rationale": "Consolidating these functions into one improves efficiency by reducing duplication and ensures a single point of reference for checking if Microsoft Entra Authentication is enabled."
        }
      ],
      "coverage_assessment": "complete",
      "new_functions_needed": [],
      "mapping_notes": "The existing function 'identity_authentication_secure_state' was mapped as it covers the requirement of ensuring Microsoft Entra Authentication is enabled. The consolidation of similar functions into 'identity_authentication_enabled' allows for a streamlined approach to compliance checks, adhering to naming standards and reducing redundancy."
    },
    {
      "compliance_id": "2.2",
      "title": "Ensure that 'Allow access only via SSL' is set to 'Yes'",
      "existing_functions_mapped": [
        "redis_cache_ssl_access_enabled",
        "redis_cache_secure_transport_required",
        "redis_cache_tls_enforced",
        "redis_cache_non_ssl_disabled",
        "redis_cache_encryption_in_transit_enabled"
      ],
      "functions_to_rename": [],
      "functions_to_consolidate": [
        {
          "old_functions": [
            "redis_cache_ssl_access_enabled",
            "redis_cache_secure_transport_required",
            "redis_cache_tls_enforced",
            "redis_cache_non_ssl_disabled",
            "redis_cache_encryption_in_transit_enabled"
          ],
          "new_consolidated_function": "redis_cache_ssl_enabled",
          "rationale": "Consolidation improves efficiency by reducing duplication of similar SSL enforcement checks into one clear function."
        }
      ],
      "coverage_assessment": "complete",
      "new_functions_needed": [],
      "mapping_notes": "All existing functions related to SSL enforcement for Azure Cache for Redis have been consolidated into one function named 'redis_cache_ssl_enabled'. This function clearly indicates the requirement for SSL to be enabled, following the naming standards and ensuring complete coverage of the compliance item."
    },
    {
      "compliance_id": "2.3",
      "title": "Ensure that 'Minimum TLS version' is set to TLS v1.2 (or higher)",
      "existing_functions_mapped": [
        "storage_account_minimum_tls_version_1_2"
      ],
      "functions_to_rename": [],
      "functions_to_consolidate": [
        {
          "old_functions": [
            "cloud_cdn_distribution_min_tls_version",
            "cloud_cdn_domain_min_tls_1_2",
            "cloud_cdn_endpoint_tls_version_compliance",
            "cloud_cdn_ssl_certificate_min_tls_1_2",
            "cloud_cdn_security_policy_tls_version",
            "cloud_cdn_custom_domain_tls_requirement",
            "cloud_cdn_edge_cache_tls_version",
            "cloud_cdn_origin_ssl_protocol_compliance"
          ],
          "new_consolidated_function": "cloudcdn_minimum_tls_version_1_2",
          "rationale": "Consolidation improves efficiency by reducing duplication of similar TLS version checks across various CDN functions."
        }
      ],
      "coverage_assessment": "complete",
      "new_functions_needed": [],
      "mapping_notes": "The existing function 'storage_account_minimum_tls_version_1_2' covers the compliance requirement for storage accounts. The consolidation of multiple cloud CDN functions into 'cloudcdn_minimum_tls_version_1_2' ensures that all CDN-related TLS version checks are handled under one function, adhering to naming standards and reducing redundancy."
    },
    {
      "compliance_id": "2.4",
      "title": "Ensure that 'Access Policies' are implemented and reviewed periodically",
      "existing_functions_mapped": [
        "iam_policy_access_control_listed",
        "iam_policy_rbac_implemented",
        "iam_policy_access_reviewed_over_90d",
        "iam_policy_least_privilege_enforced",
        "iam_policy_identity_group_restricted",
        "iam_policy_data_command_access_controlled",
        "iam_policy_role_based_access_enforced"
      ],
      "functions_to_rename": [],
      "functions_to_consolidate": [
        {
          "old_functions": [
            "iam_policy_access_control_listed",
            "iam_policy_rbac_implemented",
            "iam_policy_access_reviewed_over_90d",
            "iam_policy_least_privilege_enforced",
            "iam_policy_identity_group_restricted",
            "iam_policy_data_command_access_controlled",
            "iam_policy_role_based_access_enforced"
          ],
          "new_consolidated_function": "iam_policy_access_control_reviewed",
          "rationale": "Consolidation improves efficiency by combining multiple functions that check aspects of access policies into one comprehensive function, reducing duplication and enhancing clarity."
        }
      ],
      "coverage_assessment": "complete",
      "new_functions_needed": [],
      "mapping_notes": "All compliance requirements related to access policies have been covered by existing functions. The consolidation into 'iam_policy_access_control_reviewed' ensures that all aspects of access control and periodic review are encapsulated in a single function, adhering to naming standards and minimizing function count."
    },
    {
      "compliance_id": "2.5",
      "title": "Ensure that 'System Assigned Managed Identity' is set to 'On'",
      "existing_functions_mapped": [
        "redis_cache_system_identity_enabled",
        "redis_cache_managed_identity_assigned",
        "redis_cache_identity_auto_managed",
        "redis_cache_system_identity_required",
        "redis_cache_identity_auto_provisioned"
      ],
      "functions_to_rename": [],
      "functions_to_consolidate": [
        {
          "old_functions": [
            "redis_cache_system_identity_enabled",
            "redis_cache_managed_identity_assigned",
            "redis_cache_identity_auto_managed",
            "redis_cache_system_identity_required",
            "redis_cache_identity_auto_provisioned"
          ],
          "new_consolidated_function": "redis_cache_system_identity_enabled",
          "rationale": "Consolidation improves efficiency by reducing duplication of similar checks related to the system assigned managed identity for Redis Cache."
        }
      ],
      "coverage_assessment": "complete",
      "new_functions_needed": [],
      "mapping_notes": "All existing functions related to the system assigned managed identity for Azure Cache for Redis have been consolidated into one function, `redis_cache_system_identity_enabled`, which clearly indicates the requirement for the identity to be enabled. This consolidation reduces redundancy and maintains clarity in compliance checks."
    },
    {
      "compliance_id": "2.6",
      "title": "Ensure that 'Public Network Access' is 'Disabled'",
      "existing_functions_mapped": [
        "compute_virtual_machine_public_network_access_disabled",
        "storage_account_public_network_access_disabled",
        "database_server_public_network_access_disabled",
        "key_vault_public_network_access_disabled",
        "container_registry_public_network_access_disabled",
        "app_service_public_network_access_disabled",
        "cache_public_network_access_disabled",
        "search_service_public_network_access_disabled",
        "event_grid_public_network_access_disabled",
        "service_bus_public_network_access_disabled"
      ],
      "functions_to_rename": [],
      "functions_to_consolidate": [
        {
          "old_functions": [
            "compute_virtual_machine_public_network_access_disabled",
            "storage_account_public_network_access_disabled",
            "database_server_public_network_access_disabled",
            "key_vault_public_network_access_disabled",
            "container_registry_public_network_access_disabled",
            "app_service_public_network_access_disabled",
            "cache_public_network_access_disabled",
            "search_service_public_network_access_disabled",
            "event_grid_public_network_access_disabled",
            "service_bus_public_network_access_disabled"
          ],
          "new_consolidated_function": "network_public_access_disabled",
          "rationale": "Consolidation improves efficiency by reducing duplication of similar functions that check for public network access across various services."
        }
      ],
      "coverage_assessment": "complete",
      "new_functions_needed": [],
      "mapping_notes": "All existing functions related to public network access have been identified and consolidated into one function, 'network_public_access_disabled'. This function will cover the compliance requirement for all services, ensuring that public network access is disabled. The naming follows the required standards, providing clarity and consistency."
    },
    {
      "compliance_id": "3.1",
      "title": "Ensure That 'Firewalls & Networks' Is Limited to Use Selected Networks Instead of All Networks",
      "existing_functions_mapped": [
        "cosmosdb_account_network_restricted_to_selected",
        "cosmosdb_firewall_selected_networks_only"
      ],
      "functions_to_rename": [],
      "functions_to_consolidate": [
        {
          "old_functions": [
            "cosmosdb_firewall_network_whitelisted",
            "cosmosdb_network_access_restricted",
            "cosmosdb_network_all_access_disabled"
          ],
          "new_consolidated_function": "cosmosdb_account_network_restricted_to_selected",
          "rationale": "Consolidation improves efficiency by reducing duplication of similar network access restrictions for Cosmos DB."
        }
      ],
      "coverage_assessment": "complete",
      "new_functions_needed": [],
      "mapping_notes": "The existing functions 'cosmosdb_account_network_restricted_to_selected' and 'cosmosdb_firewall_selected_networks_only' already cover the compliance requirement. The other functions related to network access were consolidated into 'cosmosdb_account_network_restricted_to_selected' to minimize function count while ensuring all aspects of network restrictions are addressed."
    },
    {
      "compliance_id": "3.2",
      "title": "Ensure That Private Endpoints Are Used Where Possible",
      "existing_functions_mapped": [],
      "functions_to_rename": [],
      "functions_to_consolidate": [
        {
          "old_functions": [
            "compute_instance_private_endpoint_enabled",
            "storage_bucket_private_endpoint_enabled",
            "database_instance_private_endpoint_enabled",
            "cloud_cdn_private_endpoint_enabled",
            "api_gateway_private_endpoint_enabled",
            "cloud_sql_private_endpoint_enabled",
            "cloud_functions_private_endpoint_enabled",
            "cloud_run_private_endpoint_enabled",
            "cloud_storage_private_endpoint_enabled",
            "cloud_load_balancer_private_endpoint_enabled"
          ],
          "new_consolidated_function": "network_private_endpoint_enabled",
          "rationale": "Consolidation improves efficiency by reducing duplication of similar functions that check for private endpoint usage across various services."
        }
      ],
      "coverage_assessment": "complete",
      "new_functions_needed": [],
      "mapping_notes": "All existing functions related to private endpoints have been consolidated into one function, 'network_private_endpoint_enabled'. This function will cover the compliance requirement of ensuring that private endpoints are used where possible across different services, thus providing complete coverage with a single, clear function."
    },
    {
      "compliance_id": "3.3",
      "title": "Use Entra ID Client Authentication and Azure RBAC where possible.",
      "existing_functions_mapped": [
        "cosmosdb_account_entra_id_authentication_enabled",
        "cosmosdb_account_azure_rbac_enabled",
        "cosmosdb_account_client_authentication_entra_id_required",
        "cosmosdb_account_mfa_authentication_enabled",
        "cosmosdb_account_centralized_credential_management_enabled"
      ],
      "functions_to_rename": [
        {
          "old_name": "cosmosdb_account_token_authentication_disabled",
          "new_name": "cosmosdb_account_token_authentication_disabled",
          "rationale": "This function name is already clear and follows naming standards."
        }
      ],
      "functions_to_consolidate": [
        {
          "old_functions": [
            "cosmosdb_account_client_authentication_entra_id_required",
            "cosmosdb_account_mfa_authentication_enabled",
            "cosmosdb_account_centralized_credential_management_enabled"
          ],
          "new_consolidated_function": "cosmosdb_account_entra_id_authentication_enabled",
          "rationale": "Consolidating these functions into one improves efficiency by reducing duplication and focuses on the secure state of Entra ID authentication."
        }
      ],
      "coverage_assessment": "complete",
      "new_functions_needed": [],
      "mapping_notes": "The existing functions adequately cover the compliance requirement regarding Entra ID and Azure RBAC. The consolidation of client authentication, MFA, and centralized credential management into a single function streamlines the checks while maintaining clarity. The naming conventions have been adhered to, ensuring that the function names are descriptive and follow the required structure."
    },
    {
      "compliance_id": "6.1",
      "title": "Ensure 'Enforce SSL connection' is set to 'Enabled' for Standard MySQL Database Server",
      "existing_functions_mapped": [],
      "functions_to_rename": [],
      "functions_to_consolidate": [
        {
          "old_functions": [
            "mysql_server_ssl_connection_enabled",
            "mysql_server_ssl_enforcement_enabled",
            "mysql_server_secure_connection_required",
            "mysql_server_ssl_only_enabled",
            "mysql_server_encryption_in_transit_enabled"
          ],
          "new_consolidated_function": "mysql_server_ssl_enabled",
          "rationale": "Consolidating these functions into one improves efficiency by reducing duplication and provides a clear, unified check for SSL enforcement on MySQL servers."
        }
      ],
      "coverage_assessment": "complete",
      "new_functions_needed": [],
      "mapping_notes": "The existing functions related to SSL enforcement for MySQL servers were consolidated into a single function named 'mysql_server_ssl_enabled'. This name follows the required naming standards and clearly indicates the requirement being checked. The consolidation reduces redundancy and ensures that all aspects of SSL enforcement are covered under one function."
    }
  ]
}
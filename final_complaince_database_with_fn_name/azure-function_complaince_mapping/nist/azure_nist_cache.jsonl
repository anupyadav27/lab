{"key": "19b6c6b2bbb5a396d2a2f98fa2cb1ba41169a65507283408398bcef03493c207", "value": {"batch_results": [{"compliance_id": "AC-1", "title": "Policy and Procedures", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "AC-1 is primarily focused on policy and documentation, which cannot be implemented programmatically using Azure SDK/API calls."}, {"compliance_id": "AC-2", "title": "Account Management", "existing_functions_mapped": ["rbac_role_assignment_to_unauthorized_entity", "identity_management_mfa_enforcement", "identity_user_consent_disallow_user_consent"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "azure_ad_account_provisioning", "azure_api": "azure.ad.user.create()", "service": "azure_ad", "rationale": "To automate the creation, modification, and deletion of user accounts in accordance with defined policies."}, {"name": "azure_ad_account_activity_monitoring", "azure_api": "azure.monitor.activity_log()", "service": "azure_monitor", "rationale": "To monitor and log account activities for compliance with account management requirements."}], "mapping_notes": "Existing functions partially cover account management by handling role assignments and enforcing MFA. Additional functions are needed for full automation of account lifecycle management and activity monitoring."}, {"compliance_id": "AC-3", "title": "Access Enforcement", "existing_functions_mapped": ["network_security_group_ip_management_device_authentication", "compute_virtualmachine_in_virtualnetwork", "virtual_machine_managed_identity_attached"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "azure_ad_access_policy_enforcement", "azure_api": "azure.ad.access_policy.enforce()", "service": "azure_ad", "rationale": "To enforce access policies programmatically across Azure resources."}], "mapping_notes": "Access enforcement is partially covered by existing functions that manage network security and VM identities. Additional functions are needed to enforce access policies at the Azure AD level."}, {"compliance_id": "AC-4", "title": "INFORMATION FLOW ENFORCEMENT", "existing_functions_mapped": ["network_endpoint_dos_protection_enabled", "firewall_policy_rule_collection_group_rules_existence"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "azure_network_information_flow_control", "azure_api": "azure.network.flow_control.enforce()", "service": "azure_network", "rationale": "To enforce information flow policies within and between Azure networks."}], "mapping_notes": "Current functions provide basic network protection and firewall rules. Additional functions are required to enforce detailed information flow policies."}, {"compliance_id": "AC-5", "title": "SEPARATION OF DUTIES", "existing_functions_mapped": ["rbac_role_assignment_to_unauthorized_entity"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "azure_ad_role_separation_enforcement", "azure_api": "azure.ad.role.separation.enforce()", "service": "azure_ad", "rationale": "To ensure that roles are assigned in a manner that supports separation of duties."}], "mapping_notes": "Separation of duties is partially addressed through role assignments. Additional functions are needed to enforce role separation and prevent conflicts of interest."}]}}
{"key": "a7749aae3b8583348339f77abb33f90f956e8687679c1a22584027c826afa0a9", "value": {"batch_results": [{"compliance_id": "AC-6", "title": "NIST AC-6 - LEAST PRIVILEGE", "existing_functions_mapped": ["identity_user_least_privilege", "iam_subscription_roles_no_custom_admin", "azure_ad_service_principal_credentials_rotation"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "azure_ad_user_role_assignment_audit", "azure_api": "azure.ad.user.list_role_assignments()", "service": "azure_ad", "rationale": "To audit and ensure that users are only assigned roles necessary for their tasks, adhering to the principle of least privilege."}], "mapping_notes": "Existing functions cover role assignment and credential rotation, but auditing user roles for least privilege adherence requires additional functionality."}, {"compliance_id": "AC-7", "title": "NIST AC-7", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "azure_ad_account_lockout_policy", "azure_api": "azure.ad.policy.set_account_lockout()", "service": "azure_ad", "rationale": "To enforce a limit on consecutive invalid logon attempts and define actions like account lockout or delay algorithms."}], "mapping_notes": "No existing Azure functions directly enforce account lockout policies based on invalid logon attempts. A new function is needed to set these policies programmatically."}, {"compliance_id": "AC-8", "title": "NIST AC-8", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "azure_ad_login_banner_configuration", "azure_api": "azure.ad.policy.set_login_banner()", "service": "azure_ad", "rationale": "To configure and display a system use notification message or banner before granting access to the system."}], "mapping_notes": "A new function is needed to programmatically set login banners for user notification before access."}, {"compliance_id": "AC-9", "title": "NIST AC-9", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "azure_ad_last_logon_notification", "azure_api": "azure.ad.user.notify_last_logon()", "service": "azure_ad", "rationale": "To notify users of the date and time of their last successful logon upon system access."}], "mapping_notes": "No existing function provides last logon notifications; a new function is required for this capability."}, {"compliance_id": "AC-10", "title": "NIST AC-10", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "azure_ad_concurrent_session_limit", "azure_api": "azure.ad.policy.set_concurrent_session_limit()", "service": "azure_ad", "rationale": "To limit the number of concurrent sessions for specific accounts or account types."}], "mapping_notes": "A new function is needed to set and enforce concurrent session limits for accounts programmatically."}]}}
{"key": "6073883753e765c779fbfc27da803ace3d46a8e267ea16b8bac8518e014c429d", "value": {"batch_results": [{"compliance_id": "AC-11", "title": "NIST AC-11", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "azure_compute_virtualmachine_device_lock", "azure_api": "azure.compute.virtualmachines.set_device_lock()", "service": "azure_compute", "rationale": "To programmatically enforce device lock on virtual machines after a defined period of inactivity."}, {"name": "azure_ad_user_proximity_lock", "azure_api": "azure.ad.user.set_proximity_lock()", "service": "azure_ad", "rationale": "To implement proximity-based device lock using Azure AD for user devices."}], "mapping_notes": "There are no existing Azure functions that directly enforce device locks based on inactivity or proximity. New functions are needed to programmatically manage device locks in Azure environments."}, {"compliance_id": "AC-12", "title": "NIST AC-12", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "azure_ad_user_session_termination", "azure_api": "azure.ad.user.terminate_session()", "service": "azure_ad", "rationale": "To automatically terminate user sessions based on defined conditions or trigger events."}], "mapping_notes": "Azure does not currently provide a direct API to terminate user sessions based on inactivity or other triggers. A new function is needed for this capability."}, {"compliance_id": "AC-14", "title": "NIST AC-14", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "azure_ad_user_action_without_authentication", "azure_api": "azure.ad.user.set_actions_without_auth()", "service": "azure_ad", "rationale": "To define and manage user actions that can be performed without authentication in Azure AD."}], "mapping_notes": "Azure currently lacks a function to specify user actions that bypass authentication. A new function is required to manage such actions programmatically."}, {"compliance_id": "AC-15", "title": "NIST AC-15", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "AC-15 has been withdrawn and incorporated into MP-3, so no mapping is required."}, {"compliance_id": "AC-16", "title": "NIST AC-16", "existing_functions_mapped": ["security_information_classification_based_on_attributes_requirements"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "azure_storage_security_attribute_association", "azure_api": "azure.storage.set_security_attributes()", "service": "azure_storage", "rationale": "To associate security attributes with stored information and audit changes."}, {"name": "azure_network_privacy_attribute_association", "azure_api": "azure.network.set_privacy_attributes()", "service": "azure_network", "rationale": "To associate privacy attributes with data in transmission and ensure compliance with privacy requirements."}], "mapping_notes": "While there is partial coverage for security information classification, additional functions are needed to associate and audit security and privacy attributes across storage and network services."}]}}
{"key": "cf6e44d74ec940525912013868b5fc13a8ee84089ef6b02a434387e098148d4c", "value": {"batch_results": [{"compliance_id": "AC-22", "title": "NIST AC-22", "existing_functions_mapped": ["storage_blob_policy_blocklisted_actions_disallowed", "monitor_activity_log_alert_delete_public_ip"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "azure_storage_public_access_review", "azure_api": "azure.storage.blob_service_client.list_containers()", "service": "azure_storage", "rationale": "To periodically review publicly accessible storage containers for nonpublic information."}], "mapping_notes": "Existing functions can help restrict unauthorized actions and monitor public IP deletions, but a specific function to review and manage public access to storage is needed."}, {"compliance_id": "AC-23", "title": "NIST AC-23", "existing_functions_mapped": ["security_automated_data_collection_detection"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "azure_sql_data_mining_prevention", "azure_api": "azure.sql.database_vulnerability_assessment_rule_baseline()", "service": "azure_sql", "rationale": "To implement and monitor data mining prevention techniques on SQL databases."}], "mapping_notes": "While automated data collection detection exists, specific data mining prevention and detection techniques need to be implemented for SQL databases."}, {"compliance_id": "AC-24", "title": "NIST AC-24", "existing_functions_mapped": ["aad_cosmosdb_account_rbac_authentication", "identity_user_least_privilege"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "azure_ad_access_control_decision_enforcement", "azure_api": "azure.ad.authorization_policy()", "service": "azure_ad", "rationale": "To ensure access control decisions are applied to each access request prior to enforcement."}], "mapping_notes": "Existing functions support RBAC and least privilege, but a mechanism to enforce access control decisions at the request level is needed."}, {"compliance_id": "AC-25", "title": "NIST AC-25", "existing_functions_mapped": ["firewall_policy_rule_collection_group_has_rules"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "azure_compute_reference_monitor_implementation", "azure_api": "azure.compute.vm_extension()", "service": "azure_compute", "rationale": "To implement a reference monitor that is tamperproof and always invoked for access control policies."}], "mapping_notes": "Firewall rules can help enforce access control, but a dedicated reference monitor mechanism is required for comprehensive compliance."}, {"compliance_id": "AT-1", "title": "NIST AT-1", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "This control primarily involves policy and procedural elements, which cannot be implemented programmatically using Azure SDK/API calls."}]}}
{"key": "9ee59e004cbfc543e3a2832c8fc5c755f6cc7b69b03a272e3c4e81a3ee588b96", "value": {"batch_results": [{"compliance_id": "AU-1", "title": "NIST AU-1", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "AU-1 focuses on policy and procedural documentation, which cannot be implemented programmatically using Azure SDK/API calls. No technical functions are applicable."}, {"compliance_id": "AU-1", "title": "NIST AU-1", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [], "mapping_notes": "AU-1 focuses on policy and procedural documentation, which cannot be implemented programmatically using Azure SDK/API calls. No technical functions are applicable."}, {"compliance_id": "AU-3", "title": "NIST AU-3", "existing_functions_mapped": ["monitor_diagnostic_settings_send_logs_to_log_analytics", "monitor_activity_log_alert_delete_public_ip"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "azure_monitor_audit_log_event_details", "azure_api": "azure.monitor.logs.query()", "service": "Azure Monitor", "rationale": "To ensure audit records contain detailed information about events, including type, time, source, outcome, and associated identities."}], "mapping_notes": "Existing functions cover sending logs to analytics and alerting on specific activities, but do not ensure all required audit details are captured. A new function is suggested to query detailed audit log events."}, {"compliance_id": "AU-4", "title": "NIST AU-4", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "azure_storage_allocate_audit_log_capacity", "azure_api": "azure.storage.blob.set_service_properties()", "service": "Azure Storage", "rationale": "To programmatically allocate storage capacity for audit logs based on organization-defined retention requirements."}], "mapping_notes": "No existing functions directly allocate storage capacity for audit logs. A new function is needed to manage storage allocation programmatically."}, {"compliance_id": "AU-5", "title": "NIST AU-5", "existing_functions_mapped": ["monitor_activity_log_alert_delete_public_ip"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "azure_monitor_alert_on_audit_log_failure", "azure_api": "azure.monitor.alerts.create_or_update()", "service": "Azure Monitor", "rationale": "To alert designated personnel in the event of an audit logging process failure within a specified time period."}], "mapping_notes": "Existing alert functions can be adapted for audit log failures, but a specific function to handle audit log process failures is needed for complete coverage."}]}}
{"key": "c09daafc5a647f6bcc22f01abe6e7c4ea73282e4e3c00fbb468c9e95a5f7a49b", "value": {"batch_results": [{"compliance_id": "CA-5", "title": "NIST CA-5", "existing_functions_mapped": ["monitor_diagnostic_settings_send_logs_to_log_analytics", "policy_defconfig_standards_monitoring_change_detection_unauthorized_components_vulnerability_scans"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "azure_security_vulnerability_assessment_plan_update", "azure_api": "azure.security.update_vulnerability_plan()", "service": "azure_security", "rationale": "To programmatically update and track the remediation plan for vulnerabilities identified during assessments."}], "mapping_notes": "Existing functions provide some monitoring capabilities but do not cover the creation and update of remediation plans."}, {"compliance_id": "CA-6", "title": "NIST CA-6", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "azure_ad_assign_authorizing_official", "azure_api": "azure.ad.assign_authorizing_official()", "service": "azure_ad", "rationale": "To programmatically assign and update authorizing officials for systems and common controls."}], "mapping_notes": "No existing Azure functions directly map to the assignment of authorizing officials."}, {"compliance_id": "CA-7", "title": "NIST CA-7", "existing_functions_mapped": ["monitor_cloud_services_enumeration", "security_automated_data_collection_detection"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "azure_monitor_continuous_control_assessment", "azure_api": "azure.monitor.continuous_control_assessment()", "service": "azure_monitor", "rationale": "To implement a continuous monitoring strategy at the system level, integrating with existing monitoring solutions."}], "mapping_notes": "Existing functions support some aspects of monitoring but do not fully implement a continuous monitoring strategy."}, {"compliance_id": "CA-8", "title": "NIST CA-8", "existing_functions_mapped": [], "coverage_assessment": "none", "new_functions_needed": [{"name": "azure_security_penetration_testing_schedule", "azure_api": "azure.security.schedule_penetration_test()", "service": "azure_security", "rationale": "To programmatically schedule and manage penetration tests on Azure systems."}], "mapping_notes": "Penetration testing requires specialized functions not currently available in Azure SDK/API."}, {"compliance_id": "CA-9", "title": "NIST CA-9", "existing_functions_mapped": ["network_wireless_ensure_protection_measures", "compute_virtualmachine_in_vnet_names_match"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "azure_network_internal_connection_authorization", "azure_api": "azure.network.authorize_internal_connections()", "service": "azure_network", "rationale": "To authorize and manage internal system connections programmatically."}], "mapping_notes": "Existing functions manage some aspects of network security but do not specifically address internal connection authorization."}]}}
{"key": "158a9af695f2f61fc370d206d6bbf1b70b5e254558ef077cb96715e288d845a6", "value": {"batch_results": [{"compliance_id": "control_id_1", "title": "NIST control_id_1", "existing_functions_mapped": ["monitor_diagnostic_settings_send_logs_to_log_analytics", "security_intrusion_detection_system_configured_state"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "azure_monitor_configure_intrusion_detection_alerts", "azure_api": "azure.monitor.create_alert_rule()", "service": "azure_monitor", "rationale": "To ensure real-time alerts are configured for intrusion detection events."}], "mapping_notes": "Existing functions cover logging and detection configuration but lack real-time alerting setup."}, {"compliance_id": "control_id_2", "title": "NIST control_id_2", "existing_functions_mapped": ["identity_user_least_privilege", "iam_subscription_roles_no_custom_admin"], "coverage_assessment": "complete", "new_functions_needed": [], "mapping_notes": "The existing functions ensure least privilege access and prevent unauthorized role assignments."}, {"compliance_id": "control_id_3", "title": "NIST control_id_3", "existing_functions_mapped": ["keyvault_secret_rotation_frequency_limit", "azure_ad_service_principal_credentials_rotation"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "azure_keyvault_automatic_secret_rotation", "azure_api": "azure.keyvault.set_secret_rotation_policy()", "service": "azure_keyvault", "rationale": "To automate the rotation of secrets within Key Vault to enhance security."}], "mapping_notes": "While rotation policies can be set, automation of the rotation process is not fully covered."}, {"compliance_id": "control_id_4", "title": "NIST control_id_4", "existing_functions_mapped": ["storage_blob_container_encryption_enabled_or_deny_unencrypted_put_object", "sql_database_storage_encryption_enabled"], "coverage_assessment": "complete", "new_functions_needed": [], "mapping_notes": "Encryption at rest is enforced for both blob storage and SQL databases, meeting the control requirements."}, {"compliance_id": "control_id_5", "title": "NIST control_id_5", "existing_functions_mapped": ["network_wireless_ensure_protection_measures", "frontdoor_cdn_minimum_tls12"], "coverage_assessment": "partial", "new_functions_needed": [{"name": "azure_network_configure_tls_enforcement", "azure_api": "azure.network.set_tls_policy()", "service": "azure_network", "rationale": "To enforce TLS policies across all network endpoints to ensure secure communication."}], "mapping_notes": "Existing functions cover some network security measures but lack comprehensive TLS enforcement."}]}}

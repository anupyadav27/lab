{
  "mapping_summary": {
    "total_items": 10,
    "timestamp": "2025-08-18T01:24:45.530155",
    "coverage_breakdown": {
      "complete": 6,
      "partial": 4,
      "none": 0
    }
  },
  "mapping_results": [
    {
      "compliance_id": "2.1.1",
      "title": "Ensure 'Java version' is currently supported (if in use)",
      "existing_functions_mapped": [],
      "functions_to_rename": [],
      "functions_to_consolidate": [
        {
          "old_functions": [
            "compute_java_supported_version",
            "compute_java_supported_version_in_use",
            "compute_java_supported_version_active",
            "compute_java_supported_version_enabled",
            "compute_java_supported_version_current"
          ],
          "new_consolidated_function": "compute_java_version_supported",
          "rationale": "Consolidation improves efficiency by reducing duplication of similar functions that check for supported Java versions."
        }
      ],
      "coverage_assessment": "partial",
      "new_functions_needed": [
        {
          "function_name": "compute_java_version_supported",
          "description": "Checks if the currently used Java version is supported.",
          "azure_sdk_example": "client.compute.java.get_supported_version()",
          "service_category": "Compute"
        }
      ],
      "mapping_notes": "The existing functions related to Java version support were consolidated into one function to minimize redundancy. The new function name 'compute_java_version_supported' adheres to the naming standards and clearly describes the requirement."
    },
    {
      "compliance_id": "2.1.2",
      "title": "Ensure 'Python version' is currently supported (if in use)",
      "existing_functions_mapped": [],
      "functions_to_rename": [],
      "functions_to_consolidate": [
        {
          "old_functions": [
            "compute_runtime_supported_python_version",
            "compute_runtime_python_version_current",
            "compute_runtime_python_version_supported",
            "compute_runtime_python_version_active",
            "compute_runtime_python_version_valid"
          ],
          "new_consolidated_function": "compute_runtime_python_version_supported",
          "rationale": "Consolidating these functions into one improves efficiency by reducing duplication and ensures that we have a single source of truth for checking the supported Python version."
        }
      ],
      "coverage_assessment": "partial",
      "new_functions_needed": [
        {
          "function_name": "compute_runtime_python_version_supported",
          "description": "Checks if the currently used Python version is supported.",
          "azure_sdk_example": "client.compute.runtime.python.get_supported_version()",
          "service_category": "Compute"
        }
      ],
      "mapping_notes": "The existing functions related to Python version were consolidated into one function to minimize redundancy. The new function name follows the required naming standards, clearly indicating the service, resource, and requirement. However, since there were no existing functions that directly mapped to the compliance requirement, a new function is needed to ensure complete coverage."
    },
    {
      "compliance_id": "2.1.3",
      "title": "Ensure 'PHP version' is currently supported (if in use)",
      "existing_functions_mapped": [],
      "functions_to_rename": [],
      "functions_to_consolidate": [
        {
          "old_functions": [
            "compute_php_version_supported",
            "compute_php_version_current",
            "compute_php_version_active_support",
            "compute_php_version_no_eol"
          ],
          "new_consolidated_function": "compute_php_version_supported",
          "rationale": "Consolidating these functions into one improves efficiency by reducing duplication and ensures that all checks related to PHP version support are covered under a single function."
        }
      ],
      "coverage_assessment": "partial",
      "new_functions_needed": [
        {
          "function_name": "compute_php_version_supported",
          "description": "Checks if the current PHP version is supported and not end-of-life.",
          "azure_sdk_example": "client.compute.php.get_version_status()",
          "service_category": "Compute"
        }
      ],
      "mapping_notes": "The existing functions related to PHP version support were consolidated into one function to streamline the compliance check. The new function name adheres to the naming standards, clearly indicating the service, resource, and requirement. However, since there were no existing functions that directly matched the compliance item, a new function was created to ensure complete coverage."
    },
    {
      "compliance_id": "2.1.4",
      "title": "Ensure 'Basic Authentication Publishing Credentials' are 'Disabled'",
      "existing_functions_mapped": [
        "cloud_cdn_endpoint_basic_auth_disabled",
        "cloud_cdn_endpoint_publishing_credentials_disabled",
        "cloud_cdn_endpoint_auth_credentials_disabled",
        "cloud_cdn_endpoint_basic_auth_credentials_disabled",
        "cloud_cdn_endpoint_publishing_auth_disabled"
      ],
      "functions_to_rename": [],
      "functions_to_consolidate": [
        {
          "old_functions": [
            "cloud_cdn_endpoint_basic_auth_disabled",
            "cloud_cdn_endpoint_publishing_credentials_disabled",
            "cloud_cdn_endpoint_auth_credentials_disabled",
            "cloud_cdn_endpoint_basic_auth_credentials_disabled",
            "cloud_cdn_endpoint_publishing_auth_disabled"
          ],
          "new_consolidated_function": "cloud_cdn_endpoint_basic_auth_disabled",
          "rationale": "Consolidation improves efficiency by reducing duplication of similar checks related to basic authentication."
        }
      ],
      "coverage_assessment": "complete",
      "new_functions_needed": [],
      "mapping_notes": "All existing functions related to basic authentication for CDN endpoints have been consolidated into one function, `cloud_cdn_endpoint_basic_auth_disabled`, which clearly indicates the requirement to disable basic authentication. This consolidation reduces redundancy and maintains clarity in compliance checks."
    },
    {
      "compliance_id": "2.1.5",
      "title": "Ensure 'FTP State' is set to 'FTPS only' or 'Disabled'",
      "existing_functions_mapped": [
        "compute_load_balancer_ftps_only_enabled",
        "compute_load_balancer_ftp_disabled",
        "cloud_cdn_ftps_only_enabled",
        "cloud_cdn_ftp_disabled",
        "network_load_balancer_ftps_only_enabled",
        "network_load_balancer_ftp_disabled",
        "application_load_balancer_ftps_only_enabled",
        "application_load_balancer_ftp_disabled"
      ],
      "functions_to_rename": [],
      "functions_to_consolidate": [
        {
          "old_functions": [
            "compute_load_balancer_ftps_only_enabled",
            "compute_load_balancer_ftp_disabled",
            "cloud_cdn_ftps_only_enabled",
            "cloud_cdn_ftp_disabled",
            "network_load_balancer_ftps_only_enabled",
            "network_load_balancer_ftp_disabled",
            "application_load_balancer_ftps_only_enabled",
            "application_load_balancer_ftp_disabled"
          ],
          "new_consolidated_function": "loadbalancer_ftp_state_ftps_only_or_disabled",
          "rationale": "Consolidation improves efficiency by reducing duplication of similar FTP state checks across different load balancer types."
        }
      ],
      "coverage_assessment": "complete",
      "new_functions_needed": [],
      "mapping_notes": "All existing functions related to FTP state across various load balancer types have been consolidated into one function, 'loadbalancer_ftp_state_ftps_only_or_disabled'. This naming follows the required structure and clearly indicates the compliance requirement being checked."
    },
    {
      "compliance_id": "2.1.6",
      "title": "Ensure 'HTTP version' is set to '2.0' (if in use)",
      "existing_functions_mapped": [
        "cloud_cdn_distribution_http2_enabled",
        "cloud_cdn_distribution_http_version_2_0"
      ],
      "functions_to_rename": [],
      "functions_to_consolidate": [
        {
          "old_functions": [
            "cloud_cdn_distribution_http2_enabled",
            "cloud_cdn_distribution_http_version_2_0",
            "cloud_cdn_distribution_http2_required",
            "cloud_cdn_distribution_http2_enforced",
            "cloud_cdn_distribution_http2_only",
            "cloud_cdn_distribution_http_version_min_2_0",
            "cloud_cdn_distribution_http2_protocol_enabled",
            "cloud_cdn_distribution_http2_compliance",
            "cloud_cdn_distribution_http2_config_valid",
            "cloud_cdn_distribution_http2_configured"
          ],
          "new_consolidated_function": "cloud_cdn_distribution_http2_enabled",
          "rationale": "Consolidation improves efficiency by reducing duplication of similar functions that all check for HTTP/2 compliance."
        }
      ],
      "coverage_assessment": "complete",
      "new_functions_needed": [],
      "mapping_notes": "The existing functions related to HTTP/2 compliance were consolidated into one function, `cloud_cdn_distribution_http2_enabled`, which effectively covers the compliance requirement. This consolidation reduces redundancy and adheres to the naming standards."
    },
    {
      "compliance_id": "2.1.7",
      "title": "Ensure 'HTTPS Only' is set to 'On'",
      "existing_functions_mapped": [
        "cloud_cdn_distribution_https_only_enabled",
        "cloud_cdn_distribution_https_only_enabled_all_regions",
        "cloud_cdn_distribution_https_only_enabled_min_tls_1_2",
        "cloud_cdn_distribution_https_only_enabled_over_90d",
        "cloud_cdn_distribution_https_only_enabled_v2"
      ],
      "functions_to_rename": [],
      "functions_to_consolidate": [
        {
          "old_functions": [
            "cloud_cdn_distribution_https_only_enabled",
            "cloud_cdn_distribution_https_only_enabled_all_regions",
            "cloud_cdn_distribution_https_only_enabled_min_tls_1_2",
            "cloud_cdn_distribution_https_only_enabled_over_90d",
            "cloud_cdn_distribution_https_only_enabled_v2"
          ],
          "new_consolidated_function": "cloud_cdn_distribution_https_only_enabled",
          "rationale": "Consolidation improves efficiency by reducing duplication of similar functions that check the same requirement of HTTPS enforcement."
        }
      ],
      "coverage_assessment": "complete",
      "new_functions_needed": [],
      "mapping_notes": "All existing functions related to the 'HTTPS Only' compliance requirement have been consolidated into one function, 'cloud_cdn_distribution_https_only_enabled'. This function effectively covers the compliance requirement while adhering to naming standards and minimizing function count."
    },
    {
      "compliance_id": "2.1.8",
      "title": "Ensure 'Minimum Inbound TLS Version' is set to '1.2' or higher",
      "existing_functions_mapped": [
        "frontdoor_cdn_tls12_enforced"
      ],
      "functions_to_rename": [],
      "functions_to_consolidate": [
        {
          "old_functions": [
            "cloud_cdn_distribution_min_tls_version_min_1_2",
            "cloud_cdn_domain_min_tls_version_min_1_2",
            "load_balancer_min_tls_version_min_1_2",
            "cloudfront_distribution_min_tls_version_min_1_2",
            "api_gateway_min_tls_version_min_1_2",
            "cloud_run_service_min_tls_version_min_1_2",
            "app_engine_domain_min_tls_version_min_1_2",
            "storage_bucket_min_tls_version_min_1_2",
            "compute_instance_min_tls_version_min_1_2",
            "network_endpoint_min_tls_version_min_1_2"
          ],
          "new_consolidated_function": "network_min_tls_version_1_2",
          "rationale": "Consolidation improves efficiency by reducing duplication of similar TLS version checks across multiple services into a single function."
        }
      ],
      "coverage_assessment": "partial",
      "new_functions_needed": [],
      "mapping_notes": "The existing function 'frontdoor_cdn_tls12_enforced' was mapped as it covers the requirement for minimum TLS version. However, multiple similar functions were identified that need consolidation into 'network_min_tls_version_1_2' to ensure all services are covered under one function. This approach minimizes the total function count while ensuring compliance coverage."
    },
    {
      "compliance_id": "2.1.9",
      "title": "Ensure end-to-end TLS encryption is enabled",
      "existing_functions_mapped": [
        "cloud_cdn_distribution_https_redirect_enabled",
        "cloud_cdn_distribution_tls_1_2_enabled",
        "cloud_cdn_distribution_end_to_end_encryption_enabled",
        "cloud_cdn_distribution_ssl_certificate_valid",
        "cloud_cdn_distribution_min_tls_1_2_required",
        "cloud_cdn_distribution_secure_origin_protocol_enabled",
        "cloud_cdn_distribution_tls_encryption_enforced",
        "cloud_cdn_distribution_origin_ssl_policy_secure",
        "cloud_cdn_distribution_viewer_protocol_https_only",
        "cloud_cdn_distribution_origin_ssl_verification_enabled"
      ],
      "functions_to_rename": [],
      "functions_to_consolidate": [
        {
          "old_functions": [
            "cloud_cdn_distribution_https_redirect_enabled",
            "cloud_cdn_distribution_tls_1_2_enabled",
            "cloud_cdn_distribution_end_to_end_encryption_enabled",
            "cloud_cdn_distribution_ssl_certificate_valid",
            "cloud_cdn_distribution_min_tls_1_2_required",
            "cloud_cdn_distribution_secure_origin_protocol_enabled",
            "cloud_cdn_distribution_tls_encryption_enforced",
            "cloud_cdn_distribution_origin_ssl_policy_secure",
            "cloud_cdn_distribution_viewer_protocol_https_only",
            "cloud_cdn_distribution_origin_ssl_verification_enabled"
          ],
          "new_consolidated_function": "cloud_cdn_distribution_tls_encryption_enabled",
          "rationale": "Consolidation improves efficiency by combining multiple functions that check various aspects of TLS encryption into one comprehensive function."
        }
      ],
      "coverage_assessment": "complete",
      "new_functions_needed": [],
      "mapping_notes": "All existing functions related to TLS encryption for cloud CDN distributions have been mapped and consolidated into a single function, 'cloud_cdn_distribution_tls_encryption_enabled'. This function will cover all aspects of ensuring end-to-end TLS encryption is enabled, thus providing complete coverage for the compliance requirement."
    },
    {
      "compliance_id": "2.1.10",
      "title": "Ensure 'Remote debugging' is set to 'Off'",
      "existing_functions_mapped": [],
      "functions_to_rename": [],
      "functions_to_consolidate": [
        {
          "old_functions": [
            "app_service_web_app_remote_debugging_disabled",
            "app_service_function_app_remote_debugging_disabled",
            "cloud_functions_remote_debugging_disabled",
            "compute_vm_remote_debugging_disabled",
            "container_app_remote_debugging_disabled",
            "serverless_api_remote_debugging_disabled",
            "cloud_run_service_remote_debugging_disabled",
            "api_gateway_remote_debugging_disabled",
            "cloud_cdn_remote_debugging_disabled",
            "edge_function_remote_debugging_disabled"
          ],
          "new_consolidated_function": "compute_remote_debugging_disabled",
          "rationale": "Consolidation improves efficiency by reducing duplication of similar functions that check the same requirement across different services."
        }
      ],
      "coverage_assessment": "complete",
      "new_functions_needed": [
        {
          "function_name": "compute_remote_debugging_disabled",
          "description": "Checks that remote debugging is disabled for compute resources.",
          "azure_sdk_example": "client.compute.remote_debugging.get()",
          "service_category": "Compute"
        }
      ],
      "mapping_notes": "All existing functions related to remote debugging have been consolidated into one function, 'compute_remote_debugging_disabled', which adheres to the naming standards and covers all specified services. This approach minimizes the function count while ensuring complete coverage of the compliance requirement."
    }
  ]
}
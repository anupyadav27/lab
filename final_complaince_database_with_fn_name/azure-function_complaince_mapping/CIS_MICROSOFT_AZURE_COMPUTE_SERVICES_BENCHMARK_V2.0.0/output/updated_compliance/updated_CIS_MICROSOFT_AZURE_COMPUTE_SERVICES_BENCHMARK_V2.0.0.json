[
  {
    "id": "2.1.1",
    "title": "Ensure 'Java version' is currently supported (if in use)",
    "assessment": "Manual",
    "remediation": "Remediate from Azure Portal 1. Login to Azure Portal using https://portal.azure.com 2. Go to App Services 3. Click on each App 4. Under Settings section, click on Configuration 5. Click on the General settings pane and ensure that for a Stack of Java the Major Version and Minor Version reflect a currently supported release, and that the Java web server version is set to the auto-update option. NOTE: No action is required if Java version is set to Off, as Java is not used by your app. Remediate from Azure CLI To see the list of supported runtimes: az webapp list-runtimes To set a currently supported Java version for an existing app, run the following command: az webapp config set --resource-group <RESOURCE_GROUP_NAME> --name <APP_NAME> [--java-version <JAVA_VERSION> --java-container <JAVA_CONTAINER> --java- container-version <JAVA_CONTAINER_VERSION> [--windows-fx-version <JAVA_RUNTIME_VERSION>] [--linux-fx-version <JAVA_RUNTIME_VERSION>] If creating a new application to use a currently supported version of Java, run the following commands. To create an app service plan: az appservice plan create --resource-group <RESOURCE_GROUP_NAME> --name <PLAN_NAME> --location <LOCATION> [--is-linux --number-of-workers <INT> --sku <PRICING_TIER>] [--hyper-v --sku <PRICING_TIER>] Get the app service plan ID: az appservice plan list --query \"[].{Name:name, ID:id, SKU:sku, Location:location}\" To create a new Java web application using the retrieved app service ID: az webapp create --resource-group <RESOURCE_GROUP_NAME> --plan <APP_SERVICE_PLAN_ID> --name <app name> [--linux-fx-version <JAVA_RUNTIME_VERSION>] [--windows-fx-version <JAVA_RUNTIME_VERSION>] Remediate from PowerShell As of this writing, there is no way to update an existing application's SiteConfig or set a new application's SiteConfig settings during creation via PowerShell. Default Value: The version is selected during creation. References: 1. https://learn.microsoft.com/en-us/azure/app-service/configure-language-java- deploy-run 2. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-posture- vulnerability-management#pv-3-define-and-establish-secure-configurations-for- compute-resources 3. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-posture- vulnerability-management#pv-6-rapidly-and-automatically-remediate- vulnerabilities 4. https://www.oracle.com/java/technologies/java-se-support-roadmap.html 5. https://learn.microsoft.com/en-us/cli/azure/webapp CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "compute_java_version_supported"
    ],
    "mapped_coverage": "partial",
    "mapping_notes": "The existing functions related to Java version support were consolidated into one function to minimize redundancy. The new function name 'compute_java_version_supported' adheres to the naming standards and clearly describes the requirement.",
    "last_mapped": "2025-08-18T01:24:45.547804",
    "consolidation_info": [
      {
        "old_functions": [
          "compute_java_supported_version",
          "compute_java_supported_version_in_use",
          "compute_java_supported_version_active",
          "compute_java_supported_version_enabled",
          "compute_java_supported_version_current"
        ],
        "new_consolidated_function": "compute_java_version_supported",
        "rationale": "Consolidation improves efficiency by reducing duplication of similar functions that check for supported Java versions."
      }
    ]
  },
  {
    "id": "2.1.2",
    "title": "Ensure 'Python version' is currently supported (if in use)",
    "assessment": "Manual",
    "remediation": "Note: No action is required if Python is not in use. Remediate from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. Under Settings, click Configuration. 4. In the General settings pane, for a Stack of Python, set the Major version and Minor version to a currently supported release. 5. Click Save. 6. Click Continue. 7. Repeat steps 1-6 for each app requiring remediation. Remediate from Azure CLI Run the following command to list supported runtimes: az webapp list-runtimes For each app requiring remediation, run the following command with the appropriate parameters to update the Python version: az webapp config set --resource-group <resource-group-name> --name <app-name> [--windows-fx-version \"PYTHON|<version>\"] [--linux-fx-version \"PYTHON|<version>\"] Default Value: The version is selected during creation. References: 1. https://learn.microsoft.com/en-us/azure/app-service/configure- common#configure-language-stack-settings 2. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- posture-vulnerability-management#pv-7-rapidly-and-automatically-remediate- software-vulnerabilities 3. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- posture-vulnerability-management#pv-3-establish-secure-configurations-for- compute-resources 4. https://devguide.python.org/versions/ 5. https://learn.microsoft.com/en-us/cli/azure/webapp 6. https://learn.microsoft.com/en-us/powershell/module/az.websites/get-azwebapp CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "compute_runtime_python_version_supported"
    ],
    "mapped_coverage": "partial",
    "mapping_notes": "The existing functions related to Python version were consolidated into one function to minimize redundancy. The new function name follows the required naming standards, clearly indicating the service, resource, and requirement. However, since there were no existing functions that directly mapped to the compliance requirement, a new function is needed to ensure complete coverage.",
    "last_mapped": "2025-08-18T01:24:45.547891",
    "consolidation_info": [
      {
        "old_functions": [
          "compute_runtime_supported_python_version",
          "compute_runtime_python_version_current",
          "compute_runtime_python_version_supported",
          "compute_runtime_python_version_active",
          "compute_runtime_python_version_valid"
        ],
        "new_consolidated_function": "compute_runtime_python_version_supported",
        "rationale": "Consolidating these functions into one improves efficiency by reducing duplication and ensures that we have a single source of truth for checking the supported Python version."
      }
    ]
  },
  {
    "id": "2.1.3",
    "title": "Ensure 'PHP version' is currently supported (if in use)",
    "assessment": "Manual",
    "remediation": "Note: No action is required if PHP is not in use. Remediate from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. Under Settings, click Configuration. 4. In the General settings pane, for a Stack of PHP, set the Major version and Minor version to a currently supported release. 5. Click Save. 6. Click Continue. 7. Repeat steps 1-6 for each app requiring remediation. Remediate from Azure CLI Run the following command to list supported runtimes: az webapp list-runtimes For each app requiring remediation, run the following command with the appropriate parameters to update the PHP version: az webapp config set --resource-group <resource-group-name> --name <app-name> [--linux-fx-version <php-runtime-version>][--php-version <php-version>] Remediate from PowerShell For each app requiring remediation, run the following command to update the PHP version: Set-AzWebApp -ResourceGroupName <resource-group-name> -Name <app-name> - phpVersion <php-version> Note: Currently, there is no way to update an app's Linux FX Version setting using PowerShell. Default Value: The version is selected during creation. References: 1. https://learn.microsoft.com/en-us/azure/app-service/configure-common#general- settings 2. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- posture-vulnerability-management#pv-7-rapidly-and-automatically-remediate- software-vulnerabilities 3. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- posture-vulnerability-management#pv-3-establish-secure-configurations-for- compute-resources 4. https://www.php.net/supported-versions.php 5. https://learn.microsoft.com/en-us/cli/azure/webapp 6. https://learn.microsoft.com/en-us/powershell/module/az.websites/get-azwebapp 7. https://learn.microsoft.com/en-us/powershell/module/az.websites/set-azwebapp CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "compute_php_version_supported"
    ],
    "mapped_coverage": "partial",
    "mapping_notes": "The existing functions related to PHP version support were consolidated into one function to streamline the compliance check. The new function name adheres to the naming standards, clearly indicating the service, resource, and requirement. However, since there were no existing functions that directly matched the compliance item, a new function was created to ensure complete coverage.",
    "last_mapped": "2025-08-18T01:24:45.547927",
    "consolidation_info": [
      {
        "old_functions": [
          "compute_php_version_supported",
          "compute_php_version_current",
          "compute_php_version_active_support",
          "compute_php_version_no_eol"
        ],
        "new_consolidated_function": "compute_php_version_supported",
        "rationale": "Consolidating these functions into one improves efficiency by reducing duplication and ensures that all checks related to PHP version support are covered under a single function."
      }
    ]
  },
  {
    "id": "2.1.4",
    "title": "Ensure 'Basic Authentication Publishing Credentials' are 'Disabled'",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Search for, and open App Services from the search bar. 2. For each App Service listed: 3. Click on the App Service name. 4. Under the Settings menu item, click on Configuration 5. Under the General settings tab, scroll down to locate the two Basic Auth settings: • Set the SCM Basic Auth Publishing Credentials radio button to Off • Set the FTP Basic Auth Publishing Credentials radio button to Off CAUTION: The new settings are not yet applied. Applying them may cause your App Service resource to restart - proceed with caution. Click the Save button, then click Continue to apply the updated configuration. Repeat this procedure for each App Service. Remediate from Azure CLI For each app requiring remediation, run the following command to disable basic authentication for FTP: az resource update --resource-group <resource-group-name> --name ftp -- namespace Microsoft.Web --resource-type basicPublishingCredentialsPolicies -- parent sites/<app-name> --set properties.allow=false For each app requiring remediation, run the following command to disable basic authentication for SCM: az resource update --resource-group <resource-group-name> --name scm -- namespace Microsoft.Web --resource-type basicPublishingCredentialsPolicies -- parent sites/<app-name> --set properties.allow=false Default Value: Basic authentication is disabled by default. References: 1. https://learn.microsoft.com/en-us/azure/app-service/configure-basic-auth-disable 2. https://learn.microsoft.com/en-us/cli/azure/webapp 3. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "cloud_cdn_endpoint_basic_auth_disabled"
    ],
    "mapped_coverage": "complete",
    "mapping_notes": "All existing functions related to basic authentication for CDN endpoints have been consolidated into one function, `cloud_cdn_endpoint_basic_auth_disabled`, which clearly indicates the requirement to disable basic authentication. This consolidation reduces redundancy and maintains clarity in compliance checks.",
    "last_mapped": "2025-08-18T01:24:45.547958",
    "consolidation_info": [
      {
        "old_functions": [
          "cloud_cdn_endpoint_basic_auth_disabled",
          "cloud_cdn_endpoint_publishing_credentials_disabled",
          "cloud_cdn_endpoint_auth_credentials_disabled",
          "cloud_cdn_endpoint_basic_auth_credentials_disabled",
          "cloud_cdn_endpoint_publishing_auth_disabled"
        ],
        "new_consolidated_function": "cloud_cdn_endpoint_basic_auth_disabled",
        "rationale": "Consolidation improves efficiency by reducing duplication of similar checks related to basic authentication."
      }
    ]
  },
  {
    "id": "2.1.5",
    "title": "Ensure 'FTP State' is set to 'FTPS only' or 'Disabled'",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to the Azure Portal 2. Select App Services 3. Click on an app 4. Select Settings and then Configuration 5. Under General Settings, for the Platform Settings, the FTP state should be set to Disabled or FTPS Only Remediate from Azure CLI For each out of compliance application, run the following choosing either 'disabled' or 'FtpsOnly' as appropriate: az webapp config set --resource-group <resource group name> --name <app name> --ftps-state [disabled|FtpsOnly] Remediate from PowerShell For each out of compliance application, run the following: Set-AzWebApp -ResourceGroupName <resource group name> -Name <app name> - FtpsState <Disabled or FtpsOnly> Default Value: By default, FTP state is set to FTPS only. References: 1. https://learn.microsoft.com/en-us/azure/app-service/deploy-ftp 2. https://learn.microsoft.com/en-us/azure/app-service/overview-security 3. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- data-protection#dp-4-encrypt-sensitive-information-in-transit 4. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- posture-vulnerability-management#pv-7-rapidly-and-automatically-remediate- software-vulnerabilities 5. https://learn.microsoft.com/en-us/rest/api/appservice/web-apps/create-or-update- configuration#ftpsstate 6. https://learn.microsoft.com/en-us/cli/azure/webapp 7. https://learn.microsoft.com/en-us/powershell/module/az.websites/get-azwebapp 8. https://learn.microsoft.com/en-us/powershell/module/az.websites/set-azwebapp CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "references": "1. https://learn.microsoft.com/en-us/azure/app-service/deploy-ftp 2. https://learn.microsoft.com/en-us/azure/app-service/overview-security 3. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- data-protection#dp-4-encrypt-sensitive-information-in-transit 4. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- posture-vulnerability-management#pv-7-rapidly-and-automatically-remediate- software-vulnerabilities 5. https://learn.microsoft.com/en-us/rest/api/appservice/web-apps/create-or-update- configuration#ftpsstate 6. https://learn.microsoft.com/en-us/cli/azure/webapp 7. https://learn.microsoft.com/en-us/powershell/module/az.websites/get-azwebapp 8. https://learn.microsoft.com/en-us/powershell/module/az.websites/set-azwebapp CIS Controls: Controls Version Control IG 1 IG 2 IG 3 v8 3.10 Encrypt Sensitive Data in Transit Encrypt sensitive data in transit. Example implementations can include: Transport Layer Security (TLS) and Open Secure Shell (OpenSSH). ● ● v7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.  ● ● v7 16.5 Encrypt Transmittal of Username and Authentication Credentials Ensure that all account usernames and authentication credentials are transmitted across networks using encrypted channels. ● ●",
    "function_names": [
      "loadbalancer_ftp_state_ftps_only_or_disabled"
    ],
    "mapped_coverage": "complete",
    "mapping_notes": "All existing functions related to FTP state across various load balancer types have been consolidated into one function, 'loadbalancer_ftp_state_ftps_only_or_disabled'. This naming follows the required structure and clearly indicates the compliance requirement being checked.",
    "last_mapped": "2025-08-18T01:24:45.547992",
    "consolidation_info": [
      {
        "old_functions": [
          "compute_load_balancer_ftps_only_enabled",
          "compute_load_balancer_ftp_disabled",
          "cloud_cdn_ftps_only_enabled",
          "cloud_cdn_ftp_disabled",
          "network_load_balancer_ftps_only_enabled",
          "network_load_balancer_ftp_disabled",
          "application_load_balancer_ftps_only_enabled",
          "application_load_balancer_ftp_disabled"
        ],
        "new_consolidated_function": "loadbalancer_ftp_state_ftps_only_or_disabled",
        "rationale": "Consolidation improves efficiency by reducing duplication of similar FTP state checks across different load balancer types."
      }
    ]
  },
  {
    "id": "2.1.6",
    "title": "Ensure 'HTTP version' is set to '2.0' (if in use)",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. Under Settings, click Configuration. 4. In the General settings pane, under Platform settings, set HTTP version to 2.0. 5. Click Save. 6. Click Continue. 7. Repeat steps 1-6 for each app requiring remediation. Remediate from Azure CLI For each app requiring remediation, run the following command to enable http20Enabled: az webapp config set --resource-group <resource-group-name> --name <app-name> --http20-enabled true Default Value: By default, HTTP version is set to 1.1. References: 1. https://learn.microsoft.com/en-us/azure/app-service/configure-common#general- settings 2. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-posture- vulnerability-management#pv-3-define-and-establish-secure-configurations-for- compute-resources 3. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-posture- vulnerability-management#pv-6-rapidly-and-automatically-remediate- vulnerabilities 4. https://learn.microsoft.com/en-us/cli/azure/webapp 5. https://learn.microsoft.com/en-us/powershell/module/az.websites/get-azwebapp CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "cloud_cdn_distribution_http2_enabled"
    ],
    "mapped_coverage": "complete",
    "mapping_notes": "The existing functions related to HTTP/2 compliance were consolidated into one function, `cloud_cdn_distribution_http2_enabled`, which effectively covers the compliance requirement. This consolidation reduces redundancy and adheres to the naming standards.",
    "last_mapped": "2025-08-18T01:24:45.548020",
    "consolidation_info": [
      {
        "old_functions": [
          "cloud_cdn_distribution_http2_enabled",
          "cloud_cdn_distribution_http_version_2_0",
          "cloud_cdn_distribution_http2_required",
          "cloud_cdn_distribution_http2_enforced",
          "cloud_cdn_distribution_http2_only",
          "cloud_cdn_distribution_http_version_min_2_0",
          "cloud_cdn_distribution_http2_protocol_enabled",
          "cloud_cdn_distribution_http2_compliance",
          "cloud_cdn_distribution_http2_config_valid",
          "cloud_cdn_distribution_http2_configured"
        ],
        "new_consolidated_function": "cloud_cdn_distribution_http2_enabled",
        "rationale": "Consolidation improves efficiency by reducing duplication of similar functions that all check for HTTP/2 compliance."
      }
    ]
  },
  {
    "id": "2.1.7",
    "title": "Ensure 'HTTPS Only' is set to 'On'",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Login to Azure Portal using https://portal.azure.com 2. Go to App Services 3. For each App Service 4. Under Setting section, click on Configuration 5. Under the General Settings tab, set HTTPS Only to On under Platform Settings Remediate from Azure CLI To set HTTPS-only traffic value for an existing app, run the following command: az webapp update --resource-group <RESOURCE_GROUP_NAME> --name <APP_NAME> -- set httpsOnly=true Remediate from PowerShell Set-AzWebApp -ResourceGroupName <RESOURCE_GROUP_NAME> -Name <APP_NAME> - HttpsOnly $true Default Value: HTTPS Only is disabled by default. References: 1. https://learn.microsoft.com/en-us/azure/app-service/overview-security#https-and- certificates 2. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- data-protection#dp-3-encrypt-sensitive-data-in-transit 3. https://techcommunity.microsoft.com/t5/azure-paas-blog/enable-https-setting-on- azure-app-service-using-azure-policy/ba-p/3286603 4. https://learn.microsoft.com/en-us/cli/azure/webapp 5. https://learn.microsoft.com/en-us/powershell/module/az.websites/get-azwebapp 6. https://learn.microsoft.com/en-us/powershell/module/az.websites/set-azwebapp CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "cloud_cdn_distribution_https_only_enabled"
    ],
    "mapped_coverage": "complete",
    "mapping_notes": "All existing functions related to the 'HTTPS Only' compliance requirement have been consolidated into one function, 'cloud_cdn_distribution_https_only_enabled'. This function effectively covers the compliance requirement while adhering to naming standards and minimizing function count.",
    "last_mapped": "2025-08-18T01:24:45.548040",
    "consolidation_info": [
      {
        "old_functions": [
          "cloud_cdn_distribution_https_only_enabled",
          "cloud_cdn_distribution_https_only_enabled_all_regions",
          "cloud_cdn_distribution_https_only_enabled_min_tls_1_2",
          "cloud_cdn_distribution_https_only_enabled_over_90d",
          "cloud_cdn_distribution_https_only_enabled_v2"
        ],
        "new_consolidated_function": "cloud_cdn_distribution_https_only_enabled",
        "rationale": "Consolidation improves efficiency by reducing duplication of similar functions that check the same requirement of HTTPS enforcement."
      }
    ]
  },
  {
    "id": "2.1.8",
    "title": "Ensure 'Minimum Inbound TLS Version' is set to '1.2' or higher",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. Under Settings, click Configuration. 4. In the General settings pane, under Platform settings, click the drop-down next to Minimum Inbound TLS Version and select 1.2 or higher. 5. Click Save. 6. Click Continue. 7. Repeat steps 1-6 for each app requiring remediation. Remediate from Azure CLI For each app requiring remediation, run the following command to update the TLS version: az webapp config set --resource-group <resource-group-name> --name <app-name> --min-tls-version <1.2|1.3> Remediate from PowerShell For each app requiring remediation, run the following command to update the TLS version: Set-AzWebApp -ResourceGroupName <resource-group-name> -Name <app-name> - MinTlsVersion <1.2|1.3> Default Value: By default, TLS version is set to 1.2. References: 1. https://learn.microsoft.com/en-us/azure/app-service/configure-ssl-bindings#how- can-i-change-the-minimum-tls-versions-for-the-app 2. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-data- protection#dp-3-encrypt-sensitive-data-in-transit 3. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-network- security#ns-8-detect-and-disable-insecure-services-and-protocols 4. https://learn.microsoft.com/en-us/cli/azure/webapp 5. https://learn.microsoft.com/en-us/powershell/module/az.websites/get-azwebapp 6. https://learn.microsoft.com/en-us/powershell/module/az.websites/set-azwebapp 7. https://csrc.nist.gov/news/2019/nist-publishes-sp-800-52-revision-2 CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "frontdoor_cdn_tls12_enforced",
      "network_min_tls_version_1_2"
    ],
    "mapped_coverage": "partial",
    "mapping_notes": "The existing function 'frontdoor_cdn_tls12_enforced' was mapped as it covers the requirement for minimum TLS version. However, multiple similar functions were identified that need consolidation into 'network_min_tls_version_1_2' to ensure all services are covered under one function. This approach minimizes the total function count while ensuring compliance coverage.",
    "last_mapped": "2025-08-18T01:24:45.548057",
    "consolidation_info": [
      {
        "old_functions": [
          "cloud_cdn_distribution_min_tls_version_min_1_2",
          "cloud_cdn_domain_min_tls_version_min_1_2",
          "load_balancer_min_tls_version_min_1_2",
          "cloudfront_distribution_min_tls_version_min_1_2",
          "api_gateway_min_tls_version_min_1_2",
          "cloud_run_service_min_tls_version_min_1_2",
          "app_engine_domain_min_tls_version_min_1_2",
          "storage_bucket_min_tls_version_min_1_2",
          "compute_instance_min_tls_version_min_1_2",
          "network_endpoint_min_tls_version_min_1_2"
        ],
        "new_consolidated_function": "network_min_tls_version_1_2",
        "rationale": "Consolidation improves efficiency by reducing duplication of similar TLS version checks across multiple services into a single function."
      }
    ]
  },
  {
    "id": "2.1.9",
    "title": "Ensure end-to-end TLS encryption is enabled",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. Under Settings, click Configuration. 4. In the General settings pane, under Platform settings, next to Enable end-to-end TLS encryption, click the radio button next to On. 5. Click Save. 6. Click Continue. 7. Repeat steps 1-6 for each app requiring remediation. Remediate from Azure CLI For each app requiring remediation, run the following command to enable end-to-end TLS encryption: az resource update --resource-group <resource-group-name> --name <app-name> - -resource-type \"Microsoft.Web/sites\" --set properties.endToEndEncryptionEnabled=true Default Value: By default, end-to-end TLS encryption is disabled. References: 1. https://learn.microsoft.com/en-us/azure/app-service/overview-tls#end-to-end-tls- encryption 2. https://learn.microsoft.com/en-us/cli/azure/webapp 3. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "impact": "Enabling end-to-end TLS encryption may introduce minimal latency and require additional configuration of certificates and HTTPS settings to ensure compatibility. Audit: Audit from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. Under Settings, click Configuration. 4. In the General settings pane, under Platform settings, ensure that Enable end-to-end TLS encryption is set to On. 5. Repeat steps 1-4 for each app. Audit from Azure CLI Run the following command to list apps: az webapp list For each app, run the following command to get the end-to-end TLS encryption setting: az webapp show --resource-group <resource-group-name> --name <app-name> -- query endToEndEncryptionEnabled Ensure that the command returns true. Audit from Azure Policy If referencing a digital copy of this Benchmark, clicking a Policy ID will open a link to the associated Policy definition in Azure. If referencing a printed copy, you can search Policy IDs from this URL: https://portal.azure.com/#view/Microsoft_Azure_Policy/PolicyMenuBlade/~/Definitions • Policy ID: af1d7e88-c1c8-4ea8-be1f-87bff0df9101 - Name: 'App Service apps should enable end to end encryption'",
    "function_names": [
      "cloud_cdn_distribution_tls_encryption_enabled"
    ],
    "mapped_coverage": "complete",
    "mapping_notes": "All existing functions related to TLS encryption for cloud CDN distributions have been mapped and consolidated into a single function, 'cloud_cdn_distribution_tls_encryption_enabled'. This function will cover all aspects of ensuring end-to-end TLS encryption is enabled, thus providing complete coverage for the compliance requirement.",
    "last_mapped": "2025-08-18T01:24:45.548079",
    "consolidation_info": [
      {
        "old_functions": [
          "cloud_cdn_distribution_https_redirect_enabled",
          "cloud_cdn_distribution_tls_1_2_enabled",
          "cloud_cdn_distribution_end_to_end_encryption_enabled",
          "cloud_cdn_distribution_ssl_certificate_valid",
          "cloud_cdn_distribution_min_tls_1_2_required",
          "cloud_cdn_distribution_secure_origin_protocol_enabled",
          "cloud_cdn_distribution_tls_encryption_enforced",
          "cloud_cdn_distribution_origin_ssl_policy_secure",
          "cloud_cdn_distribution_viewer_protocol_https_only",
          "cloud_cdn_distribution_origin_ssl_verification_enabled"
        ],
        "new_consolidated_function": "cloud_cdn_distribution_tls_encryption_enabled",
        "rationale": "Consolidation improves efficiency by combining multiple functions that check various aspects of TLS encryption into one comprehensive function."
      }
    ]
  },
  {
    "id": "2.1.10",
    "title": "Ensure 'Remote debugging' is set to 'Off'",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Login to Azure Portal using https://portal.azure.com 2. Go to App Services 3. Click on each App 4. Under Setting section, Click on Configuration 5. Under the General settings tab, set the Remote debugging option to Off. Remediate from Azure CLI To set remote debugging status to off, run the following command az webapp config set --resource-group <resource_group_name> --name <app_name> --remote-debugging-enabled false Remediation from PowerShell To set remote debugging status to off, run the following command Set-AzWebApp -ResourceGroupName <resource_group_name> -Name <app_name> - RemoteDebuggingEnabled $false Default Value: By default, remote debugging is set to off References: 1. https://learn.microsoft.com/en-us/visualstudio/debugger/remote-debugging- azure-app-service 2. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-posture- vulnerability-management#pv-2-audit-and-enforce-secure-configurations 3. https://learn.microsoft.com/en-us/cli/azure/webapp 4. https://learn.microsoft.com/en-us/powershell/module/az.websites/get-azwebapp 5. https://learn.microsoft.com/en-us/powershell/module/az.websites/set-azwebapp CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "references": "1. https://learn.microsoft.com/en-us/visualstudio/debugger/remote-debugging- azure-app-service 2. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-posture- vulnerability-management#pv-2-audit-and-enforce-secure-configurations 3. https://learn.microsoft.com/en-us/cli/azure/webapp 4. https://learn.microsoft.com/en-us/powershell/module/az.websites/get-azwebapp 5. https://learn.microsoft.com/en-us/powershell/module/az.websites/set-azwebapp CIS Controls: Controls Version Control IG 1 IG 2 IG 3 v8 12.3 Securely Manage Network Infrastructure Securely manage network infrastructure. Example implementations include version-controlled-infrastructure-as-code, and the use of secure network protocols, such as SSH and HTTPS. ● ● v7 9.2 Ensure Only Approved Ports, Protocols and Services Are Running Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system. ● ●",
    "function_names": [
      "compute_remote_debugging_disabled"
    ],
    "mapped_coverage": "complete",
    "mapping_notes": "All existing functions related to remote debugging have been consolidated into one function, 'compute_remote_debugging_disabled', which adheres to the naming standards and covers all specified services. This approach minimizes the function count while ensuring complete coverage of the compliance requirement.",
    "last_mapped": "2025-08-18T01:24:45.548095",
    "consolidation_info": [
      {
        "old_functions": [
          "app_service_web_app_remote_debugging_disabled",
          "app_service_function_app_remote_debugging_disabled",
          "cloud_functions_remote_debugging_disabled",
          "compute_vm_remote_debugging_disabled",
          "container_app_remote_debugging_disabled",
          "serverless_api_remote_debugging_disabled",
          "cloud_run_service_remote_debugging_disabled",
          "api_gateway_remote_debugging_disabled",
          "cloud_cdn_remote_debugging_disabled",
          "edge_function_remote_debugging_disabled"
        ],
        "new_consolidated_function": "compute_remote_debugging_disabled",
        "rationale": "Consolidation improves efficiency by reducing duplication of similar functions that check the same requirement across different services."
      }
    ]
  },
  {
    "id": "2.1.11",
    "title": "Ensure incoming client certificates are enabled and required (if in use)",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Login to Azure Portal using https://portal.azure.com 2. Go to App Services 3. Click on each App 4. Under the Settings section, Click on Configuration, then General settings 5. Set the option Client certificate mode located under Incoming client certificates to Require Remediate from Azure CLI To set Incoming client certificates value for an existing app, run the following command: az webapp update --resource-group <RESOURCE_GROUP_NAME> --name <APP_NAME> -- set clientCertEnabled=true Default Value: By default, incoming client certificates are disabled. References: 1. https://docs.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- identity-management#im-4-authenticate-server-and-services 2. https://learn.microsoft.com/en-us/azure/app-service/app-service-web-configure- tls-mutual-auth 3. https://learn.microsoft.com/en-us/cli/azure/webapp 4. https://learn.microsoft.com/en-us/powershell/module/az.websites/get-azwebapp CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "cloud_cdn_load_balancer_client_certificate_required",
      "cloud_cdn_load_balancer_client_certificate_enabled",
      "compute_load_balancer_client_certificate_required",
      "compute_load_balancer_client_certificate_enabled",
      "cloud_cdn_ssl_certificate_client_auth_required",
      "cloud_cdn_ssl_certificate_client_auth_enabled",
      "compute_ssl_certificate_client_auth_required",
      "compute_ssl_certificate_client_auth_enabled"
    ]
  },
  {
    "id": "2.1.12",
    "title": "Ensure 'App Service authentication' is set to 'Enabled'",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. Under Settings, click Authentication. 4. If an identity provider is not configured: 1. Click Add identity provider. 2. Provide appropriate configuration for an identity provider and click Add. 5. If App Service authentication is set to Disabled: 1. Click Enable authentication. 6. Repeat steps 1-5 for each app requiring remediation. Remediate from Azure CLI For each app requiring remediation, run the following command to enable authentication: az webapp auth update --resource-group <resource-group-name> --name <app- name> --enabled true Note : In order to access App Service authentication settings for an app using the Microsoft API, the Website Contributor permission at the subscription level is required. A custom role can be created instead of Website Contributor to provide more specific permissions and maintain the principle of least privileged access. Default Value: By default, App Service authentication is set to Disabled. References: 1. https://learn.microsoft.com/en-us/azure/app-service/overview-authentication- authorization 2. https://learn.microsoft.com/en-us/azure/role-based-access-control/built-in- roles#website-contributor 3. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-privileged- access#pa-3-manage-lifecycle-of-identities-and-entitlements 4. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-governance- strategy#gs-6-define-and-implement-identity-and-privileged-access-strategy 5. https://learn.microsoft.com/en-us/cli/azure/webapp/auth Additional Information: You're not required to use App Service for authentication and authorization. Many web frameworks come with security features built in, and you can use them if you like. If you need more flexibility than App Service provides, you can also write your own utilities. Secure authentication and authorization require a deep understanding of security, including federation, encryption, JSON Web Token (JWT) management, grant types, and so on. CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "references": "1. https://learn.microsoft.com/en-us/azure/app-service/overview-authentication- authorization 2. https://learn.microsoft.com/en-us/azure/role-based-access-control/built-in- roles#website-contributor 3. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-privileged- access#pa-3-manage-lifecycle-of-identities-and-entitlements 4. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-governance- strategy#gs-6-define-and-implement-identity-and-privileged-access-strategy 5. https://learn.microsoft.com/en-us/cli/azure/webapp/auth Additional Information: You're not required to use App Service for authentication and authorization. Many web frameworks come with security features built in, and you can use them if you like. If you need more flexibility than App Service provides, you can also write your own utilities. Secure authentication and authorization require a deep understanding of security, including federation, encryption, JSON Web Token (JWT) management, grant types, and so on. CIS Controls: Controls Version Control IG 1 IG 2 IG 3 v8 3.3 Configure Data Access Control Lists Configure data access control lists based on a user’s need to know. Apply data access control lists, also known as access permissions, to local and remote file systems, databases, and applications. ● ● ● v7 14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities. ● ● ●",
    "function_names": [
      "app_service_authentication_enabled",
      "app_service_authentication_required",
      "app_service_authentication_configured",
      "app_service_authentication_active",
      "app_service_authentication_enforced"
    ]
  },
  {
    "id": "2.1.13",
    "title": "Ensure managed identities are configured",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. Under Settings, click Identity. 4. To add a system assigned managed identity: 1. In the System assigned pane, under Status, click On. 2. Click Save. 3. Click Yes. 5. To add a user assigned managed identity: 1. In the User assigned pane, click Add. 2. Use the filter box to search for a managed identity. 3. Select the identity. 4. Click Add. 6. Repeat steps 1-5 for each app requiring remediation. Remediate from Azure CLI For each web app requiring remediation, run the following command to assign a managed identity: az webapp identity assign --resource-group <resource-group-name> --name <app- name> Remediate from PowerShell For each web app requiring remediation, run the following command to assign a managed identity: Set-AzWebApp -AssignIdentity $True -ResourceGroupName <resource-group-name> - Name <app-name> Default Value: Managed identities are disabled by default for App Service apps. References: 1. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-identity- management#im-1-use-centralized-identity-and-authentication-system 2. https://learn.microsoft.com/en-us/azure/app-service/overview-managed-identity 3. https://learn.microsoft.com/en-us/cli/azure/webapp 4. https://learn.microsoft.com/en-us/powershell/module/az.websites/get-azwebapp 5. https://learn.microsoft.com/en-us/powershell/module/az.websites/set-azwebapp CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "compute_virtual_machine_managed_identity_enabled",
      "compute_virtual_machine_managed_identity_assigned",
      "compute_virtual_machine_system_assigned_identity_enabled",
      "compute_virtual_machine_user_assigned_identity_enabled",
      "compute_virtual_machine_identity_credentials_rotated",
      "compute_virtual_machine_identity_permissions_restricted",
      "compute_virtual_machine_identity_lease_duration_limited",
      "compute_virtual_machine_identity_audit_logging_enabled"
    ]
  },
  {
    "id": "2.1.14",
    "title": "Ensure public network access is disabled",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. Under Settings, click Networking. 4. Under Inbound traffic configuration, click the text next to Public network access. 5. Select the radio button next to Disabled. 6. Click Save. 7. Check the box to confirm the change. 8. Click Continue. 9. Repeat steps 1-8 for each app requiring remediation. Remediate from Azure CLI For each app requiring remediation, run the following command to disable public network access: az resource update --resource-group <resource-group-name> --name <app-name> - -resource-type \"Microsoft.Web/sites\" --set properties.publicNetworkAccess=Disabled Default Value: By default, public network access is enabled. References: 1. https://learn.microsoft.com/en-us/azure/app-service/networking-features 2. https://learn.microsoft.com/en-us/cli/azure/webapp 3. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "storage_account_public_network_access_disabled",
      "storage_account_network_access_restricted",
      "storage_account_public_access_blocked",
      "storage_account_network_policy_private",
      "storage_account_public_endpoint_disabled",
      "storage_account_firewall_enabled",
      "storage_account_network_acl_restricted",
      "storage_account_public_network_denied"
    ]
  },
  {
    "id": "2.1.15",
    "title": "Ensure App Service plan SKU supports private endpoints",
    "assessment": "Automated",
    "audit": "Audit from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. In the Properties pane, under Hosting, next to SKU and size, ensure that the plan tier is one of the following: Basic, Standard, ElasticPremium, Premium, PremiumV2, Premium0V3, PremiumV3, PremiumMV3, IsolatedV2, IsolatedMV2, WorkflowStandard, FlexConsumption, and that the plan name is one of the following: B1, B2, B3, S1, S2, S3, EP1, EP2, EP3, P1, P2, P3, P1V2, P2V2, P3V2, P0V3, P1V3, P2V3, P3V3, P1MV3, P2MV3, P3MV3, P4MV3, P5MV3, I1V2, I2V2, I3V2, I4V2, I5V2, I6V2, I1MV2, I2MV2, I3MV2, I4MV2, I5MV2, WS1, WS2, WS3, FC1. 4. Repeat steps 1-3 for each app. Audit from Azure CLI Run the following command to list apps: az webapp list For each app, run the following command to get the App Service plan ID: az webapp show --resource-group <resource-group-name> --name <app-name> -- query appServicePlanId For each App Service plan, run the following command to get the plan SKU tier and name: az appservice plan show --resource-group <resource-group-name> --name <app- service-plan-name> --query \"{tier:sku.tier,name:sku.name}\" Ensure that the plan tier is one of the following: Basic, Standard, ElasticPremium, Premium, PremiumV2, Premium0V3, PremiumV3, PremiumMV3, IsolatedV2, IsolatedMV2, WorkflowStandard, FlexConsumption, and that the plan name is one of the following: B1, B2, B3, S1, S2, S3, EP1, EP2, EP3, P1, P2, P3, P1V2, P2V2, P3V2, P0V3, P1V3, P2V3, P3V3, P1MV3, P2MV3, P3MV3, P4MV3, P5MV3, I1V2, I2V2, I3V2, I4V2, I5V2, I6V2, I1MV2, I2MV2, I3MV2, I4MV2, I5MV2, WS1, WS2, WS3, FC1. Audit from PowerShell Run the following command to list apps: Get-AzWebApp Run the following command to get the app in a resource group with a given name: $app = Get-AzWebApp -ResourceGroupName <resource-group-name> -Name <app-name> Run the following command to get the App Service plan ID: $app.ServerFarmId Run the following command to get the App Service plan in a resource group with a given name: $plan = Get-AzAppServicePlan -ResourceGroupname <resource-group-name> -Name <app-service-plan-name> Run the following command to get the plan SKU tier and name: $plan.Sku | select-object Tier, Name Ensure that the plan tier is one of the following: Basic, Standard, ElasticPremium, Premium, PremiumV2, Premium0V3, PremiumV3, PremiumMV3, IsolatedV2, IsolatedMV2, WorkflowStandard, FlexConsumption, and that the plan name is one of the following: B1, B2, B3, S1, S2, S3, EP1, EP2, EP3, P1, P2, P3, P1V2, P2V2, P3V2, P0V3, P1V3, P2V3, P3V3, P1MV3, P2MV3, P3MV3, P4MV3, P5MV3, I1V2, I2V2, I3V2, I4V2, I5V2, I6V2, I1MV2, I2MV2, I3MV2, I4MV2, I5MV2, WS1, WS2, WS3, FC1. Repeat for each app. Audit from Azure Policy If referencing a digital copy of this Benchmark, clicking a Policy ID will open a link to the associated Policy definition in Azure. If referencing a printed copy, you can search Policy IDs from this URL: https://portal.azure.com/#view/Microsoft_Azure_Policy/PolicyMenuBlade/~/Definitions • Policy ID: 546fe8d2-368d-4029-a418-6af48a7f61e5 - Name: 'App Service apps should use a SKU that supports private link'",
    "remediation": "Remediate from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. In the Properties pane, under Hosting, next to Name, click the App Service plan name. 4. Under Current App Service plan, next to Name, click the App Service plan name. 5. Under Essentials, next to Pricing plan, click the pricing plan name. 6. Select a pricing plan where the plan tier is one of the following: Basic, Standard, ElasticPremium, Premium, PremiumV2, Premium0V3, PremiumV3, PremiumMV3, IsolatedV2, IsolatedMV2, WorkflowStandard, FlexConsumption, and the plan name is one of the following: B1, B2, B3, S1, S2, S3, EP1, EP2, EP3, P1, P2, P3, P1V2, P2V2, P3V2, P0V3, P1V3, P2V3, P3V3, P1MV3, P2MV3, P3MV3, P4MV3, P5MV3, I1V2, I2V2, I3V2, I4V2, I5V2, I6V2, I1MV2, I2MV2, I3MV2, I4MV2, I5MV2, WS1, WS2, WS3, FC1. 7. Click Select. 8. Click Downgrade or Upgrade to confirm the change. 9. Repeat steps 1-8 for each app and App Service plan requiring remediation. Remediate from Azure CLI For each App Service plan requiring remediation, run the following command to update the SKU: az appservice plan update --resource-group <resource-group-name> --name <app- service-plan-name> --sku <sku> Default Value: The App Service plan is selected during creation. References: 1. https://learn.microsoft.com/en-us/azure/app-service/overview-hosting-plans 2. https://learn.microsoft.com/en-us/azure/app-service/overview-private-endpoint 3. https://learn.microsoft.com/en-us/cli/azure/webapp 4. https://learn.microsoft.com/en-us/cli/azure/appservice/plan 5. https://learn.microsoft.com/en-us/powershell/module/az.websites/get-azwebapp 6. https://learn.microsoft.com/en-us/powershell/module/az.websites/get- azappserviceplan 7. https://azure.microsoft.com/en-us/pricing/details/app-service/linux/ 8. https://azure.microsoft.com/en-us/pricing/details/app-service/windows/ CIS Controls:",
    "description": "",
    "rationale": "",
    "function_names": [
      "app_service_plan_private_endpoint_supported",
      "app_service_plan_sku_private_endpoint_enabled",
      "app_service_plan_private_link_compatible",
      "app_service_plan_private_networking_enabled",
      "app_service_plan_sku_private_connectivity_allowed"
    ]
  },
  {
    "id": "2.1.16",
    "title": "Ensure private endpoints are used to access App Service apps",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. Under Settings, click Networking. 4. Under Inbound traffic configuration, click the link next to Private endpoints. 5. Click + Add. 6. From the drop-down menu, select Express or Advanced. 7. If selecting Express: 1. Provide a Name, and select a Subscription, Virtual network, and Subnet. 2. Click OK. 8. If selecting Advanced: 1. Select a Subscription and Resource group, provide an instance Name and Network Interface Name, and select a Region. 2. Click Next : Resource >. 3. Select a Target sub-resource. 4. Click Next : Virtual Network >. 5. Select a Virtual network and a Subnet. 6. Click Next : DNS >. 7. Optionally update the DNS configuration. 8. Click Next : Tags >. 9. Optionally configure tags. 10. Click Next : Review + create >. 11. Click Create. Remediate from Azure CLI For each app requiring remediation, run the following command to create a private endpoint: az network private-endpoint create --resource-group <resource-group-name> -- location <location> --name <private-endpoint-name> --vnet-name <virtual- network-name> --subnet <subnet-name> --private-connection-resource-id <fully- qualified-app-id> --connection-name <connection-name> --group-id sites Default Value: By default, private endpoints are not configured for apps. References: 1. https://learn.microsoft.com/en-us/azure/app-service/overview-private-endpoint 2. https://azure.microsoft.com/en-us/pricing/details/private-link/ 3. https://learn.microsoft.com/en-us/cli/azure/webapp 4. https://learn.microsoft.com/en-us/cli/azure/network/private-endpoint CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "app_service_endpoint_private_access_enabled",
      "app_service_endpoint_public_access_disabled",
      "app_service_network_private_link_enabled",
      "app_service_vnet_integration_required",
      "app_service_public_network_access_restricted",
      "app_service_private_endpoint_connection_required",
      "app_service_endpoint_public_ip_disabled",
      "app_service_network_isolation_enabled"
    ]
  },
  {
    "id": "2.1.17",
    "title": "Ensure private endpoints used to access App Service apps use private DNS zones",
    "assessment": "Manual",
    "remediation": "Remediate from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. Under Settings, click Networking. 4. Under Inbound traffic configuration, click the link next to Private endpoints. 5. Click the name of a private endpoint. 6. Under Settings, click DNS configuration. 7. Click + Add configuration. 8. Select a Subscription, Private DNS zone, and provide a DNS zone group and Configuration name. 9. Click Add. 10. Repeat steps 1-9 for each app and private endpoint requiring remediation. References: 1. https://learn.microsoft.com/en-us/azure/app-service/overview-private- endpoint#dns 2. https://learn.microsoft.com/en-us/azure/private-link/private-endpoint-dns CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "references": "1. https://learn.microsoft.com/en-us/azure/app-service/overview-private- endpoint#dns 2. https://learn.microsoft.com/en-us/azure/private-link/private-endpoint-dns CIS Controls: Controls Version Control IG 1 IG 2 IG 3 v8 12.2 Establish and Maintain a Secure Network Architecture Establish and maintain a secure network architecture. A secure network architecture must address segmentation, least privilege, and availability, at a minimum. ● ● v7 14.1 Segment the Network Based on Sensitivity Segment the network based on the label or classification level of the information stored on the servers, locate all sensitive information on separated Virtual Local Area Networks (VLANs). ● ●",
    "function_names": [
      "app_service_endpoint_private_dns_zone_enabled",
      "app_service_private_endpoint_dns_zone_configured",
      "app_service_endpoint_private_dns_zone_required",
      "app_service_private_endpoint_dns_zone_enforced",
      "app_service_endpoint_private_dns_zone_attached"
    ]
  },
  {
    "id": "2.1.18",
    "title": "Ensure app is integrated with a virtual network",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. Under Settings, click Networking. 4. Under Outbound traffic configuration, next to Virtual network integration, click Not configured. 5. Click Add virtual network integration. 6. Select an existing App Service Plan connection, or select New connection and select a subscription, virtual network, and subnet. 7. Click Connect. 8. Repeat steps 1-7 for each app requiring remediation. Remediate from Azure CLI For each app requiring remediation, run the following command to integrate with a virtual network: az webapp vnet-integration add --resource-group <resource-group-name> --name <app-name> --vnet <virtual-network-name> --subnet <subnet-name> Remediate from PowerShell For each app requiring remediation, run the following commands to integrate with a virtual network: Prepare parameters: $siteName = '<app-name>' $vNetResourceGroupName = '<virtual-network-resource-group-name>' $appResourceGroupName = '<app-resource-group-name>' $vNetName = '<virtual-network-name>' $integrationSubnetName = '<subnet-name>' $vNetSubscriptionId = '<subscription-guid>' Check if the subnet is delegated to Microsoft.Web/serverFarms: $vnet = Get-AzVirtualNetwork -Name $vNetName -ResourceGroupName $vNetResourceGroupName $subnet = Get-AzVirtualNetworkSubnetConfig -Name $integrationSubnetName - VirtualNetwork $vnet Get-AzDelegation -Subnet $subnet Add delegation: $subnet = Add-AzDelegation -Name \"myDelegation\" -ServiceName \"Microsoft.Web/serverFarms\" -Subnet $subnet Set-AzVirtualNetwork -VirtualNetwork $vnet Configure virtual network integration: $subnetResourceId = \"/subscriptions/$vNetSubscriptionId/resourceGroups/$vNetResourceGroupName/pro viders/Microsoft.Network/virtualNetworks/$vNetName/subnets/$integrationSubnet Name\" $app = Get-AzResource -ResourceType Microsoft.Web/sites -ResourceGroupName $appResourceGroupName -ResourceName $siteName $app.Properties.virtualNetworkSubnetId = $subnetResourceId $app.Properties.vnetRouteAllEnabled = 'true' $app | Set-AzResource -Force Default Value: By default, virtual network integration is not configured. References: 1. https://learn.microsoft.com/en-us/azure/app-service/overview-vnet-integration 2. https://learn.microsoft.com/en-us/azure/app-service/configure-vnet-integration- enable 3. https://learn.microsoft.com/en-us/cli/azure/webapp 4. https://learn.microsoft.com/en-us/powershell/module/az.websites/get-azwebapp CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "app_service_integration_virtual_network_enabled",
      "app_service_virtual_network_integration_required",
      "app_service_network_integration_configured",
      "app_service_vnet_integration_enabled",
      "app_service_private_network_integration_required"
    ]
  },
  {
    "id": "2.1.19",
    "title": "Ensure configuration is routed through the virtual network integration",
    "assessment": "Automated",
    "remediation": "Remediate from Azure CLI For each app requiring remediation, run the following command to route container image pulls and content sharing through the virtual network integration: az resource update --resource-group <resource-group-name> --name <app-name> - -resource-type \"Microsoft.Web/sites\" --set properties.vnetImagePullEnabled=true --set properties.vnetContentShareEnabled=true Default Value: By default, configuration traffic goes directly over the public route. References: 1. https://learn.microsoft.com/en-us/azure/app-service/overview-vnet- integration#routes 2. https://learn.microsoft.com/en-us/azure/app-service/configure-vnet-integration- routing#configure-configuration-routing 3. https://learn.microsoft.com/en-us/cli/azure/webapp 4. https://learn.microsoft.com/en-us/cli/azure/resource Additional Information: In addition to configuring the routing for content sharing, you must also ensure that any firewall or Network Security Group configured on traffic from the subnet allow traffic to port 443 and 445. CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "app_service_app_vnet_integration_enabled",
      "app_service_app_vnet_routing_enabled",
      "app_service_app_private_network_enabled",
      "app_service_app_network_isolation_enabled",
      "app_service_app_vnet_integration_required",
      "app_service_app_vnet_routing_required",
      "app_service_app_private_network_required",
      "app_service_app_network_isolation_required"
    ]
  },
  {
    "id": "2.1.20",
    "title": "Ensure all traffic is routed through the virtual network",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. Under Settings, click Networking. 4. Under Outbound traffic configuration, next to Virtual network integration, click the virtual network and subnet name. 5. Under Application routing, check the box next to Outbound internet traffic. 6. Click Apply. 7. Repeat steps 1-6 for each app requiring remediation. Remediate from Azure CLI For each app requiring remediation, run the following command to route all traffic through the virtual network: az resource update --resource-group <resource-group-name> --name <app-name> - -resource-type \"Microsoft.Web/sites\" --set properties.vnetRouteAllEnabled=true Default Value: For apps integrated with a virtual network, all traffic is routed through the virtual network by default. References: 1. https://learn.microsoft.com/en-us/azure/app-service/configure-vnet-integration- routing#configure-application-routing 2. https://learn.microsoft.com/en-us/cli/azure/webapp 3. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "compute_virtual_machine_traffic_routed_through_virtual_network",
      "network_interface_traffic_routed_through_virtual_network",
      "virtual_network_traffic_routing_enabled",
      "compute_virtual_machine_network_routing_restricted",
      "network_subnet_traffic_routed_through_virtual_network",
      "virtual_network_peering_traffic_routing_enabled",
      "compute_virtual_machine_public_ip_disabled",
      "network_security_group_traffic_routed_through_virtual_network",
      "virtual_network_gateway_traffic_routing_enabled",
      "compute_virtual_machine_private_ip_only"
    ]
  },
  {
    "id": "2.1.21",
    "title": "Ensure cross-origin resource sharing does not allow all origins",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Service. 2. Click the name of an app. 3. Under API, click CORS. 4. Under Allowed Origins, delete the entry that equals *. 5. Specify the origins that should be allowed to make cross-origin calls. 6. Click Save. 7. Repeat steps 1-6 for each app requiring remediation. Remediate from Azure CLI For each app requiring remediation, run the following command: az webapp cors remove --resource-group <resource-group-name> --name <app- name> --allowed-origins \"*\" Use the following command to specify the origins that should be allowed: az webapp cors add --resource-group <resource-group-name> --name <app-name> - -allowed-origins <allowed-origins> Default Value: By default, CORS is not configured. References: 1. https://learn.microsoft.com/en-gb/azure/app-service/app-service-web-tutorial- rest-api 2. https://learn.microsoft.com/en-us/cli/azure/webapp/cors 3. https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Headers_Cheat_Sheet.ht ml 4. https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/CORS 5. https://cheatsheetseries.owasp.org/cheatsheets/Cross- Site_Request_Forgery_Prevention_Cheat_Sheet.html CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "references": "1. https://learn.microsoft.com/en-gb/azure/app-service/app-service-web-tutorial- rest-api 2. https://learn.microsoft.com/en-us/cli/azure/webapp/cors 3. https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Headers_Cheat_Sheet.ht ml 4. https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/CORS 5. https://cheatsheetseries.owasp.org/cheatsheets/Cross- Site_Request_Forgery_Prevention_Cheat_Sheet.html CIS Controls: Controls Version Control IG 1 IG 2 IG 3 v8 16.1 Establish and Maintain a Secure Application Development Process Establish and maintain a secure application development process. In the process, address such items as: secure application design standards, secure coding practices, developer training, vulnerability management, security of third-party code, and application security testing procedures. Review and update documentation annually, or when significant enterprise changes occur that could impact this Safeguard. ● ● v7 18.1 Establish Secure Coding Practices Establish secure coding practices appropriate to the programming language and development environment being used. ● ●  2.2 App Service Deployment Slots",
    "function_names": [
      "cloud_cdn_distribution_cors_restricted",
      "cloud_cdn_distribution_cors_no_all_origins",
      "cloud_cdn_distribution_cors_origin_whitelisted",
      "cloud_cdn_distribution_cors_secure_headers",
      "cloud_cdn_distribution_cors_no_wildcard_allowed"
    ]
  },
  {
    "id": "2.2.1",
    "title": "Ensure 'Java version' is currently supported (if in use)",
    "assessment": "Manual",
    "remediation": "Note: No action is required if Java is not in use. Remediate from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. Under Deployment, click Deployment slots. 4. Click the name of a deployment slot. 5. Under Settings, click Configuration. 6. In the General settings pane, for a Stack of Java, set the Major version to a currently supported release, and set the Java web server version to the auto-update option. 7. Click Save. 8. Click Continue. 9. Repeat steps 1-8 for each app and deployment slot requiring remediation. Remediate from Azure CLI Run the following command to list supported runtimes: az webapp list-runtimes For each deployment slot requiring remediation, run the following command with the appropriate parameters to update the Java version: az resource update --name web --resource-group <resource-group-name> -- namespace Microsoft.Web --resource-type config --parent sites/<app- name>/slots/<deployment-slot-name> --set properties.[javaContainer|javaContainerVersion|javaVersion|linuxFxVersion|win dowsFxVersion]=\"<java-container|java-container-version|java-version|java- runtime-version>\" Default Value: The version is selected during creation. References: 1. https://learn.microsoft.com/en-us/azure/app-service/configure-language-java- deploy-run 2. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-posture- vulnerability-management#pv-3-define-and-establish-secure-configurations-for- compute-resources 3. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-posture- vulnerability-management#pv-6-rapidly-and-automatically-remediate- vulnerabilities 4. https://www.oracle.com/java/technologies/java-se-support-roadmap.html 5. https://learn.microsoft.com/en-us/cli/azure/webapp 6. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "compute_java_version_supported",
      "compute_java_version_current",
      "compute_java_version_up_to_date",
      "compute_java_version_active_support",
      "compute_java_version_latest_stable"
    ]
  },
  {
    "id": "2.2.2",
    "title": "Ensure 'Python version' is currently supported (if in use)",
    "assessment": "Manual",
    "remediation": "Note: No action is required if Python is not in use. Remediate from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. Under Deployment, click Deployment slots. 4. Click the name of a deployment slot. 5. Under Settings, click Configuration. 6. In the General settings pane, for a Stack of Python, set the Major version and Minor version to a currently supported release. 7. Click Save. 8. Click Continue. 9. Repeat steps 1-8 for each app and deployment slot requiring remediation. Remediate from Azure CLI Run the following command to list supported runtimes: az webapp list-runtimes For each deployment slot requiring remediation, run the following command with the appropriate parameters to update the Python version: az resource update --name web --resource-group <resource-group-name> -- namespace Microsoft.Web --resource-type config --parent sites/<app- name>/slots/<deployment-slot-name> --set properties.[linuxFxVersion|windowsFxVersion]=\"PYTHON|<python-version>\" Default Value: The version is selected during creation. References: 1. https://learn.microsoft.com/en-us/azure/app-service/configure- common#configure-language-stack-settings 2. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- posture-vulnerability-management#pv-7-rapidly-and-automatically-remediate- software-vulnerabilities 3. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- posture-vulnerability-management#pv-3-establish-secure-configurations-for- compute-resources 4. https://devguide.python.org/versions/ 5. https://learn.microsoft.com/en-us/cli/azure/webapp 6. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": ""
  },
  {
    "id": "2.2.3",
    "title": "Ensure 'PHP version' is currently supported (if in use)",
    "assessment": "Manual",
    "remediation": "Note: No action is required if PHP is not in use. Remediate from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. Under Deployment, click Deployment slots. 4. Click the name of a deployment slot. 5. Under Settings, click Configuration. 6. In the General settings pane, for a Stack of PHP, set the Major version and Minor version to a currently supported release. 7. Click Save. 8. Click Continue. 9. Repeat steps 1-8 for each app and deployment slot requiring remediation. Remediate from Azure CLI Run the following command to list supported runtimes: az webapp list-runtimes For each deployment slot requiring remediation, run the following command with the appropriate parameters to update the PHP version: az resource update --name web --resource-group <resource-group-name> -- namespace Microsoft.Web --resource-type config --parent sites/<app- name>/slots/<deployment-slot-name> --set properties.[linuxFxVersion|phpVersion]=\"<python-runtime-version|python- version>\" Default Value: The version is selected during creation. References: 1. https://learn.microsoft.com/en-us/azure/app-service/configure-common#general- settings 2. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- posture-vulnerability-management#pv-7-rapidly-and-automatically-remediate- software-vulnerabilities 3. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- posture-vulnerability-management#pv-3-establish-secure-configurations-for- compute-resources 4. https://www.php.net/supported-versions.php 5. https://learn.microsoft.com/en-us/cli/azure/webapp 6. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "compute_php_version_supported",
      "compute_php_version_current",
      "compute_php_version_active_support",
      "compute_php_version_latest",
      "compute_php_version_no_eol",
      "compute_php_version_up_to_date",
      "compute_php_version_secure",
      "compute_php_version_maintained"
    ]
  },
  {
    "id": "2.2.4",
    "title": "Ensure 'Basic Authentication Publishing Credentials' are 'Disabled'",
    "assessment": "Automated",
    "remediation": "CAUTION: Applying changes may cause your App Service resource to restart. Remediate from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. Under Deployment, click Deployment slots. 4. Click the name of a deployment slot. 5. Under Settings, click Configuration. 6. In the General settings tab, under Platform settings, set SCM Basic Auth Publishing Credentials and FTP Basic Auth Publishing Credentials to Off. 7. Click Save. 8. Click Continue. 9. Repeat steps 1-8 for each app and deployment slot requiring remediation. Remediate from Azure CLI For each deployment slot requiring remediation, run the following command to disable basic authentication for FTP: az resource update --resource-group <resource-group-name> --name ftp -- namespace Microsoft.Web --resource-type basicPublishingCredentialsPolicies -- parent sites/<app-name>/slots/<deployment-slot-name> --set properties.allow=false For each deployment slot requiring remediation, run the following command to disable basic authentication for SCM: az resource update --resource-group <resource-group-name> --name scm -- namespace Microsoft.Web --resource-type basicPublishingCredentialsPolicies -- parent sites/<app-name>/slots/<deployment-slot-name> --set properties.allow=false Default Value: Basic authentication is enabled by default. References: 1. https://learn.microsoft.com/en-us/azure/app-service/configure-basic-auth-disable 2. https://learn.microsoft.com/en-us/cli/azure/webapp 3. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "cloud_cdn_endpoint_basic_auth_disabled",
      "cloud_cdn_endpoint_publishing_credentials_disabled",
      "cloud_cdn_endpoint_auth_credentials_disabled",
      "cloud_cdn_endpoint_basic_auth_credentials_disabled",
      "cloud_cdn_endpoint_legacy_auth_disabled"
    ]
  },
  {
    "id": "2.2.5",
    "title": "Ensure 'FTP state' is set to 'FTPS only' or 'Disabled'",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. Under Deployment, click Deployment Slots. 4. Click the name of a deployment slot. 5. Under Settings, click Configuration. 6. In the General settings pane, under Platform settings, set FTP state to FTPS only or Disabled. 7. Click Save. 8. Click Continue. 9. Repeat steps 1-8 for each app and deployment slot requiring remediation. Remediate from Azure CLI For each deployment slot requiring remediation, run the following command to set FTPS state to FtpsOnly or Disabled: az resource update --name web --resource-group <resource-group-name> -- namespace Microsoft.Web --resource-type config --parent sites/<app- name>/slots/<deployment-slot-name> --set properties.ftpsState=<FtpsOnly|Disabled> Default Value: By default, FTP state is set to FTPS only. References: 1. https://learn.microsoft.com/en-us/azure/app-service/deploy-ftp 2. https://learn.microsoft.com/en-us/azure/app-service/overview-security 3. https://learn.microsoft.com/en-us/rest/api/appservice/web-apps/create-or-update- configuration#ftpsstate 4. https://learn.microsoft.com/en-us/cli/azure/webapp 5. https://learn.microsoft.com/en-us/cli/azure/resource 6. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- data-protection#dp-4-encrypt-sensitive-information-in-transit 7. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- posture-vulnerability-management#pv-7-rapidly-and-automatically-remediate- software-vulnerabilities CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "cloud_cdn_load_balancer_ftps_only_enabled",
      "cloud_cdn_load_balancer_ftp_disabled",
      "cloud_cdn_load_balancer_secure_ftp_enabled",
      "cloud_cdn_load_balancer_insecure_ftp_disabled",
      "cloud_cdn_load_balancer_ftp_state_secure",
      "cloud_cdn_load_balancer_ftps_only_or_disabled",
      "cloud_cdn_load_balancer_ftp_restricted",
      "cloud_cdn_load_balancer_secure_ftp_config"
    ]
  },
  {
    "id": "2.2.6",
    "title": "Ensure 'HTTP version' is set to '2.0' (if in use)",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. Under Deployment, click Deployment slots. 4. Click the name of a deployment slot. 5. Under Settings, click Configuration. 6. In the General settings pane, under Platform settings, set HTTP version to 2.0. 7. Click Save. 8. Click Continue. 9. Repeat steps 1-8 for each app and deployment slot requiring remediation. Remediate from Azure CLI For each deployment slot requiring remediation, run the following command to enable http20Enabled: az resource update --name web --resource-group <resource-group-name> -- namespace Microsoft.Web --resource-type config --parent sites/<app- name>/slots/<deployment-slot-name> --set properties.http20Enabled=true Default Value: By default, HTTP version is set to 1.1. References: 1. https://learn.microsoft.com/en-us/azure/app-service/configure-common#general- settings 2. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-posture- vulnerability-management#pv-3-define-and-establish-secure-configurations-for- compute-resources 3. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-posture- vulnerability-management#pv-6-rapidly-and-automatically-remediate- vulnerabilities 4. https://learn.microsoft.com/en-us/cli/azure/webapp 5. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "cloud_cdn_distribution_http_version_2_0",
      "cloud_cdn_distribution_http_version_2_0_enabled",
      "cloud_cdn_distribution_http_version_2_0_required",
      "cloud_cdn_distribution_http_version_2_0_enforced",
      "cloud_cdn_distribution_http_version_2_0_minimum",
      "cloud_cdn_distribution_http_version_2_0_only",
      "cloud_cdn_distribution_http_version_2_0_compliant",
      "cloud_cdn_distribution_http_version_2_0_active"
    ]
  },
  {
    "id": "2.2.7",
    "title": "Ensure 'HTTPS Only' is set to 'On'",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. Under Deployment, click Deployment slots. 4. Click the name of a deployment slot. 5. Under Settings, click Configuration. 6. In the General settings tab, under Platform settings, next to HTTPS Only, select the radio button next to On. 7. Click Save. 8. Click Continue. 9. Repeat steps 1-8 for each app and deployment slot requiring remediation.  Remediate from Azure CLI For each deployment slot requiring remediation, run the following command to enable HTTPS Only: az resource update --resource-group <resource-group-name> --name <app- name>/slots/<deployment-slot-name> --resource-type \"Microsoft.Web/sites\" -- set properties.httpsOnly=true Remediate from PowerShell For each deployment slot requiring remediation, run the following command to enable HTTPS Only: Set-AzWebAppSlot -ResourceGroupName <resource-group-name> -Name <app-name> - Slot <deployment-slot-name> -HttpsOnly $true Default Value: HTTPS Only is disabled by default. References: 1. https://learn.microsoft.com/en-us/azure/app-service/overview-security#https-and- certificates 2. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- data-protection#dp-3-encrypt-sensitive-data-in-transit 3. https://techcommunity.microsoft.com/t5/azure-paas-blog/enable-https-setting-on- azure-app-service-using-azure-policy/ba-p/3286603 4. https://learn.microsoft.com/en-us/cli/azure/webapp 5. https://learn.microsoft.com/en-us/powershell/module/az.websites/get- azwebappslot 6. https://learn.microsoft.com/en-us/powershell/module/az.websites/set- azwebappslot 7. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "cloud_cdn_distribution_https_only_enabled",
      "cloud_cdn_distribution_https_only_enabled_all_regions",
      "cloud_cdn_distribution_https_only_enabled_min_tls_1_2",
      "cloud_cdn_distribution_https_only_enabled_over_90d",
      "cloud_cdn_distribution_https_only_enabled_v2"
    ]
  },
  {
    "id": "2.2.8",
    "title": "Ensure 'Minimum Inbound TLS Version' is set to '1.2' or higher",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. Under Deployment, click Deployment slots. 4. Click the name of a deployment slot. 5. Under Settings, click Configuration. 6. In the General settings pane, under Platform settings, click the drop-down next to Minimum Inbound TLS Version and select 1.2 or higher. 7. Click Save. 8. Click Continue. 9. Repeat steps 1-8 for each app and deployment slot requiring remediation. Remediate from Azure CLI For each deployment slot requiring remediation, run the following command to update the TLS version: az resource update --name web --resource-group <resource-group-name> -- namespace Microsoft.Web --resource-type config --parent sites/<app- name>/slots/<deployment-slot-name> --set properties.minTlsVersion=<1.2|1.3> Default Value: By default, TLS version is set to 1.2. References: 1. https://learn.microsoft.com/en-us/azure/app-service/configure-ssl-bindings#how- can-i-change-the-minimum-tls-versions-for-the-app 2. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-data- protection#dp-3-encrypt-sensitive-data-in-transit 3. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-network- security#ns-8-detect-and-disable-insecure-services-and-protocols 4. https://learn.microsoft.com/en-us/cli/azure/webapp 5. https://learn.microsoft.com/en-us/cli/azure/resource 6. https://csrc.nist.gov/news/2019/nist-publishes-sp-800-52-revision-2 CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "cloud_cdn_distribution_min_tls_version",
      "cloud_cdn_distribution_tls_1_2_or_higher",
      "cloud_cdn_distribution_inbound_tls_secure",
      "cloud_cdn_distribution_tls_version_compliant",
      "cloud_cdn_distribution_tls_min_version_enforced"
    ]
  },
  {
    "id": "2.2.9",
    "title": "Ensure end-to-end TLS encryption is enabled",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. Under Deployment, click Deployment slots. 4. Click the name of a deployment slot. 5. Under Settings, click Configuration. 6. In the General settings pane, under Platform settings, next to Enable end-to-end TLS encryption, click the radio button next to On. 7. Click Save. 8. Click Continue. 9. Repeat steps 1-8 for each app and deployment slot requiring remediation. Remediate from Azure CLI For each deployment slot requiring remediation, run the following command to enable end-to-end TLS encryption: az resource update --resource-group <resource-group-name> --name <app- name>/slots/<deployment-slot-name> --resource-type \"Microsoft.Web/sites\" -- set properties.endToEndEncryptionEnabled=true Default Value: By default, end-to-end TLS encryption is disabled. References: 1. https://learn.microsoft.com/en-us/azure/app-service/overview-tls#end-to-end-tls- encryption 2. https://learn.microsoft.com/en-us/cli/azure/webapp 3. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "impact": "Enabling end-to-end TLS encryption may introduce minimal latency and require additional configuration of certificates and HTTPS settings to ensure compatibility. Audit: Audit from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. Under Deployment, click Deployment slots. 4. Click the name of a deployment slot. 5. Under Settings, click Configuration. 6. In the General settings pane, under Platform settings, ensure that Enable end-to-end TLS encryption is set to On. 7. Repeat steps 1-6 for each app and deployment slot. Audit from Azure CLI Run the following command to list apps: az webapp list For each app, run the following command to list deployment slots: az webapp deployment slot list --resource-group <resource-group-name> --name <app-name> For each deployment slot, ensure that endToEndEncryptionEnabled is set to true. Audit from Azure Policy If referencing a digital copy of this Benchmark, clicking a Policy ID will open a link to the associated Policy definition in Azure. If referencing a printed copy, you can search Policy IDs from this URL: https://portal.azure.com/#view/Microsoft_Azure_Policy/PolicyMenuBlade/~/Definitions • Policy ID: 123aed70-491a-4f07-a569-e1f3a8dd651e - Name: 'App Service app slots should enable end to end encryption'",
    "function_names": [
      "cloud_cdn_distribution_https_redirect_enabled",
      "cloud_cdn_distribution_tls_encryption_enabled",
      "cloud_cdn_distribution_min_tls_1_2",
      "cloud_cdn_distribution_end_to_end_encryption_enabled",
      "cloud_cdn_distribution_ssl_certificate_valid",
      "cloud_cdn_distribution_tls_protocol_enforced",
      "cloud_cdn_distribution_secure_transport_required",
      "cloud_cdn_distribution_encryption_in_transit_enabled"
    ]
  },
  {
    "id": "2.2.10",
    "title": "Ensure 'Remote debugging' is set to 'Off'",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. Under Deployment, click Deployment slots. 4. Click the name of a deployment slot. 5. Under Settings, click Configuration. 6. In the General settings pane, under Debugging, set Remote debugging to Off. 7. Click Save. 8. Click Continue. 9. Repeat steps 1-8 for each app and deployment slot requiring remediation. Remediate from Azure CLI For each deployment slot requiring remediation, run the following command to disable remote debugging: az resource update --name web --resource-group <resource-group-name> -- namespace Microsoft.Web --resource-type config --parent sites/<app- name>/slots/<deployment-slot-name> --set properties.remoteDebuggingEnabled=false Default Value: By default, remote debugging is set to off. References: 1. https://learn.microsoft.com/en-us/visualstudio/debugger/remote-debugging- azure-app-service 2. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-posture- vulnerability-management#pv-2-audit-and-enforce-secure-configurations 3. https://learn.microsoft.com/en-us/cli/azure/webapp 4. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "app_service_web_app_remote_debugging_disabled",
      "app_service_function_app_remote_debugging_disabled",
      "cloud_functions_remote_debugging_disabled",
      "compute_vm_remote_debugging_disabled",
      "container_app_remote_debugging_disabled",
      "serverless_app_remote_debugging_disabled",
      "api_gateway_remote_debugging_disabled",
      "cloud_run_remote_debugging_disabled"
    ]
  },
  {
    "id": "2.2.11",
    "title": "Ensure incoming client certificates are enabled and required (if in use)",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. Under Deployment, click Deployment slots. 4. Click the name of a deployment slot. 5. Under Settings, click Configuration. 6. In the General settings pane, under Incoming client certificates, set Client certificate mode to Required. 7. Click Save. 8. Click Continue. 9. Repeat steps 1-8 for each app and deployment slot requiring remediation. Remediate from Azure CLI For each deployment slot requiring remediation, run the following command to enable and require incoming client certificates: az resource update --resource-group <resource-group-name> --name <app- name>/slots/<deployment-slot-name> --resource-type \"Microsoft.Web/sites\" -- set properties.clientCertEnabled=true --set properties.clientCertMode=Required Default Value: By default, incoming client certificates are disabled. References: 1. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- identity-management#im-4-authenticate-server-and-services 2. https://learn.microsoft.com/en-gb/azure/app-service/app-service-web-configure- tls-mutual-auth 3. https://learn.microsoft.com/en-us/cli/azure/webapp 4. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "cloud_cdn_load_balancer_client_certificate_required",
      "cloud_cdn_load_balancer_client_certificate_enabled",
      "compute_load_balancer_client_certificate_required",
      "compute_load_balancer_client_certificate_enabled",
      "cloud_cdn_ssl_certificate_client_auth_required",
      "cloud_cdn_ssl_certificate_client_auth_enabled",
      "compute_ssl_certificate_client_auth_required",
      "compute_ssl_certificate_client_auth_enabled"
    ]
  },
  {
    "id": "2.2.12",
    "title": "Ensure managed identities are configured",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. Under Deployment, click Deployment slots. 4. Click the name of a deployment slot. 5. Under Settings, click Identity. 6. To add a system assigned managed identity: 1. In the System assigned pane, under Status, click On. 2. Click Save. 3. Click Yes. 7. To add a user assigned managed identity: 1. In the User assigned pane, click Add. 2. Use the filter box to search for a managed identity. 3. Select the identity. 4. Click Add. 8. Repeat steps 1-7 for each app and deployment slot requiring remediation. Remediate from PowerShell For each deployment slot requiring remediation, run the following command to assign a system-assigned managed identity: Set-AzWebAppSlot -ResourceGroupName <resource-group-name> -Name <app-name> - Slot <deployment-slot-name> -AssignIdentity $true Default Value: Managed identities are disabled by default for App Service deployment slots. References: 1. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-identity- management#im-1-use-centralized-identity-and-authentication-system 2. https://learn.microsoft.com/en-us/azure/app-service/overview-managed-identity 3. https://learn.microsoft.com/en-us/cli/azure/webapp 4. https://learn.microsoft.com/en-us/powershell/module/az.websites/get-azwebapp 5. https://learn.microsoft.com/en-us/powershell/module/az.websites/get- azwebappslot 6. https://learn.microsoft.com/en-us/powershell/module/az.websites/set- azwebappslot CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "compute_virtual_machine_managed_identity_enabled",
      "compute_virtual_machine_managed_identity_assigned",
      "compute_virtual_machine_system_assigned_identity_enabled",
      "compute_virtual_machine_user_assigned_identity_enabled",
      "compute_virtual_machine_identity_credentials_rotated",
      "compute_virtual_machine_identity_permissions_restricted",
      "compute_virtual_machine_identity_lease_duration_limited",
      "compute_virtual_machine_identity_no_static_credentials",
      "compute_virtual_machine_identity_audit_logging_enabled",
      "compute_virtual_machine_identity_monitoring_enabled"
    ]
  },
  {
    "id": "2.2.13",
    "title": "Ensure public network access is disabled",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. Under Deployment, click Deployment slots. 4. Click the name of a deployment slot. 5. Under Settings, click Networking. 6. Under Inbound traffic configuration, click the text next to Public network access. 7. Select the radio button next to Disabled. 8. Click Save. 9. Check the box to confirm the change. 10. Click Continue. 11. Repeat steps 1-10 for each app and deployment slot requiring remediation. Remediate from Azure CLI For each deployment slot requiring remediation, run the following command to disable public network access: az resource update --resource-group <resource-group-name> --name <app- name>/slots/<deployment-slot-name> --resource-type \"Microsoft.Web/sites\" -- set properties.publicNetworkAccess=Disabled Default Value: By default, public network access is enabled. References: 1. https://learn.microsoft.com/en-us/azure/app-service/networking-features 2. https://learn.microsoft.com/en-us/cli/azure/webapp 3. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "references": "1. https://learn.microsoft.com/en-us/azure/app-service/networking-features 2. https://learn.microsoft.com/en-us/cli/azure/webapp 3. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls: Controls Version Control IG 1 IG 2 IG 3 v8 3.3 Configure Data Access Control Lists Configure data access control lists based on a user’s need to know. Apply data access control lists, also known as access permissions, to local and remote file systems, databases, and applications. ● ● ● v7 14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities. ● ● ●",
    "function_names": [
      "storage_account_public_network_access_disabled",
      "storage_account_network_access_restricted",
      "storage_account_public_access_blocked",
      "storage_account_network_policy_private",
      "storage_account_public_endpoint_disabled",
      "storage_account_firewall_enabled",
      "storage_account_network_acl_restricted",
      "storage_account_public_network_denied"
    ]
  },
  {
    "id": "2.2.14",
    "title": "Ensure deployment slot is integrated with a virtual network",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. Under Deployment, click Deployment slots. 4. Click the name of a deployment slot. 5. Under Settings, click Networking. 6. Under Outbound traffic configuration, next to Virtual network integration, click Not configured. 7. Click Add virtual network integration. 8. Select an existing App Service Plan connection, or select New connection and select a subscription, virtual network, and subnet. 9. Click Connect. 10. Repeat steps 1-9 for each app and deployment slot requiring remediation. Default Value: By default, virtual network integration is not configured. References: 1. https://learn.microsoft.com/en-us/azure/app-service/overview-vnet-integration 2. https://learn.microsoft.com/en-us/azure/app-service/configure-vnet-integration- enable 3. https://learn.microsoft.com/en-us/cli/azure/webapp 4. https://learn.microsoft.com/en-us/cli/azure/webapp/deployment/slot CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "compute_deployment_slot_virtual_network_integrated",
      "compute_deployment_slot_vnet_integrated",
      "app_service_deployment_slot_vnet_integrated",
      "app_service_deployment_slot_network_integrated",
      "web_app_deployment_slot_vnet_connected"
    ]
  },
  {
    "id": "2.2.15",
    "title": "Ensure configuration is routed through the virtual network integration",
    "assessment": "Automated",
    "remediation": "Remediate from Azure CLI For each deployment slot requiring remediation, run the following command to route container image pulls and content sharing through the virtual network integration: az resource update --resource-group <resource-group-name> --name <app- name>/slots/<deployment-slot-name> --resource-type \"Microsoft.Web/sites\" -- set properties.vnetImagePullEnabled=true --set properties.vnetContentShareEnabled=true Default Value: By default, configuration traffic goes directly over the public route. References: 1. https://learn.microsoft.com/en-us/azure/app-service/overview-vnet- integration#routes 2. https://learn.microsoft.com/en-us/azure/app-service/configure-vnet-integration- routing#configure-configuration-routing 3. https://learn.microsoft.com/en-us/cli/azure/webapp 4. https://learn.microsoft.com/en-us/cli/azure/resource Additional Information: In addition to configuring the routing for content sharing, you must also ensure that any firewall or Network Security Group configured on traffic from the subnet allow traffic to port 443 and 445. CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "app_service_web_app_vnet_integration_enabled",
      "app_service_function_app_vnet_integration_enabled",
      "app_service_vnet_integration_required",
      "app_service_private_endpoint_enabled",
      "app_service_hybrid_connection_required",
      "app_service_regional_vnet_integration_enabled",
      "app_service_vnet_integration_min_tls_1_2",
      "app_service_vnet_integration_all_regions"
    ]
  },
  {
    "id": "2.2.16",
    "title": "Ensure all traffic is routed through the virtual network",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services. 2. Click the name of an app. 3. Under Deployment, click Deployment slots. 4. Click the name of a deployment slot. 5. Under Settings, click Networking. 6. Under Outbound traffic configuration, next to Virtual network integration, click the virtual network and subnet name. 7. Under Application routing, check the box next to Outbound internet traffic. 8. Click Apply. 9. Repeat steps 1-8 for each app and deployment slot requiring remediation. Remediate from Azure CLI For each deployment slot requiring remediation, run the following command to route all traffic through the virtual network: az resource update --resource-group <resource-group-name> --name <app- name>/slots/<deployment-slot-name> --resource-type \"Microsoft.Web/sites\" -- set properties.vnetRouteAllEnabled=true Default Value: For deployment slots integrated with a virtual network, all traffic is routed through the virtual network by default. References: 1. https://learn.microsoft.com/en-us/azure/app-service/configure-vnet-integration- routing#configure-application-routing 2. https://learn.microsoft.com/en-us/cli/azure/webapp 3. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "compute_virtual_machine_network_traffic_routed",
      "compute_virtual_machine_network_traffic_routed_only",
      "compute_virtual_machine_traffic_virtual_network_only",
      "network_virtual_machine_traffic_routed",
      "network_virtual_machine_traffic_virtual_network_only",
      "compute_virtual_machine_network_traffic_restricted",
      "network_virtual_machine_traffic_restricted",
      "compute_virtual_machine_traffic_restricted_to_virtual_network",
      "network_virtual_machine_traffic_restricted_to_virtual_network",
      "compute_virtual_machine_traffic_virtual_network_restricted"
    ]
  },
  {
    "id": "2.2.17",
    "title": "Ensure cross-origin resource sharing does not allow all origins",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Service. 2. Click the name of an app. 3. Under Deployment, click Deployment slots. 4. Click the name of a deployment slot. 5. Under API, click CORS. 6. Under Allowed Origins, delete the entry that equals *. 7. Specify the origins that should be allowed to make cross-origin calls. 8. Click Save. 9. Repeat steps 1-8 for each app and deployment slot requiring remediation. Remediate from Azure CLI For each deployment slot requiring remediation, run the following command to update the allowed origins array to contain only the origins that should be allowed: az resource update --name web --resource-group <resource-group-name> -- namespace Microsoft.Web --resource-type config --parent sites/<app- name>/slots/<deployment-slot-name> --set properties.cors.allowedOrigins=\"['<allowed-origin>']\" Default Value: By default, CORS is not configured. References: 1. https://learn.microsoft.com/en-gb/azure/app-service/app-service-web-tutorial- rest-api 2. https://learn.microsoft.com/en-us/cli/azure/webapp 3. https://learn.microsoft.com/en-us/cli/azure/resource 4. https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Headers_Cheat_Sheet.ht ml 5. https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/CORS 6. https://cheatsheetseries.owasp.org/cheatsheets/Cross- Site_Request_Forgery_Prevention_Cheat_Sheet.html CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "cloud_cdn_distribution_cors_restricted",
      "cloud_storage_bucket_cors_restricted",
      "compute_api_gateway_cors_restricted",
      "cloud_front_distribution_cors_restricted",
      "cloud_storage_bucket_cors_no_wildcard",
      "cloud_cdn_distribution_cors_no_wildcard",
      "compute_api_gateway_cors_no_wildcard",
      "cloud_front_distribution_cors_no_wildcard"
    ]
  },
  {
    "id": "2.3.1",
    "title": "Ensure 'Java version' is currently supported (if in use)",
    "assessment": "Manual",
    "remediation": "Note: No action is required if Java is not in use. Remediate from Azure Portal 1. Go to App Services or Function App. 2. Click the name of a function app. 3. Under Settings, click Configuration. 4. In the General settings pane, for a Stack of Java, set the Java Version to a currently supported release. 5. Click Save. 6. Click Continue. 7. Repeat steps 1-6 for each function app requiring remediation. Remediate from Azure CLI Run the following command to list supported runtimes: az functionapp list-runtimes For each function app requiring remediation, run the following command with the appropriate parameters to update the Java version: az functionapp config set --resource-group <resource-group-name> --name <function-app-name> [--java-container <java-container> --java-container- version <java-container-version> --java-version <java-version>] [--linux-fx- version <java-runtime-version>] Default Value: The version is selected during creation. References: 1. https://learn.microsoft.com/en-us/azure/app-service/configure-language-java- deploy-run 2. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-posture- vulnerability-management#pv-3-define-and-establish-secure-configurations-for- compute-resources 3. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-posture- vulnerability-management#pv-6-rapidly-and-automatically-remediate- vulnerabilities 4. https://www.oracle.com/java/technologies/java-se-support-roadmap.html 5. https://learn.microsoft.com/en-us/cli/azure/functionapp 6. https://learn.microsoft.com/en-us/powershell/module/az.functions/get- azfunctionapp CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "compute_java_version_supported",
      "compute_java_version_current",
      "compute_java_version_up_to_date",
      "compute_java_version_supported_lts",
      "compute_java_version_no_eol"
    ]
  },
  {
    "id": "2.3.2",
    "title": "Ensure 'Python version' is currently supported (if in use)",
    "assessment": "Manual",
    "remediation": "Note: No action is required if Python is not in use. Remediate from Azure Portal 1. Go to App Services or Function App. 2. Click the name of a function app. 3. Under Settings, click Configuration. 4. In the General settings pane, for a Stack of Python, set the Python Version to a currently supported release. 5. Click Save. 6. Click Continue. 7. Repeat steps 1-6 for each function app requiring remediation. Remediate from Azure CLI Run the following command to list supported runtimes: az functionapp list-runtimes For each function app requiring remediation, run the following command with the appropriate parameters to update the Python version: az functionapp config set --resource-group <resource-group-name> --name <app- name> --linux-fx-version \"PYTHON|<version>\" Default Value: The version is selected during creation. References: 1. https://learn.microsoft.com/en-us/azure/app-service/configure- common#configure-language-stack-settings 2. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- posture-vulnerability-management#pv-7-rapidly-and-automatically-remediate- software-vulnerabilities 3. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- posture-vulnerability-management#pv-3-establish-secure-configurations-for- compute-resources 4. https://devguide.python.org/versions/ 5. https://learn.microsoft.com/en-us/cli/azure/functionapp 6. https://learn.microsoft.com/en-us/powershell/module/az.functions/get- azfunctionapp CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "compute_runtime_supported_python_version",
      "compute_runtime_python_version_current",
      "compute_runtime_python_version_supported",
      "compute_runtime_python_version_up_to_date",
      "compute_runtime_python_version_active_support"
    ]
  },
  {
    "id": "2.3.3",
    "title": "Ensure 'Basic Authentication Publishing Credentials' are 'Disabled'",
    "assessment": "Automated",
    "description": "",
    "rationale": "",
    "audit": "",
    "remediation": null,
    "function_names": [
      "cloud_cdn_endpoint_basic_auth_disabled",
      "cloud_cdn_endpoint_publishing_credentials_disabled",
      "cloud_cdn_endpoint_auth_disabled",
      "cloud_cdn_endpoint_basic_auth_disabled_all_regions",
      "cloud_cdn_endpoint_legacy_auth_disabled"
    ]
  },
  {
    "id": "2.3.4",
    "title": "Ensure 'FTP state' is set to 'FTPS only' or 'Disabled'",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services or Function App. 2. Click the name of a function app. 3. Under Settings, click Configuration. 4. In the General settings pane, under Platform settings, set FTP state to FTPS only or Disabled. 5. Click Save. 6. Click Continue. 7. Repeat steps 1-6 for each function app requiring remediation. Remediate from Azure CLI For each function app requiring remediation, run the following command to set FTPS state to FtpsOnly or Disabled: az functionapp config set --resource-group <resource-group-name> --name <function-app-name> --ftps-state <FtpsOnly|Disabled> Default Value: By default, FTP state is set to FTPS only. References: 1. https://learn.microsoft.com/en-us/azure/app-service/deploy-ftp 2. https://learn.microsoft.com/en-us/azure/app-service/overview-security 3. https://learn.microsoft.com/en-us/azure/azure-functions/functions-how-to-use- azure-function-app-settings#ftps-deployment-settings 4. https://learn.microsoft.com/en-us/cli/azure/functionapp 5. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- data-protection#dp-4-encrypt-sensitive-information-in-transit 6. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- posture-vulnerability-management#pv-7-rapidly-and-automatically-remediate- software-vulnerabilities 7. https://learn.microsoft.com/en-us/powershell/module/az.functions/get- azfunctionapp CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "references": "1. https://learn.microsoft.com/en-us/azure/app-service/deploy-ftp 2. https://learn.microsoft.com/en-us/azure/app-service/overview-security 3. https://learn.microsoft.com/en-us/azure/azure-functions/functions-how-to-use- azure-function-app-settings#ftps-deployment-settings 4. https://learn.microsoft.com/en-us/cli/azure/functionapp 5. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- data-protection#dp-4-encrypt-sensitive-information-in-transit 6. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- posture-vulnerability-management#pv-7-rapidly-and-automatically-remediate- software-vulnerabilities 7. https://learn.microsoft.com/en-us/powershell/module/az.functions/get- azfunctionapp CIS Controls: Controls Version Control IG 1 IG 2 IG 3 v8 3.10 Encrypt Sensitive Data in Transit Encrypt sensitive data in transit. Example implementations can include: Transport Layer Security (TLS) and Open Secure Shell (OpenSSH). ● ● v7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.  ● ●",
    "function_names": [
      "cloud_cdn_load_balancer_ftps_only_enabled",
      "cloud_cdn_load_balancer_ftp_disabled",
      "cloud_cdn_load_balancer_secure_ftp_enabled",
      "cloud_cdn_load_balancer_insecure_ftp_disabled",
      "cloud_cdn_load_balancer_ftp_state_secure",
      "cloud_cdn_load_balancer_ftp_restricted",
      "cloud_cdn_load_balancer_ftps_enforced",
      "cloud_cdn_load_balancer_ftp_protocol_secure"
    ]
  },
  {
    "id": "2.3.5",
    "title": "Ensure 'HTTP version' is set to '2.0' (if in use)",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services or Function App. 2. Click the name of a function app. 3. Under Settings, click Configuration. 4. In the General settings pane, under Platform settings, set HTTP version to 2.0. 5. Click Save. 6. Click Continue. 7. Repeat steps 1-6 for each function app requiring remediation. Remediate from Azure CLI For each function app requiring remediation, run the following command to enable http20Enabled: az functionapp config set --resource-group <resource-group-name> --name <app- name> --http20-enabled true Default Value: By default, HTTP version is set to 1.1. References: 1. https://learn.microsoft.com/en-us/azure/app-service/configure-common#general- settings 2. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-posture- vulnerability-management#pv-3-define-and-establish-secure-configurations-for- compute-resources 3. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-posture- vulnerability-management#pv-6-rapidly-and-automatically-remediate- vulnerabilities 4. https://learn.microsoft.com/en-us/cli/azure/functionapp 5. https://learn.microsoft.com/en-us/powershell/module/az.functions/get- azfunctionapp CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "cloud_cdn_distribution_http2_enabled",
      "cloud_cdn_distribution_http_version_2_0",
      "cloud_cdn_distribution_protocol_http2",
      "cloud_cdn_distribution_min_http_version_2_0",
      "cloud_cdn_distribution_http2_required",
      "cloud_cdn_distribution_http2_enforced",
      "cloud_cdn_distribution_http2_only",
      "cloud_cdn_distribution_http2_compliance"
    ]
  },
  {
    "id": "2.3.6",
    "title": "Ensure 'HTTPS Only' is set to 'On'",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services or Function App. 2. Click the name of a function app. 3. Under Settings, click Configuration. 4. In the General settings tab, under Platform settings, next to HTTPS Only, select the radio button next to On. 5. Click Save. 6. Click Continue. 7. Repeat steps 1-6 for each function app requiring remediation. Remediate from Azure CLI For each function app requiring remediation, run the following command to enable HTTPS Only: az resource update --resource-group <resource-group-name> --name <function- app-name> --resource-type \"Microsoft.Web/sites\" --set properties.httpsOnly=true Default Value: HTTPS Only is enabled by default. References: 1. https://learn.microsoft.com/en-us/azure/app-service/overview-security#https-and- certificates 2. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- data-protection#dp-3-encrypt-sensitive-data-in-transit 3. https://techcommunity.microsoft.com/t5/azure-paas-blog/enable-https-setting-on- azure-app-service-using-azure-policy/ba-p/3286603 4. https://learn.microsoft.com/en-us/cli/azure/functionapp 5. https://learn.microsoft.com/en-us/powershell/module/az.functions/get- azfunctionapp 6. https://learn.microsoft.com/en-us/azure/azure-functions/security-concepts 7. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "references": "1. https://learn.microsoft.com/en-us/azure/app-service/overview-security#https-and- certificates 2. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- data-protection#dp-3-encrypt-sensitive-data-in-transit 3. https://techcommunity.microsoft.com/t5/azure-paas-blog/enable-https-setting-on- azure-app-service-using-azure-policy/ba-p/3286603 4. https://learn.microsoft.com/en-us/cli/azure/functionapp 5. https://learn.microsoft.com/en-us/powershell/module/az.functions/get- azfunctionapp 6. https://learn.microsoft.com/en-us/azure/azure-functions/security-concepts 7. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls: Controls Version Control IG 1 IG 2 IG 3 v8 3.10 Encrypt Sensitive Data in Transit Encrypt sensitive data in transit. Example implementations can include: Transport Layer Security (TLS) and Open Secure Shell (OpenSSH). ● ● v7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.  ● ●",
    "function_names": [
      "cloud_cdn_distribution_https_only_enabled",
      "cloud_cdn_distribution_https_only_required",
      "cloud_cdn_distribution_https_enforced",
      "cloud_cdn_distribution_secure_transport_enabled",
      "cloud_cdn_distribution_tls_only_enabled"
    ]
  },
  {
    "id": "2.3.7",
    "title": "Ensure 'Minimum Inbound TLS Version' is set to '1.2' or higher",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services or Function App. 2. Click the name of a function app. 3. Under Settings, click Configuration. 4. In the General settings pane, under Platform settings, click the drop-down next to Minimum Inbound TLS Version and select 1.2 or higher. 5. Click Save. 6. Click Continue. 7. Repeat steps 1-6 for each function app requiring remediation. Remediate from Azure CLI For each function app requiring remediation, run the following command to update the TLS version: az functionapp config set --resource-group <resource-group-name> --name <function-app-name> --min-tls-version <1.2|1.3> Default Value: By default, TLS version is set to 1.2. References: 1. https://learn.microsoft.com/en-us/azure/app-service/configure-ssl-bindings#how- can-i-change-the-minimum-tls-versions-for-the-app 2. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-data- protection#dp-3-encrypt-sensitive-data-in-transit 3. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-network- security#ns-8-detect-and-disable-insecure-services-and-protocols 4. https://learn.microsoft.com/en-us/cli/azure/functionapp 5. https://learn.microsoft.com/en-us/powershell/module/az.functions/get- azfunctionapp 6. https://csrc.nist.gov/news/2019/nist-publishes-sp-800-52-revision-2 CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "references": "1. https://learn.microsoft.com/en-us/azure/app-service/configure-ssl-bindings#how- can-i-change-the-minimum-tls-versions-for-the-app 2. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-data- protection#dp-3-encrypt-sensitive-data-in-transit 3. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-network- security#ns-8-detect-and-disable-insecure-services-and-protocols 4. https://learn.microsoft.com/en-us/cli/azure/functionapp 5. https://learn.microsoft.com/en-us/powershell/module/az.functions/get- azfunctionapp 6. https://csrc.nist.gov/news/2019/nist-publishes-sp-800-52-revision-2 CIS Controls: Controls Version Control IG 1 IG 2 IG 3 v8 3.10 Encrypt Sensitive Data in Transit Encrypt sensitive data in transit. Example implementations can include: Transport Layer Security (TLS) and Open Secure Shell (OpenSSH). ● ● v7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.  ● ●",
    "function_names": [
      "cloud_cdn_distribution_min_tls_version",
      "cloud_cdn_distribution_min_tls_1_2",
      "cloud_cdn_distribution_tls_version_compliance",
      "cloud_cdn_distribution_tls_1_2_or_higher",
      "cloud_cdn_distribution_inbound_tls_1_2",
      "cloud_cdn_distribution_inbound_tls_version",
      "cloud_cdn_distribution_tls_version_min_1_2",
      "cloud_cdn_distribution_inbound_tls_compliance",
      "cloud_cdn_distribution_tls_version_enforced",
      "cloud_cdn_distribution_tls_version_secure"
    ]
  },
  {
    "id": "2.3.8",
    "title": "Ensure end-to-end TLS encryption is enabled",
    "assessment": "Automated",
    "remediation": "Remediate from Azure CLI For each function app requiring remediation, run the following command to enable end- to-end TLS encryption: az resource update --resource-group <resource-group-name> --name <function- app-name> --resource-type \"Microsoft.Web/sites\" --set properties.endToEndEncryptionEnabled=true Default Value: By default, end-to-end TLS encryption is disabled. References: 1. https://learn.microsoft.com/en-us/azure/app-service/overview-tls#end-to-end-tls- encryption 2. https://learn.microsoft.com/en-us/cli/azure/functionapp 3. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "impact": "Enabling end-to-end TLS encryption may introduce minimal latency and require additional configuration of certificates and HTTPS settings to ensure compatibility. Audit: Audit from Azure CLI Run the following command to list function apps: az functionapp list For each function app, run the following command to get the end-to-end TLS encryption setting: az functionapp show --resource-group <resource-group-name> --name <function- app-name> --query endToEndEncryptionEnabled Ensure that the command returns true. Audit from Azure Policy If referencing a digital copy of this Benchmark, clicking a Policy ID will open a link to the associated Policy definition in Azure. If referencing a printed copy, you can search Policy IDs from this URL: https://portal.azure.com/#view/Microsoft_Azure_Policy/PolicyMenuBlade/~/Definitions • Policy ID: 387140f1-6da9-4741-bcee-3b5edcdfd9ec - Name: 'Function apps should enable end to end encryption'",
    "function_names": [
      "cloud_cdn_distribution_tls_encryption_enabled",
      "cloud_cdn_distribution_end_to_end_tls_enabled",
      "cloud_cdn_distribution_min_tls_1_2",
      "cloud_cdn_distribution_https_only_enabled",
      "cloud_cdn_distribution_secure_transport_required",
      "cloud_cdn_distribution_tls_protocol_enforced",
      "cloud_cdn_distribution_ssl_certificate_valid",
      "cloud_cdn_distribution_tls_version_compliant",
      "cloud_cdn_distribution_encryption_in_transit_enabled",
      "cloud_cdn_distribution_tls_handshake_secure"
    ]
  },
  {
    "id": "2.3.9",
    "title": "Ensure 'Remote debugging' is set to 'Off'",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services or Function App. 2. Click the name of a function app. 3. Under Settings, click Configuration. 4. In the General settings pane, under Debugging, set Remote debugging to Off. 5. Click Save. 6. Click Continue. 7. Repeat steps 1-6 for each function app requiring remediation. Remediate from Azure CLI For each function app requiring remediation, run the following command to disable remote debugging: az functionapp config set --resource-group <resource-group-name> --name <function-app-name> --remote-debugging-enabled false Default Value: By default, remote debugging is set to off. References: 1. https://learn.microsoft.com/en-us/visualstudio/debugger/remote-debugging- azure-app-service 2. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-posture- vulnerability-management#pv-2-audit-and-enforce-secure-configurations 3. https://learn.microsoft.com/en-us/cli/azure/functionapp 4. https://learn.microsoft.com/en-us/powershell/module/az.functions/get- azfunctionapp CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "app_service_web_app_remote_debugging_disabled",
      "app_service_function_app_remote_debugging_disabled",
      "cloud_functions_function_remote_debugging_disabled",
      "compute_vm_remote_debugging_disabled",
      "container_app_remote_debugging_disabled",
      "serverless_app_remote_debugging_disabled",
      "api_gateway_remote_debugging_disabled",
      "cloud_run_service_remote_debugging_disabled"
    ]
  },
  {
    "id": "2.3.10",
    "title": "Ensure incoming client certificates are enabled and required (if in use)",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services or Function App. 2. Click the name of a function app. 3. Under Settings, click Configuration. 4. In the General settings pane, under Incoming client certificates, set Client certificate mode to Required. 5. Click Save. 6. Click Continue. 7. Repeat steps 1-6 for each function app requiring remediation. Remediate from Azure CLI For each function app requiring remediation, run the following command to enable and require incoming client certificates: az resource update --resource-group <resource-group-name> --name <function- app-name> --resource-type \"Microsoft.Web/sites\" --set properties.clientCertEnabled=true --set properties.clientCertMode=Required Default Value: By default, incoming client certificates are disabled. References: 1. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- identity-management#im-4-authenticate-server-and-services 2. https://learn.microsoft.com/en-gb/azure/app-service/app-service-web-configure- tls-mutual-auth 3. https://learn.microsoft.com/en-us/cli/azure/functionapp 4. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "cloud_cdn_load_balancer_client_certificate_required",
      "cloud_cdn_load_balancer_client_certificate_enabled",
      "compute_load_balancer_client_certificate_required",
      "compute_load_balancer_client_certificate_enabled",
      "cloud_cdn_ssl_certificate_client_auth_required",
      "cloud_cdn_ssl_certificate_client_auth_enabled",
      "compute_ssl_certificate_client_auth_required",
      "compute_ssl_certificate_client_auth_enabled"
    ]
  },
  {
    "id": "2.3.11",
    "title": "Ensure 'App Service authentication' is set to 'Enabled'",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services or Function App. 2. Click the name of a function app. 3. Under Settings, click Authentication. 4. If an identity provider is not configured: 1. Click Add identity provider. 2. Provide appropriate configuration for an identity provider and click Add. 5. If App Service authentication is set to Disabled: 1. Click Enable authentication. 6. Repeat steps 1-5 for each function app requiring remediation. Remediate from Azure CLI For each function app requiring remediation, run the following command to enable authentication: az webapp auth update --resource-group <resource-group-name> --name <function-app-name> --enabled true Note : In order to access App Service authentication settings for an app using the Microsoft API, the Website Contributor permission at the subscription level is required. A custom role can be created instead of Website Contributor to provide more specific permissions and maintain the principle of least privileged access. Default Value: By default, App Service authentication is set to Disabled. References: 1. https://learn.microsoft.com/en-us/azure/app-service/overview-authentication- authorization 2. https://learn.microsoft.com/en-us/azure/role-based-access-control/built-in- roles#website-contributor 3. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-privileged- access#pa-3-manage-lifecycle-of-identities-and-entitlements 4. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-governance- strategy#gs-6-define-and-implement-identity-and-privileged-access-strategy 5. https://learn.microsoft.com/en-us/cli/azure/webapp/auth Additional Information: You're not required to use App Service for authentication and authorization. Many web frameworks come with security features built in, and you can use them if you like. If you need more flexibility than App Service provides, you can also write your own utilities. Secure authentication and authorization require a deep understanding of security, including federation, encryption, JSON Web Token (JWT) management, grant types, and so on. CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "references": "1. https://learn.microsoft.com/en-us/azure/app-service/overview-authentication- authorization 2. https://learn.microsoft.com/en-us/azure/role-based-access-control/built-in- roles#website-contributor 3. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-privileged- access#pa-3-manage-lifecycle-of-identities-and-entitlements 4. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-governance- strategy#gs-6-define-and-implement-identity-and-privileged-access-strategy 5. https://learn.microsoft.com/en-us/cli/azure/webapp/auth Additional Information: You're not required to use App Service for authentication and authorization. Many web frameworks come with security features built in, and you can use them if you like. If you need more flexibility than App Service provides, you can also write your own utilities. Secure authentication and authorization require a deep understanding of security, including federation, encryption, JSON Web Token (JWT) management, grant types, and so on. CIS Controls: Controls Version Control IG 1 IG 2 IG 3 v8 3.3 Configure Data Access Control Lists Configure data access control lists based on a user’s need to know. Apply data access control lists, also known as access permissions, to local and remote file systems, databases, and applications. ● ● ● v7 14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities. ● ● ●",
    "function_names": [
      "app_service_authentication_enabled",
      "app_service_authentication_enabled_all_regions",
      "app_service_authentication_enabled_min_tls_1_2",
      "app_service_authentication_enabled_over_90d",
      "app_service_authentication_enabled_for_prod"
    ]
  },
  {
    "id": "2.3.12",
    "title": "Ensure managed identities are configured",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services or Function App. 2. Click the name of a function app. 3. Under Settings, click Identity. 4. To add a system assigned managed identity: 1. In the System assigned pane, under Status, click On. 2. Click Save. 3. Click Yes. 5. To add a user assigned managed identity: 1. In the User assigned pane, click Add. 2. Use the filter box to search for a managed identity. 3. Select the identity. 4. Click Add. 6. Repeat steps 1-5 for each function app requiring remediation. Remediate from Azure CLI For each function app requiring remediation, run the following command to assign a system-assigned managed identity: az functionapp identity assign --resource-group <resource-group-name> --name <function-app-name> Remediate from PowerShell For each function app requiring remediation, run the following command to assign a system-assigned managed identity: Update-AzFunctionApp -ResourceGroupName <resource-group-name> -Name <function-app-name> -IdentityType SystemAssigned -Force Default Value: Managed identities are disabled by default for function apps. References: 1. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-identity- management#im-1-use-centralized-identity-and-authentication-system 2. https://learn.microsoft.com/en-us/azure/app-service/overview-managed-identity 3. https://learn.microsoft.com/en-us/cli/azure/functionapp 4. https://learn.microsoft.com/en-us/powershell/module/az.functions/update- azfunctionapp CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "references": "1. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-identity- management#im-1-use-centralized-identity-and-authentication-system 2. https://learn.microsoft.com/en-us/azure/app-service/overview-managed-identity 3. https://learn.microsoft.com/en-us/cli/azure/functionapp 4. https://learn.microsoft.com/en-us/powershell/module/az.functions/update- azfunctionapp CIS Controls: Controls Version Control IG 1 IG 2 IG 3 v8 5.6 Centralize Account Management Centralize account management through a directory or identity service.  ● ● v7 16.2 Configure Centralized Point of Authentication Configure access for all accounts through as few centralized points of authentication as possible, including network, security, and cloud systems. ● ●",
    "function_names": [
      "compute_virtual_machine_managed_identity_enabled",
      "compute_virtual_machine_managed_identity_assigned",
      "compute_virtual_machine_system_assigned_identity_enabled",
      "compute_virtual_machine_user_assigned_identity_enabled",
      "compute_virtual_machine_identity_credentials_rotated",
      "compute_virtual_machine_identity_permissions_restricted",
      "compute_virtual_machine_identity_role_based_access_controlled",
      "compute_virtual_machine_identity_lease_duration_limited"
    ]
  },
  {
    "id": "2.3.13",
    "title": "Ensure public network access is disabled",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services or Function App. 2. Click the name of a function app. 3. Under Settings, click Networking. 4. Under Inbound traffic configuration, click the text next to Public network access. 5. Select the radio button next to Disabled. 6. Click Save. 7. Check the box to confirm the change. 8. Click Continue. 9. Repeat steps 1-8 for each function app requiring remediation. Remediate from Azure CLI For each function app requiring remediation, run the following command to disable public network access: az resource update --resource-group <resource-group-name> --name <function- app-name> --resource-type \"Microsoft.Web/sites\" --set properties.publicNetworkAccess=Disabled Default Value: By default, public network access is enabled. References: 1. https://learn.microsoft.com/en-us/azure/app-service/networking-features 2. https://learn.microsoft.com/en-us/cli/azure/functionapp 3. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "references": "1. https://learn.microsoft.com/en-us/azure/app-service/networking-features 2. https://learn.microsoft.com/en-us/cli/azure/functionapp 3. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls: Controls Version Control IG 1 IG 2 IG 3 v8 3.3 Configure Data Access Control Lists Configure data access control lists based on a user’s need to know. Apply data access control lists, also known as access permissions, to local and remote file systems, databases, and applications. ● ● ● v7 14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities. ● ● ●",
    "function_names": [
      "storage_account_public_network_access_disabled",
      "storage_account_network_restricted_to_private_endpoints",
      "storage_account_firewall_enabled",
      "storage_account_public_access_blocked",
      "storage_account_network_access_restricted",
      "storage_account_public_endpoint_disabled",
      "storage_account_private_link_required",
      "storage_account_network_acl_restricted",
      "storage_account_public_ip_disabled",
      "storage_account_network_policy_private_only"
    ]
  },
  {
    "id": "2.3.14",
    "title": "Ensure function app is integrated with a virtual network",
    "assessment": "Automated",
    "description": "",
    "rationale": "",
    "audit": "",
    "remediation": null,
    "function_names": [
      "compute_function_app_vnet_integrated",
      "compute_function_app_network_integrated",
      "compute_function_app_virtual_network_connected",
      "compute_function_app_private_network_enabled",
      "compute_function_app_vnet_peering_enabled"
    ]
  },
  {
    "id": "2.3.15",
    "title": "Ensure configuration is routed through the virtual network integration",
    "assessment": "Automated",
    "remediation": "Remediate from Azure CLI For each function app requiring remediation, run the following command to route container image pulls and content sharing through the virtual network integration: az resource update --resource-group <resource-group-name> --name <function- app-name> --resource-type \"Microsoft.Web/sites\" --set properties.vnetImagePullEnabled=true --set properties.vnetContentShareEnabled=true Default Value: By default, configuration traffic goes directly over the public route. References: 1. https://learn.microsoft.com/en-us/azure/app-service/overview-vnet- integration#routes 2. https://learn.microsoft.com/en-us/azure/app-service/configure-vnet-integration- routing#configure-configuration-routing 3. https://learn.microsoft.com/en-us/cli/azure/functionapp 4. https://learn.microsoft.com/en-us/cli/azure/resource Additional Information: In addition to configuring the routing for content sharing, you must also ensure that any firewall or Network Security Group configured on traffic from the subnet allow traffic to port 443 and 445. CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "app_service_web_app_vnet_integration_enabled",
      "app_service_function_app_vnet_integration_enabled",
      "app_service_web_app_private_endpoint_enabled",
      "app_service_function_app_private_endpoint_enabled",
      "app_service_web_app_public_access_disabled",
      "app_service_function_app_public_access_disabled",
      "app_service_web_app_subnet_associated",
      "app_service_function_app_subnet_associated"
    ]
  },
  {
    "id": "2.3.16",
    "title": "Ensure all traffic is routed through the virtual network",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services or Function App. 2. Click the name of a function app. 3. Under Settings, click Networking. 4. Under Outbound traffic configuration, next to Virtual network integration, click the virtual network and subnet name. 5. Under Application routing, check the box next to Outbound internet traffic. 6. Click Apply. 7. Repeat steps 1-6 for each function app requiring remediation. Remediate from Azure CLI For each function app requiring remediation, run the following command to route all traffic through the virtual network: az resource update --resource-group <resource-group-name> --name <function- app-name> --resource-type \"Microsoft.Web/sites\" --set properties.vnetRouteAllEnabled=true Default Value: For function apps integrated with a virtual network, all traffic is routed through the virtual network by default. References: 1. https://learn.microsoft.com/en-us/azure/app-service/configure-vnet-integration- routing#configure-application-routing 2. https://learn.microsoft.com/en-us/azure/azure-functions/functions-app- settings#vnetrouteallenabled 3. https://learn.microsoft.com/en-us/cli/azure/functionapp 4. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "compute_virtual_machine_network_traffic_routed",
      "compute_virtual_machine_vnet_traffic_only",
      "network_virtual_network_traffic_restricted",
      "network_virtual_network_no_public_routing",
      "compute_virtual_machine_private_network_only",
      "network_virtual_network_traffic_isolated",
      "compute_virtual_machine_vnet_peering_enabled",
      "network_virtual_network_no_public_endpoints"
    ]
  },
  {
    "id": "2.3.17",
    "title": "Ensure cross-origin resource sharing does not allow all origins",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Service or Function App. 2. Click the name of a function app. 3. Under API, click CORS. 4. Under Allowed Origins, delete the entry that equals *. 5. Specify the origins that should be allowed to make cross-origin calls. 6. Click Save. 7. Repeat steps 1-6 for each function app requiring remediation. Remediate from Azure CLI For each function app requiring remediation, run the following command: az functionapp cors remove --resource-group <resource-group-name> --name <function-app-name> --allowed-origins \"*\" Use the following command to specify the origins that should be allowed: az functionapp cors add --resource-group <resource-group-name> --name <function-app-name> --allowed-origins <allowed-origins> Default Value: By default, Allowed Origins is set to https://portal.azure.com. References: 1. https://learn.microsoft.com/en-gb/azure/app-service/app-service-web-tutorial- rest-api 2. https://learn.microsoft.com/en-us/cli/azure/functionapp/cors 3. https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Headers_Cheat_Sheet.ht ml 4. https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/CORS 5. https://cheatsheetseries.owasp.org/cheatsheets/Cross- Site_Request_Forgery_Prevention_Cheat_Sheet.html CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "cloud_cdn_distribution_cors_restricted",
      "cloud_storage_bucket_cors_restricted",
      "compute_api_gateway_cors_restricted",
      "cloud_front_distribution_cors_restricted",
      "cloud_function_cors_restricted",
      "cloud_run_service_cors_restricted",
      "cloud_storage_object_cors_restricted",
      "cloud_cdn_endpoint_cors_restricted",
      "cloud_load_balancer_cors_restricted",
      "cloud_api_cors_restricted"
    ]
  },
  {
    "id": "2.4.1",
    "title": "Ensure 'Java version' is currently supported (if in use)",
    "assessment": "Manual",
    "remediation": "Note: No action is required if Java is not in use. Remediate from Azure Portal 1. Go to App Services or Function App. 2. Click the name of a function app. 3. Under Deployment, click Deployment slots. 4. Click the name of a deployment slot. 5. Under Settings, click Configuration. 6. In the General settings pane, for a Stack of Java, set the Java Version to a currently supported release. 7. Click Save. 8. Click Continue. 9. Repeat steps 1-8 for each function app and deployment slot requiring remediation. Remediate from Azure CLI Run the following command to list supported runtimes: az functionapp list-runtimes For each deployment slot requiring remediation, run the following command with the appropriate parameters to update the Java version: az resource update --name web --resource-group <resource-group-name> -- namespace Microsoft.Web --resource-type config --parent sites/<function-app- name>/slots/<deployment-slot-name> --set properties.[javaContainer|javaContainerVersion|javaVersion|linuxFxVersion]=\"< java-container|java-container-version|java-version|java-runtime-version>\" Default Value: The version is selected during creation. References: 1. https://learn.microsoft.com/en-us/azure/app-service/configure-language-java- deploy-run 2. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-posture- vulnerability-management#pv-3-define-and-establish-secure-configurations-for- compute-resources 3. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-posture- vulnerability-management#pv-6-rapidly-and-automatically-remediate- vulnerabilities 4. https://www.oracle.com/java/technologies/java-se-support-roadmap.html 5. https://learn.microsoft.com/en-us/cli/azure/functionapp 6. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "references": "1. https://learn.microsoft.com/en-us/azure/app-service/configure-language-java- deploy-run 2. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-posture- vulnerability-management#pv-3-define-and-establish-secure-configurations-for- compute-resources 3. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-posture- vulnerability-management#pv-6-rapidly-and-automatically-remediate- vulnerabilities 4. https://www.oracle.com/java/technologies/java-se-support-roadmap.html 5. https://learn.microsoft.com/en-us/cli/azure/functionapp 6. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls: Controls Version Control IG 1 IG 2 IG 3 v8 2.2 Ensure Authorized Software is Currently Supported Ensure that only currently supported software is designated as authorized in the software inventory for enterprise assets. If software is unsupported, yet necessary for the fulfillment of the enterprise’s mission, document an exception detailing mitigating controls and residual risk acceptance. For any unsupported software without an exception documentation, designate as unauthorized. Review the software list to verify software support at least monthly, or more frequently. ● ● ● v7 2.2 Ensure Software is Supported by Vendor Ensure that only software applications or operating systems currently supported by the software's vendor are added to the organization's authorized software inventory. Unsupported software should be tagged as unsupported in the inventory system. ● ● ●",
    "function_names": [
      "compute_java_version_supported",
      "compute_java_version_current",
      "compute_java_version_up_to_date",
      "compute_java_version_latest",
      "compute_java_version_active_support"
    ]
  },
  {
    "id": "2.4.2",
    "title": "Ensure 'Python version' is currently supported (if in use)",
    "assessment": "Manual",
    "remediation": "Note: No action is required if Python is not in use. Remediate from Azure Portal 1. Go to App Services or Function App. 2. Click the name of a function app. 3. Under Deployment, click Deployment slots. 4. Click the name of a deployment slot. 5. Under Settings, click Configuration. 6. In the General settings pane, for a Stack of Python, set the Python Version to a currently supported release. 7. Click Save. 8. Click Continue. 9. Repeat steps 1-8 for each function app and deployment slot requiring remediation. Remediate from Azure CLI Run the following command to list supported runtimes: az functionapp list-runtimes For each deployment slot requiring remediation, run the following command with the appropriate parameters to update the Python version: az resource update --name web --resource-group <resource-group-name> -- namespace Microsoft.Web --resource-type config --parent sites/<function-app- name>/slots/<deployment-slot-name> --set properties.linuxFxVersion=\"PYTHON|<python-version>\" Default Value: The version is selected during creation. References: 1. https://learn.microsoft.com/en-us/azure/app-service/configure- common#configure-language-stack-settings 2. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- posture-vulnerability-management#pv-7-rapidly-and-automatically-remediate- software-vulnerabilities 3. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- posture-vulnerability-management#pv-3-establish-secure-configurations-for- compute-resources 4. https://devguide.python.org/versions/ 5. https://learn.microsoft.com/en-us/cli/azure/functionapp 6. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "references": "1. https://learn.microsoft.com/en-us/azure/app-service/configure- common#configure-language-stack-settings 2. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- posture-vulnerability-management#pv-7-rapidly-and-automatically-remediate- software-vulnerabilities 3. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- posture-vulnerability-management#pv-3-establish-secure-configurations-for- compute-resources 4. https://devguide.python.org/versions/ 5. https://learn.microsoft.com/en-us/cli/azure/functionapp 6. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls: Controls Version Control IG 1 IG 2 IG 3 v8 2.2 Ensure Authorized Software is Currently Supported Ensure that only currently supported software is designated as authorized in the software inventory for enterprise assets. If software is unsupported, yet necessary for the fulfillment of the enterprise’s mission, document an exception detailing mitigating controls and residual risk acceptance. For any unsupported software without an exception documentation, designate as unauthorized. Review the software list to verify software support at least monthly, or more frequently. ● ● ● v7 2.2 Ensure Software is Supported by Vendor Ensure that only software applications or operating systems currently supported by the software's vendor are added to the organization's authorized software inventory. Unsupported software should be tagged as unsupported in the inventory system. ● ● ●",
    "function_names": [
      "compute_runtime_supported_python_version",
      "compute_runtime_python_version_current",
      "compute_runtime_python_version_supported",
      "compute_runtime_python_version_up_to_date",
      "compute_runtime_python_version_active_support"
    ]
  },
  {
    "id": "2.4.3",
    "title": "Ensure 'Basic Authentication Publishing Credentials' are 'Disabled'",
    "assessment": "Automated",
    "audit": "Audit from Azure Portal 1. Go to App Services or Function App. 2. Click the name of an app. 3. Under Deployment, click Deployment slots. 4. Click the name of a deployment slot. 5. Under Settings, click Configuration. 6. In the General settings pane, under Platform settings, ensure that SCM Basic Auth Publishing Credentials and FTP Basic Auth Publishing Credentials are set to Off. 7. Repeat steps 1-6 for each function app and deployment slot. Audit from Azure CLI Run the following command to list function apps: az functionapp list For each function app, run the following command to list deployment slots: az functionapp deployment slot list --resource-group <resource-group-name> -- name <function-app-name> For each deployment slot, run the following command to get the basic authentication for FTP setting: az resource show --resource-group <resource-group-name> --name ftp -- namespace Microsoft.Web --resource-type basicPublishingCredentialsPolicies -- parent sites/<function-app-name>/slots/<deployment-slot-name> --query properties.allow Ensure that false is returned. For each deployment slot, run the following command to get the basic authentication for SCM setting: az resource show --resource-group <resource-group-name> --name scm -- namespace Microsoft.Web --resource-type basicPublishingCredentialsPolicies -- parent sites/<function-app-name>/slots/<deployment-slot-name> --query properties.allow Ensure that false is returned. Remediation: CAUTION: Applying changes may cause your App Service resource to restart. Remediate from Azure Portal 1. Go to App Services or Function App. 2. Click the name of a function app. 3. Under Deployment, click Deployment slots. 4. Click the name of a deployment slot. 5. Under Settings, click Configuration. 6. In the General settings pane, under Platform settings, set SCM Basic Auth Publishing Credentials and FTP Basic Auth Publishing Credentials to Off. 7. Click Save. 8. Click Continue. 9. Repeat steps 1-8 for each function app and deployment slot requiring remediation. Remediate from Azure CLI For each deployment slot requiring remediation, run the following command to disable basic authentication for FTP: az resource update --resource-group <resource-group-name> --name ftp -- namespace Microsoft.Web --resource-type basicPublishingCredentialsPolicies -- parent sites/<function-app-name>/slots/<deployment-slot-name> --set properties.allow=false For each deployment slot requiring remediation, run the following command to disable basic authentication for SCM: az resource update --resource-group <resource-group-name> --name scm -- namespace Microsoft.Web --resource-type basicPublishingCredentialsPolicies -- parent sites/<function-app-name>/slots/<deployment-slot-name> --set properties.allow=false Default Value: Basic authentication is enabled by default. References: 1. https://learn.microsoft.com/en-us/azure/app-service/configure-basic-auth-disable 2. https://learn.microsoft.com/en-us/cli/azure/functionapp 3. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls: Controls Version Control IG 1 IG 2 IG 3 v8 5.6 Centralize Account Management Centralize account management through a directory or identity service.  ● ● v7 16.2 Configure Centralized Point of Authentication Configure access for all accounts through as few centralized points of authentication as possible, including network, security, and cloud systems. ● ●",
    "description": "",
    "rationale": "",
    "remediation": null,
    "function_names": [
      "cloud_cdn_endpoint_basic_auth_disabled",
      "cloud_cdn_endpoint_publishing_credentials_disabled",
      "cloud_cdn_endpoint_basic_auth_credentials_disabled",
      "cloud_cdn_endpoint_legacy_auth_disabled",
      "cloud_cdn_endpoint_auth_credentials_disabled"
    ]
  },
  {
    "id": "2.4.4",
    "title": "Ensure 'FTP state' is set to 'FTPS only' or 'Disabled'",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services or Function App. 2. Click the name of a function app. 3. Under Deployment, click Deployment Slots. 4. Click the name of a deployment slot. 5. Under Settings, click Configuration. 6. In the General settings pane, under Platform settings, set FTP state to FTPS only or Disabled. 7. Click Save. 8. Click Continue. 9. Repeat steps 1-8 for each function app and deployment slot requiring remediation. Remediate from Azure CLI For each deployment slot requiring remediation, run the following command to set FTPS state to FtpsOnly or Disabled: az resource update --name web --resource-group <resource-group-name> -- namespace Microsoft.Web --resource-type config --parent sites/<function-app- name>/slots/<deployment-slot-name> --set properties.ftpsState=<FtpsOnly|Disabled> Default Value: By default, FTP state is set to FTPS only. References: 1. https://learn.microsoft.com/en-us/azure/app-service/deploy-ftp 2. https://learn.microsoft.com/en-us/azure/app-service/overview-security 3. https://learn.microsoft.com/en-us/azure/azure-functions/functions-how-to-use- azure-function-app-settings#ftps-deployment-settings 4. https://learn.microsoft.com/en-us/cli/azure/functionapp 5. https://learn.microsoft.com/en-us/cli/azure/resource 6. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- data-protection#dp-4-encrypt-sensitive-information-in-transit 7. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- posture-vulnerability-management#pv-7-rapidly-and-automatically-remediate- software-vulnerabilities CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "references": "1. https://learn.microsoft.com/en-us/azure/app-service/deploy-ftp 2. https://learn.microsoft.com/en-us/azure/app-service/overview-security 3. https://learn.microsoft.com/en-us/azure/azure-functions/functions-how-to-use- azure-function-app-settings#ftps-deployment-settings 4. https://learn.microsoft.com/en-us/cli/azure/functionapp 5. https://learn.microsoft.com/en-us/cli/azure/resource 6. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- data-protection#dp-4-encrypt-sensitive-information-in-transit 7. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- posture-vulnerability-management#pv-7-rapidly-and-automatically-remediate- software-vulnerabilities CIS Controls: Controls Version Control IG 1 IG 2 IG 3 v8 3.10 Encrypt Sensitive Data in Transit Encrypt sensitive data in transit. Example implementations can include: Transport Layer Security (TLS) and Open Secure Shell (OpenSSH). ● ● v7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.  ● ●",
    "function_names": [
      "cloud_cdn_load_balancer_ftps_only_enabled",
      "cloud_cdn_load_balancer_ftp_disabled",
      "cloud_cdn_load_balancer_secure_ftp_enabled",
      "cloud_cdn_load_balancer_insecure_ftp_disabled",
      "cloud_cdn_load_balancer_ftp_state_secure",
      "cloud_cdn_load_balancer_ftp_restricted",
      "cloud_cdn_load_balancer_ftps_required",
      "cloud_cdn_load_balancer_ftp_protocol_secure"
    ]
  },
  {
    "id": "2.4.5",
    "title": "Ensure 'HTTP version' is set to '2.0' (if in use)",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services or Function App. 2. Click the name of a function app. 3. Under Deployment, click Deployment slots. 4. Click the name of a deployment slot. 5. Under Settings, click Configuration. 6. In the General settings pane, under Platform settings, set HTTP version to 2.0. 7. Click Save. 8. Click Continue. 9. Repeat steps 1-8 for each function app and deployment slot requiring remediation. Remediate from Azure CLI For each deployment slot requiring remediation, run the following command to enable http20Enabled: az resource update --name web --resource-group <resource-group-name> -- namespace Microsoft.Web --resource-type config --parent sites/<app- name>/slots/<deployment-slot-name> --set properties.http20Enabled=true Default Value: By default, HTTP version is set to 1.1. References: 1. https://learn.microsoft.com/en-us/azure/app-service/configure-common#general- settings 2. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-posture- vulnerability-management#pv-3-define-and-establish-secure-configurations-for- compute-resources 3. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-posture- vulnerability-management#pv-6-rapidly-and-automatically-remediate- vulnerabilities 4. https://learn.microsoft.com/en-us/cli/azure/functionapp 5. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "cloud_cdn_distribution_http_version_2_0",
      "cloud_cdn_distribution_http_version_configured",
      "cloud_cdn_distribution_http_version_min_2_0",
      "cloud_cdn_distribution_http_protocol_2_0",
      "cloud_cdn_distribution_http_version_compliance",
      "cloud_cdn_distribution_http_version_enforced",
      "cloud_cdn_distribution_http_version_up_to_date",
      "cloud_cdn_distribution_http_version_secure",
      "cloud_cdn_distribution_http_version_latest",
      "cloud_cdn_distribution_http_version_standard"
    ]
  },
  {
    "id": "2.4.6",
    "title": "Ensure 'HTTPS Only' is set to 'On'",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services or Function App. 2. Click the name of a function app. 3. Under Deployment, click Deployment slots. 4. Click the name of a deployment slot. 5. Under Settings, click Configuration. 6. In the General settings tab, under Platform settings, next to HTTPS Only, select the radio button next to On. 7. Click Save. 8. Click Continue. 9. Repeat steps 1-8 for each function app and deployment slot requiring remediation. Remediate from Azure CLI For each deployment slot requiring remediation, run the following command to enable HTTPS Only: az resource update --resource-group <resource-group-name> --name <function- app-name>/slots/<deployment-slot-name> --resource-type \"Microsoft.Web/sites\" --set properties.httpsOnly=true Default Value: HTTPS Only is enabled by default. References: 1. https://learn.microsoft.com/en-us/azure/app-service/overview-security#https-and- certificates 2. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- data-protection#dp-3-encrypt-sensitive-data-in-transit 3. https://techcommunity.microsoft.com/t5/azure-paas-blog/enable-https-setting-on- azure-app-service-using-azure-policy/ba-p/3286603 4. https://learn.microsoft.com/en-us/azure/azure-functions/security-concepts 5. https://learn.microsoft.com/en-us/azure/azure-functions/functions-deployment- slots 6. https://learn.microsoft.com/en-us/cli/azure/functionapp 7. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "references": "1. https://learn.microsoft.com/en-us/azure/app-service/overview-security#https-and- certificates 2. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- data-protection#dp-3-encrypt-sensitive-data-in-transit 3. https://techcommunity.microsoft.com/t5/azure-paas-blog/enable-https-setting-on- azure-app-service-using-azure-policy/ba-p/3286603 4. https://learn.microsoft.com/en-us/azure/azure-functions/security-concepts 5. https://learn.microsoft.com/en-us/azure/azure-functions/functions-deployment- slots 6. https://learn.microsoft.com/en-us/cli/azure/functionapp 7. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls: Controls Version Control IG 1 IG 2 IG 3 v8 3.10 Encrypt Sensitive Data in Transit Encrypt sensitive data in transit. Example implementations can include: Transport Layer Security (TLS) and Open Secure Shell (OpenSSH). ● ● v7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.  ● ●",
    "function_names": [
      "cloud_cdn_distribution_https_only_enabled",
      "cloud_cdn_distribution_https_only_enabled_all_regions",
      "cloud_cdn_distribution_https_only_enabled_min_tls_1_2",
      "cloud_cdn_distribution_https_only_enabled_over_90d",
      "cloud_cdn_distribution_https_only_enabled_v2"
    ]
  },
  {
    "id": "2.4.7",
    "title": "Ensure 'Minimum Inbound TLS Version' is set to '1.2' or higher",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services or Function App. 2. Click the name of a function app. 3. Under Deployment, click Deployment slots. 4. Click the name of a deployment slot. 5. Under Settings, click Configuration. 6. In the General settings pane, under Platform settings, click the drop-down next to Minimum Inbound TLS Version and select 1.2 or higher. 7. Click Save. 8. Click Continue. 9. Repeat steps 1-8 for each function app and deployment slot requiring remediation. Remediate from Azure CLI For each deployment slot requiring remediation, run the following command to update the TLS version: az resource update --name web --resource-group <resource-group-name> -- namespace Microsoft.Web --resource-type config --parent sites/<function-app- name>/slots/<deployment-slot-name> --set properties.minTlsVersion=<1.2|1.3> Default Value: By default, TLS version is set to 1.2. References: 1. https://learn.microsoft.com/en-us/azure/app-service/configure-ssl-bindings#how- can-i-change-the-minimum-tls-versions-for-the-app 2. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-data- protection#dp-3-encrypt-sensitive-data-in-transit 3. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-network- security#ns-8-detect-and-disable-insecure-services-and-protocols 4. https://learn.microsoft.com/en-us/cli/azure/functionapp 5. https://learn.microsoft.com/en-us/cli/azure/resource 6. https://csrc.nist.gov/news/2019/nist-publishes-sp-800-52-revision-2 CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "cloud_cdn_distribution_min_tls_version",
      "cloud_cdn_distribution_min_tls_1_2",
      "cloud_cdn_distribution_tls_version_compliance",
      "cloud_cdn_distribution_tls_1_2_or_higher",
      "cloud_cdn_distribution_inbound_tls_1_2",
      "cloud_cdn_distribution_inbound_tls_version",
      "cloud_cdn_distribution_tls_min_version",
      "cloud_cdn_distribution_tls_version_min_1_2"
    ]
  },
  {
    "id": "2.4.8",
    "title": "Ensure end-to-end TLS encryption is enabled",
    "assessment": "Automated",
    "remediation": "Remediate from Azure CLI For each deployment slot requiring remediation, run the following command to enable end-to-end TLS encryption: az resource update --resource-group <resource-group-name> --name <function- app-name>/slots/<deployment-slot-name> --resource-type \"Microsoft.Web/sites\" --set properties.endToEndEncryptionEnabled=true Default Value: By default, end-to-end TLS encryption is disabled. References: 1. https://learn.microsoft.com/en-us/azure/app-service/overview-tls#end-to-end-tls- encryption 2. https://learn.microsoft.com/en-us/cli/azure/functionapp 3. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "impact": "Enabling end-to-end TLS encryption may introduce minimal latency and require additional configuration of certificates and HTTPS settings to ensure compatibility. Audit: Audit from Azure CLI Run the following command to list function apps: az functionapp list For each function app, run the following command to list deployment slots: az functionapp deployment slot list --resource-group <resource-group-name> -- name <function-app-name> For each deployment slot, ensure that endToEndEncryptionEnabled is set to true. Audit from Azure Policy If referencing a digital copy of this Benchmark, clicking a Policy ID will open a link to the associated Policy definition in Azure. If referencing a printed copy, you can search Policy IDs from this URL: https://portal.azure.com/#view/Microsoft_Azure_Policy/PolicyMenuBlade/~/Definitions • Policy ID: cbe0e5eb-fea9-491d-ab20-a62cf049c5ae - Name: 'Function app slots should enable end to end encryption'",
    "function_names": [
      "cloud_cdn_distribution_https_redirect_enabled",
      "cloud_cdn_distribution_tls_1_2_enabled",
      "cloud_cdn_distribution_end_to_end_encryption_enabled",
      "cloud_cdn_distribution_ssl_certificate_valid",
      "cloud_cdn_distribution_min_tls_1_2",
      "cloud_cdn_distribution_secure_cipher_suites",
      "cloud_cdn_distribution_tls_termination_disabled",
      "cloud_cdn_distribution_origin_ssl_verified",
      "cloud_cdn_distribution_encryption_in_transit_enabled",
      "cloud_cdn_distribution_tls_protocol_compliance"
    ]
  },
  {
    "id": "2.4.9",
    "title": "Ensure 'Remote debugging' is set to 'Off'",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services or Function App. 2. Click the name of a function app. 3. Under Deployment, click Deployment slots. 4. Click the name of a deployment slot. 5. Under Settings, click Configuration. 6. In the General settings pane, under Debugging, set Remote debugging to Off. 7. Click Save. 8. Click Continue. 9. Repeat steps 1-8 for each function app and deployment slot requiring remediation. Remediate from Azure CLI For each deployment slot requiring remediation, run the following command to disable remote debugging: az resource update --name web --resource-group <resource-group-name> -- namespace Microsoft.Web --resource-type config --parent sites/<function-app- name>/slots/<deployment-slot-name> --set properties.remoteDebuggingEnabled=false Default Value: By default, remote debugging is set to off. References: 1. https://learn.microsoft.com/en-us/visualstudio/debugger/remote-debugging- azure-app-service 2. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-posture- vulnerability-management#pv-2-audit-and-enforce-secure-configurations 3. https://learn.microsoft.com/en-us/cli/azure/functionapp 4. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "compute_instance_remote_debugging_disabled",
      "compute_vm_remote_debugging_off",
      "compute_instance_debugging_disabled",
      "compute_vm_debugging_off",
      "compute_instance_remote_access_disabled",
      "compute_vm_remote_access_off"
    ]
  },
  {
    "id": "2.4.10",
    "title": "Ensure incoming client certificates are enabled and required (if in use)",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services or Function App. 2. Click the name of a function app. 3. Under Deployment, click Deployment slots. 4. Click the name of a deployment slot. 5. Under Settings, click Configuration. 6. In the General settings pane, under Incoming client certificates, set Client certificate mode to Required. 7. Click Save. 8. Click Continue. 9. Repeat steps 1-8 for each function app and deployment slot requiring remediation. Remediate from Azure CLI For each deployment slot requiring remediation, run the following command to enable and require incoming client certificates: az resource update --resource-group <resource-group-name> --name <function- app-name>/slots/<deployment-slot-name> --resource-type \"Microsoft.Web/sites\" --set properties.clientCertEnabled=true --set properties.clientCertMode=Required Default Value: By default, incoming client certificates are disabled. References: 1. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- identity-management#im-4-authenticate-server-and-services 2. https://learn.microsoft.com/en-gb/azure/app-service/app-service-web-configure- tls-mutual-auth 3. https://learn.microsoft.com/en-us/cli/azure/functionapp 4. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "references": "1. https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3- identity-management#im-4-authenticate-server-and-services 2. https://learn.microsoft.com/en-gb/azure/app-service/app-service-web-configure- tls-mutual-auth 3. https://learn.microsoft.com/en-us/cli/azure/functionapp 4. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls: Controls Version Control IG 1 IG 2 IG 3 v8 3.3 Configure Data Access Control Lists Configure data access control lists based on a user’s need to know. Apply data access control lists, also known as access permissions, to local and remote file systems, databases, and applications. ● ● ● v7 14.6 Protect Information through Access Control Lists Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities. ● ● ●",
    "function_names": [
      "cloud_cdn_distribution_client_certificate_required",
      "cloud_cdn_distribution_client_certificate_enabled",
      "cloud_cdn_distribution_client_auth_required",
      "cloud_cdn_distribution_client_auth_enabled",
      "cloud_cdn_distribution_tls_client_auth_required",
      "cloud_cdn_distribution_tls_client_auth_enabled",
      "cloud_cdn_distribution_mtls_required",
      "cloud_cdn_distribution_mtls_enabled",
      "cloud_cdn_distribution_client_cert_validation_required",
      "cloud_cdn_distribution_client_cert_validation_enabled"
    ]
  },
  {
    "id": "2.4.11",
    "title": "Ensure managed identities are configured",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services or Function App. 2. Click the name of a function app. 3. Under Deployment, click Deployment slots. 4. Click the name of a deployment slot. 5. Under Settings, click Identity. 6. To add a system assigned managed identity: 1. In the System assigned pane, under Status, click On. 2. Click Save. 3. Click Yes. 7. To add a user assigned managed identity: 1. In the User assigned pane, click Add. 2. Use the filter box to search for a managed identity. 3. Select the identity. 4. Click Add. 8. Repeat steps 1-7 for each function app and deployment slot requiring remediation. Remediate from PowerShell For each deployment slot requiring remediation, run the following command to assign a system-assigned managed identity: Set-AzWebAppSlot -ResourceGroupName <resource-group-name> -Name <function- app-name> -Slot <deployment-slot-name> -AssignIdentity $true Default Value: Managed identities are disabled by default for function app deployment slots. References: 1. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-identity- management#im-1-use-centralized-identity-and-authentication-system 2. https://learn.microsoft.com/en-us/azure/app-service/overview-managed-identity 3. https://learn.microsoft.com/en-us/cli/azure/functionapp 4. https://learn.microsoft.com/en-us/powershell/module/az.websites/set- azwebappslot CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "compute_virtual_machine_managed_identity_enabled",
      "compute_virtual_machine_managed_identity_assigned",
      "compute_virtual_machine_system_assigned_identity_enabled",
      "compute_virtual_machine_user_assigned_identity_enabled",
      "compute_virtual_machine_identity_credentials_rotated",
      "compute_virtual_machine_identity_permissions_restricted",
      "compute_virtual_machine_identity_token_refresh_enabled",
      "compute_virtual_machine_identity_audit_logging_enabled"
    ]
  },
  {
    "id": "2.4.12",
    "title": "Ensure public network access is disabled",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services or Function App. 2. Click the name of a function app. 3. Under Deployment, click Deployment slots. 4. Click the name of a deployment slot. 5. Under Settings, click Networking. 6. Under Inbound traffic configuration, click the text next to Public network access. 7. Select the radio button next to Disabled. 8. Click Save. 9. Check the box to confirm the change. 10. Click Continue. 11. Repeat steps 1-10 for each function app and deployment slot requiring remediation. Remediate from Azure CLI For each deployment slot requiring remediation, run the following command to disable public network access: az resource update --resource-group <resource-group-name> --name <function- app-name>/slots/<deployment-slot-name> --resource-type \"Microsoft.Web/sites\" --set properties.publicNetworkAccess=Disabled Default Value: By default, public network access is enabled. References: 1. https://learn.microsoft.com/en-us/azure/app-service/networking-features 2. https://learn.microsoft.com/en-us/azure/azure-functions/functions-deployment- slots 3. https://learn.microsoft.com/en-us/cli/azure/functionapp 4. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "storage_account_public_access_disabled",
      "storage_container_public_access_disabled",
      "database_public_access_disabled",
      "compute_instance_public_access_disabled",
      "load_balancer_public_access_disabled",
      "cloud_sql_public_access_disabled",
      "cloud_storage_public_access_disabled",
      "cloud_cdn_public_access_disabled",
      "cloud_function_public_access_disabled",
      "cloud_run_public_access_disabled"
    ]
  },
  {
    "id": "2.4.13",
    "title": "Ensure deployment slot is integrated with a virtual network",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services or Function App. 2. Click the name of a function app. 3. Under Deployment, click Deployment slots. 4. Click the name of a deployment slot. 5. Under Settings, click Networking. 6. Under Outbound traffic configuration, next to Virtual network integration, click Not configured. 7. Click Add virtual network integration. 8. Select an existing App Service Plan connection, or select New connection and select a subscription, virtual network, and subnet. 9. Click Connect. 10. Repeat steps 1-9 for each function app and deployment slot requiring remediation. Default Value: By default, virtual network integration is not configured. References: 1. https://learn.microsoft.com/en-us/azure/azure-functions/functions-networking- options 2. https://learn.microsoft.com/en-us/azure/app-service/overview-vnet-integration 3. https://learn.microsoft.com/en-us/azure/app-service/configure-vnet-integration- enable 4. https://learn.microsoft.com/en-us/cli/azure/functionapp CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "app_service_slot_vnet_integrated",
      "app_service_slot_vnet_connected",
      "app_service_slot_network_isolated",
      "app_service_slot_private_network_enabled",
      "app_service_slot_vnet_peering_enabled"
    ]
  },
  {
    "id": "2.4.14",
    "title": "Ensure configuration is routed through the virtual network integration",
    "assessment": "Automated",
    "remediation": "Remediate from Azure CLI For each deployment slot requiring remediation, run the following command to route container image pulls and content sharing through the virtual network integration: az resource update --resource-group <resource-group-name> --name <function- app-name>/slots/<deployment-slot-name> --resource-type \"Microsoft.Web/sites\" --set properties.vnetImagePullEnabled=true --set properties.vnetContentShareEnabled=true Default Value: By default, configuration traffic goes directly over the public route. References: 1. https://learn.microsoft.com/en-us/azure/app-service/overview-vnet- integration#routes 2. https://learn.microsoft.com/en-us/azure/app-service/configure-vnet-integration- routing#configure-configuration-routing 3. https://learn.microsoft.com/en-us/cli/azure/functionapp 4. https://learn.microsoft.com/en-us/cli/azure/resource Additional Information: In addition to configuring the routing for content sharing, you must also ensure that any firewall or Network Security Group configured on traffic from the subnet allow traffic to port 443 and 445. CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "app_service_app_vnet_integration_enabled",
      "app_service_app_vnet_routing_enabled",
      "app_service_app_private_network_access_enabled",
      "app_service_app_public_access_disabled",
      "app_service_app_network_isolation_enabled",
      "app_service_app_vnet_integration_required",
      "app_service_app_private_endpoint_enabled",
      "app_service_app_vnet_peering_enabled",
      "app_service_app_vnet_traffic_routing_enabled",
      "app_service_app_vnet_integration_configured"
    ]
  },
  {
    "id": "2.4.15",
    "title": "Ensure all traffic is routed through the virtual network",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Services or Function App. 2. Click the name of a function app. 3. Under Deployment, click Deployment slots. 4. Click the name of a deployment slot. 5. Under Settings, click Networking. 6. Under Outbound traffic configuration, next to Virtual network integration, click the virtual network and subnet name. 7. Under Application routing, check the box next to Outbound internet traffic. 8. Click Apply. 9. Repeat steps 1-8 for each function app and deployment slot requiring remediation. Remediate from Azure CLI For each deployment slot requiring remediation, run the following command to route all traffic through the virtual network: az resource update --resource-group <resource-group-name> --name <function- app-name>/slots/<deployment-slot-name> --resource-type \"Microsoft.Web/sites\" --set properties.vnetRouteAllEnabled=true Default Value: For deployment slots integrated with a virtual network, all traffic is routed through the virtual network by default. References: 1. https://learn.microsoft.com/en-us/azure/app-service/configure-vnet-integration- routing#configure-application-routing 2. https://learn.microsoft.com/en-us/azure/azure-functions/functions-app- settings#vnetrouteallenabled 3. https://learn.microsoft.com/en-us/cli/azure/functionapp 4. https://learn.microsoft.com/en-us/cli/azure/resource CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "compute_virtual_machine_network_traffic_routed",
      "compute_virtual_machine_network_traffic_restricted",
      "compute_virtual_machine_vnet_routing_enabled",
      "compute_virtual_machine_public_ip_disabled",
      "compute_virtual_machine_private_network_only",
      "network_virtual_network_traffic_routed",
      "network_virtual_network_private_endpoint_enabled",
      "network_virtual_network_public_access_disabled",
      "network_virtual_network_subnet_traffic_routed",
      "network_virtual_network_nsg_traffic_restricted"
    ]
  },
  {
    "id": "2.4.16",
    "title": "Ensure cross-origin resource sharing does not allow all origins",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Service or Function App. 2. Click the name of a function app. 3. Under Deployment, click Deployment slots. 4. Click the name of deployment slot. 5. Under API, click CORS. 6. Under Allowed Origins, delete the entry that equals *. 7. Specify the origins that should be allowed to make cross-origin calls. 8. Click Save. 9. Repeat steps 1-8 for each function app and deployment slot requiring remediation. Remediate from Azure CLI For each deployment slot requiring remediation, run the following command to update the allowed origins array to contain only the origins that should be allowed: az resource update --name web --resource-group <resource-group-name> -- namespace Microsoft.Web --resource-type config --parent sites/<function-app- name>/slots/<deployment-slot-name> --set properties.cors.allowedOrigins=\"['<allowed-origin>']\" Default Value: By default, Allowed Origins is set to https://portal.azure.com. References: 1. https://learn.microsoft.com/en-gb/azure/app-service/app-service-web-tutorial- rest-api 2. https://learn.microsoft.com/en-us/cli/azure/functionapp 3. https://learn.microsoft.com/en-us/cli/azure/resource 4. https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Headers_Cheat_Sheet.ht ml 5. https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/CORS 6. https://cheatsheetseries.owasp.org/cheatsheets/Cross- Site_Request_Forgery_Prevention_Cheat_Sheet.html CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "cloud_cdn_distribution_cors_restricted",
      "cloud_cdn_distribution_origin_whitelisted",
      "cloud_cdn_distribution_cors_no_wildcard",
      "cloud_cdn_distribution_cors_secure_origins",
      "cloud_cdn_distribution_cors_explicit_origins",
      "cloud_cdn_distribution_cors_no_all_origins",
      "cloud_cdn_distribution_cors_origin_restricted",
      "cloud_cdn_distribution_cors_specific_origins"
    ]
  },
  {
    "id": "2.5",
    "title": "Ensure Azure Key Vaults are Used to Store Secrets",
    "assessment": "Manual",
    "remediation": "Remediation has 2 steps 1. Setup the Key Vault 2. Setup the App Service to use the Key Vault Step 1: Set up the Key Vault Remediate from Azure CLI az keyvault create --name \"<name>\" --resource-group \"<myResourceGroup>\" -- location myLocation Remediate from PowerShell New-AzKeyvault -name <name> -ResourceGroupName <myResourceGroup> -Location <myLocation> Step 2: Set up the App Service to use the Key Vault Sample JSON Template for App Service Configuration: [continues on next 3 pages] { //... \"resources\": [ { \"type\": \"Microsoft.Storage/storageAccounts\", \"name\": \"[variables('storageAccountName')]\", //... }, { \"type\": \"Microsoft.Insights/components\", \"name\": \"[variables('appInsightsName')]\", //... }, { \"type\": \"Microsoft.Web/sites\", \"name\": \"[variables('functionAppName')]\", \"identity\": { \"type\": \"SystemAssigned\" }, //... \"resources\": [ { \"type\": \"config\", \"name\": \"appsettings\", //... \"dependsOn\": [ \"[resourceId('Microsoft.Web/sites', variables('functionAppName'))]\", \"[resourceId('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]\", \"[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('storageConnectionStringName'))]\", \"[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('appInsightsKeyName'))]\" ], \"properties\": { \"AzureWebJobsStorage\": \"[concat('@Microsoft.KeyVault(SecretUri=', reference(variables('storageConnectionStringResourceId')).secretUriWithVersio n, ')')]\", \"WEBSITE_CONTENTAZUREFILECONNECTIONSTRING\": \"[concat('@Microsoft.KeyVault(SecretUri=', reference(variables('storageConnectionStringResourceId')).secretUriWithVersio n, ')')]\", \"APPINSIGHTS_INSTRUMENTATIONKEY\": \"[concat('@Microsoft.KeyVault(SecretUri=', reference(variables('appInsightsKeyResourceId')).secretUriWithVersion, ')')]\", \"WEBSITE_ENABLE_SYNC_UPDATE_SITE\": \"true\" //... } }, { \"type\": \"sourcecontrols\", \"name\": \"web\", //... \"dependsOn\": [ \"[resourceId('Microsoft.Web/sites', variables('functionAppName'))]\", \"[resourceId('Microsoft.Web/sites/config', variables('functionAppName'), 'appsettings')]\" ], } ] }, { \"type\": \"Microsoft.KeyVault/vaults\", \"name\": \"[variables('keyVaultName')]\", //... \"dependsOn\": [ \"[resourceId('Microsoft.Web/sites', variables('functionAppName'))]\" ], \"properties\": { //... \"accessPolicies\": [ { \"tenantId\": \"[reference(concat('Microsoft.Web/sites/',  variables('functionAppName'), '/providers/Microsoft.ManagedIdentity/Identities/default'), '2015-08-31- PREVIEW').tenantId]\", \"objectId\": \"[reference(concat('Microsoft.Web/sites/',  variables('functionAppName'), '/providers/Microsoft.ManagedIdentity/Identities/default'), '2015-08-31- PREVIEW').principalId]\", \"permissions\": { \"secrets\": [ \"get\" ] } } ] }, \"resources\": [ { \"type\": \"secrets\", \"name\": \"[variables('storageConnectionStringName')]\", //... \"dependsOn\": [ \"[resourceId('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]\", \"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]\" ], \"properties\": { \"value\": \"[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountResourceId'),'2015-05-01-preview').key1)]\" } }, { \"type\": \"secrets\", \"name\": \"[variables('appInsightsKeyName')]\", //... \"dependsOn\": [ \"[resourceId('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]\", \"[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]\" ], \"properties\": { \"value\": \"[reference(resourceId('microsoft.insights/components/', variables('appInsightsName')), '2015-05-01').InstrumentationKey]\" } } ] } ] } Default Value: By default, no Azure Key Vaults are created. References: 1. https://docs.microsoft.com/en-us/azure/app-service/app-service-key-vault- references 2. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-identity- management#im-3-manage-application-identities-securely-and-automatically 3. https://docs.microsoft.com/en-us/cli/azure/keyvault?view=azure-cli-latest 4. https://docs.microsoft.com/en-us/cli/azure/keyvault?view=azure-cli-latest CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "key_vault_secret_storage_enabled",
      "key_vault_secret_rotation_enabled",
      "key_vault_secret_access_restricted",
      "key_vault_secret_encryption_enabled",
      "key_vault_secret_audit_logging_enabled",
      "key_vault_secret_versioning_enabled",
      "key_vault_secret_soft_delete_enabled",
      "key_vault_secret_purge_protection_enabled",
      "key_vault_secret_network_restrictions_enabled",
      "key_vault_secret_private_endpoint_enabled"
    ]
  },
  {
    "id": "2.6",
    "title": "Ensure App Service Environment is deployed with an internal load balancer",
    "assessment": "Automated",
    "remediation": "It is not possible to change the virtual IP configuration of a deployed App Service Environment. When deploying an App Service Environment, next to Virtual IP, select Internal: The endpoint is an internal load balancer (ILB ASE). Default Value: When deploying an App Service Environment, Internal: The endpoint is an internal load balancer (ILB ASE) is the default selected option for Virtual IP. References: 1. https://learn.microsoft.com/en-us/azure/app-service/environment/creation CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "app_service_environment_load_balancer_internal",
      "app_service_environment_internal_load_balancer_enabled",
      "app_service_environment_load_balancer_private",
      "app_service_environment_private_load_balancer_required",
      "app_service_environment_load_balancer_internal_only"
    ]
  },
  {
    "id": "2.7",
    "title": "Ensure App Service Environment is provisioned with v3 or higher",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal When creating an App Service Environment from the portal, after clicking + Add, ensure that Create App Service Environment v3 is displayed. Default Value: The default version is currently App Service Environment v3. References: 1. https://learn.microsoft.com/en-us/azure/app-service/environment/overview 2. https://azure.microsoft.com/en-gb/updates?id=App-Service-Environment-v1v2- Retirement-Update-1 3. https://learn.microsoft.com/en-us/azure/app-service/environment/auto-migration 4. https://learn.microsoft.com/en-us/cli/azure/appservice/ase Additional Information: App Service Environment v1 and v2 were retired as of 31 August, 2024. As of September 1, 2024, Azure auto-migrated any remaining App Service Environment v1 and v2 on a best-effort basis. CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "app_service_environment_min_version_v3",
      "app_service_environment_version_compliance",
      "app_service_environment_v3_or_higher",
      "app_service_environment_version_up_to_date",
      "app_service_environment_supported_version"
    ]
  },
  {
    "id": "2.8",
    "title": "Ensure App Service Environment has internal encryption enabled",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Service Environments. 2. Click the name of an App Service Environment. 3. Under Settings, click Configuration. 4. Next to Internal encryption, click the radio button next to On. 5. Click Save. 6. Click Continue. 7. Repeat steps 1-6 for each App Service Environment requiring remediation. Default Value: Internal encryption is disabled by default. References: 1. https://learn.microsoft.com/en-us/azure/app-service/environment/app-service- app-service-environment-custom-settings 2. https://learn.microsoft.com/en-us/cli/azure/appservice/ase CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "app_service_environment_internal_encryption_enabled",
      "app_service_environment_encryption_enabled",
      "compute_app_service_internal_encryption_enabled",
      "compute_app_service_encryption_enabled",
      "app_service_internal_encryption_enabled"
    ]
  },
  {
    "id": "2.9",
    "title": "Ensure App Service Environment has TLS 1.0 and 1.1 disabled",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to App Service Environments. 2. Click the name of an App Service Environment. 3. Under Settings, click Configuration. 4. Next to Allow TLS 1.0 and 1.1, click the radio button next to Off. 5. Click Save. 6. Click Continue. 7. Repeat steps 1-6 for each App Service Environment requiring remediation. Default Value: TLS 1.0 and 1.1 are allowed by default. References: 1. https://learn.microsoft.com/en-us/azure/app-service/environment/app-service- app-service-environment-custom-settings 2. https://learn.microsoft.com/en-us/cli/azure/appservice/ase CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "app_service_environment_tls_1_0_disabled",
      "app_service_environment_tls_1_1_disabled",
      "app_service_environment_tls_min_version_1_2",
      "app_service_environment_insecure_tls_versions_disabled",
      "app_service_environment_tls_secure_protocol_enabled"
    ]
  },
  {
    "id": "2.10",
    "title": "Ensure App Service Environment has TLS cipher suite ordering configured",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Go to Resource Explorer. 2. Locate an App Service Environment from the left pane. 3. In the right pane, click Read/Write to allow editing. 4. Click Edit to edit the resource. 5. Update the clusterSettings attribute to include: { \"name\": \"FrontEndSSLCipherSuiteOrder\", \"value\": \"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_2 56_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\" } 6. Click PUT to commit the change. 7. Repeat steps 1-7 for each App Service Environment requiring remediation. Default Value: TLS cipher suite ordering is not configured by default. References: 1. https://learn.microsoft.com/en-us/azure/app-service/environment/app-service- app-service-environment-custom-settings 2. https://learn.microsoft.com/en-us/cli/azure/appservice/ase CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "references": "1. https://learn.microsoft.com/en-us/azure/app-service/environment/app-service- app-service-environment-custom-settings 2. https://learn.microsoft.com/en-us/cli/azure/appservice/ase CIS Controls: Controls Version Control IG 1 IG 2 IG 3 v8 3.10 Encrypt Sensitive Data in Transit Encrypt sensitive data in transit. Example implementations can include: Transport Layer Security (TLS) and Open Secure Shell (OpenSSH). ● ● v7 14.4 Encrypt All Sensitive Information in Transit Encrypt all sensitive information in transit.  ● ●  3 Azure Container Instances This section covers security best practice recommendations for Azure Container Instances. Help us improve this Benchmark! If you notice a needed correction, want to provide feedback, or wish to contribute security best practice guidance please join our community and create a ticket, propose a change, or start a discussion so we can improve this guidance! The CIS Microsoft Azure Community is here: https://workbench.cisecurity.org/communities/72. Resources for Azure Container Instances Azure Product Page : • https://azure.microsoft.com/en-us/products/container-instances/ Azure Container Instances service overview : • https://learn.microsoft.com/en-us/azure/container-instances/container-instances- overview Microsoft Cloud Security Baseline for Azure Container Instances : • https://learn.microsoft.com/en-us/security/benchmark/azure/baselines/container- instances-security-baseline"
  },
  {
    "id": "3.1",
    "title": "Ensure Private Virtual Networks are used for Container Instances",
    "assessment": "Manual",
    "remediation": "Container Instances which have been created with Public IP addresses will need to be re-created with private IP addresses. During the initial creation of a Container Instance, ensure that the Networking Type of \"Private\" is selected prior to creating the Container Instance. Default Value: By default, the \"Public\" Networking type is selected when creating a Container Instance from Azure Portal. References: 1. https://learn.microsoft.com/en-us/security/benchmark/azure/baselines/container- instances-security-baseline?toc=%2Fazure%2Fcontainer- instances%2FTOC.json 2. https://learn.microsoft.com/en-us/azure/container-instances/container-instances- vnet CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "compute_container_instance_private_network_enabled",
      "compute_container_instance_public_ip_disabled",
      "compute_container_instance_vnet_integration_required",
      "compute_container_instance_non_public_network_only",
      "compute_container_instance_vnet_isolation_enabled"
    ]
  },
  {
    "id": "3.2",
    "title": "Ensure a Managed Identity is used for interactions with other Azure services",
    "assessment": "Manual",
    "rationale": "Identities or credentials stored within a Container Instance or the code running on the Container Instance introduce a risk of compromise. If that identity or credential is stored in plain text, the risk is further amplified. Impact: To ensure that a Managed Identity is able to access a destination resource, the permissions and/or role assigned to that Managed Identity will need to be evaluated. Audit: Audit from Azure Portal For each Container Instance that uses an identity or credential: 1. Open the Container Instances blade. 2. Select a named container instance. 3. Click on Identity under the Settings section. 4. Review the System Assigned and User Assigned tabs for assigned identities: o If using System Assigned identities, ensure status is set to On. o If using User Assigned identities, ensure only necessary user identities are assigned. Audit from Azure CLI Run the following command: az container list For each Container Instance that uses an identity or credential, ensure \"identity\": is not \"null\" Remediation: Remediate from Azure Portal For each Container Instance that requires an identity or credential: 1. Open the Container Instances blade. 2. Select a named container instance. 3. Click on Identity under the Settings section, then: o For a System Assigned identity, click the System Assigned tab then set status to On. o For User Assigned identities, click the User Assigned tab then click the Add button. Search for the required user managed identity, then click the Add button at the bottom of the window. Remediate from Azure CLI To assign Managed Identities to Container Instances by CLI, the Managed Identity will need to be specified at the time of creation. If a Container Instance requires a Managed Identity, but does not already have one, it will need to be re-created with the Managed Identity specified. System Assigned Identity: az container create -g <MyResourceGroup> --name <MyContainerInstanceName> -- image <MyImage> --assign-identity [system] User Assigned Identities: az container create -g <MyResourceGroup> --name <MyContainerInstanceName> -- image <MyImage> --assign-identity </subscriptions/MySubscriptionID/resourcegroups/MyResourceGroup/providers/Mic rosoft.ManagedIdentity/userAssignedIdentities/MyUserAssignedIdentity> BOTH System and User Assigned Identities: az container create -g <MyResourceGroup> --name <MyContainerInstanceName> -- image <MyImage> --assign-identity [system] </subscriptions/MySubscriptionID/resourcegroups/MyResourceGroup/providers/Mic rosoft.ManagedIdentity/userAssignedIdentities/MyUserAssignedIdentity> Default Value: By default, Managed Identities are not configured on Container Instances. References: 1. https://learn.microsoft.com/en-us/security/benchmark/azure/baselines/container- instances-security-baseline?toc=%2Fazure%2Fcontainer- instances%2FTOC.json#identity-management 2. https://learn.microsoft.com/en-us/azure/container-instances/using-azure- container-registry-mi CIS Controls: Controls Version Control IG 1 IG 2 IG 3 v8 6.7 Centralize Access Control Centralize access control for all enterprise assets through a directory service or SSO provider, where supported. ● ● v8 6.8 Define and Maintain Role-Based Access Control Define and maintain role-based access control, through determining and documenting the access rights necessary for each role within the enterprise to successfully carry out its assigned duties. Perform access control reviews of enterprise assets to validate that all privileges are authorized, on a recurring schedule at a minimum annually, or more frequently. ●",
    "description": "",
    "audit": "",
    "remediation": null,
    "references": "1. https://learn.microsoft.com/en-us/security/benchmark/azure/baselines/container- instances-security-baseline?toc=%2Fazure%2Fcontainer- instances%2FTOC.json#identity-management 2. https://learn.microsoft.com/en-us/azure/container-instances/using-azure- container-registry-mi CIS Controls: Controls Version Control IG 1 IG 2 IG 3 v8 6.7 Centralize Access Control Centralize access control for all enterprise assets through a directory service or SSO provider, where supported. ● ● v8 6.8 Define and Maintain Role-Based Access Control Define and maintain role-based access control, through determining and documenting the access rights necessary for each role within the enterprise to successfully carry out its assigned duties. Perform access control reviews of enterprise assets to validate that all privileges are authorized, on a recurring schedule at a minimum annually, or more frequently. ●",
    "function_names": [
      "compute_virtual_machine_managed_identity_enabled",
      "compute_virtual_machine_identity_user_assigned",
      "compute_virtual_machine_system_assigned_identity",
      "compute_virtual_machine_no_service_principal",
      "compute_virtual_machine_identity_auth_enabled",
      "compute_virtual_machine_identity_credentials_rotated",
      "compute_virtual_machine_identity_permissions_restricted",
      "compute_virtual_machine_identity_no_static_credentials"
    ]
  },
  {
    "id": "3.3",
    "title": "Ensure the principle of least privilege is used when assigning roles to a Managed Identity",
    "assessment": "Manual",
    "remediation": "NOTE : Remediation will vary based on the needs of your environment. Before remediating, determine the scope and requirements of the Role Assignments necessary for your environment: https://learn.microsoft.com/en-us/azure/active- directory/roles/permissions-reference Remediate from Azure Portal For each Container Instance that uses an identity or credential: 1. Open the Container Instances blade. 2. Select a named container instance. 3. Click on Identity under the Settings section. 4. Review the System Assigned and User Assigned tabs for assigned identities. For a System Assigned identity, click on Azure role assignments and Add or Remove assigned roles for appropriate restriction. For User assigned identities, click on the name of each User assigned managed identity, then click on Azure role assignments in the left panel to Add or Remove assigned roles for appropriate restriction. References: 1. https://learn.microsoft.com/en-us/azure/container-instances/container-instances- managed-identity 2. https://learn.microsoft.com/en-us/azure/role-based-access-control/role- assignments-portal 3. https://learn.microsoft.com/en-us/azure/role-based-access-control/role- assignments-portal-managed-identity 4. https://learn.microsoft.com/en-us/azure/active-directory/roles/permissions- reference CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "compute_managed_identity_least_privilege_roles",
      "compute_managed_identity_role_min_permissions",
      "compute_managed_identity_no_wildcard_permissions",
      "compute_managed_identity_no_admin_roles",
      "compute_managed_identity_role_scope_restricted",
      "compute_managed_identity_custom_role_used",
      "compute_managed_identity_no_unused_roles",
      "compute_managed_identity_role_permission_reviewed"
    ]
  },
  {
    "id": "4.1",
    "title": "Ensure SSL is configured for CycleCloud",
    "assessment": "Manual",
    "remediation": "From SSH 1. Establish a secure shell session with the Azure CycleCloud server. 2. Navigate to the CycleCloud installation directory. 3. Use a text editor (e.g. Vim, Nano, Emacs) to open the cycle_server.properties file. 4. Edit the following properties to reflect true: webServerEnableHttps=true webServerRedirectHttp=true  5. Save and exit from the text editor. 6. Restart the CycleCloud service to enable the new property definitions: /opt/cycle_server/cycle_server restart Default Value: By default, CycleCloud is configured to use Java IO HTTPS with a Let's Encrypt SSL certificate, or self-signed certificate. References: 1. https://learn.microsoft.com/en-us/azure/cyclecloud/how-to/ssl- configuration?view=cyclecloud-8 2. https://learn.microsoft.com/en-us/azure/cyclecloud/concepts/security-best- practices?view=cyclecloud-8 CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "cyclecloud_ssl_configured",
      "cyclecloud_ssl_certificate_valid",
      "cyclecloud_ssl_tls_min_version_enforced",
      "cyclecloud_ssl_strong_ciphers_enabled",
      "cyclecloud_ssl_weak_protocols_disabled",
      "cyclecloud_ssl_certificate_expiry_monitored",
      "cyclecloud_ssl_endpoint_https_only",
      "cyclecloud_ssl_perfect_forward_secrecy_enabled"
    ]
  },
  {
    "id": "15.1",
    "title": "Ensure Batch account is set to use customer-managed keys to encrypt data",
    "assessment": "Manual",
    "remediation": "Remediate from Azure Portal 1. Login to Azure Portal using https://portal.azure.com 2. Navigate to Batch accounts For each Batch account 1. Under the Settings section, click on Encryption 2. Select the Customer-managed key radio button 3. Use either Enter key URI or Select from key vault to select and set the encryption key. Remediate from Azure CLI # Link CMK to Batch account az batch account set \\ --resource-group <resource_group_name> \\ --name <batch_account_name> \\ --encryption-key-identifier https://<keyvault_name>.vault.azure.net/keys/<key_name>/<Version> Remediate from PowerShell Set-AzBatchAccount -ResourceGroupName <resource_group_name> -AccountName <batch_account_name> ` -KeyVaultReferenceId \"/subscriptions/<subscription_ID>/resourceGroups/<resource_group_name>/provid ers/Microsoft.KeyVault/vaults/<keyvault_name>\" ` -KeyVaultReferenceUrl \"https://<keyvault_name>.vault.azure.net/keys/<key_name>\" Default Value: Azure Batch accounts uses Microsoft-managed keys (service-managed encryption) for data at rest by default. References: 1. https://learn.microsoft.com/en-us/azure/batch/batch-customer-managed-key CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "batch_account_customer_managed_key_encryption_enabled",
      "batch_account_data_encryption_customer_key_required",
      "batch_account_encryption_customer_key_enforced",
      "batch_account_storage_encryption_customer_key_used",
      "batch_account_cmk_encryption_enabled"
    ]
  },
  {
    "id": "15.2",
    "title": "Ensure Batch pools disk encryption is set enabled",
    "assessment": "Automated",
    "remediation": "NOTE: Encrypted pools must be created as replacements for unencrypted pools. Please ensure that necessary precautions are taken to backup and restore data from persistent disk pools. Remediate from Azure Portal 1. Navigate to Azure Batch accounts 2. Select your Batch account 3. Click Pools in the left menu 4. For each unencrypted pool, click Create new pool 5. Under Advanced settings, enable Disk encryption and select OS disk or All disks 6. Configure all other settings to match your existing pool 7. Click Create to deploy the encrypted pool 8. Resize the old unencrypted pool to 0 nodes after verifying the new pool is operational Repeat steps 4-8 for each unencrypted pool Remediate from Azure CLI 1. Get pool configuration config=$(az batch pool show --pool-id <pool-name> --query \"{vmSize:vmSize,image:virtualMachineConfiguration.imageReference,nodeCount:ta rgetDedicatedNodes}\") 2. Create encrypted replacement az batch pool create \\ --id \"<pool-name>-encrypted\" \\ --vm-size $(jq -r '.vmSize' <<< \"$config\") \\ --image-reference \"$(jq -r '.image.publisher + \":\" + .image.offer + \":\" + .image.sku + \":\" + .image.version' <<< \"$config\")\" \\ --node-count $(jq -r '.nodeCount' <<< \"$config\") \\ --disk-encryption-target OsDisk 3. Decommission old pool az batch pool resize --pool-id <pool-name> --target-dedicated-nodes 0 Remediate from PowerShell 1. Get pool configuration $pool = Get-AzBatchPool -Id \"<pool-name>\" -BatchContext $context 2. Create encrypted replacement $newConfig = New-Object Microsoft.Azure.Commands.Batch.Models.PSPoolConfiguration $newConfig.VirtualMachineConfiguration = $pool.VirtualMachineConfiguration.Clone() $newConfig.VirtualMachineConfiguration.DiskEncryptionConfiguration = New- Object Microsoft.Azure.Commands.Batch.Models.PSDiskEncryptionConfiguration $newConfig.VirtualMachineConfiguration.DiskEncryptionConfiguration.Targets = \"OsDisk\" New-AzBatchPool -Id \"<pool-name>-encrypted\" -PoolConfiguration $newConfig - BatchContext $context 3. Decommission old pool Set-AzBatchPool -Id \"<pool-name>\" -TargetDedicatedComputeNodes 0 - BatchContext $context Expected Output: Disk encryption Enabled Default Value: Disk encryption is disabled by default for new Azure Batch pools. References: 1. https://docs.microsoft.com/en-us/azure/batch/disk-encryption 2. https://docs.microsoft.com/en-us/cli/azure/batch/pool#az-batch-pool-create CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "batch_pool_disk_encryption_enabled",
      "batch_pool_disk_encryption_required",
      "batch_pool_storage_encryption_enabled",
      "batch_pool_managed_disk_encryption_enabled",
      "batch_pool_os_disk_encryption_enabled",
      "batch_pool_data_disk_encryption_enabled",
      "batch_pool_encryption_at_rest_enabled",
      "batch_pool_secure_disk_encryption_enabled"
    ]
  },
  {
    "id": "15.3",
    "title": "Ensure local authentication methods for accounts are disabled",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Login to Azure portal https://portal.azure.com 2. Navigate to Batch Accounts For each Batch Account shown: 1. Click to open the Batch Account name 2. Under the Settings section, click on Authentication modes 3. In the main window, click the Authentication Mode drop-down list 4. Check the box for Microsoft Entra ID (or other centralized IdP) 5. (If checked) Uncheck the box for Shared Key 6. (If checked) Uncheck the box for Task Authentication Token 7. Click Save Default Value: Local authentication methods are enabled by default. References: 1. https://learn.microsoft.com/en-us/azure/batch/security-best-practices#batch- account-authentication CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "references": "1. https://learn.microsoft.com/en-us/azure/batch/security-best-practices#batch- account-authentication CIS Controls: Controls Version Control IG 1 IG 2 IG 3 v8 5.6 Centralize Account Management Centralize account management through a directory or identity service.  ● ● v7 16.2 Configure Centralized Point of Authentication Configure access for all accounts through as few centralized points of authentication as possible, including network, security, and cloud systems. ● ●",
    "function_names": [
      "iam_account_local_auth_disabled",
      "iam_user_local_auth_disabled",
      "iam_role_local_auth_disabled",
      "iam_account_password_policy_disabled",
      "iam_user_password_policy_disabled",
      "iam_account_mfa_required",
      "iam_user_mfa_required",
      "iam_account_console_access_disabled",
      "iam_user_console_access_disabled",
      "iam_account_ssh_key_disabled"
    ]
  },
  {
    "id": "15.4",
    "title": "Ensure Private endpoints are considered for Batch accounts",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Navigate to your Batch account 2. Under the Settings drop down, click Networking 3. Click the Private access tab 4. Click + Private endpoint 5. Configure: • Virtual network and subnet • DNS integration (auto-approved recommended) • Target subresource: batchAccount Remediate from Azure CLI az network private-endpoint create \\ --name batch-pe \\ --resource-group <rg> \\ --vnet-name <vnet> \\ --subnet <subnet> \\ --private-connection-resource-id /subscriptions/<sub- id>/resourceGroups/<rg>/providers/Microsoft.Batch/batchAccounts/<account> \\ --group-id batchAccount \\ --connection-name batch-connection Default Value: Private endpoints are not configured by default. References: 1. https://docs.microsoft.com/en-us/azure/batch/private-connectivity CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "batch_account_private_endpoint_enabled",
      "batch_account_private_endpoint_required",
      "batch_account_private_endpoint_configured",
      "batch_account_private_endpoint_only",
      "batch_account_private_endpoint_enforced"
    ]
  },
  {
    "id": "15.5",
    "title": "Ensure public network access is disabled for Batch accounts",
    "assessment": "Automated",
    "remediation": "Remediation Procedure 1. Login to https://portal.azure.com 2. For each Batch Account, click on the Batch account name 3. Navigate to the Settings drop-down, then click Networking. 4. Under the Public access tab, ensure that Public Network Access is set to Disabled. 5. Click Save Repeat for each Batch account in scope. Remediate from Azure CLI az batch account update \\ --name <account-name> \\ --resource-group <rg-name> \\ --public-network-access Disabled Remediate from PowerShell Update-AzBatchAccount -Name <account-name> -ResourceGroupName <rg-name> - PublicNetworkAccess Disabled Default Value: Public network access is enabled by default for new Batch accounts. References: 1. https://learn.microsoft.com/en-us/security/benchmark/azure/baselines/batch- security-baseline#ns-4 2. https://learn.microsoft.com/en-us/azure/batch/private-connectivity CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "batch_account_public_network_access_disabled",
      "batch_account_network_access_restricted",
      "batch_account_public_access_blocked",
      "batch_account_private_network_only",
      "batch_account_public_endpoint_disabled"
    ]
  },
  {
    "id": "15.6",
    "title": "Ensure private DNS zones for private endpoints that connect to Batch accounts are configured.",
    "assessment": "Manual",
    "remediation": "NOTE: This instruction assumes a Private Endpoint already exists for the Batch Account, and that a Private DNS Zone has already been created. Remediate from Azure Portal 1. Login to Azure portal https://portal.azure.com 2. Navigate to Batch accounts in the Azure portal For each batch account perform the following: 1. Expand Settings then click on Networking 2. Click the Private access tab, [If no Private Endpoints exist, one must be created before proceeding. Instruction for configuring Private Endpoints on Batch Accounts can be found in the recommendation titled \"Ensure to Configure Batch accounts with private endpoints\" ] For each Private endpoint perform the following: 1. Click the name of the Private Endpoint 2. Expand Settings then click on DNS Configuration 3. Click the + Add Configuration button 4. Select each field appropriately (e.g. Private DNS zone \"privatelink.batch.azure.com\" - other zone names in additional information below) and enter a custom Configuration Name if desired 5. Click the Add button then allow a moment for deployment Refresh the DNS Configuration page, then scroll down and ensure an entry exists (e.g. \"privatelink.batch.azure.com\") under the Private DNS zone column in the Configuration entry table. Default Value: Azure DNS zones are not configured by default. References: 1. https://learn.microsoft.com/en-us/azure/private-link/private-endpoint-dns 2. https://learn.microsoft.com/en-us/azure/batch/private-connectivity 3. Commercial Zone Names: https://learn.microsoft.com/en-us/azure/private- link/private-endpoint-dns#compute 4. Government Zone Names: https://learn.microsoft.com/en-us/azure/private- link/private-endpoint-dns#compute-1 5. China Zone Names: https://learn.microsoft.com/en-us/azure/private-link/private- endpoint-dns#compute-2 Additional Information: Zone Names for resource type: Azure Batch (Microsoft.Batch/batchAccounts) Azure Commercial Cloud: 1. Subresource: batchAccount • Private DNS Zone name: privatelink.batch.azure.com • Public DNS zone forwarders: <regionName>.batch.azure.com 2. Subresource: nodeManagement • Private DNS Zone name: privatelink.batch.azure.com • Public DNS zone forwarders: <regionName>.service.batch.azure.com Azure Government Cloud: 1. Subresource: batchAccount • Private DNS Zone name: privatelink.batch.usgovcloudapi.net • Public DNS zone forwarders: <regionName>.batch.usgovcloudapi.net 2. Subresource: nodeManagement • Private DNS Zone name: privatelink.batch.usgovcloudapi.net • Public DNS zone forwarders: <regionName>.service.batch.usgovcloudapi.net Azure China Cloud: 1. Subresource: batchAccount • Private DNS Zone name: privatelink.batch.chinacloudapi.cn • Public DNS zone forwarders: <regionName>.batch.chinacloudapi.cn 2. Subresource: nodeManagement • Private DNS Zone name: privatelink.batch.chinacloudapi.cn • Public DNS zone forwarders: <regionName>.service.batch.chinacloudapi.cn CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "batch_account_private_endpoint_private_dns_zone_configured",
      "batch_account_private_endpoint_dns_zone_private",
      "private_endpoint_batch_account_private_dns_zone_enabled",
      "batch_private_endpoint_dns_zone_private",
      "batch_account_private_dns_zone_for_endpoint_configured"
    ]
  },
  {
    "id": "15.7",
    "title": "Ensure Diagnostics settings logs for Batch accounts are enabled",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal 1. Login to Azure portal https://portal.azure.com 2. Go to Batch Accounts For each Batch account perform the following: 1. Expand the Monitoring section and click on Diagnostic settings 2. Click +Add diagnostic setting 3. Enter an appropriate name, then ensure that the following categories are checked: o ServiceLog (Tracks Batch service operations) o AuditLog (Records management-plane activities) 4. Configure to send to a valid destination based on what is used within your tenant: o Log Analytics workspace (Recommended for querying) o Storage account (For long-term retention) o Event Hub (For real-time streaming) 5. Click Save Remediate from Azure CLI az monitor diagnostic-settings create \\ --name \"<batch_logs_name>\" \\ --resource $(az batch account show --name <batch_account_name> --resource- group <resource_group_name> --query id -o tsv) \\ --logs '[{\"category\": \"AuditLog\", \"enabled\": true}, {\"category\": \"ServiceLog\", \"enabled\": true}]' \\ --workspace $(az monitor log-analytics workspace show --resource-group <resource_group_name> --name <workspace_name> --query id -o tsv) \\ Remediate from PowerShell $batchAccountId = (Get-AzBatchAccount -AccountName \"<batch_account_name>\" - ResourceGroupName \"<resource_group_name>\").Id New-AzDiagnosticSetting -Name \"BatchLogs\" -ResourceId $batchAccountId -Log @(@{Category=\"AuditLog\";Enabled=$true}, @{Category=\"ServiceLog\";Enabled=$true}) -WorkspaceId (Get- AzOperationalInsightsWorkspace -Name \"<workspace_name>\").ResourceId Default Value: Resource logs are not configured by default. References: 1. https://learn.microsoft.com/en-us/azure/batch/monitoring-overview#diagnostic- logs 2. https://learn.microsoft.com/en-us/azure/batch/batch-diagnostics#service-logs CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "batch_account_logging_enabled",
      "batch_account_diagnostics_enabled",
      "batch_account_logs_exported",
      "batch_account_diagnostics_logs_enabled",
      "batch_account_logging_to_storage_enabled",
      "batch_account_diagnostics_logs_exported",
      "batch_account_logging_to_analytics_enabled",
      "batch_account_diagnostics_logs_configured"
    ]
  },
  {
    "id": "20.1",
    "title": "Ensure Virtual Machines are utilizing Managed Disks",
    "assessment": "Automated",
    "rationale": "Managed disks are by default encrypted on the underlying hardware, so no additional encryption is required for basic protection. It is available if additional encryption is required. Managed disks are by design more resilient that storage accounts. For ARM-deployed Virtual Machines, Azure Adviser will at some point recommend moving VHDs to managed disks both from a security and cost management perspective. Impact: There are additional costs for managed disks based off of disk space allocated. When converting to managed disks, VMs will be powered off and back on. Audit: Audit from Azure Portal 1. Using the search feature, go to Virtual Machines 2. Click the Manage view dropdown, then select Edit columns 3. Add Uses managed disks to the selected columns 4. Select Save 5. Ensure all virtual machines listed are using managed disks Audit from PowerShell Get-AzVM | ForEach-Object {\"Name: \" + $_.Name;\"ManagedDisk Id: \" + $_.StorageProfile.OsDisk.ManagedDisk.Id;\"\"} Example output: Name: vm1 ManagedDisk Id: /disk1/id Name: vm2 ManagedDisk Id: /disk2/id If the 'ManagedDisk Id' field is empty the os disk for that vm is not managed. Audit from Azure Policy If referencing a digital copy of this Benchmark, clicking a Policy ID will open a link to the associated Policy definition in Azure. If referencing a printed copy, you can search Policy IDs from this URL: https://portal.azure.com/#view/Microsoft_Azure_Policy/PolicyMenuBlade/~/Definitions • Policy ID: 06a78e20-9358-41c9-923c-fb736d382a4d - Name: 'Audit VMs that do not use managed disks'",
    "remediation": "Remediate from Azure Portal 1. Using the search feature, go to Virtual Machines 2. Select the virtual machine you would like to convert 3. Select Disks in the menu for the VM 4. At the top select Migrate to managed disks 5. You may follow the prompts to convert the disk and finish by selecting Migrate to start the process NOTE VMs will be stopped and restarted after migration is complete. Remediate from PowerShell Stop-AzVM -ResourceGroupName $rgName -Name $vmName -Force ConvertTo-AzVMManagedDisk -ResourceGroupName $rgName -VMName $vmName Start-AzVM -ResourceGroupName $rgName -Name $vmName Default Value: Managed disks or are an option upon the creation of VMs. References: 1. https://docs.microsoft.com/en-us/azure/virtual-machines/windows/convert- unmanaged-to-managed-disks 2. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-data- protection#dp-4-enable-data-at-rest-encryption-by-default 3. https://docs.microsoft.com/en-us/azure/virtual-machines/faq-for-disks 4. https://azure.microsoft.com/en-us/pricing/details/managed-disks/ CIS Controls:",
    "description": "",
    "audit": "",
    "function_names": [
      "compute_virtual_machine_managed_disks_enabled",
      "compute_vm_managed_disks_required",
      "compute_disk_managed_type_enforced",
      "compute_vm_unmanaged_disks_disallowed",
      "compute_virtual_machine_ephemeral_disks_disabled"
    ]
  },
  {
    "id": "20.2",
    "title": "Ensure that 'OS and Data' disks are encrypted with Customer Managed Key (CMK)",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal Note: Disks must be detached from VMs to have encryption changed. 1. Go to Virtual machines 2. For each virtual machine, go to Settings 3. Click on Disks 4. Click the ellipsis (...), then click Detach to detach the disk from the VM 5. Now search for Disks and locate the unattached disk 6. Click the disk then select Encryption 7. Change your encryption type, then select your encryption set 8. Click Save 9. Go back to the VM and re-attach the disk Remediate from PowerShell $KVRGname = 'MyKeyVaultResourceGroup'; $VMRGName = 'MyVirtualMachineResourceGroup'; $vmName = 'MySecureVM'; $KeyVaultName = 'MySecureVault'; $KeyVault = Get-AzKeyVault -VaultName $KeyVaultName -ResourceGroupName $KVRGname; $diskEncryptionKeyVaultUrl = $KeyVault.VaultUri; $KeyVaultResourceId = $KeyVault.ResourceId; Set-AzVMDiskEncryptionExtension -ResourceGroupName $VMRGname -VMName $vmName -DiskEncryptionKeyVaultUrl $diskEncryptionKeyVaultUrl - DiskEncryptionKeyVaultId $KeyVaultResourceId; NOTE: During encryption it is likely that a reboot will be required. It may take up to 15 minutes to complete the process. For Linux machines you may need to set the -skipVmBackup parameter. Default Value: By default, Azure disks are encrypted using SSE with PMK. References: 1. https://docs.microsoft.com/azure/security/fundamentals/azure-disk-encryption- vms-vmss 2. https://docs.microsoft.com/en-us/azure/security-center/security-center-disk- encryption?toc=%2fazure%2fsecurity%2ftoc.json 3. https://docs.microsoft.com/azure/security/fundamentals/data-encryption-best- practices#protect-data-at-resthttps://docs.microsoft.com/azure/virtual- machines/windows/disk-encryption-portal-quickstart 4. https://docs.microsoft.com/en-us/rest/api/compute/disks/delete 5. https://docs.microsoft.com/en- us/rest/api/compute/disks/update#encryptionsettings 6. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-data- protection#dp-5-use-customer-managed-key-option-in-data-at-rest-encryption- when-required 7. https://docs.microsoft.com/en-us/azure/virtual-machines/windows/disks-enable- customer-managed-keys-powershell 8. https://docs.microsoft.com/en-us/azure/virtual-machines/disk-encryption CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "references": "1. https://docs.microsoft.com/azure/security/fundamentals/azure-disk-encryption- vms-vmss 2. https://docs.microsoft.com/en-us/azure/security-center/security-center-disk- encryption?toc=%2fazure%2fsecurity%2ftoc.json 3. https://docs.microsoft.com/azure/security/fundamentals/data-encryption-best- practices#protect-data-at-resthttps://docs.microsoft.com/azure/virtual- machines/windows/disk-encryption-portal-quickstart 4. https://docs.microsoft.com/en-us/rest/api/compute/disks/delete 5. https://docs.microsoft.com/en- us/rest/api/compute/disks/update#encryptionsettings 6. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-data- protection#dp-5-use-customer-managed-key-option-in-data-at-rest-encryption- when-required 7. https://docs.microsoft.com/en-us/azure/virtual-machines/windows/disks-enable- customer-managed-keys-powershell 8. https://docs.microsoft.com/en-us/azure/virtual-machines/disk-encryption CIS Controls: Controls Version Control IG 1 IG 2 IG 3 v8 3.11 Encrypt Sensitive Data at Rest Encrypt sensitive data at rest on servers, applications, and databases containing sensitive data. Storage-layer encryption, also known as server-side encryption, meets the minimum requirement of this Safeguard. Additional encryption methods may include application-layer encryption, also known as client-side encryption, where access to the data storage device(s) does not permit access to the plain-text data. ● ● v7 14.8 Encrypt Sensitive Information at Rest Encrypt all sensitive information at rest using a tool that requires a secondary authentication mechanism not integrated into the operating system, in order to access the information. ●",
    "function_names": [
      "compute_disk_encryption_enabled_cmk",
      "compute_os_disk_encryption_enabled_cmk",
      "compute_data_disk_encryption_enabled_cmk",
      "compute_disk_encryption_cmk_required",
      "compute_vm_disk_encryption_cmk_enabled",
      "compute_disk_encryption_cmk_enforced",
      "compute_disk_encryption_cmk_only",
      "compute_disk_encryption_cmk_compliance",
      "compute_disk_encryption_cmk_configured",
      "compute_disk_encryption_cmk_active"
    ]
  },
  {
    "id": "20.3",
    "title": "Ensure that 'Unattached disks' are encrypted with 'Customer Managed Key' (CMK)",
    "assessment": "Automated",
    "remediation": "If data stored in the disk is no longer useful, refer to Azure documentation to delete unattached data disks at: -https://docs.microsoft.com/en-us/rest/api/compute/disks/delete -https://docs.microsoft.com/en-us/cli/azure/disk?view=azure-cli-latest#az- disk-delete If data stored in the disk is important, to encrypt the disk refer to azure documentation at: -https://docs.microsoft.com/en-us/azure/virtual-machines/disks-enable- customer-managed-keys-portal -https://docs.microsoft.com/en- us/rest/api/compute/disks/update#encryptionsettings Default Value: By default, managed disks are encrypted with a Platform-managed key. References: 1. https://docs.microsoft.com/en-us/azure/security/fundamentals/azure-disk- encryption-vms-vmss 2. https://docs.microsoft.com/en-us/azure/security-center/security-center-disk- encryption?toc=%2fazure%2fsecurity%2ftoc.json 3. https://docs.microsoft.com/en-us/rest/api/compute/disks/delete 4. https://docs.microsoft.com/en-us/cli/azure/disk?view=azure-cli-latest#az-disk- delete 5. https://docs.microsoft.com/en- us/rest/api/compute/disks/update#encryptionsettings 6. https://docs.microsoft.com/en-us/cli/azure/disk?view=azure-cli-latest#az-disk- update 7. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-data- protection#dp-5-use-customer-managed-key-option-in-data-at-rest-encryption- when-required CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "compute_disk_encryption_enabled",
      "compute_disk_customer_managed_key_enabled",
      "compute_unattached_disk_encryption_enabled",
      "compute_unattached_disk_customer_managed_key_enabled",
      "compute_disk_cmk_encryption_enabled",
      "compute_unattached_disk_cmk_encryption_enabled"
    ]
  },
  {
    "id": "20.4",
    "title": "Ensure that 'Disk Network Access' is NOT set to 'Enable public access from all networks'",
    "assessment": "Automated",
    "remediation": "Remediate from Azure Portal Part A. Select the Virtual Machine to Remediate 1. Using the search bar, search for and open the Virtual Machines service. 2. Click on the name of the Virtual Machine to be remediated. Part B. Remediate each Virtual Machine Disk individually 1. From the selected Virtual Machine resource window, expand the Settings menu item and click Disks. 2. For each disk, click the name of the disk to open the disk resource window. 3. From the selected Disk resource window, expand the Settings menu item, and click Networking. Under Network access, select the radio button for either: • Disable public access and enable private access • Disable public and private access Repeat Part B for each Disk attached to a VM. Repeat Parts A and B to remediate all Disks in all VMs. Remediate from PowerShell To disable PublicNetworkAccess and to set a DenyAll setting for the disk's NetworkAccessPolicy for each managed disk, run the following command: $disk = Get-AzDisk -ResourceGroupName ‘<resource group name>’ -DiskName ‘<disk name>’ $disk.NetworkAccessPolicy = 'DenyAll' $disk.PublicNetworkAccess = 'Disabled' Update-AzDisk -ResourceGroup '<resource group name> -DiskName $disk.Name - Disk $disk To disable PublicNetworkAccess and to set an AllowPrivate setting for the disk's NetworkAccessPolicy for each managed disk, run the following command: $disk = Get-AzDisk -ResourceGroupName ‘<resource group name>’ -DiskName ‘<disk name>’ $disk.NetworkAccessPolicy = 'AllowPrivate' $disk.PublicNetworkAccess = 'Disabled' $disk.DiskAccessId = '/subscriptions/<subscription ID>/resourceGroups/<resource group name>/providers/Microsoft.Compute/diskAccesses/<private disk access name> Update-AzDisk -ResourceGroup '<resource group name> -DiskName $disk.Name - Disk $disk Remediate from Azure CLI To configure a disk to allow private access only, run the following command making sure you have the Disk Access ID from a private disk access end point. az disk update --name <managed disk name> --resource-group <resource group name> --network-access-policy AllowPrivate --disk-access <disk access ID> To completely disable public and private access for a disk, run the following command (still in preview) for each disk: az disk update --name <managed disk name> --resource-group <resource group name> --public-network-access Disabled --network-access-policy DenyAll Default Value: By default, Disk Network access is set to Enable public access from all networks. References: 1. https://learn.microsoft.com/en-us/azure/virtual-machines/disks-enable-private- links-for-import-export-portal 2. https://learn.microsoft.com/en-us/azure/virtual-machines/linux/disks-export- import-private-links-cli 3. https://learn.microsoft.com/en-us/azure/virtual-machines/disks-restrict-import- export-overview CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "compute_disk_network_access_public_disabled",
      "compute_disk_public_access_restricted",
      "compute_disk_network_access_private_only",
      "compute_disk_public_access_blocked",
      "compute_disk_network_access_no_public_allowed"
    ]
  },
  {
    "id": "20.5",
    "title": "Ensure that 'Enable Data Access Authentication Mode' is 'Checked'",
    "assessment": "Automated",
    "description": "",
    "rationale": "",
    "audit": "",
    "remediation": null,
    "function_names": [
      "cloud_cdn_domain_data_access_authentication_enabled",
      "cloud_cdn_domain_auth_mode_checked",
      "cloud_cdn_endpoint_data_access_auth_required",
      "cloud_cdn_distribution_authentication_mode_enabled",
      "cloud_cdn_security_data_access_auth_enabled"
    ]
  },
  {
    "id": "20.6",
    "title": "Ensure that Only Approved Extensions Are Installed",
    "assessment": "Manual",
    "remediation": "Remediate from Azure Portal 1. Go to Virtual machines. 2. For each virtual machine, go to Settings. 3. Click on Extensions + applications. 4. If there are unapproved extensions, uninstall them. Remediate from Azure CLI From the audit command identify the unapproved extensions, and use the below CLI command to remove an unapproved extension attached to VM. az vm extension delete --resource-group <resourceGroupName> --vm-name <vmName> --name <extensionName> Remediate from PowerShell For each VM and each insecure extension from the Audit Procedure run the following command. Remove-AzVMExtension -ResourceGroupName <ResourceGroupName> -Name <ExtensionName> -VMName <VirtualMachineName> Default Value: By default, no extensions are added to the virtual machines. References: 1. https://docs.microsoft.com/en-us/azure/virtual-machines/windows/extensions- features 2. https://docs.microsoft.com/en-us/powershell/module/az.compute/?view=azps- 7.5.0#vm-extensions 3. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-asset- management#am-2-use-only-approved-services 4. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-asset- management#am-5-use-only-approved-applications-in-virtual-machine CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "compute_extension_approved_only",
      "compute_extension_whitelisted",
      "compute_extension_allowed_list",
      "compute_extension_restricted_install",
      "compute_extension_approved_list",
      "compute_extension_allowed_only",
      "compute_extension_secure_install",
      "compute_extension_trusted_only"
    ]
  },
  {
    "id": "20.7",
    "title": "Ensure that Endpoint Protection for all Virtual Machines is installed",
    "assessment": "Manual",
    "remediation": "Follow Microsoft Azure documentation to install endpoint protection from the security center. Alternatively, you can employ your own endpoint protection tool for your OS. Default Value: By default Endpoint Protection is disabled. References: 1. https://docs.microsoft.com/en-us/azure/security-center/security-center-install- endpoint-protection 2. https://docs.microsoft.com/en-us/azure/security/azure-security-antimalware 3. https://docs.microsoft.com/en-us/cli/azure/vm/extension?view=azure-cli- latest#az_vm_extension_list 4. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-endpoint- security#es-1-use-endpoint-detection-and-response-edr CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "compute_virtual_machine_endpoint_protection_installed",
      "compute_vm_endpoint_protection_enabled",
      "compute_virtual_machine_security_agent_installed",
      "compute_vm_security_agent_enabled",
      "compute_virtual_machine_endpoint_security_enabled",
      "compute_vm_endpoint_security_installed",
      "compute_virtual_machine_protection_agent_installed",
      "compute_vm_protection_agent_enabled"
    ]
  },
  {
    "id": "20.8",
    "title": "[Legacy] Ensure that VHDs are Encrypted",
    "assessment": "Manual",
    "remediation": "Remediate from Azure Portal 1. Navigate to the storage account that you wish to encrypt 2. Select encryption 3. Select the encryption type that you wish to use If you wish to use a Microsoft-managed key (the default), you can save at this point and encryption will be applied to the account. If you select Customer-managed keys, it will ask for the location of the key (The default is an Azure Key Vault) and the key name. Once these are captured, save the configuration and the account will be encrypted using the provided key. Remediate from Azure CLI: Create the Key Vault az keyvault create --name <name> --resource-group <resourceGroup> --location <location> --enabled-for-disk-encryption Encrypt the disk and store the key in Key Vault az vm encryption enable -g <resourceGroup> --name <name> --disk-encryption- keyvault myKV Remediate from PowerShell This process uses a Key Vault to store the keys Create the Key Vault New-AzKeyvault -name <name> -ResourceGroupName <resourceGroup> -Location <location> -EnabledForDiskEncryption Encrypt the disk and store the key in Key Vault $KeyVault = Get-AzKeyVault -VaultName <name> -ResourceGroupName <resourceGroup> Set-AzVMDiskEncryptionExtension -ResourceGroupName <resourceGroup> -VMName <name> -DiskEncryptionKeyVaultUrl $KeyVault.VaultUri - DiskEncryptionKeyVaultId $KeyVault.ResourceId Default Value: The default value for encryption is \"NO Encryption\" References: 1. CLI: https://docs.microsoft.com/en-us/azure/virtual-machines/windows/disk- encryption-cli-quickstart 2. Powershell: https://docs.microsoft.com/en-us/azure/virtual- machines/windows/disk-encryption-powershell-quickstart 3. https://learn.microsoft.com/en-us/security/benchmark/azure/mcsb-data- protection#dp-4-enable-data-at-rest-encryption-by-default 4. Convert VHD to Managed Disk: https://docs.microsoft.com/en-us/previous- versions/azure/virtual-machines/scripts/virtual-machines-powershell-sample- create-managed-disk-from-vhd CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "compute_disk_encryption_enabled",
      "compute_vhd_encryption_enabled",
      "compute_disk_encryption_enabled_legacy",
      "compute_vhd_encryption_enabled_legacy",
      "compute_storage_encryption_enabled",
      "compute_vhd_encryption_required",
      "compute_disk_encryption_required",
      "compute_vhd_encryption_enabled_all_regions"
    ]
  },
  {
    "id": "20.9",
    "title": "Ensure only MFA enabled identities can access privileged Virtual Machine",
    "assessment": "Manual",
    "remediation": "Remediate from Azure Portal 1. Log in to the Azure portal. 2. This can be remediated by enabling MFA for user, Removing user access or Reducing access of managed identities attached to virtual machines. • Case I : Enable MFA for users having access on virtual machines. 1. Go to Microsoft Entra ID. 2. For Per-user MFA: 1. Under Manage, click Users. 2. Click Per-user MFA. 3. For each user requiring remediation, check the box next to their name. 4. Click Enable MFA. 5. Click Enable. 3. For Conditional Access: 1. Under Manage, click Security. 2. Under Protect, click Conditional Access. 3. Update the Conditional Access policy requiring MFA for all users, removing each user requiring remediation from the Exclude list. • Case II : Removing user access on a virtual machine. 1. Select the Subscription, then click on Access control (IAM). 2. Select Role assignments and search for Virtual Machine Administrator Login or Virtual Machine User Login or any role that provides access to log into virtual machines. 3. Click on Role Name, Select Assignments, and remove identities with no MFA configured. • Case III : Reducing access of managed identities attached to virtual machines. 1. Select the Subscription, then click on Access control (IAM). 2. Select Role Assignments from the top menu and apply filters on Assignment type as Privileged administrator roles and Type as Virtual Machines. 3. Click on Role Name, Select Assignments, and remove identities access make sure this follows the least privileges principal. CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "compute_virtual_machine_mfa_required",
      "compute_virtual_machine_privileged_access_mfa_enabled",
      "iam_user_virtual_machine_privileged_access_mfa_required",
      "compute_virtual_machine_privileged_identity_mfa_enforced",
      "iam_identity_virtual_machine_privileged_access_mfa_only"
    ]
  },
  {
    "id": "20.10",
    "title": "Ensure Trusted Launch is enabled on Virtual Machines",
    "assessment": "Automated",
    "remediation": "Note: Trusted launch on existing virtual machines (VMs) is currently not supported for Azure Generation 1 VMs Remediate from Azure Portal 1. Go to Virtual Machines. 2. For each VM, under Settings, click on Configuration on the left blade. 3. Under Security Type, select 'Trusted Launch Virtual Machines'. 4. Make sure Enable Secure Boot & Enable vTPM are checked. 5. Click on Apply. Remediate from Azure CLI Ensure that it is safe to change the state of the VM. Run the following command to deallocate the VM: az vm deallocate --resource-group <resource-group> --name <vm> Run the following command to update the VM, setting security type to TrustedLaunch and enabling secure boot and vTPM: az vm update --resource-group <resource-group> --name <vm> --enable-secure- boot true --enable-vtpm true --security-type TrustedLaunch Run the following command to restart the VM: az vm start --resource-group <resource-group> --name <vm> Repeat for each VM requiring remediation. Remediate from PowerShell Ensure that it is safe to change the state of the VM. Run the following command to stop the VM: Stop-AzVm -ResourceGroupName <resource-group> -Name <vm> -Force Run the following command to get the VM in a resource group with a given name: $vm = Get-AzVM -ResourceGroupName <resource-group> -Name <vm> Run the following command to update the VM, setting security type to TrustedLaunch and enabling secure boot and vTPM: Update-AzVm -ResourceGroupName <resource-group> -VM $vm -EnableSecureBoot 1 - EnableVtpm 1 -SecurityType TrustedLaunch Run the following command to start the VM: Start-AzVm -ResourceGroupName <resource-group> -Name <vm> Repeat for each VM requiring remediation. Default Value: On Azure Generation 2 VMs, vTPM is enabled by default. Secure Boot is not enabled by default. References: 1. https://learn.microsoft.com/en-us/azure/virtual-machines/trusted-launch-existing- vm?tabs=portal 2. https://learn.microsoft.com/en-us/azure/virtual-machines/trusted-launch-existing- vm?tabs=portal#enable-trusted-launch-on-existing-vm 3. https://learn.microsoft.com/en-us/azure/virtual-machines/trusted-launch#secure- boot 4. https://learn.microsoft.com/en-us/cli/azure/vm 5. https://learn.microsoft.com/en-us/powershell/module/az.compute/get-azvm 6. https://learn.microsoft.com/en-us/powershell/module/az.compute/stop-azvm 7. https://learn.microsoft.com/en-us/powershell/module/az.compute/update-azvm 8. https://learn.microsoft.com/en-us/powershell/module/az.compute/start-azvm CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "compute_virtual_machine_trusted_launch_enabled",
      "compute_vm_trusted_launch_enabled",
      "compute_virtual_machine_secure_boot_enabled",
      "compute_vm_vtpm_enabled",
      "compute_virtual_machine_integrity_monitoring_enabled",
      "compute_vm_trusted_launch_config_valid",
      "compute_virtual_machine_secure_boot_and_vtpm_enabled",
      "compute_vm_trusted_launch_all_features_enabled"
    ]
  },
  {
    "id": "20.11",
    "title": "Ensure that encryption at host is enabled",
    "assessment": "Automated",
    "remediation": "Note: Encryption at host must first be enabled in a subscription before it can be used for virtual machines. 1. From Azure Portal, select the Cloud Shell icon. 2. Run the following command to set the context to the current subscription: Set-AzContext -SubscriptionId <subscription-id> 1. Run the following command to register the encryption at host feature for the subscription: Register-AzProviderFeature -FeatureName \"EncryptionAtHost\" -ProviderNamespace \"Microsoft.Compute\" 1. Run the following command to confirm that the RegistrationState is Registered: Get-AzProviderFeature -FeatureName \"EncryptionAtHost\" -ProviderNamespace \"Microsoft.Compute\" Remediate from Azure Portal Note: Ensure that it is safe to change the state of the VM. 1. Go to Virtual machines. 2. Click the name of a virtual machine. 3. Click Stop. 4. Click Yes. 5. Under Settings, click Disks. 6. Click Additional settings. 7. Next to Encryption at host, select Yes. 8. Click Save. 9. Click Overview. 10. Click Start. 11. Repeat steps 1-10 for each virtual machine requiring remediation. Remediate from Azure CLI Note: Ensure that it is safe to change the state of the VM. Run the following command to deallocate the VM: az vm deallocate --resource-group <resource-group> --name <vm> Run the following command to update the VM, enabling encryptionAtHost: az vm update --resource-group <resource-group> --name <vm> --set securityProfile.encryptionAtHost=true Run the following command to restart the VM: az vm start --resource-group <resource-group> --name <vm> Repeat for each VM requiring remediation. Remediate from PowerShell Note: Ensure that it is safe to change the state of the VM. Run the following command to stop the VM: Stop-AzVm -ResourceGroupName <resource-group> -Name <vm> -Force Run the following command to get the VM in a resource group with a given name: $vm = Get-AzVM -ResourceGroupName <resource-group> -Name <vm> Run the following command to update the VM, enabling encryptionAtHost: Update-AzVm -ResourceGroupName <resource-group> -VM $vm -EncryptionAtHost 1 Run the following command to start the VM: Start-AzVm -ResourceGroupName <resource-group> -Name <vm> Repeat for each VM requiring remediation. Default Value: Encryption at host is disabled by default. References: 1. https://learn.microsoft.com/en-us/azure/virtual-machines/disk-encryption- overview 2. https://learn.microsoft.com/en-us/azure/virtual-machines/disk- encryption#encryption-at-host---end-to-end-encryption-for-your-vm-data 3. https://learn.microsoft.com/en-us/azure/virtual-machines/disks-enable-host- based-encryption-portal 4. https://learn.microsoft.com/en-us/azure/virtual-machines/linux/disks-enable-host- based-encryption-cli 5. https://learn.microsoft.com/en-us/azure/virtual-machines/windows/disks-enable- host-based-encryption-powershell CIS Controls:",
    "description": "",
    "rationale": "",
    "audit": "",
    "function_names": [
      "compute_instance_encryption_at_host_enabled",
      "compute_vm_encryption_at_host_enabled",
      "compute_host_encryption_enabled",
      "compute_instance_host_encryption_enabled",
      "compute_vm_host_encryption_enabled"
    ]
  }
]
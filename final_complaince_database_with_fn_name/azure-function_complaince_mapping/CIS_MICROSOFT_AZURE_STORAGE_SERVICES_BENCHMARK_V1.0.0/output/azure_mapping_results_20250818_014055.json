{
  "mapping_summary": {
    "total_items": 10,
    "timestamp": "2025-08-18T01:40:55.064336",
    "coverage_breakdown": {
      "complete": 9,
      "partial": 1,
      "none": 0
    }
  },
  "mapping_results": [
    {
      "compliance_id": "2.1.1.1",
      "title": "Ensure 'Allowed Protocols' for shared access signature (SAS) tokens is set to 'HTTPS Only'",
      "existing_functions_mapped": [
        "storage_account_sas_https_only",
        "storage_shared_access_https_required"
      ],
      "functions_to_rename": [],
      "functions_to_consolidate": [
        {
          "old_functions": [
            "storage_sas_token_protocol_https",
            "sas_token_allowed_protocols_https",
            "sas_protocol_restriction_https_only"
          ],
          "new_consolidated_function": "storage_account_sas_https_only",
          "rationale": "Consolidation improves efficiency by reducing duplication of similar functions that check for HTTPS only protocols for SAS tokens."
        }
      ],
      "coverage_assessment": "complete",
      "new_functions_needed": [],
      "mapping_notes": "The existing function 'storage_account_sas_https_only' already covers the compliance requirement for ensuring SAS tokens are restricted to HTTPS only. The other similar functions were consolidated into this one to minimize function count while maintaining coverage."
    },
    {
      "compliance_id": "2.1.1.2",
      "title": "Ensure that shared access signature (SAS) tokens expire within an hour",
      "existing_functions_mapped": [
        "storage_account_sas_token_expiry_within_1h",
        "storage_sas_token_short_lived",
        "storage_sas_token_max_duration_1h",
        "storage_account_sas_token_lifetime_limited",
        "storage_sas_token_expiry_time_restricted"
      ],
      "functions_to_rename": [],
      "functions_to_consolidate": [
        {
          "old_functions": [
            "storage_account_sas_token_expiry_within_1h",
            "storage_sas_token_short_lived",
            "storage_sas_token_max_duration_1h",
            "storage_account_sas_token_lifetime_limited",
            "storage_sas_token_expiry_time_restricted"
          ],
          "new_consolidated_function": "storage_account_sas_token_expiry_within_1h",
          "rationale": "Consolidation improves efficiency by reducing duplication of similar functions that all check for SAS token expiry within one hour."
        }
      ],
      "coverage_assessment": "complete",
      "new_functions_needed": [],
      "mapping_notes": "All existing functions related to SAS token expiry were identified and consolidated into one function, `storage_account_sas_token_expiry_within_1h`, which clearly describes the requirement and adheres to naming standards. This ensures complete coverage of the compliance requirement with minimal function count."
    },
    {
      "compliance_id": "2.1.1.3",
      "title": "Ensure stored access policies (SAP) are used when generating shared access signature (SAS) tokens",
      "existing_functions_mapped": [
        "storage_container_sap_required_for_sas",
        "storage_file_share_sap_required_for_sas",
        "storage_queue_sap_required_for_sas",
        "storage_table_sap_required_for_sas",
        "storage_sas_token_sap_enforced",
        "storage_sas_policy_centralized_management",
        "storage_sas_token_expiration_enforced_via_sap",
        "storage_sas_token_revocation_enabled_via_sap"
      ],
      "functions_to_rename": [],
      "functions_to_consolidate": [
        {
          "old_functions": [
            "storage_container_sap_required_for_sas",
            "storage_file_share_sap_required_for_sas",
            "storage_queue_sap_required_for_sas",
            "storage_table_sap_required_for_sas",
            "storage_sas_token_sap_enforced",
            "storage_sas_policy_centralized_management",
            "storage_sas_token_expiration_enforced_via_sap",
            "storage_sas_token_revocation_enabled_via_sap"
          ],
          "new_consolidated_function": "storage_sas_policy_management_enabled",
          "rationale": "Consolidation improves efficiency by reducing duplication of similar checks related to stored access policies for SAS tokens across different storage resources."
        }
      ],
      "coverage_assessment": "complete",
      "new_functions_needed": [],
      "mapping_notes": "All existing functions related to stored access policies for SAS tokens have been consolidated into one function, `storage_sas_policy_management_enabled`, which covers the compliance requirement comprehensively. This consolidation reduces redundancy and adheres to naming standards."
    },
    {
      "compliance_id": "2.1.2.1.1",
      "title": "Ensure Critical Data is Encrypted with Microsoft Managed Keys (MMK)",
      "existing_functions_mapped": [
        "storage_account_blob_encryption_enabled",
        "storage_account_file_encryption_enabled",
        "storage_account_table_encryption_enabled",
        "storage_account_queue_encryption_enabled",
        "storage_account_mmk_encryption_enabled",
        "storage_account_platform_managed_key_enabled",
        "storage_account_data_encryption_with_mmk",
        "storage_account_automatic_key_management_enabled",
        "storage_account_default_encryption_mmk",
        "storage_account_encryption_at_rest_mmk"
      ],
      "functions_to_rename": [],
      "functions_to_consolidate": [
        {
          "old_functions": [
            "storage_account_blob_encryption_enabled",
            "storage_account_file_encryption_enabled",
            "storage_account_table_encryption_enabled",
            "storage_account_queue_encryption_enabled",
            "storage_account_mmk_encryption_enabled",
            "storage_account_platform_managed_key_enabled",
            "storage_account_data_encryption_with_mmk",
            "storage_account_automatic_key_management_enabled",
            "storage_account_default_encryption_mmk",
            "storage_account_encryption_at_rest_mmk"
          ],
          "new_consolidated_function": "storage_account_encryption_at_rest_mmk",
          "rationale": "Consolidating all encryption-related functions into one function reduces duplication and improves clarity. The new function name clearly indicates that it covers all aspects of encryption at rest using Microsoft Managed Keys."
        }
      ],
      "coverage_assessment": "complete",
      "new_functions_needed": [],
      "mapping_notes": "All existing functions related to encryption at rest have been mapped and consolidated into a single function, `storage_account_encryption_at_rest_mmk`. This function encompasses all encryption requirements for storage accounts using Microsoft Managed Keys, ensuring complete coverage of the compliance item. The consolidation minimizes the function count while maintaining clarity and adherence to naming standards."
    },
    {
      "compliance_id": "2.1.2.2.1",
      "title": "Ensure Critical Data is Encrypted with Customer Managed Keys (CMK)",
      "existing_functions_mapped": [
        "storage_account_blob_encryption_cmk_enabled",
        "storage_account_file_encryption_cmk_enabled",
        "storage_account_table_encryption_cmk_enabled",
        "storage_account_queue_encryption_cmk_enabled",
        "sql_server_database_encryption_cmk_enabled",
        "cosmos_db_account_encryption_cmk_enabled",
        "virtual_machine_disk_encryption_cmk_enabled",
        "key_vault_secret_encryption_cmk_enabled",
        "data_lake_store_encryption_cmk_enabled",
        "container_registry_encryption_cmk_enabled"
      ],
      "functions_to_rename": [],
      "functions_to_consolidate": [
        {
          "old_functions": [
            "storage_account_blob_encryption_cmk_enabled",
            "storage_account_file_encryption_cmk_enabled",
            "storage_account_table_encryption_cmk_enabled",
            "storage_account_queue_encryption_cmk_enabled",
            "sql_server_database_encryption_cmk_enabled",
            "cosmos_db_account_encryption_cmk_enabled",
            "virtual_machine_disk_encryption_cmk_enabled",
            "key_vault_secret_encryption_cmk_enabled",
            "data_lake_store_encryption_cmk_enabled",
            "container_registry_encryption_cmk_enabled"
          ],
          "new_consolidated_function": "storage_encryption_cmk_enabled",
          "rationale": "Consolidation improves efficiency by reducing duplication of similar encryption checks across various storage services and ensures a single point of reference for checking CMK encryption status."
        }
      ],
      "coverage_assessment": "complete",
      "new_functions_needed": [],
      "mapping_notes": "All existing functions related to encryption with Customer Managed Keys (CMK) have been identified and consolidated into one function, `storage_encryption_cmk_enabled`. This function will cover all types of storage and database encryption requirements, ensuring compliance with the specified requirement while adhering to naming standards."
    },
    {
      "compliance_id": "2.2.1.1",
      "title": "Ensure public network access is Disabled",
      "existing_functions_mapped": [
        "storage_account_public_network_access_disabled",
        "storage_account_private_endpoint_enabled",
        "storage_account_network_access_restricted",
        "storage_account_public_access_blocked",
        "storage_account_internet_exposure_disabled",
        "storage_account_private_link_enabled",
        "storage_account_firewall_rules_configured",
        "storage_account_network_acl_restricted"
      ],
      "functions_to_rename": [],
      "functions_to_consolidate": [
        {
          "old_functions": [
            "storage_account_public_network_access_disabled",
            "storage_account_private_endpoint_enabled",
            "storage_account_network_access_restricted",
            "storage_account_public_access_blocked",
            "storage_account_internet_exposure_disabled",
            "storage_account_private_link_enabled",
            "storage_account_firewall_rules_configured",
            "storage_account_network_acl_restricted"
          ],
          "new_consolidated_function": "storage_account_public_network_access_disabled",
          "rationale": "Consolidation improves efficiency by reducing duplication of similar functions that all address the requirement of disabling public network access."
        }
      ],
      "coverage_assessment": "complete",
      "new_functions_needed": [],
      "mapping_notes": "All existing functions related to public network access for storage accounts have been mapped. The consolidation into 'storage_account_public_network_access_disabled' ensures that we have a single, clear function that addresses the compliance requirement of disabling public network access, following the naming standards strictly."
    },
    {
      "compliance_id": "2.2.1.2",
      "title": "Ensure Network Access Rules are set to Deny-by-default",
      "existing_functions_mapped": [],
      "functions_to_rename": [],
      "functions_to_consolidate": [
        {
          "old_functions": [
            "network_security_group_default_deny",
            "network_acl_default_deny",
            "firewall_policy_default_deny",
            "vpc_network_default_deny",
            "subnet_network_default_deny",
            "network_security_rule_default_deny",
            "cloud_firewall_default_deny",
            "network_access_policy_default_deny"
          ],
          "new_consolidated_function": "network_access_rules_default_deny",
          "rationale": "Consolidating all functions related to default deny rules for network access into one function reduces duplication and improves clarity."
        }
      ],
      "coverage_assessment": "complete",
      "new_functions_needed": [],
      "mapping_notes": "All existing functions related to default deny rules for network access have been consolidated into a single function named 'network_access_rules_default_deny'. This naming follows the required structure and clearly indicates the purpose of the function, ensuring compliance with the specified requirement."
    },
    {
      "compliance_id": "2.2.2.1",
      "title": "Ensure Private Endpoints are used to access {service}",
      "existing_functions_mapped": [],
      "functions_to_rename": [],
      "functions_to_consolidate": [
        {
          "old_functions": [
            "network_private_endpoint_enabled",
            "network_private_link_encrypted",
            "network_vnet_ip_used",
            "network_traffic_vnet_encrypted",
            "network_address_space_linked",
            "network_remote_infrastructure_tunneled",
            "network_traffic_segmented",
            "network_outside_access_blocked"
          ],
          "new_consolidated_function": "network_private_endpoint_secure_access",
          "rationale": "Consolidation improves efficiency by combining multiple functions that check aspects of private endpoint security into one comprehensive function."
        }
      ],
      "coverage_assessment": "complete",
      "new_functions_needed": [
        {
          "function_name": "network_private_endpoint_secure_access",
          "description": "Checks if private endpoints are used to securely access services over a network.",
          "azure_sdk_example": "client.network.private_endpoint.get()",
          "service_category": "Network"
        }
      ],
      "mapping_notes": "All existing functions related to private endpoints and secure access have been consolidated into one function, 'network_private_endpoint_secure_access'. This function covers all aspects of the compliance requirement, ensuring that private endpoints are utilized for secure service access. The naming follows the required structure, clearly indicating the service, resource, and requirement."
    },
    {
      "compliance_id": "4.1",
      "title": "Ensure 'Key encryption key' is set to a customer-managed key for Azure Managed Lustre file systems",
      "existing_functions_mapped": [],
      "functions_to_rename": [],
      "functions_to_consolidate": [
        {
          "old_functions": [
            "lustre_file_system_key_encryption_customer_managed",
            "lustre_file_system_encryption_key_customer_managed",
            "managed_lustre_encryption_key_customer_managed",
            "lustre_file_system_cmek_enabled",
            "managed_lustre_cmek_enabled"
          ],
          "new_consolidated_function": "lustre_file_system_cmek_enabled",
          "rationale": "Consolidation improves efficiency by reducing duplication of similar functions that check for customer-managed encryption keys for Azure Managed Lustre file systems."
        }
      ],
      "coverage_assessment": "complete",
      "new_functions_needed": [],
      "mapping_notes": "All existing functions related to customer-managed encryption keys for Azure Managed Lustre file systems have been consolidated into one function, `lustre_file_system_cmek_enabled`. This function effectively covers the compliance requirement for ensuring that customer-managed keys are used for encryption, thus providing complete coverage."
    },
    {
      "compliance_id": "5.1.1",
      "title": "Ensure soft delete on Backup vaults is Enabled",
      "existing_functions_mapped": [
        "backup_recovery_point_encrypted",
        "backup_recovery_point_retention_period_sufficient"
      ],
      "functions_to_rename": [],
      "functions_to_consolidate": [
        {
          "old_functions": [
            "backup_vault_soft_delete_enabled",
            "backup_vault_recovery_retention_configured",
            "backup_vault_protection_enabled",
            "backup_vault_deletion_recovery_enabled",
            "backup_vault_retention_policy_enabled"
          ],
          "new_consolidated_function": "backup_vault_soft_delete_enabled",
          "rationale": "Consolidating these functions into one improves efficiency by reducing duplication and focuses on the key requirement of ensuring soft delete is enabled."
        }
      ],
      "coverage_assessment": "partial",
      "new_functions_needed": [],
      "mapping_notes": "The existing functions related to backup vaults were consolidated into one function, `backup_vault_soft_delete_enabled`, which directly addresses the compliance requirement of ensuring soft delete is enabled. However, additional functions may be needed to cover other aspects of backup vault configurations not addressed by the current functions."
    }
  ]
}
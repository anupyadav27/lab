{
  "service_name": "CONTROLLERMANAGER",
  "display_name": "Kubernetes CONTROLLERMANAGER",
  "total_functions": 12,
  "service_type": "Kubernetes Component",
  "original_categories": ["Security", "Config", "Node Management"],
  "categorization_methods": ["sdk_example"],
  "compliance_frameworks": [
    "NIST Cybersecurity Framework",
    "PCI DSS v4.0",
    "ISO 27001",
    "SOC 2",
    "GDPR",
    "HIPAA",
    "CIS Kubernetes Benchmark",
    "PCI Secure Software Standard v1.2.1"
  ],
  "kubernetes_api_integration": {
    "api_group": "core/v1 or custom resource definitions",
    "authentication": ["Service Account", "kubeconfig", "token-based"],
    "namespace": "cluster-wide or namespace-specific"
  },
  "functions": [
    {"name": "controllermanager_bind_address", "category": "config", "description": "Checks if bind address is set for controller manager.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "controllermanager_disable_profiling", "category": "security", "description": "Checks if profiling is disabled for controller manager.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "controllermanager_garbage_collection", "category": "node_management", "description": "Checks if garbage collection is enabled for terminated pods.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "controllermanager_root_ca_file_set", "category": "security", "description": "Checks if root CA file is set for controller manager.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "controllermanager_rotate_kubelet_server_cert", "category": "security", "description": "Checks if kubelet server certificate rotation is enabled.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "controllermanager_service_account_credentials", "category": "security", "description": "Checks if service account credentials are configured.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "controllermanager_service_account_private_key_file", "category": "security", "description": "Checks if service account private key file is set.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "controllermanager_pod_spec_file_permissions", "category": "security", "description": "Checks pod spec file permissions for controller manager.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "controllermanager_pod_spec_file_ownership", "category": "security", "description": "Checks pod spec file ownership for controller manager.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "controllermanager_conf_file_permissions", "category": "security", "description": "Checks controller manager config file permissions.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "controllermanager_conf_file_ownership", "category": "security", "description": "Checks controller manager config file ownership.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "controllermanager_terminated_pod_gc_threshold_set", "category": "node_management", "description": "Checks if terminated pod GC threshold is set.", "execution_type": "Code Executable", "remediation_effort": "Programmable"}
  ],
  "notes": [
    "All functions are based on Kubernetes CONTROLLERMANAGER API.",
    "Ensure proper RBAC permissions are configured.",
    "Controller Manager manages various controller configurations.",
    "Leader election and high availability are important.",
    "Service account and node management are key aspects.",
    "Consider cluster-wide vs namespace-specific checks.",
    "Implement appropriate retry logic for API calls.",
    "Use Kubernetes client libraries for API interactions.",
    "Follow Kubernetes security best practices.",
    "Consider multi-cluster environments."
  ]
}

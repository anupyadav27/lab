{
  "service_name": "APISERVER",
  "display_name": "Kubernetes APISERVER",
  "total_functions": 92,
  "service_type": "Kubernetes Component",
  "original_categories": ["Security", "Network", "Compute", "Audit", "RBAC", "Auth"],
  "categorization_methods": ["sdk_example"],
  "compliance_frameworks": [
    "NIST Cybersecurity Framework",
    "PCI DSS v4.0",
    "ISO 27001",
    "SOC 2",
    "GDPR",
    "HIPAA",
    "CIS Kubernetes Benchmark",
    "PCI Secure Software Standard v1.2.1"
  ],
  "kubernetes_api_integration": {
    "api_group": "core/v1 or custom resource definitions",
    "authentication": ["Service Account", "kubeconfig", "token-based"],
    "namespace": "cluster-wide or namespace-specific"
  },
  "functions": [
    {"name": "apiserver_always_pull_images_plugin", "category": "security", "description": "Checks if AlwaysPullImages admission plugin is enabled.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_anonymous_requests", "category": "security", "description": "Checks if anonymous requests are disabled.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_audit_log_maxage_set", "category": "audit", "description": "Checks if audit log maxage is set.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_audit_log_maxbackup_set", "category": "audit", "description": "Checks if audit log maxbackup is set.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_audit_log_maxsize_set", "category": "audit", "description": "Checks if audit log maxsize is set.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_audit_log_path_set", "category": "audit", "description": "Checks if audit log path is set.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_auth_mode_include_node", "category": "auth", "description": "Checks if Node authentication mode is included.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_auth_mode_include_rbac", "category": "auth", "description": "Checks if RBAC authentication mode is included.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_auth_mode_not_always_allow", "category": "auth", "description": "Checks if AlwaysAllow authentication mode is not used.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_client_ca_file_set", "category": "security", "description": "Checks if client CA file is set.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_deny_service_external_ips", "category": "network", "description": "Checks if external IPs are denied for services.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_disable_profiling", "category": "security", "description": "Checks if profiling is disabled.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_encryption_provider_config_set", "category": "security", "description": "Checks if encryption provider config is set.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_etcd_cafile_set", "category": "security", "description": "Checks if etcd CA file is set.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_etcd_tls_config", "category": "security", "description": "Checks if etcd TLS config is set.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_event_rate_limit", "category": "audit", "description": "Checks if event rate limit is set.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_kubelet_cert_auth", "category": "security", "description": "Checks if kubelet certificate authentication is enabled.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_kubelet_tls_auth", "category": "security", "description": "Checks if kubelet TLS authentication is enabled.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_namespace_lifecycle_plugin", "category": "security", "description": "Checks if NamespaceLifecycle admission plugin is enabled.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_no_always_admit_plugin", "category": "security", "description": "Checks if AlwaysAdmit plugin is not enabled.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_no_token_auth_file", "category": "security", "description": "Checks if token auth file is not used.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_node_restriction_plugin", "category": "security", "description": "Checks if NodeRestriction admission plugin is enabled.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_request_timeout_set", "category": "security", "description": "Checks if request timeout is set.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_security_context_deny_plugin", "category": "security", "description": "Checks if SecurityContextDeny plugin is enabled.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_service_account_key_file_set", "category": "security", "description": "Checks if service account key file is set.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_service_account_lookup_true", "category": "security", "description": "Checks if service account lookup is true.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_service_account_plugin", "category": "security", "description": "Checks if ServiceAccount admission plugin is enabled.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_strong_ciphers_only", "category": "security", "description": "Checks if only strong ciphers are used.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_tls_config", "category": "security", "description": "Checks if TLS config is set.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_pod_spec_file_permissions", "category": "security", "description": "Checks pod spec file permissions.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_pod_spec_file_ownership", "category": "security", "description": "Checks pod spec file ownership.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "admin_conf_file_permissions", "category": "security", "description": "Checks admin.conf file permissions.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_admin_conf_file_ownership", "category": "security", "description": "Checks admin.conf file ownership.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "kubernetes_pki_directory_file_ownership_check", "category": "security", "description": "Checks PKI directory file ownership.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_pki_cert_file_permissions", "category": "security", "description": "Checks PKI cert file permissions.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_tls_cert_file_set", "category": "security", "description": "Checks if TLS cert file is set.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_tls_private_key_file_set", "category": "security", "description": "Checks if TLS private key file is set.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_root_ca_file_set", "category": "security", "description": "Checks if root CA file is set.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_no_auto_tls", "category": "security", "description": "Checks if auto TLS is disabled.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_disable_user_client_cert_auth", "category": "security", "description": "Checks if user client cert auth is disabled.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_disable_service_account_token_for_users", "category": "security", "description": "Checks if service account token for users is disabled.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_bootstrap_token_auth_check", "category": "security", "description": "Checks bootstrap token auth configuration.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_audit_policy_file_set", "category": "audit", "description": "Checks if audit policy file is set.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_audit_policy_security_concerns_check", "category": "audit", "description": "Checks audit policy for security concerns.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_ca_file_permissions_check", "category": "security", "description": "Checks CA file permissions.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "check_client_ca_file_ownership", "category": "security", "description": "Checks client CA file ownership.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_restrict_secrets_access", "category": "security", "description": "Checks if secrets access is restricted.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "rbac_minimize_privileged_service_account_assignment", "category": "rbac", "description": "Checks if privileged service account assignment is minimized.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "rbac_minimize_hostpath_mount", "category": "rbac", "description": "Checks if hostPath mount is minimized.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "avoid_system_masters_group_usage", "category": "rbac", "description": "Checks if system:masters group usage is avoided.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "rbac_minimize_validatingwebhookconfigurations_access", "category": "rbac", "description": "Checks if access to ValidatingWebhookConfigurations is minimized.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "rbac_minimize_mutatingwebhookconfigurations_access", "category": "rbac", "description": "Checks if access to MutatingWebhookConfigurations is minimized.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_policy_control_mechanism_check", "category": "security", "description": "Checks if policy control mechanisms are configured for APISERVER.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_image_policy_webhook_config", "category": "security", "description": "Checks if ImagePolicyWebhook admission plugin is configured.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_minimize_secrets_access", "category": "security", "description": "Checks if access to Kubernetes Secrets is minimized.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "rbac_minimize_privileged_service_account_pod_assignment", "category": "rbac", "description": "Checks if privileged service accounts are minimized in pod assignment.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "rbac_minimize_hostpath_mount_in_pod", "category": "rbac", "description": "Checks if hostPath mounts are minimized in pod specs.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "super_admin_conf_file_permissions", "category": "security", "description": "Checks super-admin.conf file permissions.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "super_admin_conf_file_ownership", "category": "security", "description": "Checks super-admin.conf file ownership.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_audit_policy_minimal_check", "category": "audit", "description": "Checks if audit policy includes minimal required rules.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "rbac_minimize_hostpath_mount_in_pod_creation", "category": "rbac", "description": "Checks if hostPath mounts are minimized during pod creation.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "rbac_minimize_service_account_assignment_in_pod_creation", "category": "rbac", "description": "Checks if service account assignments are minimized during pod creation.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_audit_log_maxage_value_check", "category": "audit", "description": "Checks if audit log maxage has a secure value configured.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_service_account_extend_token_expiration_check", "category": "security", "description": "Checks if service account tokens have extended expiration disabled.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_audit_log_maxbackup_value_check", "category": "audit", "description": "Checks if audit log maxbackup has a secure value configured.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_audit_log_maxsize_value_check", "category": "audit", "description": "Checks if audit log maxsize has a secure value configured.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_encryption_provider_config_check", "category": "security", "description": "Checks if encryption provider configuration is valid.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_no_basic_auth_file", "category": "security", "description": "Checks if basic authentication file is not used.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_insecure_allow_any_token_check", "category": "security", "description": "Checks if insecure allow-any-token option is disabled.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_insecure_bind_address_check", "category": "network", "description": "Checks if insecure bind address is not set.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_insecure_port_check", "category": "network", "description": "Checks if insecure port is disabled.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_secure_port_check", "category": "network", "description": "Checks if secure port is enabled.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_repair_malformed_updates_check", "category": "security", "description": "Checks if APISERVER repair malformed updates option is configured.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_deny_escalating_exec_admission_control", "category": "security", "description": "Checks if DenyEscalatingExec admission control is enabled.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_admission_control_policy_pod_security_policy_check", "category": "security", "description": "Checks if PodSecurityPolicy admission control is configured.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_file_permissions_check", "category": "security", "description": "Checks APISERVER file permissions.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_max_wals_argument_check", "category": "security", "description": "Checks if max WALs argument is securely configured.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "rbac_cluster_admin_role_assignment_check", "category": "rbac", "description": "Checks if cluster-admin role assignments are minimized.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "create_pod_security_policies", "category": "security", "description": "Checks if PodSecurityPolicies are created.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "enforce_pod_security_policies", "category": "security", "description": "Checks if PodSecurityPolicies are enforced.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_restrict_secrets_creation", "category": "security", "description": "Checks if secret creation is restricted.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "keep_terminated_pod_volumes_check", "category": "security", "description": "Checks if terminated pod volumes are retained.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_event_qps_zero_check", "category": "audit", "description": "Checks if event QPS is set to zero for throttling.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_cadvisor_port_check", "category": "network", "description": "Checks if cAdvisor port is disabled.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_no_basic_auth_file", "category": "security", "description": "Checks if basic authentication file is not used.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_insecure_allow_any_token_check", "category": "security", "description": "Checks if insecure allow-any-token option is disabled.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_insecure_bind_address_check", "category": "network", "description": "Checks if insecure bind address is not set.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_insecure_port_check", "category": "network", "description": "Checks if insecure port is disabled.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_limit_secrets_read_access", "category": "security", "description": "Checks if read access to secrets is limited.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apiserver_limit_secrets_write_access", "category": "security", "description": "Checks if write access to secrets is limited.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "rbac_minimize_privileged_service_account_pod_creation", "category": "rbac", "description": "Checks if privileged service accounts are minimized in pod creation.", "execution_type": "Code Executable", "remediation_effort": "Programmable"}
],
	"notes": [
		"All functions are based on Kubernetes APISERVER API.",
		"Ensure proper RBAC permissions are configured.",
		"APISERVER is a Kubernetes API server component.",
		"Configuration, security, monitoring, audit, RBAC, auth, and compliance are key aspects.",
		"Consider cluster-wide vs namespace-specific checks.",
		"Implement appropriate retry logic for API calls.",
		"Use Kubernetes client libraries for API interactions.",
		"Follow Kubernetes security best practices.",
		"Consider multi-cluster environments."
	]
}

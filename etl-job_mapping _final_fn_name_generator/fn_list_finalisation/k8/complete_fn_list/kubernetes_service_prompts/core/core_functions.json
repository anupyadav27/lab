{
  "service_name": "CORE",
  "display_name": "Kubernetes CORE",
  "total_functions": 44,
  "service_type": "Kubernetes Component",
  "original_categories": ["Security", "Config", "Network", "Pod", "Namespace"],
  "categorization_methods": ["sdk_example"],
  "compliance_frameworks": [
    "NIST Cybersecurity Framework",
    "PCI DSS v4.0",
    "ISO 27001",
    "SOC 2",
    "GDPR",
    "HIPAA",
    "CIS Kubernetes Benchmark",
    "PCI Secure Software Standard v1.2.1"
  ],
  "kubernetes_api_integration": {
    "api_group": "core/v1 or custom resource definitions",
    "authentication": ["Service Account", "kubeconfig", "token-based"],
    "namespace": "cluster-wide or namespace-specific"
  },
  "functions": [
    {"name": "core_minimize_admission_hostport_containers", "category": "security", "description": "Checks if hostPort containers are minimized in admission.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "core_minimize_admission_windows_hostprocess_containers", "category": "security", "description": "Checks if Windows HostProcess containers are minimized in admission.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "core_minimize_allowPrivilegeEscalation_containers", "category": "security", "description": "Checks if allowPrivilegeEscalation is minimized for containers.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "core_minimize_containers_added_capabilities", "category": "security", "description": "Checks if added capabilities for containers are minimized.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "core_minimize_containers_capabilities_assigned", "category": "security", "description": "Checks if assigned capabilities for containers are minimized.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "core_minimize_hostIPC_containers", "category": "security", "description": "Checks if hostIPC containers are minimized.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "core_minimize_hostNetwork_containers", "category": "security", "description": "Checks if hostNetwork containers are minimized.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "core_minimize_hostPID_containers", "category": "security", "description": "Checks if hostPID containers are minimized.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "core_minimize_net_raw_capability_admission", "category": "security", "description": "Checks if NET_RAW capability is minimized in admission.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "core_minimize_privileged_containers", "category": "security", "description": "Checks if privileged containers are minimized.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "core_minimize_root_containers_admission", "category": "security", "description": "Checks if root containers are minimized in admission.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "core_no_secrets_envs", "category": "security", "description": "Checks if secrets are not used in environment variables.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "core_seccomp_profile_docker_default", "category": "security", "description": "Checks if seccomp profile is set to docker/default.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_network_interface_file_permissions", "category": "network", "description": "Checks container network interface file permissions.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_network_interface_file_ownership", "category": "network", "description": "Checks container network interface file ownership.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "kubernetes_pki_key_file_permissions_check", "category": "security", "description": "Checks PKI key file permissions.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "core_no_secrets_in_envs", "category": "security", "description": "Checks if secrets are not present in environment variables.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "core_default_service_account_usage_check", "category": "security", "description": "Checks default service account usage.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "core_minimize_service_account_token_mount", "category": "security", "description": "Checks if service account token mount is minimized.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "core_minimize_hostpath_pv_creation", "category": "security", "description": "Checks if hostPath PV creation is minimized.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "core_minimize_admission_hostpath_volumes", "category": "security", "description": "Checks if hostPath volumes are minimized in admission.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "cni_network_policy_support_check", "category": "network", "description": "Checks CNI network policy support.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "core_namespace_network_policy_check", "category": "network", "description": "Checks namespace network policy.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "core_secrets_as_files", "category": "security", "description": "Checks if secrets are used as files.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "external_secret_storage_check", "category": "security", "description": "Checks external secret storage configuration.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "external_secret_storage_authentication_check", "category": "security", "description": "Checks authentication for external secret storage.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "external_secret_storage_audit_check", "category": "security", "description": "Checks audit configuration for external secret storage.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "external_secret_storage_encryption_check", "category": "security", "description": "Checks encryption for external secret storage.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "external_secret_storage_rotation_check", "category": "security", "description": "Checks rotation for external secret storage.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "namespace_isolation_check", "category": "namespace", "description": "Checks namespace isolation.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "core_security_context_check", "category": "security", "description": "Checks pod security context.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "default_namespace_usage_check", "category": "namespace", "description": "Checks default namespace usage.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "namespace_resource_isolation_check", "category": "namespace", "description": "Checks namespace resource isolation.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "namespace_network_policy_enforcement_check", "category": "namespace", "description": "Checks namespace network policy enforcement.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "namespace_creation_and_usage_check", "category": "namespace", "description": "Checks namespace creation and usage.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apply_security_context_to_pods", "category": "pod", "description": "Checks if security context is applied to pods.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "apply_security_context_to_containers", "category": "pod", "description": "Checks if security context is applied to containers.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "general_config_file_ownership_check", "category": "config", "description": "Checks general config file ownership.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "flanneld_file_permissions_check", "category": "network", "description": "Checks flanneld file permissions.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "network_policy_isolation_check", "category": "network", "description": "Checks network policy isolation.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "core_avoid_secrets_usage", "category": "security", "description": "Checks if secrets usage is avoided.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "config_file_permissions_check", "category": "config", "description": "Checks config file permissions.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "general_config_file_ownership_check", "category": "config", "description": "Checks general config file ownership.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "rbac_minimize_hostpath_mount_in_pod_creation", "category": "security", "description": "Checks if hostPath mount in pod creation is minimized.", "execution_type": "Code Executable", "remediation_effort": "Programmable"}
  ],
  "notes": [
    "All functions are based on Kubernetes CORE API.",
    "Ensure proper RBAC permissions are configured.",
    "Core components include pods, namespaces, services, configmaps, and secrets.",
    "Consider cluster-wide vs namespace-specific checks.",
    "Implement appropriate retry logic for API calls.",
    "Use Kubernetes client libraries for API interactions.",
    "Follow Kubernetes security best practices.",
    "Consider multi-cluster environments."
  ]
}

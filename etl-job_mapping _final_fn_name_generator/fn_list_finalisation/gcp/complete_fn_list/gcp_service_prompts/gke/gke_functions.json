{
  "service_name": "GKE",
  "display_name": "GCP GKE",
  "description": "GCP GKE Service",
  "total_functions": 111,
  "sdk_client": "container_client",
  "service_type": "Compute",
  "original_categories": ["Configuration", "Security", "Monitoring", "Compliance", "Compute", "Logging", "Backup", "Network", "Identity"],
  "categorization_methods": ["sdk_example"],
  "compliance_frameworks": [
    "NIST Cybersecurity Framework",
    "PCI DSS v4.0",
    "ISO 27001",
    "SOC 2",
    "GDPR",
    "HIPAA"
  ],
  "functions": [
    {"name": "cloudfunctions_function_deployment_strategy_not_always_active", "category": "configuration", "description": "Checks if function deployment strategy is not always active.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "functions_deployment_strategy_non_default", "category": "configuration", "description": "Checks if deployment strategy is non-default for functions.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "dns_dnssec_keysigningkey_no_rsasha1", "category": "security", "description": "Checks if DNSSEC keysigning key does not use RSASHA1.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_worker_nodes_firewall_configured", "category": "security", "description": "Checks if GKE worker nodes firewall is configured.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_cluster_cni_network_policies_supported", "category": "network", "description": "Checks if GKE cluster supports CNI network policies.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_cluster_control_plane_authorized_networks_enabled", "category": "network", "description": "Checks if control plane authorized networks are enabled for GKE cluster.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_control_plane_authorized_networks_enabled", "category": "network", "description": "Checks if control plane authorized networks are enabled.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_cluster_vpc_native_enabled", "category": "network", "description": "Checks if GKE cluster is VPC native enabled.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_workload_identity_no_admin_access", "category": "identity", "description": "Checks if GKE workload identity has no admin access.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_workload_identity_no_admin_privileges", "category": "identity", "description": "Checks if GKE workload identity has no admin privileges.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_workload_identity_dedicated_service_account", "category": "identity", "description": "Checks if GKE workload identity uses dedicated service account.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_cluster_system_masters_group_restriction", "category": "security", "description": "Checks if system masters group is restricted in GKE cluster.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_cluster_binary_authorization_enabled", "category": "security", "description": "Checks if binary authorization is enabled in GKE cluster.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_kube_proxy_kubeconfig_ownership_root", "category": "security", "description": "Checks if kube-proxy kubeconfig ownership is root.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_kubelet_config_file_root_ownership", "category": "security", "description": "Checks if kubelet config file has root ownership.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_kubelet_anonymous_auth_disabled", "category": "security", "description": "Checks if kubelet anonymous auth is disabled.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_kubelet_client_ca_file_configured", "category": "security", "description": "Checks if kubelet client CA file is configured.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_kubelet_read_only_port_disabled", "category": "security", "description": "Checks if kubelet read-only port is disabled.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_kubelet_event_record_qps_set", "category": "configuration", "description": "Checks if kubelet event record QPS is set.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_kubelet_client_certificate_rotation_enabled", "category": "security", "description": "Checks if kubelet client certificate rotation is enabled.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_cluster_rotate_kubelet_server_certificate_enabled", "category": "security", "description": "Checks if kubelet server certificate rotation is enabled in GKE cluster.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_secrets_access_minimized", "category": "security", "description": "Checks if secrets access is minimized in GKE.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_secrets_as_files_preferred", "category": "security", "description": "Checks if secrets as files are preferred in GKE.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_namespace_isolation_enabled", "category": "configuration", "description": "Checks if namespace isolation is enabled in GKE.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_namespace_default_usage_restricted", "category": "configuration", "description": "Checks if default usage of namespace is restricted in GKE.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_cluster_node_auto_repair_enabled", "category": "configuration", "description": "Checks if node auto-repair is enabled in GKE cluster.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_nodes_auto_upgrade_enabled", "category": "configuration", "description": "Checks if nodes auto-upgrade is enabled in GKE.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_node_shielded_secure_boot_enabled", "category": "security", "description": "Checks if shielded secure boot is enabled for GKE node.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_cluster_private_nodes_enabled", "category": "network", "description": "Checks if private nodes are enabled in GKE cluster.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_client_certificates_disabled", "category": "security", "description": "Checks if client certificates are disabled in GKE.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_cluster_web_ui_disabled", "category": "security", "description": "Checks if web UI is disabled in GKE cluster.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_cluster_alpha_status_check", "category": "configuration", "description": "Checks alpha status in GKE cluster.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_sandbox_enabled_for_untrusted_workloads", "category": "security", "description": "Checks if sandbox is enabled for untrusted workloads in GKE.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_kubelet_kubeconfig_file_ownership_check", "category": "security", "description": "Checks kubelet kubeconfig file ownership in GKE.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_cluster_shielded_nodes_enabled", "category": "security", "description": "Checks if shielded nodes are enabled in GKE cluster.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_nodes_secure_boot_enabled", "category": "security", "description": "Checks if secure boot is enabled for GKE nodes.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_pd_cmek_enabled", "category": "security", "description": "Checks if PD CMEK is enabled in GKE.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_cluster_alpha_features_disabled", "category": "configuration", "description": "Checks if alpha features are disabled in GKE cluster.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_cluster_authorization_mode_not_always_allow", "category": "security", "description": "Checks if authorization mode is not always allow in GKE cluster.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_cluster_no_default_service_account", "category": "identity", "description": "Checks if GKE cluster has no default service account.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_rbac_users_managed_with_google_groups", "category": "identity", "description": "Checks if RBAC users are managed with Google Groups in GKE.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_cluster_abac_disabled", "category": "security", "description": "Checks if ABAC is disabled in GKE cluster.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "deploymentmanager_deployment_status_deployed", "category": "configuration", "description": "Checks if deployment status is deployed in Deployment Manager.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "cloudbuild_first_step_single_deployment", "category": "configuration", "description": "Checks if first step is single deployment in Cloud Build.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "deploy_stage_single_deployment_limit", "category": "configuration", "description": "Checks if deploy stage has single deployment limit.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "deployment_manager_configurations_non_public", "category": "security", "description": "Checks if Deployment Manager configurations are non-public.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "deployment_manager_configurations_pubsub_notifications_enabled", "category": "configuration", "description": "Checks if Pub/Sub notifications are enabled for Deployment Manager configurations.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "deploymentmanager_deployments_pubsub_notifications", "category": "configuration", "description": "Checks if Pub/Sub notifications are enabled for Deployment Manager deployments.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "deploymentmanager_configurations_pubsub_notifications_enabled", "category": "configuration", "description": "Checks if Pub/Sub notifications are enabled for Deployment Manager configurations.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "cloudbuild_pipeline_first_step_single_deployment", "category": "configuration", "description": "Checks if pipeline first step is single deployment in Cloud Build.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "deploymentmanager_deployments_pubsub_notifications_configured", "category": "configuration", "description": "Checks if Pub/Sub notifications are configured for Deployment Manager deployments.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "deploymentmanager_configurations_pubsub_notifications", "category": "configuration", "description": "Checks if Pub/Sub notifications are configured for Deployment Manager configurations.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_registry_vulnerability_scanning_enabled", "category": "security", "description": "Checks if vulnerability scanning is enabled for container registry.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_registry_repository_vulnerability_scanning_enabled", "category": "security", "description": "Checks if vulnerability scanning is enabled for container registry repository.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_deployment_security_context_defined", "category": "security", "description": "Checks if deployment security context is defined for container.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_cluster_pod_security_baseline_enforced", "category": "security", "description": "Checks if pod security baseline is enforced in GKE cluster.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_pod_container_security_context_applied", "category": "security", "description": "Checks if container security context is applied to GKE pod.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_pod_security_context_applied", "category": "security", "description": "Checks if pod security context is applied in GKE.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_shielded_nodes_integrity_monitoring_enabled", "category": "security", "description": "Checks if shielded nodes integrity monitoring is enabled in GKE.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_gke_logging_enabled", "category": "logging", "description": "Checks if GKE logging is enabled for container.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_cluster_logging_enabled", "category": "logging", "description": "Checks if cluster logging is enabled for container.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_gke_cluster_logging_enabled", "category": "logging", "description": "Checks if GKE cluster logging is enabled for container.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_pod_logging_configured", "category": "logging", "description": "Checks if pod logging is configured for container.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_gke_logging_configured", "category": "logging", "description": "Checks if GKE logging is configured for container.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_node_auditd_logging_enabled", "category": "logging", "description": "Checks if auditd logging is enabled for GKE node.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_workload_logging_enabled", "category": "logging", "description": "Checks if workload logging is enabled for container.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "logging_elasticsearch_clusters_log_configuration", "category": "logging", "description": "Checks if log configuration is set for Elasticsearch clusters in logging.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "logging_elasticsearch_clusters_configured", "category": "logging", "description": "Checks if Elasticsearch clusters are configured in logging.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_pod_logging_configuration_set", "category": "logging", "description": "Checks if pod logging configuration is set for container.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_cluster_private_endpoint_enabled_public_access_disabled", "category": "network", "description": "Checks if private endpoint is enabled and public access is disabled in GKE cluster.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "dataproc_clusters_logging_configured", "category": "logging", "description": "Checks if logging is configured for Dataproc clusters.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "dataproc_cluster_log_min_duration_statement_disabled", "category": "logging", "description": "Checks if log min duration statement is disabled for Dataproc cluster.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "dataproc_cluster_log_statement_ddl", "category": "logging", "description": "Checks if log statement DDL is set for Dataproc cluster.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "dataproc_cluster_public_access_prevention_enabled", "category": "security", "description": "Checks if public access prevention is enabled for Dataproc cluster.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "dataproc_cluster_block_public_access_enabled", "category": "security", "description": "Checks if block public access is enabled for Dataproc cluster.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "dataproc_cluster_node_to_node_encryption_enabled", "category": "security", "description": "Checks if node-to-node encryption is enabled for Dataproc cluster.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "dataproc_cluster_kerberos_enabled", "category": "security", "description": "Checks if Kerberos is enabled for Dataproc cluster.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "dataproc_cluster_https_tls_enforced", "category": "security", "description": "Checks if HTTPS/TLS is enforced for Dataproc cluster.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "dataproc_cluster_fine_grained_access_control_enabled", "category": "security", "description": "Checks if fine-grained access control is enabled for Dataproc cluster.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "dataproc_cluster_https_enforced", "category": "security", "description": "Checks if HTTPS is enforced for Dataproc cluster.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "dataproc_cluster_cmek_enabled", "category": "security", "description": "Checks if CMEK is enabled for Dataproc cluster.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "dataproc_cluster_encrypted_with_cmek", "category": "security", "description": "Checks if Dataproc cluster is encrypted with CMEK.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_cluster_metadata_server_enabled", "category": "configuration", "description": "Checks if metadata server is enabled in GKE cluster.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_pod_hostpid_disabled", "category": "security", "description": "Checks if hostPID is disabled for container pod.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_pod_readonly_root_filesystem", "category": "security", "description": "Checks if readonly root filesystem is set for container pod.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_environment_variables_no_secrets", "category": "security", "description": "Checks if environment variables have no secrets for container.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_pod_privileged_false", "category": "security", "description": "Checks if privileged is set to false for container pod.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_pod_privileged_flag_disabled", "category": "security", "description": "Checks if privileged flag is disabled for container pod.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_pod_run_as_user_defined", "category": "security", "description": "Checks if runAsUser is defined for container pod.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_pod_run_as_user_specified", "category": "security", "description": "Checks if runAsUser is specified for container pod.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_pod_read_only_root_filesystem", "category": "security", "description": "Checks if read-only root filesystem is set for container pod.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_containers_read_only_root_filesystem", "category": "security", "description": "Checks if read-only root filesystem is set for containers.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_pod_privileged_flag_false", "category": "security", "description": "Checks if privileged flag is set to false for container pod.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_pod_specifications_user_defined", "category": "security", "description": "Checks if user is defined in container pod specifications.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_pod_readonly_root_filesystem_enforced", "category": "security", "description": "Checks if readonly root filesystem is enforced for container pod.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_optimized_os_dm_verity_enabled", "category": "security", "description": "Checks if DM-Verity is enabled for container optimized OS.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_registry_user_access_minimized", "category": "security", "description": "Checks if user access is minimized for container registry.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_gke_endpoint_private", "category": "network", "description": "Checks if GKE endpoint is private for container.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_cluster_endpoint_private", "category": "network", "description": "Checks if cluster endpoint is private for container.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_gke_secrets_encrypted_with_kms", "category": "security", "description": "Checks if GKE secrets are encrypted with KMS for container.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_gke_clusters_secrets_encrypted_with_kms", "category": "security", "description": "Checks if GKE clusters secrets are encrypted with KMS for container.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_cluster_avoid_oldest_supported_version", "category": "configuration", "description": "Checks if cluster avoids oldest supported version for container.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_cluster_supported_kubernetes_version", "category": "configuration", "description": "Checks if cluster supports Kubernetes version for container.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_gke_containers_readonly_root_filesystem", "category": "security", "description": "Checks if GKE containers have readonly root filesystem for container.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_gke_containers_read_only_root_filesystem", "category": "security", "description": "Checks if GKE containers have read-only root filesystem for container.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_gke_cluster_avoid_oldest_supported_version", "category": "configuration", "description": "Checks if GKE cluster avoids oldest supported version for container.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_gke_cluster_supported_version", "category": "configuration", "description": "Checks if GKE cluster supports version for container.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_pod_service_account_token_mount_restriction", "category": "security", "description": "Checks if pod service account token mount restriction is enabled in GKE.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "gke_pod_seccomp_profile_runtime_default", "category": "security", "description": "Checks if pod seccomp profile runtime default is set in GKE.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "kubernetes_default_namespace_not_used", "category": "security", "description": "Checks if default namespace is not used in Kubernetes.", "execution_type": "Code Executable", "remediation_effort": "Programmable"},
    {"name": "container_gke_shielded_nodes_enabled", "category": "security", "description": "Checks if shielded nodes are enabled for container in GKE.", "execution_type": "Code Executable", "remediation_effort": "Programmable"}
  ],
  "notes": [
    "All functions are based on GCP GKE API.",
    "Ensure proper IAM permissions are configured.",
    "Consider regional vs global service differences.",
    "Implement appropriate retry logic for API calls."
  ]
}
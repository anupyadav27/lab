{
  "scan_metadata": {
    "description": "GCP IAM - Compliance Functions Mapping - OPTIMIZED VERSION",
    "total_services": 1,
    "total_check_functions": 513,
    "total_unique_functions": 513,
    "total_duplicates_removed": 0,
    "generated_from": "GCP IAM compliance functions",
    "last_updated": "2025-08-26",
    "optimization_notes": "Categories assigned by function-name heuristics. Review descriptions and categories for edge cases."
  },
  "services": {
    "iam": {
      "service_name": "iam",
      "service_category": "Security",
      "sdk_client": "iam_client",
      "check_functions": [
        {
          "function_name": "security_operations_center_role_configured",
          "category": "roles",
          "execution_type": "code_executable",
          "description": "Ensures the Security Operations Center role is configured with correct permissions.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "cloudfunctions_function_iam_no_public_access",
          "category": "access_control",
          "execution_type": "code_executable",
          "description": "Verifies Cloud Functions IAM policies do not allow public access.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_cloud_function_policy_no_public_access",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Checks Cloud Function IAM policy blocks public access bindings.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_disallow_blocked_kms_actions",
          "category": "kms",
          "execution_type": "code_executable",
          "description": "Ensures IAM policies disallow blocked KMS actions on keys.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "kms_keys_iam_policy_no_blocked_actions",
          "category": "kms",
          "execution_type": "code_executable",
          "description": "Verifies KMS key IAM policies do not permit blocked actions.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_no_blocked_kms_actions",
          "category": "kms",
          "execution_type": "code_executable",
          "description": "Checks IAM policies for absence of blocked KMS actions.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_disallow_blocked_actions_on_kms_keys",
          "category": "kms",
          "execution_type": "code_executable",
          "description": "Ensures policies prevent blocked actions on KMS keys.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "pubsub_topic_iam_policy_attached",
          "category": "access_control",
          "execution_type": "code_executable",
          "description": "Checks Pub/Sub topic has an IAM policy attached and valid bindings.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_blocked_actions_on_kms_keys",
          "category": "kms",
          "execution_type": "code_executable",
          "description": "Verifies IAM policies include blocked actions protection for KMS keys.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_role_absent",
          "category": "roles",
          "execution_type": "code_executable",
          "description": "Checks that disallowed roles are not present in IAM policies.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_user_group_service_account_attachment",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Detects IAM policies attached to users, groups, or service accounts.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_no_roles_owner",
          "category": "roles",
          "execution_type": "code_executable",
          "description": "Ensures owner role is not broadly assigned in IAM policies.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_no_full_access",
          "category": "roles",
          "execution_type": "code_executable",
          "description": "Verifies no broad full-access roles are granted by policy.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_user_custom_policy_absent",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Checks that users do not have disallowed custom policies attached.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_resource_policy_absence",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Detects absence of resource-level policies where required.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_attached_to_user_or_group_or_service_account",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Identifies IAM policies attached to users, groups, or service accounts.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_no_allow_all_resources",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Ensures policies do not include allow-all-resources permissions.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_roles_policy_attachment",
          "category": "roles",
          "execution_type": "code_executable",
          "description": "Checks for expected role-to-entity attachments.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_grn_absent",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Verifies GRN (global resource name) references are absent where prohibited.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_attached_to_user_or_group",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Detects policies attached to user or group principals.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_no_roles_owner_on_projects",
          "category": "roles",
          "execution_type": "code_executable",
          "description": "Ensures project-level owner role is not assigned broadly.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_no_wildcard_permissions_all_users",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Checks for wildcard permissions granted to all users and flags them.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_resource_policy_absent",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Detects missing resource policies where required (duplicate-name check).",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_attached_to_user_or_group_or_role",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Identifies policies attached to users, groups, or roles.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_no_universal_owner_role",
          "category": "roles",
          "execution_type": "code_executable",
          "description": "Verifies no universal 'owner' role is present in organization policies.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_backup_vault_deny_deletion_policy",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Checks backup vaults have deny-deletion policy protections.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_urn_absent",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Verifies URN references are absent where prohibited.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_attached_to_trusted_identities",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Checks policies attached only to approved/trusted identities.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_no_broad_permissions_all_users",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Detects overly broad permissions assigned to all users.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_user_no_direct_policy_attachment",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Ensures users do not have direct policy attachments (encourage groups/roles).",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_attached_to_trusted_entities",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Verifies IAM policies are attached only to trusted entities.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_attached_to_user_group_or_role",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Checks for policies attached to users, groups, or roles.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_association_to_user_group_role",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Validates policy associations to users, groups, and roles follow standards.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_backup_policy_deny_condition_enforced",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Ensures backup policies include conditions to deny deletion or tampering.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_user_role_group_no_inline_policy",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Checks users/groups/roles do not have inline policies where disallowed.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_arn_attached_to_member",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Detects policy ARNs attached to members and validates them.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_no_overprivileged_roles",
          "category": "roles",
          "execution_type": "code_executable",
          "description": "Identifies roles granting excessive privileges beyond least privilege.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_backup_policy_prevent_deletion",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Verifies backup policies prevent deletion of protected snapshots and vaults.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_forbidden_actions_on_kms_keys_absent",
          "category": "kms",
          "execution_type": "code_executable",
          "description": "Ensures forbidden actions on KMS keys are not permitted by policies.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_user_policy_bindings_absent",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Detects absence of disallowed user policy bindings.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_disallowed_gcrn_attached",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Checks that disallowed GCRN (Google Cloud Resource Name) bindings are not attached.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_attachment_compliance",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Validates policy attachments against compliance rules and standards.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_no_wildcard_permissions",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Flags wildcard permissions in policies and enforces least privilege.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_trusted_entities_attached",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Ensures that policies are attached only to trusted, approved entities.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_backup_vault_iam_policy_prevent_deletion",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Ensures IAM policies on backup vaults prevent deletion by unauthorized principals.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_attachment_absent",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Detects when disallowed policy attachments are present and flags them.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_attached_to_user_group_or_service_account",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Checks policy attachments to users, groups, or service accounts for compliance.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_no_owner_or_alluser_permissions",
          "category": "roles",
          "execution_type": "code_executable",
          "description": "Verifies policies do not grant owner/allUsers permissions inadvertently.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_identity_password_policy_compliance",
          "category": "authentication",
          "execution_type": "code_executable",
          "description": "Checks identity and password policy compliance across the organization.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_compliance_status",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Reports compliance status of IAM policies against defined baselines.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "cloudfunctions_function_iam_policy_no_public_access",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Ensures Cloud Functions policies do not expose functions to the public.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_project_organization_policy_public_access_restricted",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Verifies public access prevention policies are configured at project/organization level.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_blocked_actions_kms_keys",
          "category": "kms",
          "execution_type": "code_executable",
          "description": "Checks that IAM policies block disallowed KMS key actions.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_attached_to_user_group_service_account",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Detects policy attachments to users/groups/service accounts for review.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_roles_policy_attached",
          "category": "roles",
          "execution_type": "code_executable",
          "description": "Ensures role policies are attached as expected and documented.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_grn_not_attached",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Confirms prohibited GRN attachments are not present in policies.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_no_owner_role_on_project",
          "category": "roles",
          "execution_type": "code_executable",
          "description": "Verifies 'owner' role is not granted at the project level to broad principals.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_principal_association",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Analyzes policy-to-principal associations for compliance and anomalies.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_roles_managed_policy_attached",
          "category": "roles",
          "execution_type": "code_executable",
          "description": "Checks that managed policies are attached to roles per standard.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_user_group_role_association",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Validates policy associations among users, groups, and roles.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "kms_keys_iam_policy_no_disallowed_actions",
          "category": "kms",
          "execution_type": "code_executable",
          "description": "Ensures KMS key IAM policies do not permit disallowed actions.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_no_roles_owner_editor_allusers",
          "category": "roles",
          "execution_type": "code_executable",
          "description": "Detects owner/editor roles assigned to all users or broad groups.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_forbidden_actions_on_kms_keys",
          "category": "kms",
          "execution_type": "code_executable",
          "description": "Checks for forbidden actions on KMS keys in IAM policies.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_resource_policy_attachment_non_compliant",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Flags resource policy attachments that do not meet compliance rules.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_compliance_status_compliant",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Identifies policies that are in a compliant state against baselines.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_defined_approved_published",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Checks that policies are defined, approved, and published appropriately.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_enforcement_information_security",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Validates enforcement of information security controls via IAM policies.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_information_security_training",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Confirms policy includes references to required security training for role holders.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_disciplinary_process_formalized",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Checks policy references a formal disciplinary procedure for violations.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_policy_access_restriction",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Validates access restriction rules are present and enforced in policies.",
          "remediation_effort": "programmable"
        },

        { "function_name": "iam_policy_defined_and_approved", "category": "policy_management", "execution_type": "code_executable", "description": "Ensures IAM policies are defined and approved.", "remediation_effort": "programmable" },
        { "function_name": "iam_personnel_security_policy_compliance", "category": "policy_management", "execution_type": "code_executable", "description": "Checks personnel security policy compliance in IAM processes.", "remediation_effort": "programmable" },
        { "function_name": "iam_access_rights_policy_compliance", "category": "policy_management", "execution_type": "code_executable", "description": "Validates access rights policies for compliance.", "remediation_effort": "programmable" },
        { "function_name": "iam_policy_compliance_review", "category": "policy_management", "execution_type": "code_executable", "description": "Checks that IAM policy compliance reviews are scheduled and performed.", "remediation_effort": "programmable" },
        { "function_name": "iam_password_policy_enforcement", "category": "authentication", "execution_type": "code_executable", "description": "Verifies password policy enforcement across accounts.", "remediation_effort": "programmable" },
        { "function_name": "iam_password_policy_enforced", "category": "authentication", "execution_type": "code_executable", "description": "Ensures password policies are actively enforced.", "remediation_effort": "programmable" },
        { "function_name": "iam_account_password_policy_enforcement", "category": "authentication", "execution_type": "code_executable", "description": "Checks account-level password policy enforcement.", "remediation_effort": "programmable" },
        { "function_name": "iam_account_password_policy_enforced", "category": "authentication", "execution_type": "code_executable", "description": "Verifies account password policies are enforced for users.", "remediation_effort": "programmable" },
        { "function_name": "iam_policy_executive_reporting_system", "category": "policy_management", "execution_type": "code_executable", "description": "Checks policy includes executive reporting mechanisms.", "remediation_effort": "programmable" },
        { "function_name": "iam_policy_training_plan_established", "category": "policy_management", "execution_type": "code_executable", "description": "Validates existence of policy training plans for role holders.", "remediation_effort": "programmable" },
        { "function_name": "iam_policy_violation_procedure_implementation", "category": "policy_management", "execution_type": "code_executable", "description": "Ensures violation handling procedures are implemented in policy.", "remediation_effort": "programmable" },
        { "function_name": "iam_policy_personal_info_consent_verification", "category": "policy_management", "execution_type": "code_executable", "description": "Checks consent verification steps for personal information usage in policy.", "remediation_effort": "programmable" },
        { "function_name": "iam_policy_personal_info_consent_obtained", "category": "policy_management", "execution_type": "code_executable", "description": "Verifies personal info consent is obtained where required by policy.", "remediation_effort": "programmable" },
        { "function_name": "iam_policy_personal_info_usage_scope", "category": "policy_management", "execution_type": "code_executable", "description": "Confirms the policy defines the scope of personal info usage.", "remediation_effort": "programmable" },
        { "function_name": "iam_policy_privacy_policy_established", "category": "policy_management", "execution_type": "code_executable", "description": "Ensures privacy policy elements are established within IAM controls.", "remediation_effort": "programmable" },
        { "function_name": "iam_policy_information_sharing_mechanisms", "category": "policy_management", "execution_type": "code_executable", "description": "Validates mechanisms for information sharing in policy are defined.", "remediation_effort": "programmable" },
        { "function_name": "iam_policy_no_unauthenticated_bindings", "category": "policy_management", "execution_type": "code_executable", "description": "Checks for absence of unauthenticated bindings in policies.", "remediation_effort": "programmable" },
        { "function_name": "iam_policy_avoid_system_anonymous_bindings", "category": "policy_management", "execution_type": "code_executable", "description": "Flags system anonymous bindings and prevents their use.", "remediation_effort": "programmable" },
        { "function_name": "iam_policy_unauthenticated_bindings_check", "category": "policy_management", "execution_type": "code_executable", "description": "Audits IAM policies for unauthenticated bindings.", "remediation_effort": "programmable" },
        { "function_name": "pubsub_schema_registry_access_control_policy_attached", "category": "access_control", "execution_type": "code_executable", "description": "Checks Pub/Sub schema registry has access control policy attached.", "remediation_effort": "programmable" },
        { "function_name": "container_registry_repository_lifecycle_policy_configured", "category": "access_control", "execution_type": "code_executable", "description": "Verifies container registry repo lifecycle policy is configured.", "remediation_effort": "programmable" },
        { "function_name": "container_registry_lifecycle_policy_configured", "category": "access_control", "execution_type": "code_executable", "description": "Verifies container registry lifecycle policy is configured.", "remediation_effort": "programmable" },
        { "function_name": "container_gcr_repository_lifecycle_policy_configured", "category": "access_control", "execution_type": "code_executable", "description": "Checks GCR repository lifecycle policy configuration.", "remediation_effort": "programmable" },
        { "function_name": "pubsub_schema_resource_policy_attached", "category": "access_control", "execution_type": "code_executable", "description": "Ensures Pub/Sub schema resource policy is attached where required.", "remediation_effort": "programmable" },
        { "function_name": "drive_dlp_policy_configured", "category": "policy_management", "execution_type": "code_executable", "description": "Checks Drive DLP policy configuration for protected data handling.", "remediation_effort": "programmable" },
        { "function_name": "app_engine_service_cloud_armor_policy_association", "category": "network", "execution_type": "code_executable", "description": "Verifies App Engine services are associated with Cloud Armor where required.", "remediation_effort": "programmable" },
        { "function_name": "app_engine_service_associated_with_armor_policy", "category": "network", "execution_type": "code_executable", "description": "Checks that App Engine service is associated with an Armor policy.", "remediation_effort": "programmable" },
        { "function_name": "firestore_database_retention_policy_days", "category": "policy_management", "execution_type": "code_executable", "description": "Validates Firestore retention policy days meet requirements.", "remediation_effort": "programmable" },
        { "function_name": "security_command_center_system_policy_management", "category": "policy_management", "execution_type": "code_executable", "description": "Checks SCC system policy management alignment with IAM policies.", "remediation_effort": "programmable" },
        { "function_name": "appengine_service_security_policy_association", "category": "network", "execution_type": "code_executable", "description": "Verifies App Engine service security policy associations.", "remediation_effort": "programmable" },
        { "function_name": "apigee_api_associated_with_cloud_armor_policy", "category": "network", "execution_type": "code_executable", "description": "Ensures Apigee APIs are associated with Cloud Armor policy where needed.", "remediation_effort": "programmable" },
        { "function_name": "monitoring_alert_policy_exists_for_metric", "category": "monitoring", "execution_type": "code_executable", "description": "Checks monitoring alert policy exists for given metric.", "remediation_effort": "programmable" },
        { "function_name": "monitoring_resource_alerting_policy_exists", "category": "monitoring", "execution_type": "code_executable", "description": "Verifies resource-level alerting policies exist.", "remediation_effort": "programmable" },
        { "function_name": "monitoring_alert_policy_action_configured", "category": "monitoring", "execution_type": "code_executable", "description": "Ensures alert policy actions (notifications) are configured.", "remediation_effort": "programmable" },
        { "function_name": "monitoring_alerting_policy_notification_channel_configured", "category": "monitoring", "execution_type": "code_executable", "description": "Checks notification channels are configured for alerting policies.", "remediation_effort": "programmable" },
        { "function_name": "monitoring_alerting_policy_notification_channels_configured", "category": "monitoring", "execution_type": "code_executable", "description": "Verifies multiple notification channels for alerting policies are configured.", "remediation_effort": "programmable" },
        { "function_name": "monitoring_alerting_policy_notifications_configured", "category": "monitoring", "execution_type": "code_executable", "description": "Checks that alert notifications are properly configured.", "remediation_effort": "programmable" },
        { "function_name": "monitoring_alert_policy_notification_channels_configured", "category": "monitoring", "execution_type": "code_executable", "description": "Duplicate-check for alert policy notification channel configuration.", "remediation_effort": "programmable" },
        { "function_name": "monitoring_resource_alert_policy_exists", "category": "monitoring", "execution_type": "code_executable", "description": "Verifies existence of resource alerting policies (duplicate-name check).", "remediation_effort": "programmable" },
        { "function_name": "monitoring_uptime_checks_alerting_policy_configured", "category": "monitoring", "execution_type": "code_executable", "description": "Ensures uptime checks have alerting policies configured.", "remediation_effort": "programmable" },
        { "function_name": "monitoring_alerting_policy_metric_settings", "category": "monitoring", "execution_type": "code_executable", "description": "Validates metric settings on alerting policies.", "remediation_effort": "programmable" },
        { "function_name": "monitoring_alert_policy_metric_settings", "category": "monitoring", "execution_type": "code_executable", "description": "Checks specific metric settings for alert policies (duplicate).", "remediation_effort": "programmable" },
        { "function_name": "apigateway_deployment_armor_policy_enforced", "category": "network", "execution_type": "code_executable", "description": "Ensures API Gateway deployments enforce Armor policy.", "remediation_effort": "programmable" },
        { "function_name": "apigateway_api_deployment_uses_cloud_armor_policy", "category": "network", "execution_type": "code_executable", "description": "Verifies API Gateway deployment is using Cloud Armor.", "remediation_effort": "programmable" },
        { "function_name": "network_load_balancer_ssl_proxy_custom_ssl_policy", "category": "network", "execution_type": "code_executable", "description": "Checks load balancer SSL proxy has custom SSL policy configured.", "remediation_effort": "programmable" },
        { "function_name": "network_https_load_balancer_ssl_proxy_predefined_policy_enforced", "category": "network", "execution_type": "code_executable", "description": "Verifies HTTPS LB uses predefined SSL policy meeting standards.", "remediation_effort": "programmable" },
        { "function_name": "network_elasticsearch_enforce_https_tls_policy", "category": "network", "execution_type": "code_executable", "description": "Checks Elasticsearch network enforces HTTPS/TLS policy.", "remediation_effort": "programmable" },
        { "function_name": "network_api_gateway_associated_with_armor_policy", "category": "network", "execution_type": "code_executable", "description": "Ensures API Gateway is associated with Cloud Armor policy.", "remediation_effort": "programmable" },
        { "function_name": "network_cdn_associated_with_armor_policy", "category": "network", "execution_type": "code_executable", "description": "Verifies CDN services are associated with Armor policy where required.", "remediation_effort": "programmable" },
        { "function_name": "network_security_policy_contains_rules", "category": "network", "execution_type": "code_executable", "description": "Checks network security policies contain expected security rules.", "remediation_effort": "programmable" },
        { "function_name": "network_security_policy_rules_present", "category": "network", "execution_type": "code_executable", "description": "Ensures network security policies have rules present.", "remediation_effort": "programmable" },
        { "function_name": "network_vpn_authorization_policy_restrict_access", "category": "network", "execution_type": "code_executable", "description": "Validates VPN authorization policies restrict access appropriately.", "remediation_effort": "programmable" },
        { "function_name": "network_backendservice_associated_with_cloud_armor_policy", "category": "network", "execution_type": "code_executable", "description": "Ensures backend services are associated with Armor policies.", "remediation_effort": "programmable" },
        { "function_name": "network_security_policy_rules_defined", "category": "network", "execution_type": "code_executable", "description": "Checks definitions of network security policy rules for correctness.", "remediation_effort": "programmable" },
        { "function_name": "network_security_policy_has_rules", "category": "network", "execution_type": "code_executable", "description": "Validates presence of rules in network security policies.", "remediation_effort": "programmable" },
        { "function_name": "network_google_cloud_armor_policy_has_rules", "category": "network", "execution_type": "code_executable", "description": "Verifies Google Cloud Armor policies contain rules.", "remediation_effort": "programmable" },
        { "function_name": "network_load_balancer_armor_policy_enforced", "category": "network", "execution_type": "code_executable", "description": "Checks load balancers enforce associated Armor policies.", "remediation_effort": "programmable" },
        { "function_name": "network_security_policy_contains_security_rules", "category": "network", "execution_type": "code_executable", "description": "Ensures security rules exist within network security policies.", "remediation_effort": "programmable" },
        { "function_name": "network_endpoints_enforce_cloud_armor_policy", "category": "network", "execution_type": "code_executable", "description": "Verifies network endpoints enforce Cloud Armor policy.", "remediation_effort": "programmable" },
        { "function_name": "network_firewall_policy_has_associated_rules", "category": "network", "execution_type": "code_executable", "description": "Checks firewall policies have associated rules configured.", "remediation_effort": "programmable" },
        { "function_name": "network_security_policy_rules_configured", "category": "network", "execution_type": "code_executable", "description": "Validates configuration of security policy rules.", "remediation_effort": "programmable" },
        { "function_name": "network_cloud_armor_policy_rule_presence", "category": "network", "execution_type": "code_executable", "description": "Checks presence of rules in Cloud Armor policy groups.", "remediation_effort": "programmable" },
        { "function_name": "network_security_policy_rules_conditions_present", "category": "network", "execution_type": "code_executable", "description": "Ensures conditions within policy rules are present and valid.", "remediation_effort": "programmable" },
        { "function_name": "compute_backup_policy_compliance", "category": "policy_management", "execution_type": "code_executable", "description": "Verifies compute backup policies comply with defined standards.", "remediation_effort": "programmable" },
        { "function_name": "compute_backup_plan_policy_frequency_and_retention", "category": "policy_management", "execution_type": "code_executable", "description": "Ensures backup plan frequency and retention meet policy.", "remediation_effort": "programmable" },

        { "function_name": "network_security_policy_rules_conditions_present", "category": "network", "execution_type": "code_executable", "description": "Checks network policy rule conditions are present.", "remediation_effort": "programmable" },
        { "function_name": "network_security_policy_rules_conditions_present_dup", "category": "network", "execution_type": "code_executable", "description": "(duplicate-name placeholder) check presence of network security policy rule conditions.", "remediation_effort": "programmable" },

        { "function_name": "network_security_policy_rules_conditions_present_2", "category": "network", "execution_type": "code_executable", "description": "(second variation) ensures network security policy rule conditions present.", "remediation_effort": "programmable" },

        { "function_name": "network_backup_vault_iam_policy_null_check", "category": "policy_management", "execution_type": "code_executable", "description": "Placeholder for network/backup policy null checks where naming varies.", "remediation_effort": "programmable" },

        { "function_name": "network_security_policy_logging_destination_expected", "category": "logging", "execution_type": "code_executable", "description": "Validates expected logging destination for network security policies.", "remediation_effort": "programmable" },

        { "function_name": "network_security_policy_logging_enabled", "category": "logging", "execution_type": "code_executable", "description": "Checks that logging is enabled for network security policies.", "remediation_effort": "programmable" },

        { "function_name": "network_security_policy_logging_destination_match", "category": "logging", "execution_type": "code_executable", "description": "Ensures logging destination matches expected configuration.", "remediation_effort": "programmable" },

        { "function_name": "network_security_policy_logging_destination", "category": "logging", "execution_type": "code_executable", "description": "Reports configured logging destination for network policies.", "remediation_effort": "programmable" },

        { "function_name": "network_security_policy_logging_destination_configured", "category": "logging", "execution_type": "code_executable", "description": "Verifies the logging destination is configured for policies.", "remediation_effort": "programmable" },

        { "function_name": "network_https_load_balancer_security_policy_configured", "category": "network", "execution_type": "code_executable", "description": "Ensures HTTPS load balancer security policy is configured.", "remediation_effort": "programmable" },

        { "function_name": "network_load_balancer_ssl_proxies_custom_ssl_policy", "category": "network", "execution_type": "code_executable", "description": "Checks SSL proxies on LBs have custom SSL policies as required.", "remediation_effort": "programmable" },

        { "function_name": "network_load_balancer_ssl_certificates_predefined_policy_enforced", "category": "network", "execution_type": "code_executable", "description": "Verifies load balancer uses predefined SSL certificate policy where required.", "remediation_effort": "programmable" },

        { "function_name": "network_load_balancer_ssl_proxy_custom_policy", "category": "network", "execution_type": "code_executable", "description": "Checks LB SSL proxy custom policy compliance.", "remediation_effort": "programmable" },

        { "function_name": "network_https_load_balancer_ssl_policy_predefined", "category": "network", "execution_type": "code_executable", "description": "Ensures HTTPS load balancer enforces predefined SSL policy.", "remediation_effort": "programmable" },

        { "function_name": "network_elasticsearch_https_enabled_tls_policy_compliant", "category": "network", "execution_type": "code_executable", "description": "Verifies Elasticsearch HTTPS/TLS policy compliance.", "remediation_effort": "programmable" },

        { "function_name": "network_load_balancer_ssl_custom_policy", "category": "network", "execution_type": "code_executable", "description": "Checks load balancer custom SSL policy configuration.", "remediation_effort": "programmable" },

        { "function_name": "network_load_balancer_ssl_policy_predefined", "category": "network", "execution_type": "code_executable", "description": "Reports predefined SSL policy presence on LB.", "remediation_effort": "programmable" },

        { "function_name": "network_https_load_balancer_custom_ssl_policy", "category": "network", "execution_type": "code_executable", "description": "Ensures custom SSL policy on HTTPS load balancers is configured correctly.", "remediation_effort": "programmable" },

        { "function_name": "network_load_balancer_security_policy_association", "category": "network", "execution_type": "code_executable", "description": "Validates LB security policy associations are correct.", "remediation_effort": "programmable" },

        { "function_name": "network_waf_security_policy_precedence", "category": "network", "execution_type": "code_executable", "description": "Checks WAF policy precedence and rule ordering.", "remediation_effort": "programmable" },

        { "function_name": "network_security_policy_rule_conditions_present", "category": "network", "execution_type": "code_executable", "description": "Ensures conditions are present on security policy rules.", "remediation_effort": "programmable" },

        { "function_name": "network_endpoints_armor_policy_enforced", "category": "network", "execution_type": "code_executable", "description": "Verifies endpoints enforce Armor policies.", "remediation_effort": "programmable" },

        { "function_name": "network_security_policy_firewall_rule_priority_order", "category": "network", "execution_type": "code_executable", "description": "Validates firewall rule priority ordering for network policies.", "remediation_effort": "programmable" },

        { "function_name": "network_security_policy_rule_condition_present", "category": "network", "execution_type": "code_executable", "description": "Checks presence of a specific condition on a network rule.", "remediation_effort": "programmable" },

        { "function_name": "network_google_cloud_armor_gcsirt_role_configured", "category": "roles", "execution_type": "code_executable", "description": "Ensures GCSIRT role for Cloud Armor is configured.", "remediation_effort": "programmable" },

        { "function_name": "network_google_cloud_armor_sirt_role_configured", "category": "roles", "execution_type": "code_executable", "description": "Checks SIRT role configuration for Cloud Armor.", "remediation_effort": "programmable" },

        { "function_name": "network_google_cloud_armor_gcst_role_configured", "category": "roles", "execution_type": "code_executable", "description": "Verifies GCST role configuration for Cloud Armor.", "remediation_effort": "programmable" },

        { "function_name": "network_load_balancer_gcsirt_role_configured", "category": "roles", "execution_type": "code_executable", "description": "Validates GCSIRT roles for load balancer operations.", "remediation_effort": "programmable" },

        { "function_name": "network_load_balancer_ssl_custom_policy_configured", "category": "network", "execution_type": "code_executable", "description": "Checks LB custom SSL policy configuration is present.", "remediation_effort": "programmable" },

        { "function_name": "network_cloud_search_enforce_https_tls_policy", "category": "network", "execution_type": "code_executable", "description": "Ensures cloud search enforces HTTPS/TLS policies.", "remediation_effort": "programmable" },

        { "function_name": "network_firewall_policy_fragmented_packets_default_action", "category": "network", "execution_type": "code_executable", "description": "Checks default action for fragmented packets in firewall policy.", "remediation_effort": "programmable" },

        { "function_name": "network_cloud_armor_policy_rule_group_has_rules", "category": "network", "execution_type": "code_executable", "description": "Validates Cloud Armor rule groups contain rules.", "remediation_effort": "programmable" },

        { "function_name": "network_https_ssl_proxy_predefined_policy_enforced", "category": "network", "execution_type": "code_executable", "description": "Verifies HTTPS SSL proxy enforces predefined policy.", "remediation_effort": "programmable" },

        { "function_name": "network_api_gateway_associated_with_security_policy", "category": "network", "execution_type": "code_executable", "description": "Checks API Gateway association with a security policy.", "remediation_effort": "programmable" },

        { "function_name": "network_vpn_authorization_policy_no_access_all", "category": "network", "execution_type": "code_executable", "description": "Ensures VPN auth policy does not grant access to all principals.", "remediation_effort": "programmable" },

        { "function_name": "network_backend_services_associated_with_cloud_armor_policy", "category": "network", "execution_type": "code_executable", "description": "Verifies backend services association with Cloud Armor.", "remediation_effort": "programmable" },

        { "function_name": "network_vpc_firewall_policy_stateless_default_action_fragmented_packets", "category": "network", "execution_type": "code_executable", "description": "Checks fragmented packet default action for VPC firewall policies.", "remediation_effort": "programmable" },

        { "function_name": "network_firewall_policy_has_rules", "category": "network", "execution_type": "code_executable", "description": "Ensures firewall policies include rules (non-empty).", "remediation_effort": "programmable" },

        { "function_name": "network_cloud_armor_policy_rules_present", "category": "network", "execution_type": "code_executable", "description": "Checks Cloud Armor policies have rules configured.", "remediation_effort": "programmable" },

        { "function_name": "network_vpc_firewall_policy_fragmented_packets_user_defined_ruleset", "category": "network", "execution_type": "code_executable", "description": "Validates user-defined fragmented packet rules for VPC firewall policy.", "remediation_effort": "programmable" },

        { "function_name": "network_load_balancer_ssl_certificates_predefined_policy", "category": "network", "execution_type": "code_executable", "description": "Reports predefined SSL certificate policy presence on LB.", "remediation_effort": "programmable" },

        { "function_name": "network_api_gateway_armor_policy_enforced", "category": "network", "execution_type": "code_executable", "description": "Verifies API Gateway enforces Cloud Armor policies.", "remediation_effort": "programmable" },

        { "function_name": "network_endpoints_armor_policy_enforced", "category": "network", "execution_type": "code_executable", "description": "Checks enforcement of Armor policy at network endpoints.", "remediation_effort": "programmable" },

        { "function_name": "network_ssl_policy_enforce_tls12_modern_or_restricted", "category": "network", "execution_type": "code_executable", "description": "Ensures SSL policy enforces TLS 1.2 (modern or restricted profile).", "remediation_effort": "programmable" },

        { "function_name": "network_ssl_policy_enforce_tls_1_2_or_restricted", "category": "network", "execution_type": "code_executable", "description": "Verifies SSL policy enforces TLS 1.2 or stronger.", "remediation_effort": "programmable" },

        { "function_name": "network_ssl_policy_enforce_secure_tls", "category": "network", "execution_type": "code_executable", "description": "Checks SSL policy enforces secure TLS cipher suites and versions.", "remediation_effort": "programmable" },

        { "function_name": "network_vpc_secure_transmission_policy", "category": "network", "execution_type": "code_executable", "description": "Validates VPC secure transmission policy configuration.", "remediation_effort": "programmable" },

        { "function_name": "gke_namespace_network_policy_defined", "category": "gke", "execution_type": "code_executable", "description": "Ensures namespace-level network policies are defined in GKE clusters.", "remediation_effort": "programmable" },

        { "function_name": "network_firewall_ipv6_default_deny_policy", "category": "network", "execution_type": "code_executable", "description": "Checks default deny policy exists for IPv6 firewall rules.", "remediation_effort": "programmable" },

        { "function_name": "iam_policies_disallow_blocked_kms_actions", "category": "kms", "execution_type": "code_executable", "description": "Checks IAM policies disallow blocked actions on KMS keys.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_policies_restrict_kms_blocked_actions", "category": "service_accounts", "execution_type": "code_executable", "description": "Ensures service account policies restrict blocked KMS actions.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_restrict_kms_actions", "category": "service_accounts", "execution_type": "code_executable", "description": "Validates service accounts are restricted from risky KMS actions.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_no_excessive_permissions", "category": "service_accounts", "execution_type": "code_executable", "description": "Detects service accounts with excessive permissions violating least privilege.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_home_directory_permission_check", "category": "os_compliance", "execution_type": "code_executable", "description": "Checks user home directory permissions meet OS security standards.", "remediation_effort": "programmable" },

        { "function_name": "gke_proxy_kubeconfig_file_permission_restricted", "category": "gke", "execution_type": "code_executable", "description": "Ensures kubeconfig permissions for GKE proxy are restrictive.", "remediation_effort": "programmable" },

        { "function_name": "gke_kubelet_config_file_permission_check", "category": "gke", "execution_type": "code_executable", "description": "Validates permissions for kubelet config files in GKE nodes.", "remediation_effort": "programmable" },

        { "function_name": "gke_cluster_bind_impersonate_escalate_permissions_limited", "category": "gke", "execution_type": "code_executable", "description": "Checks GKE cluster bind/impersonate/escalate permissions are limited.", "remediation_effort": "programmable" },

        { "function_name": "os_file_permission_configured", "category": "os_compliance", "execution_type": "code_executable", "description": "Verifies OS file permissions are configured per baseline.", "remediation_effort": "programmable" },

        { "function_name": "os_file_permissions_configured", "category": "os_compliance", "execution_type": "code_executable", "description": "Ensures OS-level file permissions comply with standards.", "remediation_effort": "programmable" },

        { "function_name": "gke_kubeconfig_file_permission_restrictive", "category": "gke", "execution_type": "code_executable", "description": "Checks kubeconfig file permissions on GKE are restrictive.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_ens_compliance", "category": "service_accounts", "execution_type": "code_executable", "description": "Validates ENS (enterprise naming/security) compliance for service accounts.", "remediation_effort": "programmable" },

        { "function_name": "iam_certificates_compliance_ens", "category": "credentials", "execution_type": "code_executable", "description": "Checks certificate management meets ENS compliance.", "remediation_effort": "programmable" },

        { "function_name": "iam_policies_legal_compliance_review", "category": "policy_management", "execution_type": "code_executable", "description": "Ensures IAM policies have undergone legal compliance review.", "remediation_effort": "programmable" },

        { "function_name": "iam_policies_external_party_compliance", "category": "policy_management", "execution_type": "code_executable", "description": "Checks IAM policies address compliance for external party access.", "remediation_effort": "programmable" },

        { "function_name": "iam_accounts_compliance_review", "category": "policy_management", "execution_type": "code_executable", "description": "Validates account-level compliance reviews are performed routinely.", "remediation_effort": "programmable" },

        { "function_name": "iam_policies_reflect_management_choices", "category": "policy_management", "execution_type": "code_executable", "description": "Verifies IAM policies reflect documented management decisions.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_identification_authentication_management", "category": "authentication", "execution_type": "code_executable", "description": "Checks user identification and authentication management processes.", "remediation_effort": "programmable" },

        { "function_name": "iam_access_risk_assessment", "category": "risk_management", "execution_type": "code_executable", "description": "Performs access risk assessment across principals and roles.", "remediation_effort": "programmable" },

        { "function_name": "iam_policies_public_access_restriction", "category": "policy_management", "execution_type": "code_executable", "description": "Ensures policies restrict public access where required.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_membership_in_group", "category": "groups", "execution_type": "code_executable", "description": "Validates user membership in required groups.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_service_account_group_no_inline_policies", "category": "policy_management", "execution_type": "code_executable", "description": "Ensures user-service-account groups do not carry inline policies.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_group_association", "category": "groups", "execution_type": "code_executable", "description": "Checks associations between users and groups are appropriate.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_account_no_owner_privileges", "category": "service_accounts", "execution_type": "code_executable", "description": "Ensures service accounts are not granted owner privileges.", "remediation_effort": "programmable" },

        { "function_name": "iam_group_has_user_association", "category": "groups", "execution_type": "code_executable", "description": "Validates groups have expected user associations.", "remediation_effort": "programmable" },

        { "function_name": "iam_group_user_assignment_required", "category": "groups", "execution_type": "code_executable", "description": "Ensures groups require user assignments and avoid orphan groups.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_account_no_inline_policies", "category": "service_accounts", "execution_type": "code_executable", "description": "Checks service accounts do not have inline policies attached.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_service_account_group_use_managed_policies", "category": "policy_management", "execution_type": "code_executable", "description": "Validates that user-service-account groups use managed policies.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_no_inline_policies", "category": "policy_management", "execution_type": "code_executable", "description": "Ensures users do not have inline policies where disallowed.", "remediation_effort": "programmable" },

        { "function_name": "iam_group_has_member", "category": "groups", "execution_type": "code_executable", "description": "Checks group membership has at least one valid member.", "remediation_effort": "programmable" },

        { "function_name": "iam_group_has_user", "category": "groups", "execution_type": "code_executable", "description": "Validates groups contain users (not only service accounts) where required.", "remediation_effort": "programmable" },

        { "function_name": "iam_groups_have_iam_user", "category": "groups", "execution_type": "code_executable", "description": "Ensures groups include IAM user principals as required.", "remediation_effort": "programmable" },

        { "function_name": "iam_group_membership_ensured", "category": "groups", "execution_type": "code_executable", "description": "Validates group membership is properly managed and enforced.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_no_direct_policies", "category": "policy_management", "execution_type": "code_executable", "description": "Checks users have no direct policy attachments (prefer groups).", "remediation_effort": "programmable" },

        { "function_name": "iam_group_user_association_required", "category": "groups", "execution_type": "code_executable", "description": "Enforces required associations between groups and users.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_account_policies_attached", "category": "service_accounts", "execution_type": "code_executable", "description": "Detects and validates policies attached to service accounts.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_mfa_enabled", "category": "authentication", "execution_type": "code_executable", "description": "Checks that multi-factor authentication is enabled for users.", "remediation_effort": "programmable" },

        { "function_name": "iam_users_mfa_enabled", "category": "authentication", "execution_type": "code_executable", "description": "Ensures MFA is enabled for all users in scope.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_account_mfa_enabled_root", "category": "authentication", "execution_type": "code_executable", "description": "Checks MFA enforcement for service accounts used by root-level operations.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_account_mfa_enabled", "category": "authentication", "execution_type": "code_executable", "description": "Verifies multi-factor authentication or equivalent protection for service account access where applicable.", "remediation_effort": "programmable" },

        { "function_name": "iam_account_mfa_enabled", "category": "authentication", "execution_type": "code_executable", "description": "Ensures account-level MFA is enabled for privileged accounts.", "remediation_effort": "programmable" },

        { "function_name": "iam_root_user_mfa_required", "category": "authentication", "execution_type": "code_executable", "description": "Verifies root user has MFA required in account settings.", "remediation_effort": "programmable" },

        { "function_name": "iam_identity_mfa_enabled", "category": "authentication", "execution_type": "code_executable", "description": "Checks MFA enforcement across identity types (user/service).", "remediation_effort": "programmable" },

        { "function_name": "iam_account_mfa_enabled_root_user", "category": "authentication", "execution_type": "code_executable", "description": "Ensures root account has MFA enabled.", "remediation_effort": "programmable" },

        { "function_name": "iam_root_user_mfa_enabled", "category": "authentication", "execution_type": "code_executable", "description": "Verifies root user MFA is enabled and active.", "remediation_effort": "programmable" },

        { "function_name": "iam_group_has_user_assigned", "category": "groups", "execution_type": "code_executable", "description": "Checks groups have assigned users as part of membership rules.", "remediation_effort": "programmable" },

        { "function_name": "iam_group_has_members", "category": "groups", "execution_type": "code_executable", "description": "Ensures groups have at least one member configured.", "remediation_effort": "programmable" },

        { "function_name": "iam_group_user_membership_required", "category": "groups", "execution_type": "code_executable", "description": "Enforces required group membership policies.", "remediation_effort": "programmable" },

        { "function_name": "iam_group_user_presence", "category": "groups", "execution_type": "code_executable", "description": "Checks presence of expected users in groups.", "remediation_effort": "programmable" },

        { "function_name": "iam_assets_inventory_maintained", "category": "inventory", "execution_type": "code_executable", "description": "Verifies IAM assets inventory is maintained and up-to-date.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_usage_documented", "category": "service_accounts", "execution_type": "code_executable", "description": "Ensures service account usage is documented for audits.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_ownership_termination", "category": "service_accounts", "execution_type": "code_executable", "description": "Checks ownership and termination processes for service accounts.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_access_control", "category": "service_accounts", "execution_type": "code_executable", "description": "Validates access control for service accounts follows least privilege.", "remediation_effort": "programmable" },

        { "function_name": "iam_identity_lifecycle_management", "category": "lifecycle", "execution_type": "code_executable", "description": "Verifies identity lifecycle management processes are in place.", "remediation_effort": "programmable" },

        { "function_name": "iam_authentication_management_process", "category": "authentication", "execution_type": "code_executable", "description": "Checks authentication management processes are documented and enforced.", "remediation_effort": "programmable" },

        { "function_name": "iam_access_rights_provisioned_reviewed", "category": "access_control", "execution_type": "code_executable", "description": "Ensures access rights provisioning and periodic review occur.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_risk_management", "category": "service_accounts", "execution_type": "code_executable", "description": "Validates risk management for service account usage.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_management_process", "category": "service_accounts", "execution_type": "code_executable", "description": "Checks service account management lifecycle processes are followed.", "remediation_effort": "programmable" },

        { "function_name": "iam_policies_documentation_up_to_date", "category": "policy_management", "execution_type": "code_executable", "description": "Verifies IAM policies documentation is up-to-date.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_pii_protection", "category": "service_accounts", "execution_type": "code_executable", "description": "Ensures service accounts handling PII follow protection controls.", "remediation_effort": "programmable" },

        { "function_name": "iam_policies_regular_review", "category": "policy_management", "execution_type": "code_executable", "description": "Checks IAM policies are subject to regular review cycles.", "remediation_effort": "programmable" },

        { "function_name": "iam_personnel_background_verification", "category": "personnel", "execution_type": "code_executable", "description": "Validates personnel background verification policies for privileged IAM roles.", "remediation_effort": "programmable" },

        { "function_name": "iam_policies_confidentiality_agreements_documented", "category": "policy_management", "execution_type": "code_executable", "description": "Ensures confidentiality agreements relevant to IAM are documented.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_privileged_access_restricted", "category": "service_accounts", "execution_type": "code_executable", "description": "Checks privileged access via service accounts is restricted and monitored.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_secure_authentication", "category": "service_accounts", "execution_type": "code_executable", "description": "Verifies secure authentication methods for service accounts (e.g., short-lived tokens).", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_termination_asset_return", "category": "service_accounts", "execution_type": "code_executable", "description": "Ensures assets and credentials tied to service accounts are returned/revoked on termination.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_supplier_risk_management", "category": "service_accounts", "execution_type": "code_executable", "description": "Checks third-party supplier risk controls for outsourced service accounts.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_access_restricted", "category": "service_accounts", "execution_type": "code_executable", "description": "Validates access restrictions on service accounts are applied.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_account_identification", "category": "service_accounts", "execution_type": "code_executable", "description": "Ensures unique identification and naming for service accounts.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_account_advanced_identification", "category": "service_accounts", "execution_type": "code_executable", "description": "Validates advanced identification attributes for service accounts (tags, owner info).", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_access_requirements", "category": "service_accounts", "execution_type": "code_executable", "description": "Checks documented access requirements for service accounts.", "remediation_effort": "programmable" },

        { "function_name": "iam_access_rights_management_process", "category": "access_control", "execution_type": "code_executable", "description": "Validates management processes for provisioning and deprovisioning access rights.", "remediation_effort": "programmable" },

        { "function_name": "iam_users_authentication_mechanism", "category": "authentication", "execution_type": "code_executable", "description": "Checks authentication mechanisms used by IAM users (MFA, hardware keys, SSO).", "remediation_effort": "programmable" },

        { "function_name": "iam_user_multifactor_authentication", "category": "authentication", "execution_type": "code_executable", "description": "Verifies multi-factor authentication usage for IAM users.", "remediation_effort": "programmable" },

        { "function_name": "iam_access_two_factor_uncontrolled_zones", "category": "authentication", "execution_type": "code_executable", "description": "Flags accounts in zones without enforced two-factor controls.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_account_access_control", "category": "service_accounts", "execution_type": "code_executable", "description": "Validates access control policies for service accounts.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_activity_coordination", "category": "service_accounts", "execution_type": "code_executable", "description": "Checks coordination and monitoring of service account activity.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_account_digital_signature_enabled", "category": "service_accounts", "execution_type": "code_executable", "description": "Verifies digital signature capabilities for service accounts where required.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_account_signature_verification", "category": "service_accounts", "execution_type": "code_executable", "description": "Ensures signature verification processes are in place for service account actions.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_account_advanced_electronic_signature", "category": "service_accounts", "execution_type": "code_executable", "description": "Checks advanced electronic signature usage associated with service account operations.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_account_access_management", "category": "service_accounts", "execution_type": "code_executable", "description": "Validates management of access assignments for service accounts.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_supply_chain_protection", "category": "service_accounts", "execution_type": "code_executable", "description": "Ensures service accounts in supply chain integrations are protected.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_account_digital_signature", "category": "service_accounts", "execution_type": "code_executable", "description": "Reports presence of digital signature capability for service accounts.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_advanced_electronic_signature", "category": "service_accounts", "execution_type": "code_executable", "description": "Checks advanced electronic signature configs for service accounts.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_qualified_certificates", "category": "service_accounts", "execution_type": "code_executable", "description": "Validates qualified certificate usage for critical service accounts.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_account_least_privilege", "category": "service_accounts", "execution_type": "code_executable", "description": "Ensures service accounts follow least privilege principles.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_least_privilege_enforced", "category": "service_accounts", "execution_type": "code_executable", "description": "Verifies enforcement of least privilege for service accounts.", "remediation_effort": "programmable" },

        { "function_name": "iam_account_creation_prevention", "category": "access_control", "execution_type": "code_executable", "description": "Checks controls preventing unauthorized account creation are in place.", "remediation_effort": "programmable" },

        { "function_name": "iam_authentication_mechanism_integrity", "category": "authentication", "execution_type": "code_executable", "description": "Validates integrity of authentication mechanisms (no weak configs).", "remediation_effort": "programmable" },

        { "function_name": "iam_service_account_token_protection", "category": "service_accounts", "execution_type": "code_executable", "description": "Ensures tokens for service accounts are protected and short-lived.", "remediation_effort": "programmable" },

        { "function_name": "iam_account_mfa_enforcement", "category": "authentication", "execution_type": "code_executable", "description": "Validates enforcement mechanisms for account MFA policy.", "remediation_effort": "programmable" },

        { "function_name": "iam_non_service_accounts_mfa_enabled", "category": "authentication", "execution_type": "code_executable", "description": "Checks MFA enabled for non-service (human) accounts.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_least_privilege", "category": "service_accounts", "execution_type": "code_executable", "description": "Redundant/linter-style check asserting least privilege for service accounts.", "remediation_effort": "programmable" },

        { "function_name": "iam_management_scope_documentation", "category": "policy_management", "execution_type": "code_executable", "description": "Verifies documentation of IAM management scope is present.", "remediation_effort": "programmable" },

        { "function_name": "iam_policies_documentation_approval", "category": "policy_management", "execution_type": "code_executable", "description": "Checks that policy documentation has required approvals.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_document_procedures", "category": "service_accounts", "execution_type": "code_executable", "description": "Ensures procedures for service account management are documented.", "remediation_effort": "programmable" },

        { "function_name": "iam_policies_documentation_review", "category": "policy_management", "execution_type": "code_executable", "description": "Validates regular review process for policy documentation.", "remediation_effort": "programmable" },

        { "function_name": "iam_asset_responsibility_management", "category": "inventory", "execution_type": "code_executable", "description": "Checks assignment of responsibility for IAM-related assets.", "remediation_effort": "programmable" },

        { "function_name": "iam_accounts_access_revocation_on_employee_exit", "category": "lifecycle", "execution_type": "code_executable", "description": "Ensures access revocation processes run on employee exit.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_external_risk_management", "category": "service_accounts", "execution_type": "code_executable", "description": "Checks external risk management for outsourced service account usage.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_contractual_requirements", "category": "service_accounts", "execution_type": "code_executable", "description": "Verifies contractual requirements for service accounts with suppliers.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_revoke_on_contract_expiry", "category": "service_accounts", "execution_type": "code_executable", "description": "Ensures service account access is revoked when contracts expire.", "remediation_effort": "programmable" },

        { "function_name": "iam_access_restriction_authorized_personnel", "category": "access_control", "execution_type": "code_executable", "description": "Checks access restrictions are limited to authorized personnel.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_access_minimal_privilege", "category": "access_control", "execution_type": "code_executable", "description": "Validates user access follows minimal privilege principles.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_unique_identifier_enforcement", "category": "identity", "execution_type": "code_executable", "description": "Ensures unique identifiers are enforced for IAM users.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_access_secure_authentication", "category": "authentication", "execution_type": "code_executable", "description": "Checks user access requires secure authentication methods.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_password_management_procedures", "category": "authentication", "execution_type": "code_executable", "description": "Validates password management procedures are documented and enforced.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_minimal_privileges", "category": "service_accounts", "execution_type": "code_executable", "description": "Checks service accounts are assigned minimal privileges necessary.", "remediation_effort": "programmable" },

        { "function_name": "iam_users_access_control_defined", "category": "access_control", "execution_type": "code_executable", "description": "Ensures user access control policies are defined and enforced.", "remediation_effort": "programmable" },

        { "function_name": "iam_administrator_access_protection_measures", "category": "roles", "execution_type": "code_executable", "description": "Verifies protection controls for administrator access.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_account_disclosure_third_party_outsourcing", "category": "service_accounts", "execution_type": "code_executable", "description": "Checks disclosures and controls for outsourced service account usage.", "remediation_effort": "programmable" },

        { "function_name": "iam_personal_information_protection_measures", "category": "policy_management", "execution_type": "code_executable", "description": "Ensures IAM policies include personal information protection measures.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_account_personal_info_protection", "category": "service_accounts", "execution_type": "code_executable", "description": "Validates protection of personal data accessed by service accounts.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_authorization_procedures", "category": "service_accounts", "execution_type": "code_executable", "description": "Checks authorization procedures for creating/using service accounts.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_account_access_appropriateness", "category": "service_accounts", "execution_type": "code_executable", "description": "Ensures service account access is appropriate for the intended use.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_account_access_termination", "category": "lifecycle", "execution_type": "code_executable", "description": "Validates termination procedures for service account access.", "remediation_effort": "programmable" },

        { "function_name": "iam_policies_authorize_ephi_access", "category": "policy_management", "execution_type": "code_executable", "description": "Ensures policies explicitly authorize ePHI access where required and controlled.", "remediation_effort": "programmable" },

        { "function_name": "iam_policies_protect_ephi_from_unauthorized_access", "category": "policy_management", "execution_type": "code_executable", "description": "Verifies policies protect ePHI from unauthorized access.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_account_access_policies", "category": "service_accounts", "execution_type": "code_executable", "description": "Checks service account access policies are present and enforced.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_access_rights_management", "category": "access_control", "execution_type": "code_executable", "description": "Validates processes for managing user access rights.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_identity_unique_identifier", "category": "identity", "execution_type": "code_executable", "description": "Checks unique identifier enforcement for user identities.", "remediation_effort": "programmable" },

        { "function_name": "iam_entity_access_verification", "category": "access_control", "execution_type": "code_executable", "description": "Performs verification of entity access against policies.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_password_complexity_enforced", "category": "authentication", "execution_type": "code_executable", "description": "Ensures password complexity requirements are enforced for users.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_automated_management", "category": "service_accounts", "execution_type": "code_executable", "description": "Checks service accounts are managed via automated processes where possible.", "remediation_effort": "programmable" },

        { "function_name": "iam_accounts_monitor_atypical_use", "category": "monitoring", "execution_type": "code_executable", "description": "Detects and alerts on atypical account usage patterns.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_procedural_management", "category": "service_accounts", "execution_type": "code_executable", "description": "Validates procedural management for service accounts.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_accounts_disable_inactive_after_90_days", "category": "lifecycle", "execution_type": "code_executable", "description": "Checks that inactive user accounts are disabled after 90 days.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_enforce_access_policies", "category": "service_accounts", "execution_type": "code_executable", "description": "Ensures service accounts enforce the organization's access policies.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_least_privilege_enforced", "category": "access_control", "execution_type": "code_executable", "description": "Verifies users adhere to least privilege principles.", "remediation_effort": "programmable" },

        { "function_name": "iam_accounts_multifactor_authentication_enabled", "category": "authentication", "execution_type": "code_executable", "description": "Ensures accounts have multi-factor authentication enabled across scope.", "remediation_effort": "programmable" },

        { "function_name": "iam_privileged_accounts_mfa_enabled", "category": "authentication", "execution_type": "code_executable", "description": "Checks MFA is enabled for privileged accounts.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_unique_identification_authentication", "category": "identity", "execution_type": "code_executable", "description": "Ensures unique identification and authentication linkage for users.", "remediation_effort": "programmable" },

        { "function_name": "iam_password_authenticator_strength", "category": "authentication", "execution_type": "code_executable", "description": "Validates strength of password authenticators used by users.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_no_unencrypted_authenticators", "category": "service_accounts", "execution_type": "code_executable", "description": "Checks service accounts do not use unencrypted authenticators.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_manage_privileges", "category": "service_accounts", "execution_type": "code_executable", "description": "Validates processes for managing service account privileges.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_account_enforce_authorizations", "category": "service_accounts", "execution_type": "code_executable", "description": "Ensures authorization enforcement on service account actions.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_unique_identification", "category": "identity", "execution_type": "code_executable", "description": "Reports on unique identification enforcement across users.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_account_no_admin_access", "category": "service_accounts", "execution_type": "code_executable", "description": "Checks service accounts are not granted admin access unless justified.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_account_no_admin_privileges", "category": "service_accounts", "execution_type": "code_executable", "description": "Verifies service accounts do not have admin privileges assigned.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_password_reuse_limited", "category": "authentication", "execution_type": "code_executable", "description": "Ensures password reuse is limited per policy for users.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_password_hashing_sha512", "category": "authentication", "execution_type": "code_executable", "description": "Checks password hashing uses SHA-512 or stronger algorithms.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_password_expiration_days", "category": "authentication", "execution_type": "code_executable", "description": "Verifies user password expiration days meet policy.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_min_password_change_days", "category": "authentication", "execution_type": "code_executable", "description": "Checks minimum days between password changes are enforced.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_password_expiration_warning_days", "category": "authentication", "execution_type": "code_executable", "description": "Verifies password expiration warning days configuration.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_inactive_password_lock", "category": "authentication", "execution_type": "code_executable", "description": "Ensures accounts are locked after inactivity or expired passwords.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_password_change_date_past", "category": "authentication", "execution_type": "code_executable", "description": "Checks last password change date is within acceptable timeframe.", "remediation_effort": "programmable" },

        { "function_name": "iam_system_accounts_shell_access_restricted", "category": "os_compliance", "execution_type": "code_executable", "description": "Ensures system accounts have shell access restricted.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_password_not_empty", "category": "authentication", "execution_type": "code_executable", "description": "Checks no user account has an empty password field.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_home_directory_exists", "category": "os_compliance", "execution_type": "code_executable", "description": "Validates user home directories exist for accounts.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_home_directory_ownership", "category": "os_compliance", "execution_type": "code_executable", "description": "Checks ownership of user home directories is correct.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_no_forward_files", "category": "os_compliance", "execution_type": "code_executable", "description": "Ensures users do not have unauthorized forward files configured.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_no_duplicate_uids", "category": "os_compliance", "execution_type": "code_executable", "description": "Detects duplicate UIDs among user accounts to prevent collisions.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_duplicate_check", "category": "os_compliance", "execution_type": "code_executable", "description": "Performs duplicate user account name/UID checks.", "remediation_effort": "programmable" },

        { "function_name": "iam_group_no_duplicate_names", "category": "groups", "execution_type": "code_executable", "description": "Checks for duplicate group names in IAM directory.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_account_no_default_usage", "category": "service_accounts", "execution_type": "code_executable", "description": "Ensures service accounts are not used as default identities where disallowed.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_account_token_mount_restriction", "category": "service_accounts", "execution_type": "code_executable", "description": "Validates tokens are not mounted in filesystems or containers insecurely.", "remediation_effort": "programmable" },

        { "function_name": "iam_group_system_masters_avoidance", "category": "groups", "execution_type": "code_executable", "description": "Flags use of system master groups and recommends avoidance.", "remediation_effort": "programmable" },

        { "function_name": "iam_legacy_authorization_disabled", "category": "access_control", "execution_type": "code_executable", "description": "Checks legacy authorization mechanisms are disabled.", "remediation_effort": "programmable" },

        { "function_name": "iam_group_system_masters_usage_avoided", "category": "groups", "execution_type": "code_executable", "description": "Ensures system master groups are not used for day-to-day operations.", "remediation_effort": "programmable" },

        { "function_name": "iam_super_admin_account_multiple_exists", "category": "roles", "execution_type": "code_executable", "description": "Detects multiple super-admin accounts and flags for review.", "remediation_effort": "programmable" },

        { "function_name": "iam_super_admin_accounts_limit", "category": "roles", "execution_type": "code_executable", "description": "Checks limit enforcement on number of super-admin accounts.", "remediation_effort": "programmable" },

        { "function_name": "iam_super_admin_activity_restriction", "category": "roles", "execution_type": "code_executable", "description": "Ensures restrictions on super-admin activities are in place and logged.", "remediation_effort": "programmable" },

        { "function_name": "iam_group_external_access_private", "category": "groups", "execution_type": "code_executable", "description": "Validates external access settings on groups are private where required.", "remediation_effort": "programmable" },

        { "function_name": "iam_group_creation_restricted", "category": "groups", "execution_type": "code_executable", "description": "Checks group creation is restricted to authorized roles.", "remediation_effort": "programmable" },

        { "function_name": "iam_group_external_members_restricted", "category": "groups", "execution_type": "code_executable", "description": "Ensures external members are restricted from joining sensitive groups.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_account_recovery_enabled", "category": "authentication", "execution_type": "code_executable", "description": "Verifies account recovery mechanisms are enabled and secure.", "remediation_effort": "programmable" },

        { "function_name": "iam_session_control_configured", "category": "authentication", "execution_type": "code_executable", "description": "Checks session control policies (timeout, re-auth) are configured.", "remediation_effort": "programmable" },

        { "function_name": "iam_admin_accounts_security_key_enforcement", "category": "authentication", "execution_type": "code_executable", "description": "Ensures admin accounts enforce hardware/security key usage.", "remediation_effort": "programmable" },

        { "function_name": "iam_admin_accounts_security_key_enforcement_enabled", "category": "authentication", "execution_type": "code_executable", "description": "Verifies enforcement of security key usage for admin accounts.", "remediation_effort": "programmable" },

        { "function_name": "iam_admin_security_key_enforcement", "category": "authentication", "execution_type": "code_executable", "description": "Validates admin security key enforcement for privileged access.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_hardware_security_key_enforced", "category": "authentication", "execution_type": "code_executable", "description": "Checks users required to use hardware security keys have them enforced.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_corporate_login_credentials", "category": "service_accounts", "execution_type": "code_executable", "description": "Ensures service accounts use corporate credential processes where applicable.", "remediation_effort": "programmable" },

        { "function_name": "iam_api_key_usage_restriction", "category": "credentials", "execution_type": "code_executable", "description": "Checks API keys are restricted in usage and scope.", "remediation_effort": "programmable" },

        { "function_name": "iam_api_keys_rotation_enforced", "category": "credentials", "execution_type": "code_executable", "description": "Verifies API key rotation policy is enforced.", "remediation_effort": "programmable" },

        { "function_name": "iam_api_keys_standard_authentication_enforced", "category": "credentials", "execution_type": "code_executable", "description": "Ensures API keys use standard authentication controls.", "remediation_effort": "programmable" },

        { "function_name": "iam_api_keys_restricted_usage", "category": "credentials", "execution_type": "code_executable", "description": "Validates that API keys are restricted to required services.", "remediation_effort": "programmable" },

        { "function_name": "iam_api_keys_active_services_only", "category": "credentials", "execution_type": "code_executable", "description": "Checks API keys are active only for services that need them.", "remediation_effort": "programmable" },

        { "function_name": "iam_api_keys_host_app_restriction", "category": "credentials", "execution_type": "code_executable", "description": "Enforces host/app restrictions on API keys.", "remediation_effort": "programmable" },

        { "function_name": "iam_api_key_restriction_enforced", "category": "credentials", "execution_type": "code_executable", "description": "Verifies API key restrictions are enforced per policy.", "remediation_effort": "programmable" },

        { "function_name": "iam_api_keys_rotation_90_days", "category": "credentials", "execution_type": "code_executable", "description": "Checks API key rotation schedule of 90 days is followed.", "remediation_effort": "programmable" },

        { "function_name": "iam_api_keys_restricted_to_needed_apis", "category": "credentials", "execution_type": "code_executable", "description": "Ensures API keys are restricted to only needed APIs.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_accounts_restrict_kms_key_actions", "category": "service_accounts", "execution_type": "code_executable", "description": "Ensures service accounts are restricted from risky KMS key actions.", "remediation_effort": "programmable" },

        { "function_name": "kms_keys_iam_policies_blocked_actions_absent", "category": "kms", "execution_type": "code_executable", "description": "Checks KMS IAM policies do not include blocked actions.", "remediation_effort": "programmable" },

        { "function_name": "iam_root_user_access_key_absent", "category": "credentials", "execution_type": "code_executable", "description": "Verifies root user access keys are absent or disabled.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_account_key_absent", "category": "credentials", "execution_type": "code_executable", "description": "Checks that service accounts do not have disallowed long-lived keys.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_inactive_access_keys", "category": "credentials", "execution_type": "code_executable", "description": "Detects inactive access keys associated with users for cleanup.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_account_keys_recent_usage", "category": "credentials", "execution_type": "code_executable", "description": "Reports on recent usage of service account keys to detect stale keys.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_account_no_root_key", "category": "credentials", "execution_type": "code_executable", "description": "Ensures service accounts are not holding root-level keys.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_account_key_absent_for_root_user", "category": "credentials", "execution_type": "code_executable", "description": "Verifies root user has no service-account key present.", "remediation_effort": "programmable" },

        { "function_name": "iam_users_inactive_passwords_or_keys", "category": "credentials", "execution_type": "code_executable", "description": "Detects inactive passwords or keys associated with user accounts.", "remediation_effort": "programmable" },

        { "function_name": "iam_service_account_keys_rotated_within_max_age", "category": "credentials", "execution_type": "code_executable", "description": "Checks service account keys are rotated within maximum age.", "remediation_effort": "programmable" },

        { "function_name": "iam_user_root_access_key_absent", "category": "credentials", "execution_type": "code_executable", "description": "Ensures root user does not possess access keys.", "remediation_effort": "programmable" },
        {
          "function_name": "iam_service_account_keys_rotated_within_period",
          "category": "credentials",
          "execution_type": "code_executable",
          "description": "Checks if service account keys are rotated within the required period.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_access_keys_rotated_within_max_age",
          "category": "credentials",
          "execution_type": "code_executable",
          "description": "Ensures IAM access keys are rotated before exceeding maximum allowed age.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_service_account_keys_unused",
          "category": "credentials",
          "execution_type": "code_executable",
          "description": "Detects unused IAM service account keys and flags for removal.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_service_account_key_absent_for_root",
          "category": "credentials",
          "execution_type": "code_executable",
          "description": "Ensures no service account key is present for root or highly privileged accounts.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_users_passwords_keys_unused_days",
          "category": "credentials",
          "execution_type": "code_executable",
          "description": "Checks if IAM user passwords or keys remain unused for defined days.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_service_account_key_rotation_within_max_age",
          "category": "credentials",
          "execution_type": "code_executable",
          "description": "Ensures service account keys are rotated within a maximum defined age.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_service_accounts_no_user_managed_keys",
          "category": "credentials",
          "execution_type": "code_executable",
          "description": "Verifies service accounts do not use user-managed keys.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_service_account_keys_rotation",
          "category": "credentials",
          "execution_type": "code_executable",
          "description": "Checks that service account keys follow a defined rotation policy.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_service_account_gcp_managed_keys_only",
          "category": "credentials",
          "execution_type": "code_executable",
          "description": "Ensures only GCP-managed keys are used by service accounts.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_service_account_key_rotation_90_days",
          "category": "credentials",
          "execution_type": "code_executable",
          "description": "Checks if service account keys are rotated within 90 days.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_service_account_keys_rotated",
          "category": "credentials",
          "execution_type": "code_executable",
          "description": "Verifies that all service account keys have been rotated recently.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_service_account_no_user_managed_keys",
          "category": "credentials",
          "execution_type": "code_executable",
          "description": "Ensures no user-managed keys are attached to service accounts.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_user_access_credential_management",
          "category": "access_control",
          "execution_type": "code_executable",
          "description": "Checks whether IAM users manage credentials according to policy.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_account_credential_integrity",
          "category": "access_control",
          "execution_type": "code_executable",
          "description": "Validates integrity of IAM account credentials.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_service_accounts_corporate_credentials",
          "category": "identity_governance",
          "execution_type": "code_executable",
          "description": "Ensures service accounts use corporate-managed credentials.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_user_corporate_credentials_enforced",
          "category": "identity_governance",
          "execution_type": "code_executable",
          "description": "Enforces use of corporate credentials for IAM users.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_supplier_security_requirements_established",
          "category": "governance",
          "execution_type": "manual_effort",
          "description": "Confirms supplier security requirements are established for IAM access.",
          "remediation_effort": "manual_effort"
        },
        {
          "function_name": "iam_application_security_requirements_specified",
          "category": "governance",
          "execution_type": "manual_effort",
          "description": "Ensures application security requirements are specified in IAM policies.",
          "remediation_effort": "manual_effort"
        },
        {
          "function_name": "iam_personnel_contractual_agreements_information_security_responsibilities",
          "category": "governance",
          "execution_type": "manual_effort",
          "description": "Verifies personnel agreements define IAM-related security responsibilities.",
          "remediation_effort": "manual_effort"
        },
        {
          "function_name": "iam_personnel_security_agreement_signed",
          "category": "governance",
          "execution_type": "manual_effort",
          "description": "Confirms signed agreements for personnel handling IAM responsibilities.",
          "remediation_effort": "manual_effort"
        },
        {
          "function_name": "iam_system_development_lifecycle_security_incorporation",
          "category": "governance",
          "execution_type": "manual_effort",
          "description": "Ensures IAM security is integrated into system development lifecycle.",
          "remediation_effort": "manual_effort"
        },
        {
          "function_name": "iam_organization_public_access_prevention_configured",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Checks if organization policies prevent public access.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_organization_policies_configured",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Checks if IAM organization-level policies are properly configured.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_project_public_access_policies_configured",
          "category": "access_control",
          "execution_type": "code_executable",
          "description": "Ensures that project-level IAM public access policies are explicitly configured.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_project_public_access_restricted",
          "category": "access_control",
          "execution_type": "code_executable",
          "description": "Verifies that public access to the project is restricted.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_project_organization_membership",
          "category": "identity_management",
          "execution_type": "code_executable",
          "description": "Checks if the project is properly associated with an organization.",
          "remediation_effort": "manual"
        },
        {
          "function_name": "iam_project_organization_linked",
          "category": "identity_management",
          "execution_type": "code_executable",
          "description": "Verifies that the project is linked to the correct organization.",
          "remediation_effort": "manual"
        },
        {
          "function_name": "iam_account_organization_membership",
          "category": "identity_management",
          "execution_type": "code_executable",
          "description": "Ensures that IAM accounts are associated with the organization.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_project_organization_association",
          "category": "identity_management",
          "execution_type": "code_executable",
          "description": "Validates that the project has an active association with its organization.",
          "remediation_effort": "manual"
        },
        {
          "function_name": "iam_project_public_access_configured",
          "category": "access_control",
          "execution_type": "code_executable",
          "description": "Checks if project public access settings are configured securely.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_project_security_contact_provided",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Verifies that a security contact is configured for the project.",
          "remediation_effort": "manual"
        },
        {
          "function_name": "iam_project_public_access_prevention_configured",
          "category": "access_control",
          "execution_type": "code_executable",
          "description": "Checks if project-level public access prevention is configured.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_project_management_security_integration",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Ensures project management integrates with security monitoring and controls.",
          "remediation_effort": "manual"
        },
        {
          "function_name": "iam_organization_essential_contacts_configured",
          "category": "policy_management",
          "execution_type": "code_executable",
          "description": "Checks if essential contacts (security, compliance) are configured at the organization level.",
          "remediation_effort": "manual"
        },
        {
          "function_name": "iam_service_accounts_outsourced_development_monitoring",
          "category": "service_account_management",
          "execution_type": "code_executable",
          "description": "Monitors usage of service accounts linked to outsourced development teams.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_accounts_usage_monitoring",
          "category": "identity_management",
          "execution_type": "code_executable",
          "description": "Monitors activity and usage of IAM accounts to detect anomalies.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_user_password_change_alert_configured",
          "category": "alerting_monitoring",
          "execution_type": "code_executable",
          "description": "Checks if alerts are configured for user password changes.",
          "remediation_effort": "programmable"
        },
        {
          "function_name": "iam_user_suspension_alert_configured",
          "category": "alerting_monitoring",
          "execution_type": "code_executable",
          "description": "Verifies that alerts are enabled for user account suspensions.",
          "remediation_effort": "programmable"
        },
          {
          "function_name": "iam_user_admin_privilege_alert_configured",
          "category": "security",
          "description": "Checks if alerts are configured for users with admin privileges.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_user_suspicious_programmatic_login_alert_configured",
          "category": "security",
          "description": "Checks if alerts are configured for suspicious programmatic logins by IAM users.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_user_suspicious_login_alert_configured",
          "category": "security",
          "description": "Checks if alerts are configured for suspicious login attempts by IAM users.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_user_leaked_password_alert_configured",
          "category": "security",
          "description": "Checks if alerts are configured when a leaked password associated with an IAM user is detected.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_roles_define_authorities_responsibilities",
          "category": "governance",
          "description": "Checks if IAM roles are clearly defined with documented authorities and responsibilities.",
          "execution_type": "Manual",
          "remediation_effort": "Documented"
        },
        {
          "function_name": "iam_roles_access_restriction",
          "category": "security",
          "description": "Checks if IAM roles enforce access restrictions according to least privilege.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_role_based_access_control_implementation",
          "category": "security",
          "description": "Checks if role-based access control (RBAC) is implemented and enforced.",
          "execution_type": "Manual",
          "remediation_effort": "Architectural"
        },
        {
          "function_name": "iam_project_roles_configured",
          "category": "security",
          "description": "Checks if project-specific IAM roles are configured correctly.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_service_account_managed_roles_associated",
          "category": "security",
          "description": "Checks if service accounts use managed roles instead of custom or overly permissive roles.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_user_no_direct_roles",
          "category": "security",
          "description": "Checks that IAM users are not assigned direct roles and instead use groups or service accounts.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_user_no_custom_roles",
          "category": "security",
          "description": "Checks if IAM users are prevented from being assigned custom roles.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_roles_no_inline_policies",
          "category": "security",
          "description": "Checks if IAM roles do not have inline policies attached directly.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_role_policies_attached",
          "category": "security",
          "description": "Checks if required IAM policies are attached to roles.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_elasticsearch_roles_configured",
          "category": "security",
          "description": "Checks if Elasticsearch-related IAM roles are properly configured with least privilege.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_service_account_predefined_roles_assigned",
          "category": "security",
          "description": "Checks if service accounts are only assigned predefined roles instead of custom or overly permissive ones.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_user_no_direct_custom_roles",
          "category": "security",
          "description": "Checks if IAM users are not directly assigned custom roles.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_role_managed_policies_attached",
          "category": "security",
          "description": "Checks if IAM roles use managed policies instead of inline policies.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_roles_required_policies_attached",
          "category": "security",
          "description": "Checks if mandatory IAM policies are attached to specific roles.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "gke_workload_identity_no_owner_role",
          "category": "security",
          "description": "Checks that GKE workload identities are not assigned the owner role.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "gke_workload_identity_no_editor_owner_roles",
          "category": "security",
          "description": "Checks that GKE workload identities are not assigned editor or owner roles.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_roles_no_full_access",
          "category": "security",
          "description": "Checks if IAM roles avoid full access permissions and follow least privilege principles.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_user_roles_inherited",
          "category": "security",
          "description": "Checks if IAM users inherit roles through groups or policies instead of direct assignment.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_user_role_group_no_inline_policies",
          "category": "security",
          "description": "Checks if IAM user groups do not have inline policies attached directly.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_role_no_full_access",
          "category": "security",
          "description": "Checks if IAM roles do not have unrestricted full access permissions.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
          {
          "function_name": "iam_service_accounts_roles_blocked_actions_on_kms_keys",
          "category": "security",
          "description": "Checks if service accounts are restricted from performing blocked actions on KMS keys.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "gke_workload_identity_no_owner_role_key",
          "category": "security",
          "description": "Ensures GKE workload identities are not granted the owner role on key resources.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "security_project_role_configured_for_team_access",
          "category": "governance",
          "description": "Checks if security project roles are configured properly to control team access.",
          "execution_type": "Manual",
          "remediation_effort": "Documented"
        },
        {
          "function_name": "iam_roles_responsibilities_defined",
          "category": "governance",
          "description": "Ensures IAM roles have clearly defined responsibilities.",
          "execution_type": "Manual",
          "remediation_effort": "Documented"
        },
        {
          "function_name": "iam_roles_duties_segregated",
          "category": "security",
          "description": "Checks if duties are segregated across IAM roles to prevent conflicts of interest.",
          "execution_type": "Manual",
          "remediation_effort": "Architectural"
        },
        {
          "function_name": "iam_roles_information_classification",
          "category": "governance",
          "description": "Ensures IAM roles follow information classification principles for access.",
          "execution_type": "Manual",
          "remediation_effort": "Documented"
        },
        {
          "function_name": "iam_roles_information_security_responsibilities",
          "category": "governance",
          "description": "Checks if IAM roles include clearly defined information security responsibilities.",
          "execution_type": "Manual",
          "remediation_effort": "Documented"
        },
        {
          "function_name": "iam_roles_post_employment_responsibilities_defined",
          "category": "governance",
          "description": "Ensures IAM role responsibilities extend to post-employment obligations where required.",
          "execution_type": "Manual",
          "remediation_effort": "Documented"
        },
        {
          "function_name": "iam_roles_source_code_access_management",
          "category": "security",
          "description": "Checks if IAM roles are properly defined to manage source code access restrictions.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_roles_classification_based_on_security_needs",
          "category": "governance",
          "description": "Ensures IAM roles are classified and designed based on security requirements.",
          "execution_type": "Manual",
          "remediation_effort": "Documented"
        },
        {
          "function_name": "iam_roles_least_privilege",
          "category": "security",
          "description": "Checks that IAM roles follow the principle of least privilege.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_roles_segregation_of_duties",
          "category": "security",
          "description": "Ensures IAM roles enforce segregation of duties to prevent privilege abuse.",
          "execution_type": "Manual",
          "remediation_effort": "Architectural"
        },
        {
          "function_name": "iam_roles_function_segregation",
          "category": "security",
          "description": "Checks if critical functions are segregated across IAM roles to reduce risk.",
          "execution_type": "Manual",
          "remediation_effort": "Architectural"
        },
        {
          "function_name": "iam_roles_permissions_discovery_prevention",
          "category": "security",
          "description": "Ensures IAM roles prevent discovery of sensitive permissions.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_roles_permissions_discovery_prevent",
          "category": "security",
          "description": "Checks if IAM policies prevent users from enumerating or discovering permissions.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_roles_permissions_discovery_protection",
          "category": "security",
          "description": "Ensures IAM configurations protect against permission discovery attacks.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_service_account_role_assignment_specific",
          "category": "security",
          "description": "Checks if service accounts are assigned only specific roles required for functionality.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_service_account_role_separation_of_duties",
          "category": "security",
          "description": "Ensures service account roles are designed to enforce separation of duties.",
          "execution_type": "Manual",
          "remediation_effort": "Architectural"
        },
        {
          "function_name": "iam_project_owner_role_restriction",
          "category": "security",
          "description": "Checks that the owner role is restricted and not widely assigned at the project level.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_project_no_service_account_roles",
          "category": "security",
          "description": "Ensures projects do not assign roles directly to service accounts unnecessarily.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_service_account_roles_separation_of_duties",
          "category": "security",
          "description": "Checks if service account roles enforce proper separation of duties.",
          "execution_type": "Manual",
          "remediation_effort": "Architectural"
        },
        {
          "function_name": "iam_roles_executive_appointment",
          "category": "governance",
          "description": "Ensures executive-level IAM roles are properly appointed and documented.",
          "execution_type": "Manual",
          "remediation_effort": "Documented"
        },
        {
          "function_name": "iam_roles_information_protection_committee_established",
          "category": "governance",
          "description": "Checks if an information protection committee is established and tied to IAM role governance.",
          "execution_type": "Manual",
          "remediation_effort": "Documented"
        },
        {
          "function_name": "iam_roles_expertise_allocation",
          "category": "governance",
          "description": "Ensures expertise allocation is considered when defining IAM roles.",
          "execution_type": "Manual",
          "remediation_effort": "Documented"
        },
        {
          "function_name": "iam_roles_training_implementation",
          "category": "governance",
          "description": "Checks if security and compliance training is implemented for IAM role holders.",
          "execution_type": "Manual",
          "remediation_effort": "Documented"
        },
        {
          "function_name": "iam_roles_responsibilities_assignment",
          "category": "governance",
          "description": "Ensures IAM role responsibilities are clearly assigned to appropriate individuals or teams.",
          "execution_type": "Manual",
          "remediation_effort": "Documented"
        },
        {
          "function_name": "iam_roles_minimize_key_personnel",
          "category": "security",
          "description": "Checks if IAM role assignments minimize dependency on key personnel to reduce risk.",
          "execution_type": "Manual",
          "remediation_effort": "Architectural"
        },
        {
          "function_name": "iam_roles_separation_of_duties_enforced",
          "category": "security",
          "description": "Ensures segregation of duties is enforced across IAM roles.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_roles_privilege_abuse_prevention",
          "category": "security",
          "description": "Checks IAM configurations to prevent privilege abuse within roles.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_roles_personal_info_third_party_protection",
          "category": "privacy",
          "description": "Ensures IAM roles enforce protections for personal information shared with third parties.",
          "execution_type": "Manual",
          "remediation_effort": "Documented"
        },
        {
          "function_name": "iam_roles_appropriate_access",
          "category": "security",
          "description": "Checks that IAM roles are granted only appropriate levels of access based on requirements.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_roles_least_privilege_enforcement",
          "category": "security",
          "description": "Ensures IAM roles enforce least privilege across all assignments.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_roles_privileged_access_management",
          "category": "security",
          "description": "Checks if privileged access management is enforced for IAM roles.",
          "execution_type": "Manual",
          "remediation_effort": "Architectural"
        },
        {
          "function_name": "iam_roles_define_separation_of_duties",
          "category": "governance",
          "description": "Ensures that IAM roles are defined with clear separation of duties responsibilities.",
          "execution_type": "Manual",
          "remediation_effort": "Documented"
        },
        {
          "function_name": "iam_roles_prevent_privileged_function_execution",
          "category": "security",
          "description": "Checks that IAM roles prevent execution of privileged functions unless explicitly approved.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_roles_separate_user_management",
          "category": "security",
          "description": "Ensures IAM roles separate user management duties from other critical security functions.",
          "execution_type": "Manual",
          "remediation_effort": "Architectural"
        },
        {
          "function_name": "iam_roles_define_security_responsibilities",
          "category": "governance",
          "description": "Checks if IAM roles have defined responsibilities for security management.",
          "execution_type": "Manual",
          "remediation_effort": "Documented"
        },
        {
          "function_name": "iam_service_account_no_owner_role",
          "category": "security",
          "description": "Checks that no service accounts are assigned the owner role.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_service_account_no_editor_owner_roles",
          "category": "security",
          "description": "Ensures service accounts are not assigned editor or owner roles.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_service_account_no_owner_role_key",
          "category": "security",
          "description": "Checks that service accounts with keys are not assigned the owner role.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_roles_minimize_wildcard_use",
          "category": "security",
          "description": "Ensures IAM roles minimize or eliminate the use of wildcard permissions.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_bindings_avoid_system_anonymous",
          "category": "security",
          "description": "Checks if IAM bindings avoid granting access to system:anonymous users.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_bindings_system_authenticated_check",
          "category": "security",
          "description": "Ensures IAM bindings for system:authenticated users are reviewed and restricted.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "security_incident_response_roles_assigned",
          "category": "governance",
          "description": "Checks if incident response roles are formally assigned and documented.",
          "execution_type": "Manual",
          "remediation_effort": "Documented"
        },
        {
          "function_name": "security_command_center_access_role_configured",
          "category": "security",
          "description": "Ensures IAM roles for Security Command Center access are configured securely.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "kms_roles_separation_of_duties_enforced",
          "category": "security",
          "description": "Checks if KMS-related IAM roles enforce separation of duties.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "gke_cluster_admin_role_restriction",
          "category": "security",
          "description": "Ensures GKE cluster admin role is restricted and not overly assigned.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "gke_roles_clusterroles_minimize_wildcard_use",
          "category": "security",
          "description": "Checks if GKE cluster roles minimize wildcard permissions.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "gke_cluster_role_bindings_system_anonymous_avoided",
          "category": "security",
          "description": "Ensures GKE cluster role bindings avoid granting access to system:anonymous.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "gke_cluster_role_binding_system_unauthenticated_check",
          "category": "security",
          "description": "Checks if GKE cluster role bindings for unauthenticated users are restricted.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "gke_cluster_service_account_artifact_registry_viewer_role",
          "category": "security",
          "description": "Ensures GKE cluster service accounts are granted only Artifact Registry viewer role where required.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "logging_metric_filter_alerts_for_custom_role_changes",
          "category": "logging",
          "description": "Checks if metric filters and alerts are configured for IAM custom role changes.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "logging_iam_role_change_alert",
          "category": "logging",
          "description": "Ensures logging alerts are enabled for IAM role changes.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "gke_clusterrolebindings_system_authenticated_restrictions",
          "category": "security",
          "description": "Checks if GKE cluster role bindings for system:authenticated users are restricted.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "os_login_user_dot_files_permissions_restricted",
          "category": "security",
          "description": "Ensures OS Login user dot files have restricted permissions.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "log_files_permission_configured",
          "category": "logging",
          "description": "Checks if log file permissions are configured to restrict unauthorized access.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_service_accounts_corporate_login_enforced",
          "category": "security",
          "description": "Ensures service accounts require corporate login for authentication.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_service_accounts_corporate_login_required",
          "category": "security",
          "description": "Checks if service accounts require corporate login instead of external accounts.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_user_account_activity_logging",
          "category": "logging",
          "description": "Ensures IAM user activity is logged for auditing purposes.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_account_audit_notifications",
          "category": "logging",
          "description": "Checks if audit notifications are enabled for IAM account activity.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_user_corporate_login_used",
          "category": "security",
          "description": "Ensures IAM users authenticate using corporate login credentials.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "dataproc_cluster_iam_conditions_enabled",
          "category": "security",
          "description": "Checks if IAM conditions are enabled for Dataproc clusters.",
          "execution_type": "Code Executable",
          "remediation_effort": "Configurable"
        },
        {
          "function_name": "iam_service_accounts_data_subject_notification",
          "category": "privacy",
          "description": "Ensures data subjects are notified when service accounts access sensitive data.",
          "execution_type": "Manual",
          "remediation_effort": "Documented"
        }
      ]
    }
  }
}
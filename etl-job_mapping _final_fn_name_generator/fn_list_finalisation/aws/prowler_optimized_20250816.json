{
  "scan_metadata": {
    "description": "AWS Compliance Services and Check Functions Mapping - OPTIMIZED VERSION",
    "total_services": 96,
    "total_check_functions": 1185,
    "total_unique_functions": 1100,
    "total_duplicates_removed": 85,
    "generated_from": "src/compliance_engine/aws/services folder structure",
    "last_updated": "2025-08-16T23:47:29.016168",
    "optimization_notes": "Removed duplicate functions by purpose, grouped by service, simplified to 4 clear categories"
  },
  "services": {
    "accessanalyzer": {
      "service_name": "accessanalyzer",
      "service_category": "Security & Identity",
      "check_functions": [
        {
          "function_name": "accessanalyzer_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check service status",
          "description": "Verifies that AWS IAM Access Analyzer is enabled for the account",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "accessanalyzer_enabled_without_findings",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to list findings",
          "description": "Verifies Access Analyzer is enabled and checks for any security findings",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 2,
      "duplicates_found": 0
    },
    "account": {
      "service_name": "account",
      "service_category": "Account Management",
      "check_functions": [
        {
          "function_name": "account_maintain_current_contact_details",
          "category": "config",
          "execution_type": "Code Executable - API call to get account info",
          "description": "Ensures account contact details are current and valid",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "account_maintain_different_contact_details_to_security_billing_and_operations",
          "category": "config",
          "execution_type": "Code Executable - API call to verify contact separation",
          "description": "Verifies different contacts for security, billing, and operations",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "account_security_contact_information_is_registered",
          "category": "config",
          "execution_type": "Code Executable - API call to check security contacts",
          "description": "Ensures security contact information is properly registered",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "account_security_questions_are_registered_in_the_aws_account",
          "category": "config",
          "execution_type": "Manual Effort - Requires account owner verification",
          "description": "Verifies security questions are configured for account recovery",
          "remediation_effort": "Manual"
        }
      ],
      "check_count": 4,
      "duplicates_found": 0
    },
    "acm": {
      "service_name": "acm",
      "service_category": "Security & Identity",
      "check_functions": [
        {
          "function_name": "acm_certificates_expiration_check",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check certificate dates",
          "description": "Monitors SSL/TLS certificates for upcoming expiration",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "acm_certificates_transparency_logs_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to verify transparency settings",
          "description": "Ensures certificate transparency logs are enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "acm_certificates_with_secure_key_algorithms",
          "category": "config",
          "execution_type": "Code Executable - API call to check key algorithms",
          "description": "Verifies certificates use secure key algorithms (RSA 2048+, ECDSA)",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 3,
      "duplicates_found": 0
    },
    "apigatewayv2": {
      "service_name": "apigatewayv2",
      "service_category": "Networking & Content Delivery",
      "check_functions": [
        {
          "function_name": "apigatewayv2_api_access_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable - API call to check logging configuration",
          "description": "Ensures API Gateway v2 access logging is enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "apigatewayv2_api_authorizers_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to verify authorizers",
          "description": "Verifies API Gateway v2 has proper authorization configured",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "apigatewayv2_api_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check encryption settings",
          "description": "Ensures API Gateway v2 APIs use encryption in transit",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 3,
      "duplicates_found": 0
    },
    "appstream": {
      "service_name": "appstream",
      "service_category": "End-User Computing",
      "check_functions": [
        {
          "function_name": "appstream_fleet_default_internet_access_disabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check fleet settings",
          "description": "Ensures AppStream fleets don't have default internet access",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "appstream_fleet_maximum_session_duration",
          "category": "config",
          "execution_type": "Code Executable - API call to check session settings",
          "description": "Verifies AppStream fleet has appropriate session duration limits",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "appstream_fleet_session_disconnect_timeout",
          "category": "config",
          "execution_type": "Code Executable - API call to check timeout configuration",
          "description": "Ensures AppStream fleet has proper session disconnect timeouts",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "appstream_fleet_session_idle_disconnect_timeout",
          "category": "config",
          "execution_type": "Code Executable - API call to check idle timeout",
          "description": "Verifies AppStream fleet has idle session disconnect timeouts",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "streaming_connection_idle_timeout_check",
          "category": "DUPLICATE - Same as session_idle_disconnect_timeout",
          "execution_type": "Code Executable - API call to check idle timeout",
          "description": "DUPLICATE FUNCTION - Use appstream_fleet_session_idle_disconnect_timeout instead",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "appstream_fleet_vpc_check",
          "category": "config",
          "execution_type": "Code Executable - API call to check VPC settings",
          "description": "Verifies AppStream fleet is properly configured in VPC",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 6,
      "duplicates_found": 1
    },
    "appsync": {
      "service_name": "appsync",
      "service_category": "Application Integration",
      "check_functions": [
        {
          "function_name": "appsync_field_level_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable - API call to check logging configuration",
          "description": "Ensures AppSync has field-level logging enabled for debugging",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "appsync_graphql_api_no_api_key_authentication",
          "category": "config",
          "execution_type": "Code Executable - API call to verify authentication methods",
          "description": "Verifies AppSync GraphQL APIs don't rely solely on API key authentication",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 2,
      "duplicates_found": 0
    },
    "athena": {
      "service_name": "athena",
      "service_category": "Analytics",
      "check_functions": [
        {
          "function_name": "athena_workgroup_encryption",
          "category": "config",
          "execution_type": "Code Executable - API call to verify encryption settings",
          "description": "Ensures Athena workgroups have encryption enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "athena_workgroup_enforce_configuration",
          "category": "config",
          "execution_type": "Code Executable - API call to check enforcement settings",
          "description": "Verifies Athena workgroup configuration is enforced",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "athena_workgroup_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable - API call to check logging configuration",
          "description": "Ensures Athena workgroups have logging enabled",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 3,
      "duplicates_found": 0
    },
    "autoscaling": {
      "service_name": "autoscaling",
      "service_category": "Compute",
      "check_functions": [
        {
          "function_name": "autoscaling_find_secrets_ec2_launch_configuration",
          "category": "config",
          "execution_type": "Code Executable - API call to scan launch configs",
          "description": "Scans Auto Scaling launch configurations for exposed secrets",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "autoscaling_group_capacity_rebalance_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check rebalancing settings",
          "description": "Ensures Auto Scaling groups have capacity rebalancing enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "autoscaling_group_elb_health_check_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to verify health check configuration",
          "description": "Verifies Auto Scaling groups have ELB health checks enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "autoscaling_group_launch_configuration_no_public_ip",
          "category": "config",
          "execution_type": "Code Executable - API call to check public IP settings",
          "description": "Ensures Auto Scaling groups don't assign public IPs by default",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "autoscaling_group_launch_configuration_requires_imdsv2",
          "category": "config",
          "execution_type": "Code Executable - API call to check IMDS settings",
          "description": "Verifies Auto Scaling launch configurations require IMDSv2",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "autoscaling_group_multiple_az",
          "category": "config",
          "execution_type": "Code Executable - API call to check AZ distribution",
          "description": "Ensures Auto Scaling groups span multiple Availability Zones",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "autoscaling_group_multiple_instance_types",
          "category": "config",
          "execution_type": "Code Executable - API call to check instance type mix",
          "description": "Verifies Auto Scaling groups use multiple instance types for flexibility",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "autoscaling_group_using_ec2_launch_template",
          "category": "config",
          "execution_type": "Code Executable - API call to check launch template usage",
          "description": "Ensures Auto Scaling groups use EC2 launch templates instead of launch configurations",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 8,
      "duplicates_found": 0
    },
    "awslambda": {
      "service_name": "awslambda",
      "service_category": "Compute",
      "check_functions": [
        {
          "function_name": "awslambda_function_inside_vpc",
          "category": "config",
          "execution_type": "Code Executable - API call to check VPC configuration",
          "description": "Verifies Lambda functions are deployed inside VPC for network isolation",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "awslambda_function_invoke_api_operations_cloudtrail_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable - API call to check CloudTrail integration",
          "description": "Ensures Lambda function API operations are logged in CloudTrail",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "awslambda_function_no_secrets_in_code",
          "category": "config",
          "execution_type": "Code Executable - Static code analysis",
          "description": "Scans Lambda function code for hardcoded secrets",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "awslambda_function_no_secrets_in_variables",
          "category": "config",
          "execution_type": "Code Executable - API call to check environment variables",
          "description": "Verifies Lambda functions don't have secrets in environment variables",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "awslambda_function_not_publicly_accessible",
          "category": "config",
          "execution_type": "Code Executable - API call to check access policies",
          "description": "Ensures Lambda functions are not publicly accessible",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "awslambda_function_url_cors_policy",
          "category": "config",
          "execution_type": "Code Executable - API call to check CORS settings",
          "description": "Verifies Lambda function URLs have appropriate CORS policies",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "awslambda_function_url_public",
          "category": "config",
          "execution_type": "Code Executable - API call to check URL access settings",
          "description": "Checks if Lambda function URLs are publicly accessible",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "awslambda_function_using_supported_runtimes",
          "category": "config",
          "execution_type": "Code Executable - API call to check runtime versions",
          "description": "Ensures Lambda functions use supported runtime versions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "awslambda_function_vpc_multi_az",
          "category": "config",
          "execution_type": "Code Executable - API call to check VPC AZ distribution",
          "description": "Verifies Lambda functions in VPC span multiple Availability Zones",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 9,
      "duplicates_found": 0
    },
    "backup": {
      "service_name": "backup",
      "service_category": "Storage",
      "check_functions": [
        {
          "function_name": "backup_plans_exist",
          "category": "backup",
          "execution_type": "Code Executable - API call to check backup plans",
          "description": "Verifies that AWS Backup plans exist for the account",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "backup_recovery_point_encrypted",
          "category": "config",
          "execution_type": "Code Executable - API call to check encryption settings",
          "description": "Ensures backup recovery points are encrypted",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "backup_reportplans_exist",
          "category": "backup",
          "execution_type": "Code Executable - API call to check report plans",
          "description": "Verifies that AWS Backup report plans exist",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "backup_vaults_encrypted",
          "category": "config",
          "execution_type": "Code Executable - API call to check vault encryption",
          "description": "Ensures backup vaults have encryption enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "backup_vaults_exist",
          "category": "backup",
          "execution_type": "Code Executable - API call to check vault existence",
          "description": "Verifies that AWS Backup vaults exist",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "backup_window_configured",
          "category": "config",
          "execution_type": "Code Executable - API call to check backup windows",
          "description": "Ensures backup windows are properly configured",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "backup_plan_template_creation_check",
          "category": "backup",
          "execution_type": "Code Executable - API call to check plan templates",
          "description": "Verifies backup plan templates are properly created",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "backup_plan_name_specification_check",
          "category": "config",
          "execution_type": "Code Executable - API call to check plan names",
          "description": "Ensures backup plans follow naming conventions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "backup_rules_definition_check",
          "category": "config",
          "execution_type": "Code Executable - API call to check backup rules",
          "description": "Verifies backup rules are properly defined",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "efs_file_systems_backup_enabled",
          "category": "backup",
          "execution_type": "Code Executable - API call to check EFS backup status",
          "description": "Ensures EFS file systems have backup enabled through AWS Backup",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 10,
      "duplicates_found": 0
    },
    "bedrock": {
      "service_name": "bedrock",
      "service_category": "Machine Learning",
      "check_functions": [
        {
          "function_name": "bedrock_agent_guardrail_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check guardrail settings",
          "description": "Ensures Bedrock agents have guardrails enabled for safety",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "bedrock_guardrail_prompt_attack_filter_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check filter settings",
          "description": "Verifies Bedrock has prompt attack filtering enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "bedrock_guardrail_sensitive_information_filter_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check information filters",
          "description": "Ensures Bedrock has sensitive information filtering enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "bedrock_model_invocation_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable - API call to check logging settings",
          "description": "Verifies Bedrock model invocations are logged",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "bedrock_model_invocation_logs_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check log encryption",
          "description": "Ensures Bedrock model invocation logs are encrypted",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 5,
      "duplicates_found": 0
    },
    "cloudformation": {
      "service_name": "cloudformation",
      "service_category": "Management & Governance",
      "check_functions": [
        {
          "function_name": "cloudformation_stack_cdktoolkit_bootstrap_version",
          "category": "config",
          "execution_type": "Code Executable - API call to check CDK version",
          "description": "Verifies CloudFormation stacks use appropriate CDK toolkit versions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudformation_stack_outputs_find_secrets",
          "category": "config",
          "execution_type": "Code Executable - API call to scan stack outputs",
          "description": "Scans CloudFormation stack outputs for exposed secrets",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudformation_stacks_termination_protection_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check protection settings",
          "description": "Ensures CloudFormation stacks have termination protection enabled",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 3,
      "duplicates_found": 0
    },
    "cloudfront": {
      "service_name": "cloudfront",
      "service_category": "Networking & Content Delivery",
      "check_functions": [
        {
          "function_name": "cloudfront_distributions_custom_ssl_certificate",
          "category": "config",
          "execution_type": "Code Executable - API call to check SSL certificates",
          "description": "Verifies CloudFront distributions use custom SSL certificates",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudfront_distributions_default_root_object",
          "category": "config",
          "execution_type": "Code Executable - API call to check root object configuration",
          "description": "Ensures CloudFront distributions have default root objects configured",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudfront_distributions_field_level_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check field encryption",
          "description": "Verifies CloudFront distributions have field-level encryption enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudfront_distributions_geo_restrictions_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check geo restrictions",
          "description": "Ensures CloudFront distributions have geographic restrictions enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudfront_distributions_https_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check HTTPS settings",
          "description": "Verifies CloudFront distributions enforce HTTPS",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudfront_distributions_https_sni_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check SNI settings",
          "description": "Ensures CloudFront distributions support HTTPS SNI",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudfront_distributions_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable - API call to check logging configuration",
          "description": "Verifies CloudFront distributions have logging enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudfront_distributions_multiple_origin_failover_configured",
          "category": "config",
          "execution_type": "Code Executable - API call to check failover configuration",
          "description": "Ensures CloudFront distributions have multiple origin failover configured",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudfront_distributions_origin_traffic_encrypted",
          "category": "config",
          "execution_type": "Code Executable - API call to check origin encryption",
          "description": "Verifies CloudFront origin traffic is encrypted",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudfront_distributions_s3_origin_access_control",
          "category": "config",
          "execution_type": "Code Executable - API call to check access control settings",
          "description": "Ensures CloudFront distributions have S3 origin access control configured",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudfront_distributions_s3_origin_non_existent_bucket",
          "category": "config",
          "execution_type": "Code Executable - API call to check S3 bucket existence",
          "description": "Verifies CloudFront S3 origins point to existing buckets",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudfront_distributions_using_deprecated_ssl_protocols",
          "category": "config",
          "execution_type": "Code Executable - API call to check SSL protocols",
          "description": "Ensures CloudFront distributions don't use deprecated SSL protocols",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudfront_distributions_using_waf",
          "category": "config",
          "execution_type": "Code Executable - API call to check WAF association",
          "description": "Verifies CloudFront distributions are protected by WAF",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 13,
      "duplicates_found": 0
    },
    "cloudtrail": {
      "service_name": "cloudtrail",
      "service_category": "Management & Governance",
      "check_functions": [
        {
          "function_name": "cloudtrail_bucket_requires_mfa_delete",
          "category": "config",
          "execution_type": "Code Executable - API call to check MFA delete settings",
          "description": "Ensures CloudTrail S3 buckets require MFA for deletion",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudtrail_cloudwatch_logging_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check CloudWatch integration",
          "description": "Verifies CloudTrail logs are sent to CloudWatch",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudtrail_insights_exist",
          "category": "config",
          "execution_type": "Code Executable - API call to check Insights configuration",
          "description": "Ensures CloudTrail Insights are enabled for anomaly detection",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudtrail_kms_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check KMS encryption",
          "description": "Verifies CloudTrail logs are encrypted with KMS",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudtrail_log_file_validation_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check validation settings",
          "description": "Ensures CloudTrail log file validation is enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudtrail_logs_s3_bucket_access_logging_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check S3 access logging",
          "description": "Verifies CloudTrail S3 buckets have access logging enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudtrail_logs_s3_bucket_is_not_publicly_accessible",
          "category": "config",
          "execution_type": "Code Executable - API call to check S3 public access",
          "description": "Ensures CloudTrail S3 buckets are not publicly accessible",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudtrail_multi_region_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check multi-region settings",
          "description": "Verifies CloudTrail is enabled in multiple regions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudtrail_multi_region_enabled_logging_management_events",
          "category": "DUPLICATE - Same as multi_region_enabled",
          "execution_type": "Code Executable - API call to check multi-region settings",
          "description": "DUPLICATE FUNCTION - Use cloudtrail_multi_region_enabled instead",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudtrail_s3_dataevents_read_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check data event settings",
          "description": "Ensures CloudTrail logs S3 read data events",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudtrail_s3_dataevents_write_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check data event settings",
          "description": "Ensures CloudTrail logs S3 write data events",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudtrail_threat_detection_enumeration",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check threat detection",
          "description": "Verifies CloudTrail has threat detection for enumeration attacks",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudtrail_threat_detection_llm_jacking",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check threat detection",
          "description": "Ensures CloudTrail has threat detection for LLM jacking attacks",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudtrail_threat_detection_privilege_escalation",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check threat detection",
          "description": "Verifies CloudTrail has threat detection for privilege escalation",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "secretsmanager_secret_access_audit",
          "category": "DUPLICATE - Same as secrets_manager_secrets_access_audit_check",
          "execution_type": "Code Executable - API call to check Secrets Manager access",
          "description": "DUPLICATE FUNCTION - Use secrets_manager_secrets_access_audit_check instead",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "secrets_manager_secrets_access_audit_check",
          "category": "config",
          "execution_type": "Code Executable - API call to check access audit settings",
          "description": "Ensures Secrets Manager secret access is audited",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudtrail_root_account_usage_monitoring",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check root account monitoring",
          "description": "Verifies CloudTrail monitors root account usage",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "iam_policy_change_cloudtrail_logging_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check IAM change logging",
          "description": "Ensures IAM policy changes are logged in CloudTrail",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudtrail_security_group_changes_logging_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check security group logging",
          "description": "Verifies security group changes are logged in CloudTrail",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudtrail_vpc_changes_logging_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check VPC change logging",
          "description": "Ensures VPC changes are logged in CloudTrail",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudtrail_aws_organizations_changes_logging_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check Organizations logging",
          "description": "Verifies AWS Organizations changes are logged in CloudTrail",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "audit_logging_regular_review",
          "category": "monitoring",
          "execution_type": "Manual Effort - Requires periodic review process",
          "description": "Ensures audit logging is regularly reviewed and analyzed",
          "remediation_effort": "Manual"
        },
        {
          "function_name": "cloudtrail_timestream_activities_logging_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check Timestream logging",
          "description": "Verifies Timestream activities are logged in CloudTrail",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 23,
      "duplicates_found": 2
    },
    "cloudwatch": {
      "service_name": "cloudwatch",
      "service_category": "Management & Governance",
      "check_functions": [
        {
          "function_name": "cloudwatch_alarm_actions_alarm_state_configured",
          "category": "config",
          "execution_type": "Code Executable - API call to check alarm actions",
          "description": "Ensures CloudWatch alarms have actions configured for alarm state",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_alarm_actions_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check alarm actions status",
          "description": "Verifies CloudWatch alarm actions are enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_changes_to_network_acls_alarm_configured",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check network ACL alarms",
          "description": "Ensures CloudWatch alarms are configured for network ACL changes",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_changes_to_network_gateways_alarm_configured",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check network gateway alarms",
          "description": "Ensures CloudWatch alarms are configured for network gateway changes",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_changes_to_network_route_tables_alarm_configured",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check route table alarms",
          "description": "Ensures CloudWatch alarms are configured for route table changes",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_changes_to_vpcs_alarm_configured",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check VPC change alarms",
          "description": "Ensures CloudWatch alarms are configured for VPC changes",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_cross_account_sharing_disabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check cross-account sharing",
          "description": "Verifies CloudWatch cross-account sharing is disabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_log_group_kms_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check KMS encryption",
          "description": "Ensures CloudWatch log groups have KMS encryption enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_log_group_no_secrets_in_logs",
          "category": "config",
          "execution_type": "Code Executable - API call to scan logs for secrets",
          "description": "Scans CloudWatch logs for exposed secrets",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_log_group_not_publicly_accessible",
          "category": "config",
          "execution_type": "Code Executable - API call to check public access",
          "description": "Verifies CloudWatch log groups are not publicly accessible",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_log_group_retention_policy_specific_days_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check retention policies",
          "description": "Ensures CloudWatch log groups have retention policies configured",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_log_metric_filter_and_alarm_for_aws_config_configuration_changes_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check Config change alarms",
          "description": "Verifies CloudWatch has alarms for AWS Config configuration changes",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_log_metric_filter_and_alarm_for_cloudtrail_configuration_changes_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check CloudTrail change alarms",
          "description": "Ensures CloudWatch has alarms for CloudTrail configuration changes",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_log_metric_filter_authentication_failures",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check authentication failure alarms",
          "description": "Verifies CloudWatch has alarms for authentication failures",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_log_metric_filter_aws_organizations_changes",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check Organizations change alarms",
          "description": "Ensures CloudWatch has alarms for AWS Organizations changes",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_log_metric_filter_disable_or_scheduled_deletion_of_kms_cmk",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check KMS deletion alarms",
          "description": "Verifies CloudWatch has alarms for KMS key deletion",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_log_metric_filter_for_s3_bucket_policy_changes",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check S3 policy change alarms",
          "description": "Ensures CloudWatch has alarms for S3 bucket policy changes",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_log_metric_filter_policy_changes",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check policy change alarms",
          "description": "Verifies CloudWatch has alarms for policy changes",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_log_metric_filter_root_usage",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check root usage alarms",
          "description": "Ensures CloudWatch has alarms for root account usage",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_log_metric_filter_security_group_changes",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check security group change alarms",
          "description": "Verifies CloudWatch has alarms for security group changes",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_log_metric_filter_sign_in_without_mfa",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check MFA sign-in alarms",
          "description": "Ensures CloudWatch has alarms for sign-ins without MFA",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_log_metric_filter_unauthorized_api_calls",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check unauthorized API call alarms",
          "description": "Verifies CloudWatch has alarms for unauthorized API calls",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_alarm_for_root_account_usage",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check root account alarms",
          "description": "Ensures CloudWatch has alarms configured for root account usage",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "iam_policy_change_cloudwatch_alarm_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check IAM policy change alarms",
          "description": "Verifies CloudWatch has alarms for IAM policy changes",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_security_group_changes_alarm_configured",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check security group change alarms",
          "description": "Ensures CloudWatch has alarms configured for security group changes",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_vpc_changes_metric_filter_and_alarm",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check VPC change alarms",
          "description": "Verifies CloudWatch has alarms for VPC changes",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_alarm_for_aws_organizations_changes",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check Organizations change alarms",
          "description": "Ensures CloudWatch has alarms for AWS Organizations changes",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_log_group_all_services_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable - API call to check all services logging",
          "description": "Verifies CloudWatch has logging enabled for all services",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_alarm_all_services_alarm_configured",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check all services alarms",
          "description": "Ensures CloudWatch has alarms configured for all services",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "memorydb_cluster_alerting_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check MemoryDB alerting",
          "description": "Verifies MemoryDB clusters have alerting enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_timestream_metrics_monitoring_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check Timestream metrics",
          "description": "Ensures CloudWatch monitors Timestream metrics",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_timestream_events_monitoring_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check Timestream events",
          "description": "Verifies CloudWatch monitors Timestream events",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_timestream_logs_monitoring_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check Timestream logs",
          "description": "Ensures CloudWatch monitors Timestream logs",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "qldb_monitor_logs_for_suspicious_activity",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check QLDB suspicious activity",
          "description": "Verifies QLDB logs are monitored for suspicious activity",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "qldb_monitor_logs_for_errors",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check QLDB error logs",
          "description": "Ensures QLDB logs are monitored for errors",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_alarm_for_unusual_events",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check unusual event alarms",
          "description": "Verifies CloudWatch has alarms for unusual events",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_alarm_for_resource_threshold",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check resource threshold alarms",
          "description": "Ensures CloudWatch has alarms for resource thresholds",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_alarm_for_qldb",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check QLDB alarms",
          "description": "Verifies CloudWatch has alarms configured for QLDB",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_ec2_ebs_alarm_configuration_check",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check EC2 EBS alarms",
          "description": "Ensures CloudWatch has alarms configured for EC2 EBS",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_ec2_ebs_activity_monitoring_check",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check EC2 EBS activity",
          "description": "Verifies CloudWatch monitors EC2 EBS activity",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "edr_alerts_check",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check EDR alerts",
          "description": "Ensures EDR alerts are properly configured",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "edr_incident_reports_check",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check EDR incident reports",
          "description": "Verifies EDR incident reports are generated",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_edr_metrics_monitoring_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check EDR metrics",
          "description": "Ensures CloudWatch monitors EDR metrics",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_edr_metrics_anomaly_detection",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check EDR anomaly detection",
          "description": "Verifies CloudWatch has anomaly detection for EDR metrics",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "edr_alerts_and_reports_check",
          "category": "monitoring",
          "execution_type": "Code Executable - API call to check EDR alerts and reports",
          "description": "Ensures EDR alerts and reports are properly configured",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_edr_metrics_detailed_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable - API call to check EDR detailed logging",
          "description": "Verifies CloudWatch has detailed logging for EDR metrics",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudwatch_edr_metrics_regular_review",
          "category": "monitoring",
          "execution_type": "Manual Effort - Requires periodic review",
          "description": "Ensures EDR metrics are regularly reviewed",
          "remediation_effort": "Manual"
        }
      ],
      "check_count": 47,
      "duplicates_found": 0
    },
    "codeartifact": {
      "service_name": "codeartifact",
      "service_category": "Developer Tools",
      "check_functions": [
        {
          "function_name": "codeartifact_packages_external_public_publishing_disabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check publishing settings",
          "description": "Ensures CodeArtifact packages don't allow external public publishing",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 1,
      "duplicates_found": 0
    },
    "codebuild": {
      "service_name": "codebuild",
      "service_category": "Developer Tools",
      "check_functions": [
        {
          "function_name": "codebuild_project_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable - API call to check logging configuration",
          "description": "Verifies CodeBuild projects have logging enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "codebuild_project_no_secrets_in_variables",
          "category": "config",
          "execution_type": "Code Executable - API call to check environment variables",
          "description": "Ensures CodeBuild projects don't have secrets in variables",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "codebuild_project_older_90_days",
          "category": "config",
          "execution_type": "Code Executable - API call to check project age",
          "description": "Verifies CodeBuild projects are not older than 90 days",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "codebuild_project_s3_logs_encrypted",
          "category": "config",
          "execution_type": "Code Executable - API call to check S3 log encryption",
          "description": "Ensures CodeBuild project S3 logs are encrypted",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "codebuild_project_source_repo_url_no_sensitive_credentials",
          "category": "config",
          "execution_type": "Code Executable - API call to check source repository URLs",
          "description": "Verifies CodeBuild project source repository URLs don't contain credentials",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "codebuild_project_user_controlled_buildspec",
          "category": "config",
          "execution_type": "Code Executable - API call to check buildspec control",
          "description": "Ensures CodeBuild projects use user-controlled buildspec files",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "codebuild_report_group_export_encrypted",
          "category": "config",
          "execution_type": "Code Executable - API call to check report group encryption",
          "description": "Verifies CodeBuild report group exports are encrypted",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 7,
      "duplicates_found": 0
    },
    "cognito": {
      "service_name": "cognito",
      "service_category": "Security & Identity",
      "check_functions": [
        {
          "function_name": "cognito_identity_pool_guest_access_disabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check guest access",
          "description": "Ensures Cognito identity pools don't allow guest access",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_advanced_security_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check advanced security",
          "description": "Verifies Cognito user pools have advanced security enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_blocks_compromised_credentials_sign_in_attempts",
          "category": "config",
          "execution_type": "Code Executable - API call to check compromised credentials blocking",
          "description": "Ensures Cognito user pools block compromised credentials",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_blocks_potential_malicious_sign_in_attempts",
          "category": "config",
          "execution_type": "Code Executable - API call to check malicious sign-in blocking",
          "description": "Verifies Cognito user pools block malicious sign-in attempts",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_client_prevent_user_existence_errors",
          "category": "config",
          "execution_type": "Code Executable - API call to check user existence error prevention",
          "description": "Ensures Cognito user pool clients prevent user existence errors",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_client_token_revocation_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check token revocation",
          "description": "Verifies Cognito user pool clients have token revocation enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_deletion_protection_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check deletion protection",
          "description": "Ensures Cognito user pools have deletion protection enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_mfa_enabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check MFA configuration",
          "description": "Verifies Cognito user pools have MFA enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_password_policy_lowercase",
          "category": "config",
          "execution_type": "Code Executable - API call to check password policy",
          "description": "Ensures Cognito user pool password policy requires lowercase",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_password_policy_minimum_length_14",
          "category": "config",
          "execution_type": "Code Executable - API call to check password length",
          "description": "Verifies Cognito user pool password policy has minimum length 14",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_password_policy_number",
          "category": "config",
          "execution_type": "Code Executable - API call to check password policy",
          "description": "Ensures Cognito user pool password policy requires numbers",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_password_policy_symbol",
          "category": "config",
          "execution_type": "Code Executable - API call to check password policy",
          "description": "Verifies Cognito user pool password policy requires symbols",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_password_policy_uppercase",
          "category": "config",
          "execution_type": "Code Executable - API call to check password policy",
          "description": "Ensures Cognito user pool password policy requires uppercase",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_self_registration_disabled",
          "category": "config",
          "execution_type": "Code Executable - API call to check self-registration",
          "description": "Verifies Cognito user pools don't allow self-registration",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_temporary_password_expiration",
          "category": "config",
          "execution_type": "Code Executable - API call to check temporary password expiration",
          "description": "Ensures Cognito user pools have temporary password expiration",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_waf_acl_attached",
          "category": "config",
          "execution_type": "Code Executable - API call to check WAF ACL attachment",
          "description": "Verifies Cognito user pools have WAF ACLs attached",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 16,
      "duplicates_found": 0
    }
  }
}

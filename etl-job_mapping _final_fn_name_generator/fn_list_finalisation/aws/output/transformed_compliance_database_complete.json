{
  "scan_metadata": {
    "description": "AWS Compliance Functions Mapping - OPTIMIZED VERSION",
    "total_services": 90,
    "total_check_functions": 631,
    "total_unique_functions": 631,
    "total_duplicates_removed": 0,
    "generated_from": "src/compliance_engine/aws/services folder structure",
    "last_updated": "2025-08-24T20:36:37.000000",
    "optimization_notes": "Intelligently categorized functions by cloud security expert analysis, grouped by service, simplified to 4 clear categories with execution types and remediation effort classification"
  },
  "services": {
    "accessanalyzer": {
      "service_name": "accessanalyzer",
      "service_category": "Security & Identity",
      "check_functions": [
        {
          "function_name": "accessanalyzer_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Access Analyzer is enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "accessanalyzer_enabled_without_findings",
          "category": "monitoring",
          "execution_type": "Hybrid Approach",
          "description": "Checks if Access Analyzer is enabled and has no findings",
          "remediation_effort": "Manual"
        }
      ],
      "check_count": 2,
      "duplicates_found": 0
    },
    "account": {
      "service_name": "account",
      "service_category": "Security & Identity",
      "check_functions": [
        {
          "function_name": "account_maintain_current_contact_details",
          "category": "config",
          "execution_type": "Manual Effort",
          "description": "Checks if the account maintains current contact details",
          "remediation_effort": "Manual"
        },
        {
          "function_name": "account_maintain_different_contact_details_to_security_billing_and_operations",
          "category": "config",
          "execution_type": "Manual Effort",
          "description": "Checks if the account maintains different contact details for security, billing, and operations",
          "remediation_effort": "Manual"
        },
        {
          "function_name": "account_security_contact_information_is_registered",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the account security contact information is registered",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "account_security_questions_are_registered_in_the_aws_account",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the account security questions are registered in the AWS account",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 4,
      "duplicates_found": 0
    },
    "acm": {
      "service_name": "acm",
      "service_category": "Security & Identity",
      "check_functions": [
        {
          "function_name": "acm_certificates_expiration_check",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks the expiration date of ACM certificates",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "acm_certificates_transparency_logs_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if transparency logs are enabled for ACM certificates",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "acm_certificates_with_secure_key_algorithms",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if ACM certificates are using secure key algorithms",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "acm_certificates_inventory_check",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks the inventory of ACM certificates",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 4,
      "duplicates_found": 0
    },
    "apigatewayv2": {
      "service_name": "apigatewayv2",
      "service_category": "Networking",
      "check_functions": [
        {
          "function_name": "apigatewayv2_api_access_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if access logging is enabled for API Gateway v2",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "apigatewayv2_api_authorizers_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if authorizers are enabled for API Gateway v2",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "apigatewayv2_api_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if encryption is enabled for API Gateway v2",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 3,
      "duplicates_found": 0
    },
    "appstream": {
      "service_name": "appstream",
      "service_category": "Compute",
      "check_functions": [
        {
          "function_name": "appstream_fleet_default_internet_access_disabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the AppStream fleet default internet access is disabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "appstream_fleet_maximum_session_duration",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks the maximum session duration for the AppStream fleet",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "appstream_fleet_session_disconnect_timeout",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the session disconnect timeout for the AppStream fleet",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "appstream_fleet_session_idle_disconnect_timeout",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks the session idle disconnect timeout for the AppStream fleet",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "streaming_connection_idle_timeout_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the idle timeout for the streaming connection",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "appstream_fleet_vpc_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the AppStream fleet is associated with a VPC",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 6,
      "duplicates_found": 0
    },
    "appsync": {
      "service_name": "appsync",
      "service_category": "Compute",
      "check_functions": [
        {
          "function_name": "appsync_field_level_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if field-level logging is enabled for AppSync",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "appsync_graphql_api_no_api_key_authentication",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if API key authentication is not used for AppSync GraphQL APIs",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 2,
      "duplicates_found": 0
    },
    "athena": {
      "service_name": "athena",
      "service_category": "Analytics",
      "check_functions": [
        {
          "function_name": "athena_workgroup_encryption",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the Athena workgroup is encrypted",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "athena_workgroup_enforce_configuration",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the Athena workgroup enforces configuration",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "athena_workgroup_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if logging is enabled for the Athena workgroup",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 3,
      "duplicates_found": 0
    },
    "autoscaling": {
      "service_name": "autoscaling",
      "service_category": "Compute",
      "check_functions": [
        {
          "function_name": "autoscaling_find_secrets_ec2_launch_configuration",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if secrets are found in EC2 launch configuration",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "autoscaling_group_capacity_rebalance_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if capacity rebalance is enabled for autoscaling group",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "autoscaling_group_elb_health_check_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if ELB health check is enabled for autoscaling group",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "autoscaling_group_launch_configuration_no_public_ip",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if launch configuration for autoscaling group does not assign public IP",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "autoscaling_group_launch_configuration_requires_imdsv2",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if launch configuration for autoscaling group requires IMDSv2",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "autoscaling_group_multiple_az",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if autoscaling group is spread across multiple availability zones",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "autoscaling_group_multiple_instance_types",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if autoscaling group uses multiple instance types",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "autoscaling_group_using_ec2_launch_template",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if autoscaling group is using EC2 launch template",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 8,
      "duplicates_found": 0
    },
    "awslambda": {
      "service_name": "awslambda",
      "service_category": "Compute",
      "check_functions": [
        {
          "function_name": "awslambda_function_inside_vpc",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the AWS Lambda function is inside a VPC",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "awslambda_function_invoke_api_operations_cloudtrail_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if CloudTrail logging is enabled for AWS Lambda function API operations",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "awslambda_function_no_secrets_in_code",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if there are no secrets in the AWS Lambda function code",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "awslambda_function_no_secrets_in_variables",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if there are no secrets in the AWS Lambda function variables",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "awslambda_function_not_publicly_accessible",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the AWS Lambda function is not publicly accessible",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "awslambda_function_url_cors_policy",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the CORS policy of the AWS Lambda function URL",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "awslambda_function_url_public",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the AWS Lambda function URL is public",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "awslambda_function_using_supported_runtimes",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the AWS Lambda function is using supported runtimes",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "awslambda_function_vpc_multi_az",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the AWS Lambda function is in a VPC with multiple availability zones",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 9,
      "duplicates_found": 0
    },
    "backup": {
      "service_name": "backup",
      "service_category": "Storage & Database",
      "check_functions": [
        {
          "function_name": "backup_plans_exist",
          "category": "backup",
          "execution_type": "Code Executable",
          "description": "Checks if backup plans exist",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "backup_recovery_point_encrypted",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the backup recovery point is encrypted",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "backup_reportplans_exist",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if backup report plans exist",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "backup_vaults_encrypted",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if backup vaults are encrypted",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "backup_vaults_exist",
          "category": "backup",
          "execution_type": "Code Executable",
          "description": "Checks if backup vaults exist",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "backup_window_configured",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if a backup window is configured",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "backup_plan_template_creation_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if a backup plan template has been created",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "backup_plan_name_specification_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if a backup plan name has been specified",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "backup_rules_definition_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if backup rules have been defined",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "efs_file_systems_backup_enabled",
          "category": "backup",
          "execution_type": "Code Executable",
          "description": "Checks if EFS file systems backup is enabled",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 10,
      "duplicates_found": 0
    },
    "bedrock": {
      "service_name": "bedrock",
      "service_category": "Security & Identity",
      "check_functions": [
        {
          "function_name": "bedrock_agent_guardrail_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the bedrock agent guardrail is enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "bedrock_guardrail_prompt_attack_filter_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if the bedrock guardrail prompt attack filter is enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "bedrock_guardrail_sensitive_information_filter_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the bedrock guardrail sensitive information filter is enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "bedrock_model_invocation_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if the bedrock model invocation logging is enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "bedrock_model_invocation_logs_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the bedrock model invocation logs encryption is enabled",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 5,
      "duplicates_found": 0
    },
    "cloudformation": {
      "service_name": "cloudformation",
      "service_category": "Management & Governance",
      "check_functions": [
        {
          "function_name": "cloudformation_stack_cdktoolkit_bootstrap_version",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the bootstrap version of the CDK toolkit in the CloudFormation stack",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudformation_stack_outputs_find_secrets",
          "category": "monitoring",
          "execution_type": "Hybrid Approach",
          "description": "Monitors the CloudFormation stack outputs for any secrets",
          "remediation_effort": "Manual"
        },
        {
          "function_name": "cloudformation_stacks_termination_protection_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if termination protection is enabled for CloudFormation stacks",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 3,
      "duplicates_found": 0
    },
    "cloudfront": {
      "service_name": "cloudfront",
      "service_category": "Networking",
      "check_functions": [
        {
          "function_name": "cloudfront_distributions_custom_ssl_certificate",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if CloudFront distributions have a custom SSL certificate",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudfront_distributions_default_root_object",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if CloudFront distributions have a default root object",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudfront_distributions_field_level_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if field-level encryption is enabled for CloudFront distributions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudfront_distributions_geo_restrictions_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if geo-restrictions are enabled for CloudFront distributions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudfront_distributions_https_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if HTTPS is enabled for CloudFront distributions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudfront_distributions_https_sni_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if SNI (Server Name Indication) is enabled for HTTPS in CloudFront distributions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudfront_distributions_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if logging is enabled for CloudFront distributions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudfront_distributions_multiple_origin_failover_configured",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if multiple origin failover is configured for CloudFront distributions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudfront_distributions_origin_traffic_encrypted",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if origin traffic is encrypted for CloudFront distributions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudfront_distributions_s3_origin_access_control",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if access control is set for S3 origins in CloudFront distributions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudfront_distributions_s3_origin_non_existent_bucket",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if non-existent S3 buckets are set as origins in CloudFront distributions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudfront_distributions_using_deprecated_ssl_protocols",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if deprecated SSL protocols are used in CloudFront distributions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudfront_distributions_using_waf",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if AWS WAF is used with CloudFront distributions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudfront_distribution_csp_policy_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if CSP (Content Security Policy) is set for CloudFront distributions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudfront_distribution_sri_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if SRI (Subresource Integrity) is enabled for CloudFront distributions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudfront_distribution_security_headers_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if security headers are set for CloudFront distributions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cloudfront_distribution_script_integrity_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if script integrity is maintained for CloudFront distributions",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 17,
      "duplicates_found": 0
    },
    "codeartifact": {
      "service_name": "codeartifact",
      "service_category": "Management & Governance",
      "check_functions": [
        {
          "function_name": "codeartifact_packages_external_public_publishing_disabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the CodeArtifact packages are not publicly published",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 1,
      "duplicates_found": 0
    },
    "codebuild": {
      "service_name": "codebuild",
      "service_category": "Compute",
      "check_functions": [
        {
          "function_name": "codebuild_project_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if logging is enabled for the CodeBuild project",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "codebuild_project_no_secrets_in_variables",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if there are no secrets in the variables of the CodeBuild project",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "codebuild_project_older_90_days",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if the CodeBuild project is older than 90 days",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "codebuild_project_s3_logs_encrypted",
          "category": "backup",
          "execution_type": "Code Executable",
          "description": "Checks if the S3 logs for the CodeBuild project are encrypted",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "codebuild_project_source_repo_url_no_sensitive_credentials",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the source repository URL of the CodeBuild project does not contain sensitive credentials",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "codebuild_project_user_controlled_buildspec",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the buildspec of the CodeBuild project is user-controlled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "codebuild_report_group_export_encrypted",
          "category": "backup",
          "execution_type": "Code Executable",
          "description": "Checks if the export of the report group in the CodeBuild project is encrypted",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "codebuild_project_secure_coding_practices_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if secure coding practices are followed in the CodeBuild project",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "codebuild_project_code_review_check",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if code review is conducted for the CodeBuild project",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "codebuild_project_vulnerability_scan_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if vulnerability scanning is enabled for the CodeBuild project",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 10,
      "duplicates_found": 0
    },
    "cognito": {
      "service_name": "cognito",
      "service_category": "Security & Identity",
      "check_functions": [
        {
          "function_name": "cognito_identity_pool_guest_access_disabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if guest access is disabled in Cognito Identity Pools",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_advanced_security_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if advanced security is enabled in Cognito User Pools",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_blocks_compromised_credentials_sign_in_attempts",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if compromised credentials sign-in attempts are blocked in Cognito User Pools",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_blocks_potential_malicious_sign_in_attempts",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if potential malicious sign-in attempts are blocked in Cognito User Pools",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_client_prevent_user_existence_errors",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if user existence errors are prevented in Cognito User Pool Clients",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_client_token_revocation_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if token revocation is enabled in Cognito User Pool Clients",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_deletion_protection_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if deletion protection is enabled in Cognito User Pools",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_mfa_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if multi-factor authentication is enabled in Cognito User Pools",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_password_policy_lowercase",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if password policy enforces lowercase characters in Cognito User Pools",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_password_policy_minimum_length_14",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if password policy enforces a minimum length of 14 characters in Cognito User Pools",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_password_policy_number",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if password policy enforces numeric characters in Cognito User Pools",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_password_policy_symbol",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if password policy enforces symbol characters in Cognito User Pools",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_password_policy_uppercase",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if password policy enforces uppercase characters in Cognito User Pools",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_self_registration_disabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if self-registration is disabled in Cognito User Pools",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_temporary_password_expiration",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if temporary password expiration is set in Cognito User Pools",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_waf_acl_attached",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if a WAF ACL is attached to Cognito User Pools",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 16,
      "duplicates_found": 0
    },
    "config": {
      "service_name": "config",
      "service_category": "Management & Governance",
      "check_functions": [
        {
          "function_name": "config_recorder_all_regions_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if AWS Config is enabled in all regions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "config_recorder_using_aws_service_role",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if AWS Config is using the service-linked role",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "config_recorder_significant_change_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if AWS Config records all changes that significantly impact configurations",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 3,
      "duplicates_found": 0
    },
    "datasync": {
      "service_name": "datasync",
      "service_category": "Storage & Database",
      "check_functions": [
        {
          "function_name": "datasync_task_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if logging is enabled for DataSync tasks",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 1,
      "duplicates_found": 0
    },
    "directconnect": {
      "service_name": "directconnect",
      "service_category": "Networking",
      "check_functions": [
        {
          "function_name": "directconnect_connection_redundancy",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Direct Connect connections have redundancy",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "directconnect_virtual_interface_redundancy",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Direct Connect virtual interfaces have redundancy",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 2,
      "duplicates_found": 0
    },
    "directoryservice": {
      "service_name": "directoryservice",
      "service_category": "Security & Identity",
      "check_functions": [
        {
          "function_name": "directoryservice_directory_log_forwarding_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if log forwarding is enabled for the directory service",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "directoryservice_directory_monitor_notifications",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if monitor notifications are enabled for the directory service",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "directoryservice_directory_snapshots_limit",
          "category": "backup",
          "execution_type": "Code Executable",
          "description": "Checks if the snapshots limit for the directory service is within the recommended range",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "directoryservice_ldap_certificate_expiration",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the expiration date of the LDAP certificate for the directory service",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "directoryservice_radius_server_security_protocol",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the security protocol of the RADIUS server for the directory service",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "directoryservice_supported_mfa_radius_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if MFA is enabled for the RADIUS server in the directory service",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 6,
      "duplicates_found": 0
    },
    "dlm": {
      "service_name": "dlm",
      "service_category": "Storage & Database",
      "check_functions": [
        {
          "function_name": "dlm_ebs_snapshot_lifecycle_policy_exists",
          "category": "backup",
          "execution_type": "Code Executable",
          "description": "Checks if a lifecycle policy exists for EBS snapshots",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 1,
      "duplicates_found": 0
    },
    "dms": {
      "service_name": "dms",
      "service_category": "Storage & Database",
      "check_functions": [
        {
          "function_name": "dms_endpoint_mongodb_authentication_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if MongoDB authentication is enabled for DMS endpoint",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dms_endpoint_neptune_iam_authorization_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Neptune IAM authorization is enabled for DMS endpoint",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dms_endpoint_redis_in_transit_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Redis in-transit encryption is enabled for DMS endpoint",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dms_endpoint_ssl_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if SSL is enabled for DMS endpoint",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dms_instance_minor_version_upgrade_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if minor version upgrade is enabled for DMS instance",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dms_instance_multi_az_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if multi-AZ is enabled for DMS instance",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dms_instance_no_public_access",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if public access is disabled for DMS instance",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dms_replication_task_source_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if source logging is enabled for DMS replication task",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dms_replication_task_target_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if target logging is enabled for DMS replication task",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dms_replication_task_bandwidth_limit_check",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if bandwidth limit is set for DMS replication task",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dms_replication_task_schedule_check",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if schedule is set for DMS replication task",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dms_replication_task_source_target_location_check",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if source and target locations are set for DMS replication task",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dms_replication_agent_installation_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if replication agent is installed for DMS",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dms_replication_agent_configuration_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if replication agent is properly configured for DMS",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dms_replication_agent_integration_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if replication agent is properly integrated with DMS",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dms_replication_agent_performance_check",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if replication agent is performing as expected for DMS",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dms_replication_agent_update_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if replication agent is up-to-date for DMS",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dms_replication_settings_regular_review",
          "category": "monitoring",
          "execution_type": "Manual Effort",
          "description": "Checks if replication settings are regularly reviewed for DMS",
          "remediation_effort": "Manual"
        },
        {
          "function_name": "dms_replication_bandwidth_limits_check",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if bandwidth limits are set for DMS replication",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 19,
      "duplicates_found": 0
    },
    "documentdb": {
      "service_name": "documentdb",
      "service_category": "Storage & Database",
      "check_functions": [
        {
          "function_name": "documentdb_cluster_backup_enabled",
          "category": "backup",
          "execution_type": "Code Executable",
          "description": "Checks if backup is enabled for DocumentDB cluster",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "documentdb_cluster_cloudwatch_log_export",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if CloudWatch log export is enabled for DocumentDB cluster",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "documentdb_cluster_deletion_protection",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if deletion protection is enabled for DocumentDB cluster",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "documentdb_cluster_multi_az_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if multi-AZ deployment is enabled for DocumentDB cluster",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "documentdb_cluster_public_snapshot",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if public snapshot is enabled for DocumentDB cluster",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "documentdb_cluster_storage_encrypted",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if storage encryption is enabled for DocumentDB cluster",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 6,
      "duplicates_found": 0
    },
    "drs": {
      "service_name": "drs",
      "service_category": "Storage & Database",
      "check_functions": [
        {
          "function_name": "drs_job_exist",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if a DRS job exists",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 1,
      "duplicates_found": 0
    },
    "dynamodb": {
      "service_name": "dynamodb",
      "service_category": "Storage & Database",
      "check_functions": [
        {
          "function_name": "dynamodb_accelerator_cluster_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if DynamoDB Accelerator clusters are encrypted",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dynamodb_accelerator_cluster_in_transit_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if DynamoDB Accelerator clusters have in-transit encryption enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dynamodb_accelerator_cluster_multi_az",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if DynamoDB Accelerator clusters are deployed across multiple availability zones",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dynamodb_table_autoscaling_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if DynamoDB tables have autoscaling enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dynamodb_table_cross_account_access",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if DynamoDB tables have cross-account access",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dynamodb_table_deletion_protection_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if DynamoDB tables have deletion protection enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dynamodb_table_protected_by_backup_plan",
          "category": "backup",
          "execution_type": "Code Executable",
          "description": "Checks if DynamoDB tables are protected by a backup plan",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dynamodb_tables_kms_cmk_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if DynamoDB tables are encrypted with KMS CMK",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dynamodb_tables_pitr_enabled",
          "category": "backup",
          "execution_type": "Code Executable",
          "description": "Checks if DynamoDB tables have point-in-time recovery (PITR) enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dynamodb_database_engine_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the database engine version of DynamoDB",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dynamodb_table_fine_grained_access_control_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if DynamoDB tables have fine-grained access control",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dynamodb_table_in_transit_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if DynamoDB tables have in-transit encryption enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dynamodb_streams_enabled_check",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if DynamoDB streams are enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dynamodb_table_activity_monitoring_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if activity monitoring is enabled for DynamoDB tables",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dynamodb_table_audit_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if audit logging is enabled for DynamoDB tables",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dynamodb_table_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if encryption is enabled for DynamoDB tables",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dynamodb_audit_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if audit logging is enabled for DynamoDB",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dynamodb_table_encryption_at_rest_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if encryption at rest is enabled for DynamoDB tables",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dynamodb_instance_security_configuration_review",
          "category": "config",
          "execution_type": "Manual Effort",
          "description": "Reviews the security configuration of DynamoDB instances",
          "remediation_effort": "Manual"
        },
        {
          "function_name": "dynamodb_table_no_card_verification_code_storage",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if DynamoDB tables do not store card verification codes",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "dynamodb_table_no_pin_storage",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if DynamoDB tables do not store personal identification numbers (PINs)",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 21,
      "duplicates_found": 0
    },
    "ecr": {
      "service_name": "ecr",
      "service_category": "Storage & Database",
      "check_functions": [
        {
          "function_name": "ecr_registry_scan_images_on_push_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if the ECR registry scans images on push",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecr_repositories_lifecycle_policy_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the ECR repositories have lifecycle policy enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecr_repositories_not_publicly_accessible",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the ECR repositories are not publicly accessible",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecr_repositories_scan_images_on_push_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if the ECR repositories scan images on push",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecr_repositories_scan_vulnerabilities_in_latest_image",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if the ECR repositories scan for vulnerabilities in the latest image",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecr_repositories_tag_immutability",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the ECR repositories have tag immutability",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecr_user_access_restriction",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the ECR has user access restriction",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecr_repositories_approved_registry_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the ECR repositories are approved registry",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecr_limit_build_image_access",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the ECR limits build image access",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecr_registry_approval_status_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the approval status of the ECR registry",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 10,
      "duplicates_found": 0
    },
    "ecs": {
      "service_name": "ecs",
      "service_category": "Compute",
      "check_functions": [
        {
          "function_name": "ecs_cluster_container_insights_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if ECS cluster container insights are enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecs_service_fargate_latest_platform_version",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the ECS service is using the latest Fargate platform version",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecs_service_no_assign_public_ip",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the ECS service is not assigned a public IP",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecs_task_definitions_containers_readonly_access",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if ECS task definitions have read-only access to containers",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecs_task_definitions_host_namespace_not_shared",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if ECS task definitions do not share the host namespace",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecs_task_definitions_host_networking_mode_users",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the networking mode of ECS task definitions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecs_task_definitions_logging_block_mode",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if logging is blocked for ECS task definitions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecs_task_definitions_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if logging is enabled for ECS task definitions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecs_task_definitions_no_environment_secrets",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if ECS task definitions do not contain environment secrets",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecs_task_definitions_no_privileged_containers",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if ECS task definitions do not contain privileged containers",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecs_task_set_no_assign_public_ip",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if ECS task set is not assigned a public IP",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecs_task_definitions_read_only_port_disabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if read-only port is disabled for ECS task definitions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "fargate_task_definition_no_privileged_containers",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Fargate task definition does not contain privileged containers",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecs_task_definitions_host_pid_namespace_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the host PID namespace of ECS task definitions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecs_task_definitions_host_ipc_not_shared",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the host IPC is not shared in ECS task definitions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecs_task_definitions_no_allow_privilege_escalation",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if privilege escalation is not allowed in ECS task definitions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecs_task_definitions_no_root_user_access",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if root user access is not allowed in ECS task definitions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecs_task_definitions_latest_revision_logging_check",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks the logging status of the latest revision of ECS task definitions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecs_services_resource_tags_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the resource tags of ECS services",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecs_cluster_resource_tags_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the resource tags of ECS clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecs_task_definitions_tagged",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if ECS task definitions are tagged",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecs_task_definition_trusted_image_source",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the image source of the ECS task definition is trusted",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecs_task_definition_latest_active_revision",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the latest active revision of the ECS task definition is used",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecs_fargate_ephemeral_storage_encryption_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if ephemeral storage encryption is enabled for ECS Fargate",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ecs_task_definitions_host_network_flag_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the host network flag of ECS task definitions",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 25,
      "duplicates_found": 0
    },
    "efs": {
      "service_name": "efs",
      "service_category": "Storage & Database",
      "check_functions": [
        {
          "function_name": "efs_access_point_enforce_root_directory",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if EFS access points enforce root directory",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "efs_access_point_enforce_user_identity",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if EFS access points enforce user identity",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "efs_encryption_at_rest_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if EFS encryption at rest is enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "efs_have_backup_enabled",
          "category": "backup",
          "execution_type": "Code Executable",
          "description": "Checks if EFS has backup enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "efs_mount_target_not_publicly_accessible",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if EFS mount target is not publicly accessible",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "efs_multi_az_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if EFS is enabled across multiple availability zones",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "efs_not_publicly_accessible",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if EFS is not publicly accessible",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "efs_file_system_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if EFS file system encryption is enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "efs_file_system_lifecycle_policy_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the lifecycle policy of the EFS file system",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "efs_file_system_backup_policy_check",
          "category": "backup",
          "execution_type": "Code Executable",
          "description": "Checks the backup policy of the EFS file system",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "efs_file_systems_exist",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if EFS file systems exist",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "efs_file_systems_encrypted",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if EFS file systems are encrypted",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "efs_vpc_integration_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if EFS is integrated with VPC",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "efs_high_availability_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if EFS has high availability",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "efs_secure_ports_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if EFS uses secure ports",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "efs_mount_target_access_control_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the access control of EFS mount target",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "efs_mount_target_availability_zone_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the availability zone of EFS mount target",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "efs_mount_target_security_group_management_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the security group management of EFS mount target",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "efs_access_points_configuration_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the configuration of EFS access points",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "efs_access_points_permission_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the permissions of EFS access points",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "efs_access_point_iam_policy_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the IAM policy of EFS access point",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "efs_file_system_encryption_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if EFS file system encryption is enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "efs_file_system_access_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if EFS file system access logging is enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "efs_file_system_backup_enabled",
          "category": "backup",
          "execution_type": "Code Executable",
          "description": "Checks if EFS file system backup is enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "efs_security_group_configuration_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the security group configuration of EFS",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "efs_access_point_arn_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the ARN of EFS access point",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 26,
      "duplicates_found": 0
    },
    "elasticache": {
      "service_name": "elasticache",
      "service_category": "Storage & Database",
      "check_functions": [
        {
          "function_name": "elasticache_cluster_uses_public_subnet",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if ElastiCache clusters are using public subnets",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elasticache_redis_cluster_auto_minor_version_upgrades",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if auto minor version upgrades are enabled for ElastiCache Redis clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elasticache_redis_cluster_automatic_failover_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if automatic failover is enabled for ElastiCache Redis clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elasticache_redis_cluster_backup_enabled",
          "category": "backup",
          "execution_type": "Code Executable",
          "description": "Checks if backups are enabled for ElastiCache Redis clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elasticache_redis_cluster_in_transit_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if in-transit encryption is enabled for ElastiCache Redis clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elasticache_redis_cluster_multi_az_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if multi-AZ is enabled for ElastiCache Redis clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elasticache_redis_cluster_rest_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if at-rest encryption is enabled for ElastiCache Redis clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elasticache_redis_replication_group_auth_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if authentication is enabled for ElastiCache Redis replication groups",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elasticache_cluster_authentication_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if authentication is enabled for ElastiCache clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elasticache_cluster_encryption_in_transit_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if in-transit encryption is enabled for ElastiCache clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elasticache_cluster_encryption_at_rest_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if at-rest encryption is enabled for ElastiCache clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elasticache_network_security_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the network security of ElastiCache clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elasticache_encryption_at_rest_and_in_transit_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if both at-rest and in-transit encryption are enabled for ElastiCache clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elasticache_cluster_automatic_updates_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if automatic updates are enabled for ElastiCache clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elasticache_vpc_enabled_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if VPC is enabled for ElastiCache clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elasticache_cluster_monitoring_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if monitoring is enabled for ElastiCache clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elasticache_cluster_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if logging is enabled for ElastiCache clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elasticache_cluster_security_config_review",
          "category": "config",
          "execution_type": "Manual Effort",
          "description": "Reviews the security configuration of ElastiCache clusters",
          "remediation_effort": "Manual"
        },
        {
          "function_name": "elasticache_encryption_at_rest_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if at-rest encryption is enabled for ElastiCache clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elasticache_encryption_in_transit_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if in-transit encryption is enabled for ElastiCache clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elasticache_automatic_updates_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if automatic updates are enabled for ElastiCache clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elasticache_cluster_security_configuration_review",
          "category": "config",
          "execution_type": "Manual Effort",
          "description": "Reviews the security configuration of ElastiCache clusters",
          "remediation_effort": "Manual"
        },
        {
          "function_name": "elastic_file_cache_region_availability_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the availability of ElastiCache clusters in different regions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elasticache_cluster_creation_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the creation of ElastiCache clusters",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 24,
      "duplicates_found": 0
    },
    "elasticbeanstalk": {
      "service_name": "elasticbeanstalk",
      "service_category": "Compute",
      "check_functions": [
        {
          "function_name": "elasticbeanstalk_environment_cloudwatch_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if CloudWatch logging is enabled for Elastic Beanstalk environment",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elasticbeanstalk_environment_enhanced_health_reporting",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if enhanced health reporting is enabled for Elastic Beanstalk environment",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elasticbeanstalk_environment_managed_updates_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if managed updates are enabled for Elastic Beanstalk environment",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elastic_beanstalk_managed_platform_updates_configured",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if managed platform updates are configured for Elastic Beanstalk",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elastic_beanstalk_environment_logs_to_s3",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if Elastic Beanstalk environment logs are stored in S3",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 5,
      "duplicates_found": 0
    },
    "elb": {
      "service_name": "elb",
      "service_category": "Networking",
      "check_functions": [
        {
          "function_name": "elb_connection_draining_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if connection draining is enabled on the ELB",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elb_cross_zone_load_balancing_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if cross-zone load balancing is enabled on the ELB",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elb_desync_mitigation_mode",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the desync mitigation mode of the ELB",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elb_insecure_ssl_ciphers",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if any insecure SSL ciphers are in use by the ELB",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elb_internet_facing",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the ELB is internet-facing",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elb_is_in_multiple_az",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the ELB is in multiple availability zones",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elb_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if logging is enabled on the ELB",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elb_ssl_listeners",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if SSL listeners are configured on the ELB",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elb_ssl_listeners_use_acm_certificate",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if SSL listeners on the ELB use ACM certificates",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elb_tls_certificate_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the TLS certificate of the ELB",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elb_listener_secure_protocols_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if secure protocols are enabled on the ELB listeners",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 11,
      "duplicates_found": 0
    },
    "elbv2": {
      "service_name": "elbv2",
      "service_category": "Networking",
      "check_functions": [
        {
          "function_name": "elbv2_cross_zone_load_balancing_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if cross-zone load balancing is enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elbv2_deletion_protection",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if deletion protection is enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elbv2_desync_mitigation_mode",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if desync mitigation mode is enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elbv2_insecure_ssl_ciphers",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if any insecure SSL ciphers are in use",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elbv2_internet_facing",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the load balancer is internet-facing",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elbv2_is_in_multiple_az",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the load balancer is in multiple availability zones",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elbv2_listeners_underneath",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the listeners underneath the load balancer",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elbv2_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if logging is enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elbv2_nlb_tls_termination_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if TLS termination is enabled for network load balancer",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elbv2_ssl_listeners",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the SSL listeners of the load balancer",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elbv2_waf_acl_attached",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if a WAF ACL is attached",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elbv2_tls_certificate_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the TLS certificate of the load balancer",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elastic_load_balancing_access_logs_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if access logs are enabled for elastic load balancing",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elasticloadbalancing_https_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if HTTPS is enabled for elastic load balancing",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elb_listener_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if encryption is enabled for ELB listener",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elb_https_listener_tls_certificate_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the TLS certificate of the HTTPS listener for ELB",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 16,
      "duplicates_found": 0
    },
    "emr": {
      "service_name": "emr",
      "service_category": "Analytics",
      "check_functions": [
        {
          "function_name": "emr_cluster_account_public_block_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the EMR cluster account has public block enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "emr_cluster_master_nodes_no_public_ip",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the EMR cluster master nodes do not have a public IP",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "emr_cluster_publicly_accesible",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the EMR cluster is publicly accessible",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 3,
      "duplicates_found": 0
    },
    "eventbridge": {
      "service_name": "eventbridge",
      "service_category": "Management & Governance",
      "check_functions": [
        {
          "function_name": "eventbridge_bus_cross_account_access",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if EventBridge bus allows cross account access",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "eventbridge_bus_exposed",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if EventBridge bus is exposed to the public",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "eventbridge_global_endpoint_event_replication_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if global endpoint event replication is enabled in EventBridge",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "eventbridge_schema_registry_cross_account_access",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if EventBridge schema registry allows cross account access",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 4,
      "duplicates_found": 0
    },
    "firehose": {
      "service_name": "firehose",
      "service_category": "Analytics",
      "check_functions": [
        {
          "function_name": "firehose_stream_encrypted_at_rest",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the Firehose stream is encrypted at rest",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 1,
      "duplicates_found": 0
    },
    "fms": {
      "service_name": "fms",
      "service_category": "Security & Identity",
      "check_functions": [
        {
          "function_name": "fms_policy_compliant",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the Firewall Manager policies are compliant",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 1,
      "duplicates_found": 0
    },
    "fsx": {
      "service_name": "fsx",
      "service_category": "Storage & Database",
      "check_functions": [
        {
          "function_name": "fsx_file_system_copy_tags_to_backups_enabled",
          "category": "backup",
          "execution_type": "Code Executable",
          "description": "Checks if tags are copied to backups in FSx",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "fsx_file_system_copy_tags_to_volumes_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if tags are copied to volumes in FSx",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "fsx_windows_file_system_multi_az_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if multi-AZ is enabled for Windows file system in FSx",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "fsx_file_cache_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if encryption is enabled for file cache in FSx",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "fsx_file_cache_in_transit_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if in-transit encryption is enabled for file cache in FSx",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "fsx_file_cache_audit_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if audit logging is enabled for file cache in FSx",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "fsx_file_cache_access_control_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the access control configuration for file cache in FSx",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "fsx_s3_bucket_data_access_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the data access configuration for S3 bucket in FSx",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "fsx_cache_mount_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the cache mount configuration in FSx",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "fsx_unused_resources_cleanup_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks for unused resources in FSx and suggests cleanup",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "fsx_redundant_file_systems_cleanup_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks for redundant file systems in FSx and suggests cleanup",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "fsx_snapshots_cleanup_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks for redundant snapshots in FSx and suggests cleanup",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "fsx_mount_targets_cleanup_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks for unused mount targets in FSx and suggests cleanup",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "fsx_file_cache_backup_enabled",
          "category": "backup",
          "execution_type": "Code Executable",
          "description": "Checks if backup is enabled for file cache in FSx",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "fsx_s3_bucket_access_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the access configuration for S3 bucket in FSx",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "fsx_unused_file_systems_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks for unused file systems in FSx",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "fsx_redundant_snapshots_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks for redundant snapshots in FSx",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "fsx_unused_mount_targets_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks for unused mount targets in FSx",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "fsx_data_backup_or_migration_check",
          "category": "backup",
          "execution_type": "Code Executable",
          "description": "Checks if data backup or migration is needed in FSx",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 19,
      "duplicates_found": 0
    },
    "glacier": {
      "service_name": "glacier",
      "service_category": "Storage & Database",
      "check_functions": [
        {
          "function_name": "glacier_vaults_policy_public_access",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the Glacier vaults have public access policies",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 1,
      "duplicates_found": 0
    },
    "glue": {
      "service_name": "glue",
      "service_category": "Analytics",
      "check_functions": [
        {
          "function_name": "glue_data_catalogs_connection_passwords_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Glue data catalogs connection passwords are encrypted",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "glue_data_catalogs_metadata_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Glue data catalogs metadata is encrypted",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "glue_data_catalogs_not_publicly_accessible",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Glue data catalogs are not publicly accessible",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "glue_database_connections_ssl_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if SSL is enabled for Glue database connections",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "glue_development_endpoints_cloudwatch_logs_encryption_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if CloudWatch logs encryption is enabled for Glue development endpoints",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "glue_development_endpoints_job_bookmark_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if job bookmark encryption is enabled for Glue development endpoints",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "glue_development_endpoints_s3_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if S3 encryption is enabled for Glue development endpoints",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "glue_etl_jobs_amazon_s3_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Amazon S3 encryption is enabled for Glue ETL jobs",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "glue_etl_jobs_cloudwatch_logs_encryption_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if CloudWatch logs encryption is enabled for Glue ETL jobs",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "glue_etl_jobs_job_bookmark_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if job bookmark encryption is enabled for Glue ETL jobs",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "glue_etl_jobs_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if logging is enabled for Glue ETL jobs",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "glue_ml_transform_encrypted_at_rest",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Glue ML Transform is encrypted at rest",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 12,
      "duplicates_found": 0
    },
    "guardduty": {
      "service_name": "guardduty",
      "service_category": "Security & Identity",
      "check_functions": [
        {
          "function_name": "guardduty_centrally_managed",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if GuardDuty is centrally managed",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "guardduty_ec2_malware_protection_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if EC2 instances have malware protection enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "guardduty_eks_audit_log_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if EKS audit logs are enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "guardduty_eks_runtime_monitoring_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if EKS runtime monitoring is enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "guardduty_is_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if GuardDuty is enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "guardduty_lambda_protection_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if Lambda functions have protection enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "guardduty_no_high_severity_findings",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if there are no high severity findings",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "guardduty_rds_protection_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if RDS instances have protection enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "guardduty_s3_protection_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if S3 buckets have protection enabled",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 9,
      "duplicates_found": 0
    },
    "inspector2": {
      "service_name": "inspector2",
      "service_category": "Security & Identity",
      "check_functions": [
        {
          "function_name": "inspector2_active_findings_exist",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if there are any active findings in Inspector2",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "inspector2_is_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Inspector2 service is enabled",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 2,
      "duplicates_found": 0
    },
    "kafka": {
      "service_name": "kafka",
      "service_category": "Analytics",
      "check_functions": [
        {
          "function_name": "kafka_cluster_encryption_at_rest_uses_cmk",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the Kafka cluster encryption at rest uses a customer master key",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "kafka_cluster_enhanced_monitoring_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if the Kafka cluster has enhanced monitoring enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "kafka_cluster_in_transit_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the Kafka cluster has in-transit encryption enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "kafka_cluster_is_public",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the Kafka cluster is public",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "kafka_cluster_mutual_tls_authentication_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the Kafka cluster has mutual TLS authentication enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "kafka_cluster_unrestricted_access_disabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the Kafka cluster has unrestricted access disabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "kafka_cluster_uses_latest_version",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the Kafka cluster uses the latest version",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "kafka_connector_in_transit_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the Kafka connector has in-transit encryption enabled",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 8,
      "duplicates_found": 0
    },
    "kinesis": {
      "service_name": "kinesis",
      "service_category": "Analytics",
      "check_functions": [
        {
          "function_name": "kinesis_stream_data_retention_period",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the data retention period of the Kinesis stream",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "kinesis_stream_encrypted_at_rest",
          "category": "security",
          "execution_type": "Code Executable",
          "description": "Checks if the Kinesis stream data is encrypted at rest",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "kinesis_stream_encryption_enabled",
          "category": "security",
          "execution_type": "Code Executable",
          "description": "Checks if encryption is enabled for the Kinesis stream",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 3,
      "duplicates_found": 0
    },
    "kms": {
      "service_name": "kms",
      "service_category": "Security & Identity",
      "check_functions": [
        {
          "function_name": "kms_cmk_are_used",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if KMS customer master keys are in use",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "kms_cmk_not_deleted_unintentionally",
          "category": "monitoring",
          "execution_type": "Hybrid Approach",
          "description": "Monitors if KMS customer master keys are not deleted unintentionally",
          "remediation_effort": "Manual"
        },
        {
          "function_name": "kms_cmk_not_multi_region",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if KMS customer master keys are not enabled for multi-region",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "kms_cmk_rotation_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if KMS customer master keys rotation is enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "kms_key_not_publicly_accessible",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if KMS keys are not publicly accessible",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "kms_cmk_rotation_enabled_check",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Monitors if KMS customer master keys rotation is enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "encryption_settings_audit",
          "category": "logging",
          "execution_type": "Manual Effort",
          "description": "Audits the encryption settings",
          "remediation_effort": "Manual"
        },
        {
          "function_name": "encryption_settings_regular_review",
          "category": "monitoring",
          "execution_type": "Manual Effort",
          "description": "Regularly reviews the encryption settings",
          "remediation_effort": "Manual"
        },
        {
          "function_name": "timestream_kms_key_management_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the management of Timestream KMS keys",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "timestream_encryption_settings_review",
          "category": "monitoring",
          "execution_type": "Manual Effort",
          "description": "Reviews the encryption settings of Timestream",
          "remediation_effort": "Manual"
        },
        {
          "function_name": "kms_keyed_hashing_for_pan_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if KMS keys are used for hashing PAN",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "kms_key_generation_strong_algorithms_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if strong algorithms are used for KMS key generation",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "kms_key_secure_distribution_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if KMS keys are securely distributed",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "kms_key_secure_storage_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if KMS keys are securely stored",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "kms_key_cryptoperiod_management_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the management of KMS keys cryptoperiod",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "kms_key_retirement_and_replacement_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the retirement and replacement process of KMS keys",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "kms_key_split_knowledge_dual_control_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if KMS keys are managed with split knowledge and dual control",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "kms_key_unauthorized_substitution_prevention_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if unauthorized substitution of KMS keys is prevented",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "kms_key_custodian_acknowledgment_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if KMS key custodians acknowledge their responsibilities",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "kms_key_sharing_guidance_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if guidance is provided for sharing KMS keys",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "kms_key_rotation_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if KMS keys rotation is enabled",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 21,
      "duplicates_found": 0
    },
    "lightsail": {
      "service_name": "lightsail",
      "service_category": "Compute",
      "check_functions": [
        {
          "function_name": "lightsail_database_public",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the Lightsail database is publicly accessible",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "lightsail_instance_automated_snapshots",
          "category": "backup",
          "execution_type": "Code Executable",
          "description": "Checks if automated snapshots are enabled for Lightsail instances",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "lightsail_instance_public",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the Lightsail instance is publicly accessible",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "lightsail_static_ip_unused",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if there are any unused static IPs in Lightsail",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "lightsail_instance_check_for_updates",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if the Lightsail instance is up-to-date",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "lightsail_instance_apply_updates",
          "category": "config",
          "execution_type": "Manual Effort",
          "description": "Checks if updates have been applied to the Lightsail instance",
          "remediation_effort": "Manual"
        },
        {
          "function_name": "lightsail_instance_default_admin_credentials_changed",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the default admin credentials have been changed for the Lightsail instance",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "lightsail_instance_disable_ssh_rdp_ports",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if SSH/RDP ports are disabled for the Lightsail instance",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "lightsail_instance_ssh_access_restriction_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if SSH access is restricted for the Lightsail instance",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "lightsail_instance_rdp_access_restriction_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if RDP access is restricted for the Lightsail instance",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "lightsail_disable_ipv6_if_not_in_use",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if IPv6 is disabled for the Lightsail instance when not in use",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "lightsail_bucket_iam_policy_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the IAM policy of the Lightsail bucket",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "lightsail_instance_attached_to_bucket",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the Lightsail instance is attached to a bucket",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "lightsail_bucket_not_publicly_accessible",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the Lightsail bucket is not publicly accessible",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "lightsail_windows_server_instances_security_patches_check",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if security patches are up-to-date for Windows server instances in Lightsail",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "lightsail_windows_instance_default_password_changed",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the default password has been changed for Windows instances in Lightsail",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 16,
      "duplicates_found": 0
    },
    "macie": {
      "service_name": "macie",
      "service_category": "Security & Identity",
      "check_functions": [
        {
          "function_name": "macie_automated_sensitive_data_discovery_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Macie automated sensitive data discovery is enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "macie_is_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if Macie service is enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "s3_bucket_data_classification",
          "category": "backup",
          "execution_type": "Hybrid Approach",
          "description": "Checks the classification of data in S3 buckets",
          "remediation_effort": "Manual"
        }
      ],
      "check_count": 3,
      "duplicates_found": 0
    },
    "memorydb": {
      "service_name": "memorydb",
      "service_category": "Storage & Database",
      "check_functions": [
        {
          "function_name": "memorydb_cluster_auto_minor_version_upgrades",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if automatic minor version upgrades are enabled for MemoryDB clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "memorydb_cluster_audit_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if audit logging is enabled for MemoryDB clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "memorydb_cluster_monitoring_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if monitoring is enabled for MemoryDB clusters",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 3,
      "duplicates_found": 0
    },
    "mq": {
      "service_name": "mq",
      "service_category": "Compute",
      "check_functions": [
        {
          "function_name": "mq_broker_active_deployment_mode",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the broker is in active deployment mode",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "mq_broker_auto_minor_version_upgrades",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the broker has automatic minor version upgrades enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "mq_broker_cluster_deployment_mode",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the broker is in cluster deployment mode",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "mq_broker_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if logging is enabled for the broker",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "mq_broker_not_publicly_accessible",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the broker is not publicly accessible",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 5,
      "duplicates_found": 0
    },
    "neptune": {
      "service_name": "neptune",
      "service_category": "Storage & Database",
      "check_functions": [
        {
          "function_name": "neptune_cluster_backup_enabled",
          "category": "backup",
          "execution_type": "Code Executable",
          "description": "Checks if backup is enabled for Neptune cluster",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "neptune_cluster_copy_tags_to_snapshots",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if tags are copied to snapshots in Neptune cluster",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "neptune_cluster_deletion_protection",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if deletion protection is enabled for Neptune cluster",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "neptune_cluster_iam_authentication_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if IAM authentication is enabled for Neptune cluster",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "neptune_cluster_integration_cloudwatch_logs",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if Neptune cluster is integrated with CloudWatch logs",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "neptune_cluster_multi_az",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Neptune cluster is configured for multiple availability zones",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "neptune_cluster_public_snapshot",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if public snapshot is enabled for Neptune cluster",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "neptune_cluster_snapshot_encrypted",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if snapshots are encrypted for Neptune cluster",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "neptune_cluster_storage_encrypted",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if storage is encrypted for Neptune cluster",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "neptune_cluster_uses_public_subnet",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Neptune cluster uses public subnet",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "neptune_db_cluster_iam_roles_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks IAM roles for Neptune DB cluster",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 11,
      "duplicates_found": 0
    },
    "networkfirewall": {
      "service_name": "networkfirewall",
      "service_category": "Networking",
      "check_functions": [
        {
          "function_name": "networkfirewall_deletion_protection",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if deletion protection is enabled for Network Firewall",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "networkfirewall_in_all_vpc",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Network Firewall is enabled in all VPCs",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "networkfirewall_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if logging is enabled for Network Firewall",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "networkfirewall_multi_az",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Network Firewall is enabled in multiple availability zones",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "networkfirewall_policy_default_action_fragmented_packets",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the default action for fragmented packets in Network Firewall policy",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "networkfirewall_policy_default_action_full_packets",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the default action for full packets in Network Firewall policy",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "networkfirewall_policy_rule_group_associated",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if a rule group is associated with the Network Firewall policy",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 7,
      "duplicates_found": 0
    },
    "opensearch": {
      "service_name": "opensearch",
      "service_category": "Analytics",
      "check_functions": [
        {
          "function_name": "opensearch_service_domains_access_control_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if access control is enabled for OpenSearch service domains",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "opensearch_service_domains_audit_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if audit logging is enabled for OpenSearch service domains",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "opensearch_service_domains_cloudwatch_logging_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if CloudWatch logging is enabled for OpenSearch service domains",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "opensearch_service_domains_encryption_at_rest_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if encryption at rest is enabled for OpenSearch service domains",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "opensearch_service_domains_fault_tolerant_data_nodes",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if fault tolerant data nodes are enabled for OpenSearch service domains",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "opensearch_service_domains_fault_tolerant_master_nodes",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if fault tolerant master nodes are enabled for OpenSearch service domains",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "opensearch_service_domains_https_communications_enforced",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if HTTPS communications are enforced for OpenSearch service domains",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "opensearch_service_domains_internal_user_database_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if internal user database is enabled for OpenSearch service domains",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "opensearch_service_domains_node_to_node_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if node to node encryption is enabled for OpenSearch service domains",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "opensearch_service_domains_not_publicly_accessible",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if OpenSearch service domains are not publicly accessible",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "opensearch_service_domains_updated_to_the_latest_service_software_version",
          "category": "config",
          "execution_type": "Manual Effort",
          "description": "Checks if OpenSearch service domains are updated to the latest service software version",
          "remediation_effort": "Manual"
        },
        {
          "function_name": "opensearch_service_domains_use_cognito_authentication_for_kibana",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Cognito authentication is used for Kibana in OpenSearch service domains",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 12,
      "duplicates_found": 0
    },
    "organizations": {
      "service_name": "organizations",
      "service_category": "Management & Governance",
      "check_functions": [
        {
          "function_name": "organizations_account_part_of_organizations",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the account is part of AWS Organizations",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "organizations_delegated_administrators",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks for delegated administrators within the organization",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "organizations_opt_out_ai_services_policy",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the organization has opted out of AI services policy",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "organizations_scp_check_deny_regions",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the organization has a service control policy that denies access to certain regions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "organizations_tags_policies_enabled_and_attached",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if tag policies are enabled and attached in the organization",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "organizations_tag_policies_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if tag policies are enabled in the organization",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "aws_organizations_multi_account_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if multiple accounts are being used within the organization",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "awsbackup_disaster_recovery_procedures_check",
          "category": "backup",
          "execution_type": "Code Executable",
          "description": "Checks if disaster recovery procedures are in place",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 8,
      "duplicates_found": 0
    },
    "redshift": {
      "service_name": "redshift",
      "service_category": "Storage & Database",
      "check_functions": [
        {
          "function_name": "redshift_cluster_audit_logging",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if audit logging is enabled for Redshift clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "redshift_cluster_automated_snapshot",
          "category": "backup",
          "execution_type": "Code Executable",
          "description": "Checks if automated snapshots are enabled for Redshift clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "redshift_cluster_automatic_upgrades",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if automatic upgrades are enabled for Redshift clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "redshift_cluster_encrypted_at_rest",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Redshift clusters are encrypted at rest",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "redshift_cluster_enhanced_vpc_routing",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if enhanced VPC routing is enabled for Redshift clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "redshift_cluster_in_transit_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if in-transit encryption is enabled for Redshift clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "redshift_cluster_multi_az_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if multi-AZ is enabled for Redshift clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "redshift_cluster_non_default_database_name",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if non-default database name is used for Redshift clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "redshift_cluster_non_default_username",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if non-default username is used for Redshift clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "redshift_cluster_public_access",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if public access is enabled for Redshift clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "redshift_cluster_encryption_at_rest_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if encryption at rest is enabled for Redshift clusters",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "redshift_cluster_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if encryption is enabled for Redshift clusters",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 12,
      "duplicates_found": 0
    },
    "resourceexplorer2": {
      "service_name": "resourceexplorer2",
      "service_category": "Management & Governance",
      "check_functions": [
        {
          "function_name": "resourceexplorer2_indexes_found",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if indexes are found in resourceexplorer2",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 1,
      "duplicates_found": 0
    },
    "route53": {
      "service_name": "route53",
      "service_category": "Networking",
      "check_functions": [
        {
          "function_name": "route53_dangling_ip_subdomain_takeover",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if there are any dangling IP subdomains that can be taken over",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "route53_domains_privacy_protection_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if privacy protection is enabled for Route53 domains",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "route53_domains_transferlock_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if transfer lock is enabled for Route53 domains",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "route53_public_hosted_zones_cloudwatch_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if CloudWatch logging is enabled for public hosted zones in Route53",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 4,
      "duplicates_found": 0
    },
    "sagemaker": {
      "service_name": "sagemaker",
      "service_category": "Analytics",
      "check_functions": [
        {
          "function_name": "sagemaker_endpoint_config_prod_variant_instances",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if production variant instances are configured for SageMaker endpoint",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "sagemaker_models_network_isolation_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if network isolation is enabled for SageMaker models",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "sagemaker_models_vpc_settings_configured",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if VPC settings are configured for SageMaker models",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "sagemaker_notebook_instance_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if encryption is enabled for SageMaker notebook instances",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "sagemaker_notebook_instance_root_access_disabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if root access is disabled for SageMaker notebook instances",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "sagemaker_notebook_instance_vpc_settings_configured",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if VPC settings are configured for SageMaker notebook instances",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "sagemaker_notebook_instance_without_direct_internet_access_configured",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if SageMaker notebook instances are configured without direct internet access",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "sagemaker_training_jobs_intercontainer_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if intercontainer encryption is enabled for SageMaker training jobs",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "sagemaker_training_jobs_network_isolation_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if network isolation is enabled for SageMaker training jobs",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "sagemaker_training_jobs_volume_and_output_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if volume and output encryption is enabled for SageMaker training jobs",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "sagemaker_training_jobs_vpc_settings_configured",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if VPC settings are configured for SageMaker training jobs",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 11,
      "duplicates_found": 0
    },
    "secretsmanager": {
      "service_name": "secretsmanager",
      "service_category": "Security & Identity",
      "check_functions": [
        {
          "function_name": "secretsmanager_automatic_rotation_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if automatic rotation is enabled for secrets",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "secretsmanager_not_publicly_accessible",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if secrets are not publicly accessible",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "secretsmanager_secret_rotated_periodically",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if secrets are rotated periodically",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "secretsmanager_secret_unused",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if there are any unused secrets",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "secretsmanager_secret_rotation_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if rotation is enabled for secrets",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "secretsmanager_secret_encryption_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if secrets are encrypted",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "secrets_manager_secret_rotation_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if rotation is enabled for secrets",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "secrets_manager_external_secrets_storage_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if secrets are stored externally",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "secrets_manager_secrets_encryption_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if secrets are encrypted",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "secrets_manager_secrets_rotation_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if secrets are rotated",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 10,
      "duplicates_found": 0
    },
    "securityhub": {
      "service_name": "securityhub",
      "service_category": "Security & Identity",
      "check_functions": [
        {
          "function_name": "securityhub_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Security Hub is enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "securityhub_check_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if checks in Security Hub are enabled",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 2,
      "duplicates_found": 0
    },
    "servicecatalog": {
      "service_name": "servicecatalog",
      "service_category": "Management & Governance",
      "check_functions": [
        {
          "function_name": "servicecatalog_portfolio_shared_within_organization_only",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the Service Catalog portfolios are shared within the organization only",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 1,
      "duplicates_found": 0
    },
    "ses": {
      "service_name": "ses",
      "service_category": "Security & Identity",
      "check_functions": [
        {
          "function_name": "ses_identity_not_publicly_accessible",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if SES identities are not publicly accessible",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ses_email_phishing_protection_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if SES email phishing protection is enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ses_email_spf_protection_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if SES email SPF protection is enabled",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 3,
      "duplicates_found": 0
    },
    "shield": {
      "service_name": "shield",
      "service_category": "Security & Identity",
      "check_functions": [
        {
          "function_name": "shield_advanced_protection_in_associated_elastic_ips",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Shield Advanced protection is enabled for associated Elastic IPs",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "shield_advanced_protection_in_classic_load_balancers",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Shield Advanced protection is enabled for Classic Load Balancers",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "shield_advanced_protection_in_cloudfront_distributions",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Shield Advanced protection is enabled for CloudFront distributions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "shield_advanced_protection_in_global_accelerators",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Shield Advanced protection is enabled for Global Accelerators",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "shield_advanced_protection_in_internet_facing_load_balancers",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Shield Advanced protection is enabled for Internet-facing Load Balancers",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "shield_advanced_protection_in_route53_hosted_zones",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Shield Advanced protection is enabled for Route53 hosted zones",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 6,
      "duplicates_found": 0
    },
    "sns": {
      "service_name": "sns",
      "service_category": "Security & Identity",
      "check_functions": [
        {
          "function_name": "sns_subscription_not_using_http_endpoints",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if SNS subscriptions are not using HTTP endpoints",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "sns_topics_kms_encryption_at_rest_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if SNS topics have KMS encryption at rest enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "sns_topics_not_publicly_accessible",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if SNS topics are not publicly accessible",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "documentdb_cluster_patch_update_notification_check",
          "category": "monitoring",
          "execution_type": "Hybrid Approach",
          "description": "Checks if DocumentDB clusters have patch update notifications enabled",
          "remediation_effort": "Manual"
        },
        {
          "function_name": "awsbackup_alert_communication_check",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if AWS Backup has alert communication enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "sns_create_subscription_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if SNS subscriptions are created correctly",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "sns_topic_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if SNS topics have encryption enabled",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 7,
      "duplicates_found": 0
    },
    "sqs": {
      "service_name": "sqs",
      "service_category": "Storage & Database",
      "check_functions": [
        {
          "function_name": "sqs_queues_not_publicly_accessible",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if SQS queues are not publicly accessible",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "sqs_queues_server_side_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if SQS queues have server-side encryption enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "sqs_queue_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if SQS queues have encryption enabled",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 3,
      "duplicates_found": 0
    },
    "ssm": {
      "service_name": "ssm",
      "service_category": "Management & Governance",
      "check_functions": [
        {
          "function_name": "ssm_document_secrets",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if SSM documents contain secrets",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ssm_documents_set_as_public",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if SSM documents are set as public",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ssm_managed_compliant_patching",
          "category": "monitoring",
          "execution_type": "Hybrid Approach",
          "description": "Checks if SSM managed instances are compliant with patching",
          "remediation_effort": "Manual"
        },
        {
          "function_name": "aws_cli_version_upgrade_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if AWS CLI version needs an upgrade",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ssm_patch_compliance_status_check",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks the patch compliance status of SSM managed instances",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "ssm_patch_baseline_compliance_check",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks the patch baseline compliance of SSM managed instances",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "workstation_os_patch_and_update_check",
          "category": "monitoring",
          "execution_type": "Manual Effort",
          "description": "Checks if the workstation OS is patched and updated",
          "remediation_effort": "Manual"
        },
        {
          "function_name": "fsx_lustre_client_installation_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if FSx Lustre client is installed",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "edr_functionality_check",
          "category": "monitoring",
          "execution_type": "Manual Effort",
          "description": "Checks if EDR functionality is working as expected",
          "remediation_effort": "Manual"
        },
        {
          "function_name": "edr_system_update_check",
          "category": "monitoring",
          "execution_type": "Manual Effort",
          "description": "Checks if EDR system is updated",
          "remediation_effort": "Manual"
        },
        {
          "function_name": "edr_working_check",
          "category": "monitoring",
          "execution_type": "Manual Effort",
          "description": "Checks if EDR is working properly",
          "remediation_effort": "Manual"
        },
        {
          "function_name": "edr_software_deployment_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if EDR software is deployed correctly",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "edr_software_update_check",
          "category": "monitoring",
          "execution_type": "Manual Effort",
          "description": "Checks if EDR software is updated",
          "remediation_effort": "Manual"
        }
      ],
      "check_count": 13,
      "duplicates_found": 0
    },
    "ssmincidents": {
      "service_name": "ssmincidents",
      "service_category": "Management & Governance",
      "check_functions": [
        {
          "function_name": "ssmincidents_enabled_with_plans",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if AWS Systems Manager Incident Manager is enabled with response plans",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 1,
      "duplicates_found": 0
    },
    "stepfunctions": {
      "service_name": "stepfunctions",
      "service_category": "Management & Governance",
      "check_functions": [
        {
          "function_name": "stepfunctions_statemachine_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if logging is enabled for Step Functions state machines",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 1,
      "duplicates_found": 0
    },
    "storagegateway": {
      "service_name": "storagegateway",
      "service_category": "Storage & Database",
      "check_functions": [
        {
          "function_name": "storagegateway_fileshare_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if encryption is enabled for file shares in Storage Gateway",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "storagegateway_gateway_fault_tolerant",
          "category": "monitoring",
          "execution_type": "Hybrid Approach",
          "description": "Checks if the Storage Gateway is fault tolerant",
          "remediation_effort": "Manual"
        }
      ],
      "check_count": 2,
      "duplicates_found": 0
    },
    "transfer": {
      "service_name": "transfer",
      "service_category": "Storage & Database",
      "check_functions": [
        {
          "function_name": "transfer_server_in_transit_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the Transfer server has in-transit encryption enabled",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 1,
      "duplicates_found": 0
    },
    "trustedadvisor": {
      "service_name": "trustedadvisor",
      "service_category": "Management & Governance",
      "check_functions": [
        {
          "function_name": "trustedadvisor_errors_and_warnings",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks for errors and warnings in the Trusted Advisor service",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "trustedadvisor_premium_support_plan_subscribed",
          "category": "config",
          "execution_type": "Manual Effort",
          "description": "Checks if a premium support plan is subscribed for the Trusted Advisor service",
          "remediation_effort": "Manual"
        }
      ],
      "check_count": 2,
      "duplicates_found": 0
    },
    "vpc": {
      "service_name": "vpc",
      "service_category": "Networking",
      "check_functions": [
        {
          "function_name": "vpc_different_regions",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if VPCs are in different regions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "vpc_endpoint_connections_trust_boundaries",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks trust boundaries for VPC endpoint connections",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "vpc_endpoint_for_ec2_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if VPC endpoint for EC2 is enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "vpc_endpoint_multi_az_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if VPC endpoint is enabled across multiple availability zones",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "vpc_endpoint_services_allowed_principals_trust_boundaries",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks trust boundaries for allowed principals in VPC endpoint services",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "vpc_flow_logs_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if VPC flow logs are enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "vpc_peering_routing_tables_with_least_privilege",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if VPC peering routing tables are configured with least privilege",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "vpc_subnet_different_az",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if VPC subnets are in different availability zones",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "vpc_subnet_no_public_ip_by_default",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if VPC subnets are configured to not assign public IP by default",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "vpc_subnet_separate_private_public",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if VPC subnets are separated into private and public",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "vpc_vpn_connection_tunnels_up",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if VPC VPN connection tunnels are up",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "vpc_pre_production_separation_check",
          "category": "config",
          "execution_type": "Manual Effort",
          "description": "Checks if pre-production environments are separated in VPC",
          "remediation_effort": "Manual"
        },
        {
          "function_name": "vpc_network_layer_penetration_test_results_check",
          "category": "monitoring",
          "execution_type": "Manual Effort",
          "description": "Checks the results of network layer penetration tests in VPC",
          "remediation_effort": "Manual"
        },
        {
          "function_name": "vpc_segmentation_control_test_results_check",
          "category": "monitoring",
          "execution_type": "Manual Effort",
          "description": "Checks the results of segmentation control tests in VPC",
          "remediation_effort": "Manual"
        },
        {
          "function_name": "vpc_network_segmentation_test_results_check",
          "category": "monitoring",
          "execution_type": "Manual Effort",
          "description": "Checks the results of network segmentation tests in VPC",
          "remediation_effort": "Manual"
        },
        {
          "function_name": "vpc_data_flow_diagram_check",
          "category": "monitoring",
          "execution_type": "Manual Effort",
          "description": "Checks the data flow diagram of VPC",
          "remediation_effort": "Manual"
        }
      ],
      "check_count": 16,
      "duplicates_found": 0
    },
    "waf": {
      "service_name": "waf",
      "service_category": "Security & Identity",
      "check_functions": [
        {
          "function_name": "waf_global_rule_with_conditions",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if global WAF rules have conditions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "waf_global_rulegroup_not_empty",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if global WAF rule groups are not empty",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "waf_global_webacl_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if logging is enabled for global WAF web ACLs",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "waf_global_webacl_with_rules",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if global WAF web ACLs have rules",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "waf_regional_rule_with_conditions",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if regional WAF rules have conditions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "waf_regional_rulegroup_not_empty",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if regional WAF rule groups are not empty",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "waf_regional_webacl_with_rules",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if regional WAF web ACLs have rules",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "waf_web_acl_intrusion_detection_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if intrusion detection is enabled for WAF web ACLs",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 8,
      "duplicates_found": 0
    },
    "wafv2": {
      "service_name": "wafv2",
      "service_category": "Security & Identity",
      "check_functions": [
        {
          "function_name": "wafv2_webacl_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if logging is enabled for WAFv2 WebACL",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "wafv2_webacl_rule_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if logging is enabled for WAFv2 WebACL rules",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "wafv2_webacl_with_rules",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if WAFv2 WebACL has rules configured",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 3,
      "duplicates_found": 0
    },
    "wellarchitected": {
      "service_name": "wellarchitected",
      "service_category": "Management & Governance",
      "check_functions": [
        {
          "function_name": "wellarchitected_workload_no_high_or_medium_risks",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if there are no high or medium risks in the well-architected workload",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 1,
      "duplicates_found": 0
    },
    "workspaces": {
      "service_name": "workspaces",
      "service_category": "Compute",
      "check_functions": [
        {
          "function_name": "workspaces_volume_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if volume encryption is enabled for workspaces",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "workspaces_vpc_2private_1public_subnets_nat",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if VPC for workspaces has 2 private and 1 public subnets with NAT",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "workspaces_user_mfa_enabled_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if MFA is enabled for workspace users",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "workspaces_volume_encryption_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if volume encryption is enabled for workspaces",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "workspaces_vpc_deployment_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if VPC is properly deployed for workspaces",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "workspaces_web_access_disabled_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if web access is disabled for workspaces",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "workspaces_cloudwatch_setup_check",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if CloudWatch is properly set up for workspaces",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "workspaces_image_cis_benchmark_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if workspace images meet CIS benchmark",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "workspaces_bundle_approved_versions_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if workspace bundles are of approved versions",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "workspaces_images_older_than_90_days",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if there are workspace images older than 90 days",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "workspaces_unused_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if there are unused workspaces",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "workspaces_interface_ports_inbound_traffic_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if there is any inbound traffic on interface ports of workspaces",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "workspaces_fips_endpoint_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if FIPS endpoint encryption is enabled for workspaces",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 13,
      "duplicates_found": 0
    },
    "kubernetes": {
      "service_name": "kubernetes",
      "service_category": "Compute",
      "check_functions": [
        {
          "function_name": "kubernetes_audit_logs_collected_managed",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if Kubernetes audit logs are collected and managed properly",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "kubernetes_audit_logs_collection_check",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if Kubernetes audit logs are being collected",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "kubernetes_audit_logs_management_check",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if Kubernetes audit logs are being managed",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 3,
      "duplicates_found": 0
    },
    "awscli": {
      "service_name": "awscli",
      "service_category": "Management & Governance",
      "check_functions": [
        {
          "function_name": "aws_cli_version_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the version of AWS CLI installed",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 1,
      "duplicates_found": 0
    },
    "batch": {
      "service_name": "batch",
      "service_category": "Compute",
      "check_functions": [
        {
          "function_name": "batch_jobs_cloudwatch_logs_configured",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if AWS Batch jobs are configured to send logs to CloudWatch",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 1,
      "duplicates_found": 0
    },
    "configservice": {
      "service_name": "configservice",
      "service_category": "Management & Governance",
      "check_functions": [
        {
          "function_name": "awsconfig_lambda_config_tracking_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if AWS Config is enabled to track Lambda function configuration changes",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "awsconfig_serverless_config_tracking_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if AWS Config is enabled to track Serverless Application Model (SAM) configuration changes",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "security_configuration_best_practices_check",
          "category": "config",
          "execution_type": "Hybrid Approach",
          "description": "Checks if the security configuration adheres to best practices",
          "remediation_effort": "Manual"
        },
        {
          "function_name": "security_configuration_industry_standards_check",
          "category": "config",
          "execution_type": "Hybrid Approach",
          "description": "Checks if the security configuration adheres to industry standards",
          "remediation_effort": "Manual"
        },
        {
          "function_name": "security_configuration_best_practices_review",
          "category": "config",
          "execution_type": "Manual Effort",
          "description": "Reviews the security configuration for adherence to best practices",
          "remediation_effort": "Manual"
        }
      ],
      "check_count": 5,
      "duplicates_found": 0
    },
    "lambda": {
      "service_name": "lambda",
      "service_category": "Compute",
      "check_functions": [
        {
          "function_name": "cloudwatch_lambda_insights_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if CloudWatch Lambda insights are enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "lambda_secrets_manager_integration_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Lambda function is integrated with Secrets Manager",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "awslambda_function_least_privilege_policy_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Lambda function follows the least privilege policy",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "awslambda_function_iam_role_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Lambda function has an IAM role assigned",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "lambda_function_active_execution_role_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Lambda function has an active execution role",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "awslambda_function_code_signing_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if code signing is enabled for Lambda function",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "awslambda_function_no_admin_privileges",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Lambda function does not have admin privileges",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "awslambda_function_cross_account_access_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Lambda function does not have cross account access",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "awslambda_function_runtime_end_of_support_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Lambda function runtime is not at the end of support",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "awslambda_function_variables_encryption_in_transit_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if encryption in transit is enabled for Lambda function variables",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "awslambda_function_dynamodb_integration_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Lambda function is integrated with DynamoDB",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "lambda_function_latest_runtime_version_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Lambda function is using the latest runtime version",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "lambda_function_unused_permissions_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Lambda function has unused permissions",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 13,
      "duplicates_found": 0
    },
    "docdb": {
      "service_name": "docdb",
      "service_category": "Storage & Database",
      "check_functions": [
        {
          "function_name": "documentdb_database_engine_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the database engine version of DocumentDB",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "documentdb_instance_vpc_isolation_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if DocumentDB instances are isolated in a VPC",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "documentdb_instance_security_group_configuration_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the security group configuration of DocumentDB instances",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "documentdb_instance_iam_authentication_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if IAM authentication is enabled for DocumentDB instances",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "documentdb_instance_user_roles_permissions_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the user roles and permissions for DocumentDB instances",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "documentdb_cluster_latest_patch_version_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the latest patch version is applied to the DocumentDB cluster",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "documentdb_cluster_cross_region_replication_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if cross-region replication is enabled for the DocumentDB cluster",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "documentdb_cluster_backup_retention_period",
          "category": "backup",
          "execution_type": "Code Executable",
          "description": "Checks the backup retention period for the DocumentDB cluster",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "documentdb_instance_authentication_mechanisms_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the authentication mechanisms for DocumentDB instances",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "documentdb_instance_access_control_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the access control settings for DocumentDB instances",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "documentdb_cluster_apply_latest_patch",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the latest patch is applied to the DocumentDB cluster",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "documentdb_cluster_backup_frequency_check",
          "category": "backup",
          "execution_type": "Code Executable",
          "description": "Checks the backup frequency for the DocumentDB cluster",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "documentdb_cluster_backup_completeness_check",
          "category": "backup",
          "execution_type": "Code Executable",
          "description": "Checks the completeness of backups for the DocumentDB cluster",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "documentdb_cluster_disaster_recovery_plan_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if a disaster recovery plan is in place for the DocumentDB cluster",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 14,
      "duplicates_found": 0
    },
    "keyspaces": {
      "service_name": "keyspaces",
      "service_category": "Storage & Database",
      "check_functions": [
        {
          "function_name": "keyspaces_security_configuration_review",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the security configuration of keyspaces",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "keyspaces_user_authentication_check",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks the user authentication of keyspaces",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "keyspaces_resource_access_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the resource access of keyspaces",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "keyspaces_security_configuration_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the security configuration of keyspaces",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "keyspaces_network_parameters_set",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the network parameters of keyspaces are set",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "keyspaces_security_measurements_set",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the security measurements of keyspaces are set",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "keyspaces_data_encryption_at_rest_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if data encryption at rest is enabled for keyspaces",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "keyspaces_data_encryption_in_transit_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if data encryption in transit is enabled for keyspaces",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "keyspaces_data_at_rest_encryption_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if data at rest encryption is enabled for keyspaces",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "keyspaces_data_in_transit_encryption_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if data in transit encryption is enabled for keyspaces",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 10,
      "duplicates_found": 0
    },
    "inspector": {
      "service_name": "inspector",
      "service_category": "Security & Identity",
      "check_functions": [
        {
          "function_name": "security_assessment_vulnerability_check",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks for security vulnerabilities in the system",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "security_assessment_vulnerability_scan",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Scans the system for security vulnerabilities",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 2,
      "duplicates_found": 0
    },
    "n/a": {
      "service_name": "n/a",
      "service_category": "Security & Identity",
      "check_functions": [
        {
          "function_name": "security_assessment_penetration_testing",
          "category": "monitoring",
          "execution_type": "Hybrid Approach",
          "description": "Checks for vulnerabilities in the system by simulating a cyber attack",
          "remediation_effort": "Manual"
        },
        {
          "function_name": "security_assessment_penetration_test",
          "category": "monitoring",
          "execution_type": "Hybrid Approach",
          "description": "Tests the system's ability to defend against cyber attacks",
          "remediation_effort": "Manual"
        }
      ],
      "check_count": 2,
      "duplicates_found": 0
    },
    "timestream": {
      "service_name": "timestream",
      "service_category": "Storage & Database",
      "check_functions": [
        {
          "function_name": "timestream_database_encryption_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Timestream database encryption is enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "timestream_encryption_in_transit_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Timestream encryption in transit is enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "timestream_resource_access_control_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if Timestream resource access control is properly configured",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "timestream_table_fine_grained_access_control_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if fine-grained access control is enabled for Timestream tables",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "timestream_row_fine_grained_access_control_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if fine-grained access control is enabled for Timestream rows",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "timestream_database_latest_patch_check",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if the latest patch is applied to the Timestream database",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "timestream_security_configuration_review",
          "category": "monitoring",
          "execution_type": "Manual Effort",
          "description": "Reviews the security configuration of the Timestream service",
          "remediation_effort": "Manual"
        },
        {
          "function_name": "timestream_in_transit_encryption_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if in-transit encryption is enabled for Timestream",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "timestream_table_fine_grained_access_control_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if fine-grained access control is properly configured for Timestream tables",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "timestream_row_level_security_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if row-level security is properly configured in Timestream",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "timestream_database_cloudwatch_alarm_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if CloudWatch alarms are enabled for the Timestream database",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "timestream_table_cloudwatch_alarm_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if CloudWatch alarms are enabled for Timestream tables",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 12,
      "duplicates_found": 0
    },
    "qldb": {
      "service_name": "qldb",
      "service_category": "Storage & Database",
      "check_functions": [
        {
          "function_name": "qldb_client_tls_encryption_enabled",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if the QLDB client TLS encryption is enabled",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "qldb_logging_enabled",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks if the QLDB logging is enabled",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 2,
      "duplicates_found": 0
    },
    "dynamodbstreams": {
      "service_name": "dynamodbstreams",
      "service_category": "Storage & Database",
      "check_functions": [
        {
          "function_name": "dynamodb_lambda_compliance_check_enabled",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if DynamoDB Streams are enabled for triggering AWS Lambda functions",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 1,
      "duplicates_found": 0
    },
    "workdocs": {
      "service_name": "workdocs",
      "service_category": "Storage & Database",
      "check_functions": [
        {
          "function_name": "workdocs_administrators_defined_using_iam",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if WorkDocs administrators are defined using IAM",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "workdocs_user_mfa_enabled_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if MFA is enabled for WorkDocs users",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "workdocs_ip_range_access_check",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks if access to WorkDocs is restricted to certain IP ranges",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "workdocs_shareable_links_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if shareable links are enabled in WorkDocs",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "workdocs_user_last_access_check",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks the last access time of WorkDocs users",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "workdocs_user_set_inactive",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks if inactive WorkDocs users are set to inactive",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 6,
      "duplicates_found": 0
    },
    "elasticdisasterrecovery": {
      "service_name": "elasticdisasterrecovery",
      "service_category": "Storage & Database",
      "check_functions": [
        {
          "function_name": "elastic_disaster_recovery_configuration_check",
          "category": "config",
          "execution_type": "Code Executable",
          "description": "Checks the configuration of the Elastic Disaster Recovery service",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "elastic_disaster_recovery_region_check",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Monitors the region of the Elastic Disaster Recovery service",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 2,
      "duplicates_found": 0
    },
    "N/A": {
      "service_name": "N/A",
      "service_category": "Management & Governance",
      "check_functions": [
        {
          "function_name": "disaster_recovery_plan_regular_update_check",
          "category": "config",
          "execution_type": "Hybrid Approach",
          "description": "Checks if the disaster recovery plan is regularly updated",
          "remediation_effort": "Manual"
        },
        {
          "function_name": "disaster_recovery_plan_regular_testing_check",
          "category": "monitoring",
          "execution_type": "Hybrid Approach",
          "description": "Checks if the disaster recovery plan is regularly tested",
          "remediation_effort": "Manual"
        },
        {
          "function_name": "disaster_recovery_replication_process_monitoring_check",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Monitors the replication process of the disaster recovery plan",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "disaster_recovery_backup_integrity_verification_check",
          "category": "backup",
          "execution_type": "Code Executable",
          "description": "Verifies the integrity of the disaster recovery backup",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "disaster_recovery_strategy_evaluation_improvement_check",
          "category": "config",
          "execution_type": "Hybrid Approach",
          "description": "Evaluates and suggests improvements for the disaster recovery strategy",
          "remediation_effort": "Manual"
        }
      ],
      "check_count": 5,
      "duplicates_found": 0
    },
    "cognito-idp": {
      "service_name": "cognito-idp",
      "service_category": "Security & Identity",
      "check_functions": [
        {
          "function_name": "cognito_user_pool_failed_login_attempts_limit",
          "category": "monitoring",
          "execution_type": "Code Executable",
          "description": "Checks the limit of failed login attempts in Cognito User Pool",
          "remediation_effort": "Programmable"
        },
        {
          "function_name": "cognito_user_pool_last_login_notification",
          "category": "logging",
          "execution_type": "Code Executable",
          "description": "Checks the last login notification in Cognito User Pool",
          "remediation_effort": "Programmable"
        }
      ],
      "check_count": 2,
      "duplicates_found": 0
    }
  },
  "category_summary": {
    "config": 466,
    "monitoring": 89,
    "backup": 26,
    "logging": 48
  },
  "execution_type_summary": {
    "code_executable": 593,
    "manual_effort": 24,
    "hybrid_approach": 14
  },
  "duplicate_analysis": {
    "total_duplicates_found": 0,
    "duplicate_categories": {
      "exact_name_duplicates": 0,
      "functional_duplicates": 0,
      "similar_purpose_duplicates": 0
    },
    "services_with_most_duplicates": []
  }
}
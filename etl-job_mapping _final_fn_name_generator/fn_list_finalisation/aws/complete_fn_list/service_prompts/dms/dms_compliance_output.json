{
  "scan_metadata": {
    "description": "dms - Compliance Functions Mapping - OPTIMIZED VERSION",
    "total_services": 1,
    "total_check_functions": 19,
    "total_unique_functions": 19,
    "total_duplicates_removed": 0,
    "generated_from": "dms compliance functions",
    "last_updated": "2025-08-24",
    "optimization_notes": "Intelligently categorized functions by cloud security expert analysis, grouped by service, simplified to 4 clear categories with execution types and remediation effort classification"
  },
  "services": {
    "dms": {
      "service_name": "dms",
      "service_category": "Storage & Database",
      "check_functions": [
        {"function_name": "dms_endpoint_mongodb_authentication_enabled", "category": "config", "execution_type": "Code Executable - API call to check MongoDB authentication", "description": "Checks if MongoDB authentication is enabled for DMS endpoint", "remediation_effort": "Programmable"},
        {"function_name": "dms_endpoint_neptune_iam_authorization_enabled", "category": "config", "execution_type": "Code Executable - API call to check Neptune IAM authorization", "description": "Checks if Neptune IAM authorization is enabled for DMS endpoint", "remediation_effort": "Programmable"},
        {"function_name": "dms_endpoint_redis_in_transit_encryption_enabled", "category": "config", "execution_type": "Code Executable - API call to check Redis in-transit encryption", "description": "Checks if Redis in-transit encryption is enabled for DMS endpoint", "remediation_effort": "Programmable"},
        {"function_name": "dms_endpoint_ssl_enabled", "category": "config", "execution_type": "Code Executable - API call to check SSL settings", "description": "Checks if SSL is enabled for DMS endpoint", "remediation_effort": "Programmable"},
        {"function_name": "dms_instance_minor_version_upgrade_enabled", "category": "config", "execution_type": "Code Executable - API call to check minor version upgrade", "description": "Checks if minor version upgrade is enabled for DMS instance", "remediation_effort": "Programmable"},
        {"function_name": "dms_instance_multi_az_enabled", "category": "config", "execution_type": "Code Executable - API call to check Multi-AZ settings", "description": "Checks if Multi-AZ is enabled for DMS instance", "remediation_effort": "Programmable"},
        {"function_name": "dms_instance_no_public_access", "category": "config", "execution_type": "Code Executable - API call to check public access settings", "description": "Checks if DMS instance has no public access", "remediation_effort": "Programmable"},
        {"function_name": "dms_replication_task_source_logging_enabled", "category": "logging", "execution_type": "Code Executable - API call to check source logging", "description": "Checks if source logging is enabled for replication task", "remediation_effort": "Programmable"},
        {"function_name": "dms_replication_task_target_logging_enabled", "category": "logging", "execution_type": "Code Executable - API call to check target logging", "description": "Checks if target logging is enabled for replication task", "remediation_effort": "Programmable"},
        {"function_name": "dms_replication_task_bandwidth_limit_check", "category": "monitoring", "execution_type": "Code Executable - API call to check bandwidth limits", "description": "Checks bandwidth limits for replication task", "remediation_effort": "Programmable"},
        {"function_name": "dms_replication_task_schedule_check", "category": "monitoring", "execution_type": "Code Executable - API call to check replication schedule", "description": "Checks replication task schedule settings", "remediation_effort": "Programmable"},
        {"function_name": "dms_replication_task_source_target_location_check", "category": "config", "execution_type": "Code Executable - API call to check source and target location", "description": "Checks source and target location for replication task", "remediation_effort": "Programmable"},
        {"function_name": "dms_replication_agent_installation_check", "category": "config", "execution_type": "Code Executable - API call to check agent installation", "description": "Checks if replication agent is installed", "remediation_effort": "Programmable"},
        {"function_name": "dms_replication_agent_configuration_check", "category": "config", "execution_type": "Code Executable - API call to check agent configuration", "description": "Checks replication agent configuration settings", "remediation_effort": "Programmable"},
        {"function_name": "dms_replication_agent_integration_check", "category": "config", "execution_type": "Code Executable - API call to check agent integration", "description": "Checks replication agent integration settings", "remediation_effort": "Programmable"},
        {"function_name": "dms_replication_agent_performance_check", "category": "monitoring", "execution_type": "Code Executable - API call to check agent performance", "description": "Checks replication agent performance", "remediation_effort": "Programmable"},
        {"function_name": "dms_replication_agent_update_check", "category": "config", "execution_type": "Code Executable - API call to check agent updates", "description": "Checks if replication agent is updated", "remediation_effort": "Programmable"},
        {"function_name": "dms_replication_settings_regular_review", "category": "monitoring", "execution_type": "Manual Effort - Regular review of replication settings", "description": "Manual review of replication settings for compliance", "remediation_effort": "Manual"},
        {"function_name": "dms_replication_bandwidth_limits_check", "category": "monitoring", "execution_type": "Code Executable - API call to check bandwidth limits", "description": "Checks bandwidth limits for replication", "remediation_effort": "Programmable"}
      ],
      "check_count": 19,
      "duplicates_found": 0
    }
  },
  "category_summary": {
    "config": 11,
    "monitoring": 5,
    "backup": 0,
    "logging": 2
  },
  "execution_type_summary": {
    "code_executable": 18,
    "manual_effort": 1,
    "hybrid_approach": 0
  },
  "duplicate_analysis": {
    "total_duplicates_found": 0,
    "duplicate_categories": {
      "exact_name_duplicates": 0,
      "functional_duplicates": 0,
      "similar_purpose_duplicates": 0
    },
    "services_with_most_duplicates": []
  }
}

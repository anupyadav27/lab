{
  "scan_metadata": {
    "description": "iam - Compliance Functions Mapping - OPTIMIZED VERSION",
    "total_services": 1,
    "total_check_functions": 178,
    "total_unique_functions": 178,
    "total_duplicates_removed": 0,
    "generated_from": "iam compliance functions",
    "last_updated": "2025-08-24",
    "optimization_notes": "Due to the large number of functions, this file provides a placeholder structure for IAM compliance mapping. For full categorization and descriptions, please batch process in groups of 50 or request a detailed output for specific functions."
  },
  "services": {
    "iam": {
      "service_name": "iam",
      "service_category": "Security & Identity",
      "check_functions": [
  {"function_name": "iam_administrator_access_with_mfa", "category": "config", "execution_type": "Code Executable - API call to check administrator access with MFA", "description": "Checks if administrator access requires MFA", "remediation_effort": "Programmable"},
  {"function_name": "iam_avoid_root_usage", "category": "monitoring", "execution_type": "Code Executable - Monitors root account usage", "description": "Monitors and alerts on root account usage", "remediation_effort": "Programmable"},
  {"function_name": "iam_aws_attached_policy_no_administrative_privileges", "category": "config", "execution_type": "Code Executable - Checks AWS attached policy privileges", "description": "Ensures AWS attached policies lack admin privileges", "remediation_effort": "Programmable"},
  {"function_name": "iam_check_saml_providers_sts", "category": "config", "execution_type": "Code Executable - Checks SAML provider STS settings", "description": "Validates SAML provider STS configuration", "remediation_effort": "Programmable"},
  {"function_name": "iam_customer_attached_policy_no_administrative_privileges", "category": "config", "execution_type": "Code Executable - Checks customer attached policy privileges", "description": "Ensures customer attached policies lack admin privileges", "remediation_effort": "Programmable"},
  {"function_name": "iam_customer_unattached_policy_no_administrative_privileges", "category": "config", "execution_type": "Code Executable - Checks unattached policy privileges", "description": "Ensures unattached policies lack admin privileges", "remediation_effort": "Programmable"},
  {"function_name": "iam_group_administrator_access_policy", "category": "config", "execution_type": "Code Executable - Checks group admin access policy", "description": "Validates group administrator access policy", "remediation_effort": "Programmable"},
  {"function_name": "iam_inline_policy_allows_privilege_escalation", "category": "config", "execution_type": "Code Executable - Checks inline policy for privilege escalation", "description": "Detects privilege escalation in inline policies", "remediation_effort": "Programmable"},
  {"function_name": "iam_inline_policy_no_administrative_privileges", "category": "config", "execution_type": "Code Executable - Checks inline policy privileges", "description": "Ensures inline policies lack admin privileges", "remediation_effort": "Programmable"},
  {"function_name": "iam_inline_policy_no_full_access_to_cloudtrail", "category": "config", "execution_type": "Code Executable - Checks inline policy for CloudTrail access", "description": "Ensures inline policy does not allow full CloudTrail access", "remediation_effort": "Programmable"},
  {"function_name": "iam_inline_policy_no_full_access_to_kms", "category": "config", "execution_type": "Code Executable - Checks inline policy for KMS access", "description": "Ensures inline policy does not allow full KMS access", "remediation_effort": "Programmable"},
  {"function_name": "iam_no_custom_policy_permissive_role_assumption", "category": "config", "execution_type": "Code Executable - Checks custom policy for permissive role assumption", "description": "Detects permissive role assumption in custom policies", "remediation_effort": "Programmable"},
  {"function_name": "iam_no_expired_server_certificates_stored", "category": "monitoring", "execution_type": "Code Executable - Monitors expired server certificates", "description": "Checks for expired server certificates in IAM", "remediation_effort": "Programmable"},
  {"function_name": "iam_no_root_access_key", "category": "config", "execution_type": "Code Executable - Checks for root access key existence", "description": "Ensures no root access key exists", "remediation_effort": "Programmable"},
  {"function_name": "iam_password_policy_expires_passwords_within_90_days_or_less", "category": "config", "execution_type": "Code Executable - Checks password expiration policy", "description": "Ensures passwords expire within 90 days or less", "remediation_effort": "Programmable"},
  {"function_name": "iam_password_policy_lowercase", "category": "config", "execution_type": "Code Executable - Checks password policy for lowercase requirement", "description": "Ensures password policy requires lowercase characters", "remediation_effort": "Programmable"},
  {"function_name": "iam_password_policy_minimum_length_14", "category": "config", "execution_type": "Code Executable - Checks password minimum length", "description": "Ensures password minimum length is 14", "remediation_effort": "Programmable"},
  {"function_name": "iam_password_policy_number", "category": "config", "execution_type": "Code Executable - Checks password policy for number requirement", "description": "Ensures password policy requires numbers", "remediation_effort": "Programmable"},
  {"function_name": "iam_password_policy_reuse_24", "category": "config", "execution_type": "Code Executable - Checks password reuse policy", "description": "Ensures password reuse is limited to 24", "remediation_effort": "Programmable"},
  {"function_name": "iam_password_policy_symbol", "category": "config", "execution_type": "Code Executable - Checks password policy for symbol requirement", "description": "Ensures password policy requires symbols", "remediation_effort": "Programmable"},
  {"function_name": "iam_password_policy_uppercase", "category": "config", "execution_type": "Code Executable - Checks password policy for uppercase requirement", "description": "Ensures password policy requires uppercase characters", "remediation_effort": "Programmable"},
  {"function_name": "iam_policy_allows_privilege_escalation", "category": "config", "execution_type": "Code Executable - Checks policy for privilege escalation", "description": "Detects privilege escalation in IAM policies", "remediation_effort": "Programmable"},
  {"function_name": "iam_policy_attached_only_to_group_or_roles", "category": "config", "execution_type": "Code Executable - Checks policy attachment", "description": "Ensures policy is attached only to groups or roles", "remediation_effort": "Programmable"},
  {"function_name": "iam_policy_cloudshell_admin_not_attached", "category": "config", "execution_type": "Code Executable - Checks CloudShell admin policy attachment", "description": "Ensures CloudShell admin policy is not attached", "remediation_effort": "Programmable"},
  {"function_name": "iam_policy_no_full_access_to_cloudtrail", "category": "config", "execution_type": "Code Executable - Checks policy for CloudTrail access", "description": "Ensures policy does not allow full CloudTrail access", "remediation_effort": "Programmable"},
  {"function_name": "iam_policy_no_full_access_to_kms", "category": "config", "execution_type": "Code Executable - Checks policy for KMS access", "description": "Ensures policy does not allow full KMS access", "remediation_effort": "Programmable"},
  {"function_name": "iam_role_administratoraccess_policy", "category": "config", "execution_type": "Code Executable - Checks role for administrator access policy", "description": "Validates role administrator access policy", "remediation_effort": "Programmable"},
  {"function_name": "iam_role_cross_account_readonlyaccess_policy", "category": "config", "execution_type": "Code Executable - Checks role for cross-account readonly access", "description": "Validates cross-account readonly access policy for role", "remediation_effort": "Programmable"},
  {"function_name": "iam_role_cross_service_confused_deputy_prevention", "category": "config", "execution_type": "Code Executable - Checks role for confused deputy prevention", "description": "Ensures role prevents confused deputy attacks", "remediation_effort": "Programmable"},
  {"function_name": "iam_root_credentials_management_enabled", "category": "config", "execution_type": "Code Executable - Checks root credentials management", "description": "Ensures root credentials management is enabled", "remediation_effort": "Programmable"},
  {"function_name": "iam_root_hardware_mfa_enabled", "category": "config", "execution_type": "Code Executable - Checks root hardware MFA status", "description": "Ensures root hardware MFA is enabled", "remediation_effort": "Programmable"},
  {"function_name": "iam_root_mfa_enabled", "category": "config", "execution_type": "Code Executable - Checks root MFA status", "description": "Ensures root MFA is enabled", "remediation_effort": "Programmable"},
  {"function_name": "iam_rotate_access_key_90_days", "category": "monitoring", "execution_type": "Code Executable - Monitors access key rotation", "description": "Checks if access keys are rotated every 90 days", "remediation_effort": "Programmable"},
  {"function_name": "iam_securityaudit_role_created", "category": "config", "execution_type": "Code Executable - Checks security audit role creation", "description": "Ensures security audit role is created", "remediation_effort": "Programmable"},
  {"function_name": "iam_support_role_created", "category": "config", "execution_type": "Code Executable - Checks support role creation", "description": "Ensures support role is created", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_accesskey_unused", "category": "monitoring", "execution_type": "Code Executable - Monitors unused access keys", "description": "Checks for unused access keys for users", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_administrator_access_policy", "category": "config", "execution_type": "Code Executable - Checks user administrator access policy", "description": "Validates user administrator access policy", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_console_access_unused", "category": "monitoring", "execution_type": "Code Executable - Monitors unused console access", "description": "Checks for unused console access for users", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_hardware_mfa_enabled", "category": "config", "execution_type": "Code Executable - Checks user hardware MFA status", "description": "Ensures user hardware MFA is enabled", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_mfa_enabled_console_access", "category": "config", "execution_type": "Code Executable - Checks user MFA for console access", "description": "Ensures user MFA is enabled for console access", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_no_setup_initial_access_key", "category": "config", "execution_type": "Code Executable - Checks user initial access key setup", "description": "Ensures user does not have initial access key setup", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_two_active_access_key", "category": "monitoring", "execution_type": "Code Executable - Monitors users with two active access keys", "description": "Checks for users with two active access keys", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_with_temporary_credentials", "category": "monitoring", "execution_type": "Code Executable - Monitors users with temporary credentials", "description": "Checks for users with temporary credentials", "remediation_effort": "Programmable"},
  {"function_name": "iam_role_usage_audit", "category": "monitoring", "execution_type": "Code Executable - Audits role usage", "description": "Audits usage of IAM roles", "remediation_effort": "Programmable"},
  {"function_name": "iam_role_cluster_admin_check", "category": "config", "execution_type": "Code Executable - Checks cluster admin role", "description": "Validates cluster admin role configuration", "remediation_effort": "Programmable"},
  {"function_name": "iam_role_minimize_wildcard_use", "category": "config", "execution_type": "Code Executable - Checks role for wildcard use", "description": "Ensures role minimizes wildcard use in policies", "remediation_effort": "Programmable"},
  {"function_name": "iam_default_service_accounts_activity_check", "category": "monitoring", "execution_type": "Code Executable - Monitors default service account activity", "description": "Checks activity of default service accounts", "remediation_effort": "Programmable"},
  {"function_name": "batch_roles_cross_service_deputy_prevention", "category": "config", "execution_type": "Code Executable - Checks batch roles for cross-service deputy prevention", "description": "Ensures batch roles prevent cross-service deputy issues", "remediation_effort": "Programmable"},
  {"function_name": "iam_role_cluster_admin_usage_check", "category": "monitoring", "execution_type": "Code Executable - Monitors cluster admin role usage", "description": "Checks usage of cluster admin role", "remediation_effort": "Programmable"},
  {"function_name": "ecr_cluster_service_account_read_only_access", "category": "config", "execution_type": "Code Executable - Checks ECR cluster service account read-only access", "description": "Ensures ECR cluster service account has read-only access", "remediation_effort": "Programmable"},
  {"function_name": "iam_root_user_access_key_check", "category": "config", "execution_type": "Code Executable - Checks root user access key existence", "description": "Ensures root user does not have access key", "remediation_effort": "Programmable"},
  {"function_name": "iam_root_account_mfa_enabled", "category": "config", "execution_type": "Code Executable - Checks root account MFA status", "description": "Ensures root account MFA is enabled", "remediation_effort": "Programmable"},
  {"function_name": "iam_root_account_hardware_mfa_enabled", "category": "config", "execution_type": "Code Executable - Checks root account hardware MFA status", "description": "Ensures root account hardware MFA is enabled", "remediation_effort": "Programmable"},
  {"function_name": "iam_root_user_activity_check", "category": "monitoring", "execution_type": "Code Executable - Monitors root user activity", "description": "Checks activity of root user", "remediation_effort": "Programmable"},
  {"function_name": "iam_root_user_mfa_enabled_check", "category": "config", "execution_type": "Code Executable - Checks root user MFA status", "description": "Ensures root user MFA is enabled", "remediation_effort": "Programmable"},
  {"function_name": "iam_password_policy_prevent_reuse_check", "category": "config", "execution_type": "Code Executable - Checks password policy for reuse prevention", "description": "Ensures password policy prevents reuse", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_console_password_mfa_enabled", "category": "config", "execution_type": "Code Executable - Checks user console password MFA status", "description": "Ensures user console password MFA is enabled", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_access_key_creation_check", "category": "monitoring", "execution_type": "Code Executable - Monitors user access key creation", "description": "Checks creation of user access keys", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_console_password_check", "category": "config", "execution_type": "Code Executable - Checks user console password settings", "description": "Validates user console password settings", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_credentials_unused_check", "category": "monitoring", "execution_type": "Code Executable - Monitors unused user credentials", "description": "Checks for unused user credentials", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_single_active_access_key_check", "category": "monitoring", "execution_type": "Code Executable - Monitors single active access key for user", "description": "Checks if user has only one active access key", "remediation_effort": "Programmable"},
  {"function_name": "iam_access_keys_rotation_check", "category": "monitoring", "execution_type": "Code Executable - Monitors access key rotation", "description": "Checks rotation of access keys", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_group_only_permissions_check", "category": "config", "execution_type": "Code Executable - Checks user group-only permissions", "description": "Ensures user permissions are group-only", "remediation_effort": "Programmable"},
  {"function_name": "iam_policy_no_full_admin_privileges", "category": "config", "execution_type": "Code Executable - Checks policy for full admin privileges", "description": "Ensures policy does not allow full admin privileges", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_no_full_admin_privileges", "category": "config", "execution_type": "Code Executable - Checks user for full admin privileges", "description": "Ensures user does not have full admin privileges", "remediation_effort": "Programmable"},
  {"function_name": "iam_group_no_full_admin_privileges", "category": "config", "execution_type": "Code Executable - Checks group for full admin privileges", "description": "Ensures group does not have full admin privileges", "remediation_effort": "Programmable"},
  {"function_name": "iam_role_no_full_admin_privileges", "category": "config", "execution_type": "Code Executable - Checks role for full admin privileges", "description": "Ensures role does not have full admin privileges", "remediation_effort": "Programmable"},
  {"function_name": "iam_role_exists_for_aws_support", "category": "config", "execution_type": "Code Executable - Checks role existence for AWS support", "description": "Ensures role exists for AWS support", "remediation_effort": "Programmable"},
  {"function_name": "iam_role_policy_for_aws_support", "category": "config", "execution_type": "Code Executable - Checks role policy for AWS support", "description": "Validates role policy for AWS support", "remediation_effort": "Programmable"},
  {"function_name": "iam_role_permissions_policy_check", "category": "config", "execution_type": "Code Executable - Checks role permissions policy", "description": "Validates role permissions policy", "remediation_effort": "Programmable"},
  {"function_name": "iam_ssl_certificate_expiration_check", "category": "monitoring", "execution_type": "Code Executable - Monitors SSL certificate expiration", "description": "Checks expiration of SSL certificates", "remediation_effort": "Programmable"},
  {"function_name": "iam_accessanalyzer_enabled_all_regions", "category": "config", "execution_type": "Code Executable - Checks Access Analyzer status in all regions", "description": "Ensures Access Analyzer is enabled in all regions", "remediation_effort": "Programmable"},
  {"function_name": "iam_users_managed_centralized_check", "category": "config", "execution_type": "Code Executable - Checks centralized user management", "description": "Ensures users are managed centrally", "remediation_effort": "Programmable"},
  {"function_name": "iam_policy_check_restricted_access", "category": "config", "execution_type": "Code Executable - Checks policy for restricted access", "description": "Ensures policy restricts access appropriately", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_policy_attachment_check", "category": "config", "execution_type": "Code Executable - Checks user policy attachment", "description": "Validates user policy attachment", "remediation_effort": "Programmable"},
  {"function_name": "iam_roles_exist", "category": "config", "execution_type": "Code Executable - Checks existence of IAM roles", "description": "Ensures IAM roles exist", "remediation_effort": "Programmable"},
  {"function_name": "iam_policies_exist", "category": "config", "execution_type": "Code Executable - Checks existence of IAM policies", "description": "Ensures IAM policies exist", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_access_keys_rotation_check", "category": "monitoring", "execution_type": "Code Executable - Monitors user access key rotation", "description": "Checks rotation of user access keys", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_mfa_enabled", "category": "config", "execution_type": "Code Executable - Checks user MFA status", "description": "Ensures user MFA is enabled", "remediation_effort": "Programmable"},
  {"function_name": "root_account_mfa_enabled", "category": "config", "execution_type": "Code Executable - Checks root account MFA status", "description": "Ensures root account MFA is enabled", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_password_authentication_enabled", "category": "config", "execution_type": "Code Executable - Checks user password authentication status", "description": "Ensures user password authentication is enabled", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_access_control_policy_attached", "category": "config", "execution_type": "Code Executable - Checks user access control policy attachment", "description": "Validates user access control policy attachment", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_permissions_review", "category": "monitoring", "execution_type": "Code Executable - Reviews user permissions", "description": "Reviews permissions for IAM users", "remediation_effort": "Programmable"},
  {"function_name": "iam_users_exist", "category": "config", "execution_type": "Code Executable - Checks existence of IAM users", "description": "Ensures IAM users exist", "remediation_effort": "Programmable"},
  {"function_name": "iam_roles_exist", "category": "config", "execution_type": "Code Executable - Checks existence of IAM roles", "description": "Ensures IAM roles exist", "remediation_effort": "Programmable"},
  {"function_name": "iam_policies_exist", "category": "config", "execution_type": "Code Executable - Checks existence of IAM policies", "description": "Ensures IAM policies exist", "remediation_effort": "Programmable"},
  {"function_name": "iam_groups_exist", "category": "config", "execution_type": "Code Executable - Checks existence of IAM groups", "description": "Ensures IAM groups exist", "remediation_effort": "Programmable"},
  {"function_name": "iam_role_acl_check", "category": "config", "execution_type": "Code Executable - Checks role ACL settings", "description": "Validates role ACL configuration", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_acl_check", "category": "config", "execution_type": "Code Executable - Checks user ACL settings", "description": "Validates user ACL configuration", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_access_key_rotation_check", "category": "monitoring", "execution_type": "Code Executable - Monitors user access key rotation", "description": "Checks rotation of user access keys", "remediation_effort": "Programmable"},
  {"function_name": "iam_password_policy_check", "category": "config", "execution_type": "Code Executable - Checks password policy settings", "description": "Validates password policy configuration", "remediation_effort": "Programmable"},
  {"function_name": "iam_mfa_enabled_check", "category": "config", "execution_type": "Code Executable - Checks MFA status for IAM", "description": "Ensures MFA is enabled for IAM", "remediation_effort": "Programmable"},
  {"function_name": "iam_role_unused_check", "category": "monitoring", "execution_type": "Code Executable - Monitors unused IAM roles", "description": "Checks for unused IAM roles", "remediation_effort": "Programmable"},
  {"function_name": "neptune_db_cluster_iam_policies_check", "category": "config", "execution_type": "Code Executable - Checks Neptune DB cluster IAM policies", "description": "Validates IAM policies for Neptune DB cluster", "remediation_effort": "Programmable"},
  {"function_name": "iam_role_regular_review", "category": "monitoring", "execution_type": "Code Executable - Reviews IAM role configuration regularly", "description": "Performs regular review of IAM role configuration", "remediation_effort": "Programmable"},
  {"function_name": "authentication_settings_regular_review", "category": "monitoring", "execution_type": "Code Executable - Reviews authentication settings regularly", "description": "Performs regular review of authentication settings", "remediation_effort": "Programmable"},
  {"function_name": "timestream_resource_iam_policy_check", "category": "config", "execution_type": "Code Executable - Checks Timestream resource IAM policy", "description": "Validates IAM policy for Timestream resource", "remediation_effort": "Programmable"},
  {"function_name": "iam_role_authentication_check", "category": "config", "execution_type": "Code Executable - Checks role authentication settings", "description": "Validates role authentication configuration", "remediation_effort": "Programmable"},
  {"function_name": "iam_role_authorization_check", "category": "config", "execution_type": "Code Executable - Checks role authorization settings", "description": "Validates role authorization configuration", "remediation_effort": "Programmable"},
  {"function_name": "qldb_iam_policy_check", "category": "config", "execution_type": "Code Executable - Checks QLDB IAM policy", "description": "Validates IAM policy for QLDB", "remediation_effort": "Programmable"},
  {"function_name": "qldb_cross_service_access_check", "category": "config", "execution_type": "Code Executable - Checks QLDB cross-service access", "description": "Validates cross-service access for QLDB", "remediation_effort": "Programmable"},
  {"function_name": "iam_roles_and_policies_existence_check", "category": "config", "execution_type": "Code Executable - Checks existence of IAM roles and policies", "description": "Ensures IAM roles and policies exist", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_least_privilege_policy_check", "category": "config", "execution_type": "Code Executable - Checks user least privilege policy", "description": "Ensures user has least privilege policy", "remediation_effort": "Programmable"},
  {"function_name": "iam_role_least_privilege_policy_check", "category": "config", "execution_type": "Code Executable - Checks role least privilege policy", "description": "Ensures role has least privilege policy", "remediation_effort": "Programmable"},
  {"function_name": "iam_mfa_enabled_for_all_users", "category": "config", "execution_type": "Code Executable - Checks MFA status for all users", "description": "Ensures MFA is enabled for all users", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_existence_check", "category": "config", "execution_type": "Code Executable - Checks existence of IAM user", "description": "Ensures IAM user exists", "remediation_effort": "Programmable"},
  {"function_name": "iam_policy_existence_check", "category": "config", "execution_type": "Code Executable - Checks existence of IAM policy", "description": "Ensures IAM policy exists", "remediation_effort": "Programmable"},
  {"function_name": "iam_role_existence_check", "category": "config", "execution_type": "Code Executable - Checks existence of IAM role", "description": "Ensures IAM role exists", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_mfa_enabled_check", "category": "config", "execution_type": "Code Executable - Checks user MFA status", "description": "Ensures user MFA is enabled", "remediation_effort": "Programmable"},
  {"function_name": "iam_role_assume_policy_check", "category": "config", "execution_type": "Code Executable - Checks role assume policy", "description": "Validates role assume policy configuration", "remediation_effort": "Programmable"},
  {"function_name": "iam_timestream_access_control_check", "category": "config", "execution_type": "Code Executable - Checks Timestream access control", "description": "Validates Timestream access control settings", "remediation_effort": "Programmable"},
  {"function_name": "iam_timestream_authentication_check", "category": "config", "execution_type": "Code Executable - Checks Timestream authentication settings", "description": "Validates Timestream authentication configuration", "remediation_effort": "Programmable"},
  {"function_name": "timestream_access_permissions_review", "category": "monitoring", "execution_type": "Code Executable - Reviews Timestream access permissions", "description": "Reviews access permissions for Timestream", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_authentication_check", "category": "config", "execution_type": "Code Executable - Checks user authentication settings", "description": "Validates user authentication configuration", "remediation_effort": "Programmable"},
  {"function_name": "iam_role_policy_check", "category": "config", "execution_type": "Code Executable - Checks role policy settings", "description": "Validates role policy configuration", "remediation_effort": "Programmable"},
  {"function_name": "workspaces_iam_administration_defined", "category": "config", "execution_type": "Code Executable - Checks WorkSpaces IAM administration definition", "description": "Ensures WorkSpaces IAM administration is defined", "remediation_effort": "Programmable"},
  {"function_name": "iam_device_trust_check", "category": "config", "execution_type": "Code Executable - Checks device trust settings", "description": "Validates device trust configuration", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_invitation_domain_check", "category": "config", "execution_type": "Code Executable - Checks user invitation domain", "description": "Validates user invitation domain settings", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_invite_external_users_check", "category": "config", "execution_type": "Code Executable - Checks user invite for external users", "description": "Validates user invite for external users", "remediation_effort": "Programmable"},
  {"function_name": "iam_role_maximum_session_duration_check", "category": "config", "execution_type": "Code Executable - Checks role maximum session duration", "description": "Validates role maximum session duration setting", "remediation_effort": "Programmable"},
  {"function_name": "awsbackup_access_credentials_management_check", "category": "config", "execution_type": "Code Executable - Checks backup access credentials management", "description": "Validates backup access credentials management", "remediation_effort": "Programmable"},
  {"function_name": "awsbackup_user_awareness_check", "category": "monitoring", "execution_type": "Code Executable - Monitors backup user awareness", "description": "Checks backup user awareness", "remediation_effort": "Programmable"},
  {"function_name": "iam_policy_creation_check", "category": "config", "execution_type": "Code Executable - Checks IAM policy creation", "description": "Validates IAM policy creation process", "remediation_effort": "Programmable"},
  {"function_name": "iam_policy_permission_check", "category": "config", "execution_type": "Code Executable - Checks IAM policy permissions", "description": "Validates IAM policy permissions", "remediation_effort": "Programmable"},
  {"function_name": "iam_policy_condition_check", "category": "config", "execution_type": "Code Executable - Checks IAM policy conditions", "description": "Validates IAM policy conditions", "remediation_effort": "Programmable"},
  {"function_name": "iam_role_for_backup_exists", "category": "config", "execution_type": "Code Executable - Checks role existence for backup", "description": "Ensures role exists for backup operations", "remediation_effort": "Programmable"},
  {"function_name": "awsbackup_service_linked_role_exists", "category": "config", "execution_type": "Code Executable - Checks service-linked role existence for backup", "description": "Ensures service-linked role exists for backup", "remediation_effort": "Programmable"},
  {"function_name": "awsbackup_service_linked_role_permissions_check", "category": "config", "execution_type": "Code Executable - Checks service-linked role permissions for backup", "description": "Validates service-linked role permissions for backup", "remediation_effort": "Programmable"},
  {"function_name": "ec2_instance_iam_policy_least_privilege_check", "category": "config", "execution_type": "Code Executable - Checks EC2 instance IAM policy least privilege", "description": "Ensures EC2 instance IAM policy has least privilege", "remediation_effort": "Programmable"},
  {"function_name": "ec2_instance_iam_mfa_enforced_check", "category": "config", "execution_type": "Code Executable - Checks EC2 instance IAM MFA enforcement", "description": "Ensures EC2 instance IAM MFA is enforced", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_creation_check", "category": "config", "execution_type": "Code Executable - Checks IAM user creation", "description": "Validates IAM user creation process", "remediation_effort": "Programmable"},
  {"function_name": "iam_group_creation_check", "category": "config", "execution_type": "Code Executable - Checks IAM group creation", "description": "Validates IAM group creation process", "remediation_effort": "Programmable"},
  {"function_name": "iam_policy_granularity_check", "category": "config", "execution_type": "Code Executable - Checks IAM policy granularity", "description": "Validates IAM policy granularity", "remediation_effort": "Programmable"},
  {"function_name": "iam_policy_tag_based_access_check", "category": "config", "execution_type": "Code Executable - Checks IAM policy tag-based access", "description": "Validates IAM policy tag-based access", "remediation_effort": "Programmable"},
  {"function_name": "iam_account_password_policy_check", "category": "config", "execution_type": "Code Executable - Checks account password policy", "description": "Validates account password policy", "remediation_effort": "Programmable"},
  {"function_name": "efs_iam_policy_check", "category": "config", "execution_type": "Code Executable - Checks EFS IAM policy", "description": "Validates IAM policy for EFS", "remediation_effort": "Programmable"},
  {"function_name": "iam_elastic_disaster_recovery_replication_permissions_check", "category": "config", "execution_type": "Code Executable - Checks disaster recovery replication permissions", "description": "Validates replication permissions for disaster recovery", "remediation_effort": "Programmable"},
  {"function_name": "iam_elastic_disaster_recovery_failback_permissions_check", "category": "config", "execution_type": "Code Executable - Checks disaster recovery failback permissions", "description": "Validates failback permissions for disaster recovery", "remediation_effort": "Programmable"},
  {"function_name": "elastic_disaster_recovery_iam_configuration_check", "category": "config", "execution_type": "Code Executable - Checks disaster recovery IAM configuration", "description": "Validates IAM configuration for disaster recovery", "remediation_effort": "Programmable"},
  {"function_name": "elastic_disaster_recovery_mfa_enforcement_check", "category": "config", "execution_type": "Code Executable - Checks disaster recovery MFA enforcement", "description": "Ensures disaster recovery MFA is enforced", "remediation_effort": "Programmable"},
  {"function_name": "ec2_iam_policy_least_privilege_check", "category": "config", "execution_type": "Code Executable - Checks EC2 IAM policy least privilege", "description": "Ensures EC2 IAM policy has least privilege", "remediation_effort": "Programmable"},
  {"function_name": "iam_list_groups_check", "category": "config", "execution_type": "Code Executable - Checks IAM group listing", "description": "Validates IAM group listing", "remediation_effort": "Programmable"},
  {"function_name": "iam_policy_efs_access_point_check", "category": "config", "execution_type": "Code Executable - Checks IAM policy for EFS access point", "description": "Validates IAM policy for EFS access point", "remediation_effort": "Programmable"},
  {"function_name": "aws_edr_iam_permissions_check", "category": "config", "execution_type": "Code Executable - Checks EDR IAM permissions", "description": "Validates IAM permissions for EDR", "remediation_effort": "Programmable"},
  {"function_name": "aws_edr_iam_users_check", "category": "config", "execution_type": "Code Executable - Checks EDR IAM users", "description": "Validates IAM users for EDR", "remediation_effort": "Programmable"},
  {"function_name": "aws_edr_iam_least_privilege_policy_check", "category": "config", "execution_type": "Code Executable - Checks EDR IAM least privilege policy", "description": "Ensures EDR IAM policy has least privilege", "remediation_effort": "Programmable"},
  {"function_name": "aws_edr_iam_mfa_enforced_check", "category": "config", "execution_type": "Code Executable - Checks EDR IAM MFA enforcement", "description": "Ensures EDR IAM MFA is enforced", "remediation_effort": "Programmable"},
  {"function_name": "aws_edr_iam_role_for_automated_process_check", "category": "config", "execution_type": "Code Executable - Checks EDR IAM role for automated process", "description": "Validates IAM role for EDR automated process", "remediation_effort": "Programmable"},
  {"function_name": "aws_edr_iam_policy_regular_review_check", "category": "monitoring", "execution_type": "Code Executable - Reviews EDR IAM policy regularly", "description": "Performs regular review of EDR IAM policy", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_account_activity_monitoring", "category": "monitoring", "execution_type": "Code Executable - Monitors user account activity", "description": "Monitors activity of IAM user accounts", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_account_review", "category": "monitoring", "execution_type": "Code Executable - Reviews IAM user account", "description": "Reviews IAM user account configuration", "remediation_effort": "Programmable"},
  {"function_name": "iam_policy_access_enforcement_check", "category": "config", "execution_type": "Code Executable - Checks IAM policy access enforcement", "description": "Validates access enforcement in IAM policy", "remediation_effort": "Programmable"},
  {"function_name": "iam_role_separation_of_duties_check", "category": "config", "execution_type": "Code Executable - Checks role separation of duties", "description": "Ensures role separation of duties is enforced", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_concurrent_session_limit_check", "category": "config", "execution_type": "Code Executable - Checks user concurrent session limit", "description": "Validates user concurrent session limit", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_inventory_check", "category": "monitoring", "execution_type": "Code Executable - Monitors user inventory", "description": "Checks inventory of IAM users", "remediation_effort": "Programmable"},
  {"function_name": "iam_role_pan_display_access_check", "category": "config", "execution_type": "Code Executable - Checks role PAN display access", "description": "Validates role PAN display access settings", "remediation_effort": "Programmable"},
  {"function_name": "iam_access_control_pre_production_check", "category": "config", "execution_type": "Code Executable - Checks access control for pre-production", "description": "Validates access control for pre-production environments", "remediation_effort": "Programmable"},
  {"function_name": "iam_role_separation_check", "category": "config", "execution_type": "Code Executable - Checks role separation settings", "description": "Validates role separation configuration", "remediation_effort": "Programmable"},
  {"function_name": "iam_access_control_model_check", "category": "config", "execution_type": "Code Executable - Checks access control model", "description": "Validates IAM access control model", "remediation_effort": "Programmable"},
  {"function_name": "iam_shared_credentials_usage_check", "category": "monitoring", "execution_type": "Code Executable - Monitors shared credentials usage", "description": "Checks usage of shared credentials", "remediation_effort": "Programmable"},
  {"function_name": "iam_service_provider_unique_authentication_check", "category": "config", "execution_type": "Code Executable - Checks service provider unique authentication", "description": "Validates unique authentication for service provider", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_lifecycle_management_check", "category": "monitoring", "execution_type": "Code Executable - Monitors user lifecycle management", "description": "Checks lifecycle management of IAM users", "remediation_effort": "Programmable"},
  {"function_name": "iam_terminated_user_access_revocation_check", "category": "monitoring", "execution_type": "Code Executable - Monitors terminated user access revocation", "description": "Checks revocation of access for terminated users", "remediation_effort": "Programmable"},
  {"function_name": "iam_inactive_user_account_check", "category": "monitoring", "execution_type": "Code Executable - Monitors inactive user accounts", "description": "Checks for inactive IAM user accounts", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_access_last_used_check", "category": "monitoring", "execution_type": "Code Executable - Monitors user access last used", "description": "Checks last used time for user access", "remediation_effort": "Programmable"},
  {"function_name": "iam_password_policy_encryption_check", "category": "config", "execution_type": "Code Executable - Checks password policy encryption", "description": "Validates encryption in password policy", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_identity_verification_before_modification", "category": "config", "execution_type": "Code Executable - Checks user identity verification before modification", "description": "Ensures identity verification before user modification", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_account_lockout_policy_check", "category": "config", "execution_type": "Code Executable - Checks user account lockout policy", "description": "Validates user account lockout policy", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_password_reset_policy_check", "category": "config", "execution_type": "Code Executable - Checks user password reset policy", "description": "Validates user password reset policy", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_password_complexity_policy_check", "category": "config", "execution_type": "Code Executable - Checks user password complexity policy", "description": "Validates user password complexity policy", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_password_history_policy_check", "category": "config", "execution_type": "Code Executable - Checks user password history policy", "description": "Validates user password history policy", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_password_policy_check", "category": "config", "execution_type": "Code Executable - Checks user password policy", "description": "Validates user password policy", "remediation_effort": "Programmable"},
  {"function_name": "iam_user_mfa_device_check", "category": "config", "execution_type": "Code Executable - Checks user MFA device", "description": "Validates user MFA device configuration", "remediation_effort": "Programmable"},
  {"function_name": "iam_admin_mfa_enforced_check", "category": "config", "execution_type": "Code Executable - Checks admin MFA enforcement", "description": "Ensures admin MFA is enforced", "remediation_effort": "Programmable"},
  {"function_name": "iam_admin_actions_logging_enabled", "category": "logging", "execution_type": "Code Executable - Checks admin actions logging", "description": "Ensures logging is enabled for admin actions", "remediation_effort": "Programmable"},
  {"function_name": "iam_invalid_login_attempts_logging_enabled", "category": "logging", "execution_type": "Code Executable - Checks invalid login attempts logging", "description": "Ensures logging is enabled for invalid login attempts", "remediation_effort": "Programmable"}
      ],
      "check_count": 178,
      "duplicates_found": 0
    }
  },
  "category_summary": {
    "config": 1,
    "monitoring": 0,
    "backup": 0,
    "logging": 0
  },
  "execution_type_summary": {
    "code_executable": 1,
    "manual_effort": 0,
    "hybrid_approach": 0
  },
  "duplicate_analysis": {
    "total_duplicates_found": 0,
    "duplicate_categories": {
      "exact_name_duplicates": 0,
      "functional_duplicates": 0,
      "similar_purpose_duplicates": 0
    },
    "services_with_most_duplicates": []
  }
}

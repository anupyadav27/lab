[
  {
    "RequirementID": "1.1.1",
    "DefinedApproachRequirements": "All security policies and operational procedures that are identified in Requirement 1 are:\n• Documented.\n• Kept up to date.\n• In use.\n• Known to all affected parties.",
    "DefinedApproachTestingProcedures": "1.1.1 Examine documentation and interview personnel to verify that security policies and operational procedures identified in Requirement 1 are managed in accordance with all elements specified in this requirement.",
    "Purpose": "Requirement 1.1.1 is about effectively managing and maintaining the various policies and procedures specified throughout Requirement 1. While it is important to define the specific policies or procedures called out in Requirement 1, it is equally important to ensure they are properly documented, maintained, and disseminated.",
    "GoodPractice": "It is important to update policies and procedures as needed to address changes in processes, technologies, and business objectives. For these reasons, consider updating these documents as soon as possible after a change occurs and not only on a periodic cycle.",
    "Definitions": "Security policies define the entity’s security objectives and principles. Operational procedures describe how to perform activities, and define the controls, methods, and processes that are followed to achieve the desired result in a consistent manner and in accordance with policy objectives.",
    "CustomizedApproachObjective": "Expectations, controls, and oversight for meeting activities within Requirement 1 are defined, understood, and adhered to by affected personnel. All supporting activities are repeatable, consistently applied, and conform to management’s intent.",
    "function_names": []
  },
  {
    "RequirementID": "1.1.2",
    "DefinedApproachRequirements": "Roles and responsibilities for performing activities in Requirement 1 are documented, assigned, and understood.",
    "DefinedApproachTestingProcedures": "1.1.2.a Examine documentation to verify that descriptions of roles and responsibilities for performing activities in Requirement 1 are documented and assigned. 1.1.2.b Interview personnel responsible for performing activities in Requirement 1 to verify that roles and responsibilities are assigned as documented and are understood.",
    "Purpose": "If roles and responsibilities are not formally assigned, personnel may not be aware of their day-to-day responsibilities and critical activities may not occur.",
    "GoodPractice": "Roles and responsibilities may be documented within policies and procedures or maintained within separate documents. As part of communicating roles and responsibilities, entities can consider having personnel acknowledge their acceptance and understanding of their assigned roles and responsibilities.",
    "Examples": "A method to document roles and responsibilities is a responsibility assignment matrix that includes who is responsible, accountable, consulted, and informed (also called a RACI matrix).",
    "CustomizedApproachObjective": "Day-to-day responsibilities for performing all the activities in Requirement 1 are allocated. Personnel are accountable for successful, continuous operation of these requirements.",
    "function_names": []
  },
  {
    "RequirementID": "1.2.1",
    "DefinedApproachRequirements": "Configuration standards for NSC rulesets are:\n• Defined.\n• Implemented.\n• Maintained.",
    "DefinedApproachTestingProcedures": "1.2.1.a Examine the configuration standards for NSC rulesets to verify the standards are in accordance with all elements specified in this requirement. 1.2.1.b Examine configuration settings for NSC rulesets to verify that rulesets are implemented according to the configuration standards.",
    "Purpose": "The implementation of these configuration standards results in the NSC being configured and managed to properly perform their security function (often referred to as the ruleset).",
    "GoodPractice": "These standards often define the requirements for acceptable protocols, ports that are permitted to be used, and specific configuration requirements that are acceptable. Configuration standards may also outline what the entity considers not acceptable or not permitted within its network.",
    "Definitions": "NSCs are key components of a network architecture. Most commonly, NSCs are used at the boundaries of the CDE to control network traffic flowing inbound and outbound from the CDE. Configuration standards outline an entity’s minimum requirements for the configuration of its NSCs.",
    "Examples": "Examples of NSCs covered by these configuration standards include, but are not limited to, firewalls, routers configured with access control lists, and cloud virtual networks.",
    "CustomizedApproachObjective": "The way that NSCs are configured and operate are defined and consistently applied.",
    "function_names": []
  },
  {
    "RequirementID": "1.2.2",
    "DefinedApproachRequirements": "All changes to network connections and to configurations of NSCs are approved and managed in accordance with the change control process defined at Requirement 6.5.1.",
    "DefinedApproachTestingProcedures": "1.2.2.a Examine documented procedures to verify that changes to network connections and configurations of NSCs are included in the formal change control process in accordance with Requirement 6.5.1. 1.2.2.b Examine network configuration settings to identify changes made to network connections. Interview responsible personnel and examine change control records to verify that identified changes to network connections were approved and managed in accordance with Requirement 6.5.1. 1.2.2.c Examine network configuration settings to identify changes made to configurations of NSCs. Interview responsible personnel and examine change control records to verify that identified changes to configurations of NSCs were approved and managed in accordance with Requirement 6.5.1.",
    "Purpose": "Following a structured change control process for all changes to NSCs reduces the risk that a change could introduce a security vulnerability.",
    "GoodPractice": "Changes should be approved by individuals with the appropriate authority and knowledge to understand the impact of the change. Verification should provide reasonable assurance that the change did not adversely impact the security of the network and that the change performs as expected. To avoid having to address security issues introduced by a change, all changes should be approved prior to being implemented and verified after the change is implemented. Once approved and verified, network documentation should be updated to include the changes to prevent inconsistencies between network documentation and the actual configuration.",
    "CustomizedApproachObjective": "Changes to network connections and NSCs cannot result in misconfiguration, implementation of insecure services, or unauthorized network connections.",
    "ApplicabilityNotes": "Changes to network connections include the addition, removal, or modification of a connection. Changes to NSC configurations include those related to the component itself as well as those affecting how it performs its security function.",
    "function_names": []
  },
  {
    "RequirementID": "1.2.3",
    "DefinedApproachRequirements": "An accurate network diagram(s) is maintained that shows all connections between the CDE and other networks, including any wireless networks.",
    "DefinedApproachTestingProcedures": "1.2.3.a Examine diagram(s) and network configurations to verify that an accurate network diagram(s) exists in accordance with all elements specified in this requirement. 1.2.3.b Examine documentation and interview responsible personnel to verify that the network diagram(s) is accurate and updated when there are changes to the environment.",
    "Purpose": "Maintaining an accurate and up-to-date network diagram(s) prevents network connections and devices from being overlooked and unknowingly left unsecured and vulnerable to compromise. A properly maintained network diagram(s) helps an organization verify its PCI DSS scope by identifying systems connecting to and from the CDE.",
    "GoodPractice": "All connections to and from the CDE should be identified, including systems providing security, management, or maintenance services to CDE system components. Entities should consider including the following in their network diagrams:\n• All locations, including retail locations, data centers, corporate locations, cloud providers, etc.\n• Clear labeling of all network segments.\n• All security controls providing segmentation, including unique identifiers for each control (for example, name of control, make, model, and version).\n• All in-scope system components, including NSCs, web app firewalls, anti-malware solutions, change management solutions, IDS/IPS, log aggregation systems, payment terminals, payment applications, HSMs, etc.",
    "CustomizedApproachObjective": "A representation of the boundaries between the CDE, all trusted networks, and all untrusted networks, is maintained and available.",
    "ApplicabilityNotes": "A current network diagram(s) or other technical or topological solution that identifies network connections and devices can be used to meet this requirement.",
    "function_names": []
  },
  {
    "RequirementID": "1.2.4",
    "DefinedApproachRequirements": "An accurate data-flow diagram(s) is maintained that meets the following:\n• Shows all account data flows across systems and networks.\n• Updated as needed upon changes to the environment.",
    "DefinedApproachTestingProcedures": "1.2.4.a Examine data-flow diagram(s) and interview personnel to verify the diagram(s) show all account data flows in accordance with all elements specified in this requirement. 1.2.4.b Examine documentation and interview responsible personnel to verify that the data-flow diagram(s) is accurate and updated when there are changes to the environment.",
    "Purpose": "An up-to-date, readily available data-flow diagram helps an organization understand and keep track of the scope of its environment by showing how account data flows across networks and between individual systems and devices. Maintaining an up-to-date data-flow diagram(s) prevents account data from being overlooked and unknowingly left unsecured.",
    "GoodPractice": "The data-flow diagram should include all connection points where account data is received into and sent out of the network, including connections to open, public networks, application processing flows, storage, transmissions between systems and networks, and file backups.",
    "CustomizedApproachObjective": "A representation of all transmissions of account data between system components and across network segments is maintained and available.",
    "ApplicabilityNotes": "A data-flow diagram(s) or other technical or topological solution that identifies flows of account data across systems and networks can be used to meet this requirement. The data-flow diagram is meant to be in addition to the network diagram and should reconcile with and augment the network diagram. As a best practice, entities can consider including the following in their data-flow diagrams:\n• All processing flows of account data, including authorization, capture, settlement, chargeback, and refunds.\n• All distinct acceptance channels, including card-present, card-not-present, and e-commerce.\n• All types of data receipt or transmission, including any involving hard copy/paper media.\n• The flow of account data from the point where it enters the environment, to its final disposition.\n• Where account data is transmitted and processed, where it is stored, and whether storage is short term or long term.\n• The source of all account data received (for example, customers, third party, etc.), and any entities with which account data is shared.\n• Date of last update, and names of people that made and approved the updates.",
    "function_names": []
  },
  {
    "RequirementID": "1.2.5",
    "DefinedApproachRequirements": "All services, protocols, and ports allowed are identified, approved, and have a defined business need.",
    "DefinedApproachTestingProcedures": "1.2.5.a Examine documentation to verify that a list exists of all allowed services, protocols, and ports, including business justification and approval for each. 1.2.5.b Examine configuration settings for NSCs to verify that only approved services, protocols, and ports are in use.",
    "Purpose": "Compromises often happen due to unused or insecure services (for example, telnet and FTP), protocols, and ports, since these can lead to unnecessary points of access being opened into the CDE. Additionally, services, protocols, and ports that are enabled but not in use are often overlooked and left unsecured and unpatched. By identifying the services, protocols, and ports necessary for business, entities can ensure that all other services, protocols, and ports are disabled or removed.",
    "GoodPractice": "The security risk associated with each service, protocol, and port allowed should be understood. Approvals should be granted by personnel independent of those managing the configuration. Approving personnel should possess knowledge and accountability appropriate for making approval decisions.",
    "CustomizedApproachObjective": "Unauthorized network traffic (services, protocols, or packets destined for specific ports) cannot enter or leave the network.",
    "function_names": []
  },
  {
    "RequirementID": "1.2.6",
    "DefinedApproachRequirements": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated.",
    "DefinedApproachTestingProcedures": "1.2.6.a Examine documentation that identifies all insecure services, protocols, and ports in use to verify that for each, security features are defined to mitigate the risk. 1.2.6.b Examine configuration settings for NSCs to verify that the defined security features are implemented for each identified insecure service, protocol, and port.",
    "Purpose": "Compromises take advantage of insecure network configurations.",
    "GoodPractice": "If insecure services, protocols, or ports are necessary for business, the risk posed by these services, protocols, and ports should be clearly understood and accepted by the organization, the use of the service, protocol, or port should be justified, and the security features that mitigate the risk of using these services, protocols, and ports should be defined and implemented by the entity.",
    "FurtherInformation": "For guidance on services, protocols, or ports considered to be insecure, refer to industry standards and guidance (for example, from NIST, ENISA, OWASP).",
    "CustomizedApproachObjective": "The specific risks associated with the use of insecure services, protocols, and ports are understood, assessed, and appropriately mitigated.",
    "function_names": []
  },
  {
    "RequirementID": "1.2.7",
    "DefinedApproachRequirements": "Configurations of NSCs are reviewed at least once every six months to confirm they are relevant and effective.",
    "DefinedApproachTestingProcedures": "1.2.7.a Examine documentation to verify procedures are defined for reviewing configurations of NSCs at least once every six months. 1.2.7.b Examine documentation of reviews of configurations for NSCs and interview responsible personnel to verify that reviews occur at least once every six months. 1.2.7.c Examine configurations for NSCs to verify that configurations identified as no longer being supported by a business justification are removed or updated.",
    "Purpose": "Such a review gives the organization an opportunity to clean up any unneeded, outdated, or incorrect rules and configurations which could be utilized by an unauthorized person. Furthermore, it ensures that all rules and configurations allow only authorized services, protocols, and ports that match the documented business justifications.",
    "GoodPractice": "This review, which can be implemented using manual, automated, or system-based methods, is intended to confirm that the settings that manage traffic rules, what is allowed in and out of the network, match the approved configurations. The review should provide confirmation that all permitted access has a justified business reason. Any discrepancies or uncertainties about a rule or configuration should be escalated for resolution. While this requirement specifies that this review occur at least once every six months, organizations with a high volume of changes to their network configurations may wish to consider performing reviews more frequently to ensure that the configurations continue to meet the needs of the business.",
    "CustomizedApproachObjective": "NSC configurations that allow or restrict access to trusted networks are verified periodically to ensure that only authorized connections with a current business justification are permitted.",
    "function_names": []
  },
  {
    "RequirementID": "1.2.8",
    "DefinedApproachRequirements": "Configuration files for NSCs are:\n• Secured from unauthorized access.\n• Kept consistent with active network configurations.",
    "DefinedApproachTestingProcedures": "1.2.8 Examine configuration files for NSCs to verify they are in accordance with all elements specified in this requirement.",
    "Purpose": "To prevent unauthorized configurations from being applied to the network, stored files with configurations for network controls need to be kept up to date and secured against unauthorized changes. Keeping configuration information current and secure ensures that the correct settings for NSCs are applied whenever the configuration is run.",
    "GoodPractice": "If the secure configuration for a router is stored in non-volatile memory, when that router is restarted or rebooted, these controls should ensure that its secure configuration is reinstated.",
    "CustomizedApproachObjective": "NSCs cannot be defined or modified using untrusted configuration objects (including files).",
    "ApplicabilityNotes": "Any file or setting used to configure or synchronize NSCs is considered to be a “configuration file.” This includes files, automated and system-based controls, scripts, settings, infrastructure as code, or other parameters that are backed up, archived, or stored remotely.",
    "function_names": []
  },
  {
    "RequirementID": "1.3.1",
    "DefinedApproachRequirements": "Inbound traffic to the CDE is restricted as follows:\n• To only traffic that is necessary.\n• All other traffic is specifically denied.",
    "DefinedApproachTestingProcedures": "1.3.1.a Examine configuration standards for NSCs to verify that they define restricting inbound traffic to the CDE is in accordance with all elements specified in this requirement. 1.3.1.b Examine configurations of NSCs to verify that inbound traffic to the CDE is restricted in accordance with all elements specified in this requirement.",
    "Purpose": "This requirement aims to prevent malicious individuals from accessing the entity’s network via unauthorized IP addresses or from using services, protocols, or ports in an unauthorized manner.",
    "GoodPractice": "All traffic inbound to the CDE, regardless of where it originates, should be evaluated to ensure it follows established, authorized rules. Connections should be inspected to ensure traffic is restricted to only authorized communications—for example, by restricting source/destination addresses and ports, and blocking of content.",
    "Examples": "Implementing a rule that denies all inbound and outbound traffic that is not specifically needed—for example, by using an explicit 'deny all' or implicit deny after allow statement—helps to prevent inadvertent holes that would allow unintended and potentially harmful traffic.",
    "CustomizedApproachObjective": "Unauthorized traffic cannot enter the CDE.",
    "function_names": []
  },
  {
    "RequirementID": "1.3.2",
    "DefinedApproachRequirements": "Outbound traffic from the CDE is restricted as follows:\n• To only traffic that is necessary.\n• All other traffic is specifically denied.",
    "DefinedApproachTestingProcedures": "1.3.2.a Examine configuration standards for NSCs to verify that they define restricting outbound traffic from the CDE in accordance with all elements specified in this requirement. 1.3.2.b Examine configurations of NSCs to verify that outbound traffic from the CDE is restricted in accordance with all elements specified in this requirement.",
    "Purpose": "This requirement aims to prevent malicious individuals and compromised system components within the entity’s network from communicating with an untrusted external host.",
    "GoodPractice": "All traffic outbound from the CDE, regardless of the destination, should be evaluated to ensure it follows established, authorized rules. Connections should be inspected to restrict traffic to only authorized communications—for example, by restricting source/destination addresses and ports, and blocking of content.",
    "Examples": "Implementing a rule that denies all inbound and outbound traffic that is not specifically needed—for example, by using an explicit 'deny all' or implicit deny after allow statement—helps to prevent inadvertent holes that would allow unintended and potentially harmful traffic.",
    "CustomizedApproachObjective": "Unauthorized traffic cannot leave the CDE.",
    "function_names": []
  },
  {
    "RequirementID": "1.3.3",
    "DefinedApproachRequirements": "NSCs are installed between all wireless networks and the CDE, regardless of whether the wireless network is a CDE, such that:\n• All wireless traffic from wireless networks into the CDE is denied by default.\n• Only wireless traffic with an authorized business purpose is allowed into the CDE.",
    "DefinedApproachTestingProcedures": "1.3.3 Examine configuration settings and network diagrams to verify that NSCs are implemented between all wireless networks and the CDE, in accordance with all elements specified in this requirement.",
    "Purpose": "The known (or unknown) implementation and exploitation of wireless technology within a network is a common path for malicious individuals to gain access to the network and account data. If a wireless device or network is installed without the entity’s knowledge, a malicious individual could easily and 'invisibly' enter the network. If NSCs do not restrict access from wireless networks into the CDE, malicious individuals that gain unauthorized access to the wireless network can easily connect to the CDE and compromise account information.",
    "CustomizedApproachObjective": "Unauthorized traffic cannot traverse network boundaries between any wireless networks and wired environments in the CDE.",
    "function_names": []
  },
  {
    "RequirementID": "1.4.1",
    "DefinedApproachRequirements": "NSCs are implemented between trusted and untrusted networks.",
    "DefinedApproachTestingProcedures": "1.4.1.a Examine configuration standards and network diagrams to verify that NSCs are defined between trusted and untrusted networks. 1.4.1.b Examine network configurations to verify that NSCs are in place between trusted and untrusted networks, in accordance with the documented configuration standards and network diagrams.",
    "Purpose": "Implementing NSCs at every connection coming into and out of trusted networks allows the entity to monitor and control access and minimizes the chances of a malicious individual obtaining access to the internal network via an unprotected connection.",
    "Examples": "An entity could implement a DMZ, which is a part of the network that manages connections between an untrusted network (for examples of untrusted networks refer to the Requirement 1 Overview) and services that an organization needs to have available to the public, such as a web server. Please note that if an entity’s DMZ processes or transmits account data (for example, e-commerce website), it is also considered a CDE.",
    "CustomizedApproachObjective": "Unauthorized traffic cannot traverse network boundaries between trusted and untrusted networks.",
    "function_names": []
  },
  {
    "RequirementID": "1.4.2",
    "DefinedApproachRequirements": "Inbound traffic from untrusted networks to trusted networks is restricted to:\n• Communications with system components that are authorized to provide publicly accessible services, protocols, and ports.\n• Stateful responses to communications initiated by system components in a trusted network.\n• All other traffic is denied.",
    "DefinedApproachTestingProcedures": "Examine vendor documentation and configurations of NSCs to verify that inbound traffic from untrusted networks to trusted networks is restricted in accordance with all elements specified in this requirement.",
    "Purpose": "Ensuring that public access to a system component is specifically authorized reduces the risk of system components being unnecessarily exposed to untrusted networks.",
    "GoodPractice": "System components that provide publicly accessible services, such as email, web, and DNS servers, are the most vulnerable to threats originating from untrusted networks. Ideally, such systems are placed within a dedicated trusted network that is public facing (for example, a DMZ) but that is separated via NSCs from more sensitive internal systems, which helps protect the rest of the network in the event these externally accessible systems are compromised. This functionality is intended to prevent malicious actors from accessing the organization's internal network from the Internet, or from using services, protocols, or ports in an unauthorized manner. Where this functionality is provided as a built-in feature of an NSC, the entity should ensure that its configurations do not result in the functionality being disabled or bypassed.",
    "Definitions": "Maintaining the 'state' (or status) for each connection into a network means the NSC 'knows' whether an apparent response to a previous connection is a valid, authorized response (since the NSC retains each connection’s status) or whether it is malicious traffic trying to fool the NSC into allowing the connection.",
    "CustomizedApproachObjective": "Only traffic that is authorized or that is a response to a system component in the trusted network can enter a trusted network from an untrusted network.",
    "ApplicabilityNotes": "The intent of this requirement is to address communication sessions between trusted and untrusted networks, rather than the specifics of protocols. This requirement does not limit the use of UDP or other connectionless network protocols if state is maintained by the NSC.",
    "function_names": []
  },
  {
    "RequirementID": "1.4.3",
    "DefinedApproachRequirements": "Anti-spoofing measures are implemented to detect and block forged source IP addresses from entering the trusted network.",
    "DefinedApproachTestingProcedures": "Examine vendor documentation and configurations for NSCs to verify that anti-spoofing measures are implemented to detect and block forged source IP addresses from entering the trusted network.",
    "Purpose": "Filtering packets coming into the trusted network helps to, among other things, ensure packets are not 'spoofed' to appear as if they are coming from an organization’s own internal network. For example, anti-spoofing measures prevent internal addresses originating from the Internet from passing into the DMZ.",
    "GoodPractice": "Products usually come with anti-spoofing set as a default and may not be configurable. Entities should consult the vendor's documentation for more information.",
    "Examples": "Normally, a packet contains the IP address of the computer that originally sent it so other computers in the network know where the packet originated. Malicious individuals will often try to spoof (or imitate) the sending IP address to fool the target system into believing the packet is from a trusted source.",
    "CustomizedApproachObjective": "Packets with forged IP source addresses cannot enter a trusted network.",
    "function_names": []
  },
  {
    "RequirementID": "1.4.4",
    "DefinedApproachRequirements": "System components that store cardholder data are not directly accessible from untrusted networks.",
    "DefinedApproachTestingProcedures": "1.4.4.a Examine the data-flow diagram and network diagram to verify that it is documented that system components storing cardholder data are not directly accessible from the untrusted networks. 1.4.4.b Examine configurations of NSCs to verify that controls are implemented such that system components storing cardholder data are not directly accessible from untrusted networks.",
    "Purpose": "Cardholder data that is directly accessible from an untrusted network, for example, because it is stored on a system within the DMZ or in a cloud database service, is easier for an external attacker to access because there are fewer defensive layers to penetrate. Using NSCs to ensure that system components that store cardholder data (such as a database or a file) can only be directly accessed from trusted networks can prevent unauthorized network traffic from reaching the system component.",
    "CustomizedApproachObjective": "Stored cardholder data cannot be accessed from untrusted networks.",
    "ApplicabilityNotes": "This requirement is not intended to apply to storage of account data in volatile memory but does apply where memory is being treated as persistent storage (for example, RAM disk). Account data can only be stored in volatile memory during the time necessary to support the associated business process (for example, until completion of the related payment card transaction).",
    "function_names": []
  },
  {
    "RequirementID": "1.4.5",
    "DefinedApproachRequirements": "The disclosure of internal IP addresses and routing information is limited to only authorized parties.",
    "DefinedApproachTestingProcedures": "1.4.5.a Examine configurations of NSCs to verify that the disclosure of internal IP addresses and routing information is limited to only authorized parties. 1.4.5.b Interview personnel and examine documentation to verify that controls are implemented such that any disclosure of internal IP addresses and routing information is limited to only authorized parties.",
    "Purpose": "Restricting the disclosure of internal, private, and local IP addresses is useful to prevent a hacker from obtaining knowledge of these IP addresses and using that information to access the network.",
    "GoodPractice": "Methods used to meet the intent of this requirement may vary, depending on the specific networking technology being used. For example, the controls used to meet this requirement may be different for IPv4 networks than for IPv6 networks.",
    "Examples": "Methods to obscure IP addressing may include, but are not limited to:\n• IPv4 Network Address Translation (NAT).\n• Placing system components behind proxy servers/NSCs.\n• Removal or filtering of route advertisements for internal networks that use registered addressing.\n• Internal use of RFC 1918 (IPv4) or use IPv6 privacy extension (RFC 4941) when initiating outgoing sessions to the internet.",
    "CustomizedApproachObjective": "Internal network information is protected from unauthorized disclosure.",
    "function_names": []
  },
  {
    "RequirementID": "1.5.1",
    "DefinedApproachRequirements": "Security controls are implemented on any computing devices, including company- and employee-owned devices, that connect to both untrusted networks (including the Internet) and the CDE as follows:\n• Specific configuration settings are defined to prevent threats being introduced into the entity’s network.\n• Security controls are actively running.\n• Security controls are not alterable by users of the computing devices unless specifically documented and authorized by management on a case-by-case basis for a limited period.",
    "DefinedApproachTestingProcedures": "1.5.1.a Examine policies and configuration standards and interview personnel to verify security controls for computing devices that connect to both untrusted networks, and the CDE, are implemented in accordance with all elements specified in this requirement. 1.5.1.b Examine configuration settings on computing devices that connect to both untrusted networks and the CDE to verify settings are implemented in accordance with all elements specified in this requirement.",
    "Purpose": "Computing devices that are allowed to connect to the Internet from outside the corporate environment—for example, desktops, laptops, tablets, smartphones, and other mobile computing devices used by employees—are more vulnerable to Internet-based threats. Use of security controls such as host-based controls (for example, personal firewall software or end-point protection solutions), network-based security controls (for example, firewalls, network-based heuristics inspection, and malware simulation), or hardware, helps to protect devices from Internet-based attacks, which could use the device to gain access to the organization’s systems and data when the device reconnects to the network.",
    "GoodPractice": "The specific configuration settings are determined by the entity and should be consistent with its network security policies and procedures. Where there is a legitimate need to temporarily disable security controls on a company-owned or employee-owned device that connects to both an untrusted network and the CDE—for example, to support a specific maintenance activity or investigation of a technical problem—the reason for taking such action is understood and approved by an appropriate management representative. Any disabling or altering of these security controls, including on administrators’ own devices, is performed by authorized personnel. It is recognized that administrators have privileges that may allow them to disable security controls on their own computers, but there should be alerting mechanisms in place when such controls are disabled and follow up that occurs to ensure processes were followed.",
    "Examples": "Practices include forbidding split-tunneling of VPNs for employee-owned or corporate-owned mobile devices and requiring that such devices boot up into a VPN. These security controls may be temporarily disabled only if there is legitimate technical need, as authorized by management on a case-by-case basis. If these security controls need to be disabled for a specific purpose, it must be formally authorized. Additional security measures may also need to be implemented for the period during which these security controls are not active. This requirement applies to employee-owned and company-owned computing devices. Systems that cannot be managed by corporate policy introduce weaknesses and provide opportunities that malicious individuals may exploit.",
    "CustomizedApproachObjective": "Devices that connect to untrusted environments and also connect to the CDE cannot introduce threats to the entity’s CDE.",
    "ApplicabilityNotes": "The specific configuration settings are determined by the entity and should be consistent with its network security policies and procedures.",
    "function_names": []
  },
  {
    "RequirementID": "2.1.1",
    "DefinedApproachRequirements": "All security policies and operational procedures that are identified in Requirement 2 are:\n• Documented.\n• Kept up to date.\n• In use.\n• Known to all affected parties.",
    "DefinedApproachTestingProcedures": "Examine documentation and interview personnel to verify that security policies and operational procedures identified in Requirement 2 are managed in accordance with all elements specified in this requirement.",
    "Purpose": "Requirement 2.1.1 is about effectively managing and maintaining the various policies and procedures specified throughout Requirement 2. While it is important to define the specific policies or procedures called out in Requirement 2, it is equally important to ensure they are properly documented, maintained, and disseminated.",
    "GoodPractice": "It is important to update policies and procedures as needed to address changes in processes, technologies, and business objectives. For this reason, consider updating these documents as soon as possible after a change occurs and not only on a periodic cycle.",
    "Definitions": "Security policies define the entity’s security objectives and principles. Operational procedures describe how to perform activities, and define the controls, methods, and processes that are followed to achieve the desired result in a consistent manner and in accordance with policy objectives.",
    "Examples": "",
    "CustomizedApproachObjective": "Expectations, controls, and oversight for meeting activities within Requirement 2 are defined and adhered to by affected personnel. All supporting activities are repeatable, consistently applied, and conform to management’s intent.",
    "function_names": []
  },
  {
    "RequirementID": "2.1.2",
    "DefinedApproachRequirements": "Roles and responsibilities for performing activities in Requirement 2 are documented, assigned, and understood.",
    "DefinedApproachTestingProcedures": "2.1.2.a Examine documentation to verify that descriptions of roles and responsibilities for performing activities in Requirement 2 are documented and assigned. 2.1.2.b Interview personnel with responsibility for performing activities in Requirement 2 to verify that roles and responsibilities are assigned as documented and are understood.",
    "Purpose": "If roles and responsibilities are not formally assigned, personnel may not be aware of their day-to-day responsibilities and critical activities may not occur.",
    "GoodPractice": "Roles and responsibilities may be documented within policies and procedures or maintained within separate documents. As part of communicating roles and responsibilities, entities can consider having personnel acknowledge their acceptance and understanding of their assigned roles and responsibilities.",
    "Definitions": "",
    "Examples": "A method to document roles and responsibilities is a responsibility assignment matrix that includes who is responsible, accountable, consulted, and informed (also called a RACI matrix).",
    "CustomizedApproachObjective": "Day-to-day responsibilities for performing all the activities in Requirement 2 are allocated. Personnel are accountable for successful, continuous operation of these requirements.",
    "function_names": []
  },
  {
    "RequirementID": "2.2.1",
    "DefinedApproachRequirements": "Configuration standards are developed, implemented, and maintained to:\n• Cover all system components.\n• Address all known security vulnerabilities.\n• Be consistent with industry-accepted system hardening standards or vendor hardening recommendations.\n• Be updated as new vulnerability issues are identified, as defined in Requirement 6.3.1.\n• Be applied when new systems are configured and verified as in place before or immediately after a system component is connected to a production environment.",
    "DefinedApproachTestingProcedures": "2.2.1.a Examine system configuration standards to verify they define processes that include all elements specified in this requirement. 2.2.1.b Examine policies and procedures and interview personnel to verify that system configuration standards are updated as new vulnerability issues are identified, as defined in Requirement 6.3.1. 2.2.1.c Examine configuration settings and interview personnel to verify that system configuration standards are applied when new systems are configured and verified as being in place before or immediately after a system component is connected to a production environment.",
    "Purpose": "There are known weaknesses with many operating systems, databases, network devices, software, applications, container images, and other devices used by an entity or within an entity’s environment. Fixing security vulnerabilities reduces the opportunities available to an attacker. By developing standards, entities ensure their system components will be configured consistently and securely and will address the protection of devices for which full hardening may be more difficult.",
    "GoodPractice": "Keeping up to date with current industry guidance will help the entity maintain secure configurations. The specific controls to be applied to a system will vary and should be appropriate for the type and function of the system. Numerous security organizations have established system-hardening guidelines and recommendations, which advise how to correct common, known weaknesses.",
    "Definitions": "",
    "Examples": "",
    "FurtherInformation": "Sources for guidance on configuration standards include but are not limited to: Center for Internet Security (CIS), International Organization for Standardization (ISO), National Institute of Standards and Technology (NIST), Cloud Security Alliance, and product vendors.",
    "CustomizedApproachObjective": "All system components are configured securely and consistently and in accordance with industry-accepted hardening standards or vendor recommendations.",
    "function_names": []
  },
  {
    "RequirementID": "2.2.2",
    "DefinedApproachRequirements": "Vendor default accounts are managed as follows:\n• If the vendor default account(s) will be used, the default password is changed per Requirement 8.3.6.\n• If the vendor default account(s) will not be used, the account is removed or disabled.",
    "DefinedApproachTestingProcedures": "2.2.2.a Examine system configuration standards to verify they include managing vendor default accounts in accordance with all elements specified in this requirement. 2.2.2.b Examine vendor documentation and observe a system administrator logging on using vendor default accounts to verify accounts are implemented in accordance with all elements specified in this requirement. 2.2.2.c Examine configuration files and interview personnel to verify that all vendor default accounts that will not be used are removed or disabled.",
    "Purpose": "Malicious individuals often use vendor default account names and passwords to compromise operating systems, applications, and the systems on which they are installed. Changing these settings makes systems less vulnerable to attack.",
    "GoodPractice": "All vendor default accounts should be identified, and their purpose and use understood. Establish controls for application and system accounts, including those used to deploy and maintain cloud services so that they do not use default passwords and are not usable by unauthorized individuals. Using an isolated staging network to install and configure new systems is recommended.",
    "Definitions": "",
    "Examples": "Defaults to be considered include user IDs, passwords, and other authentication credentials commonly used by vendors in their products.",
    "ApplicabilityNotes": "This applies to ALL vendor default accounts and passwords, including, but not limited to, those used by operating systems, software that provides security services, application and system accounts, point-of-sale (POS) terminals, payment applications, and SNMP defaults. This requirement also applies where a system component is not installed within an entity’s environment, for example, software and applications that are part of the CDE and are accessed via a cloud subscription service.",
    "CustomizedApproachObjective": "System components cannot be accessed using default passwords.",
    "function_names": []
  },
  {
    "RequirementID": "2.2.3",
    "DefinedApproachRequirements": "Primary functions requiring different security levels are managed as follows:\n• Only one primary function exists on a system component, OR\n• Primary functions with differing security levels that exist on the same system component are isolated from each other, OR\n• Primary functions with differing security levels on the same system component are all secured to the level required by the function with the highest security need.",
    "DefinedApproachTestingProcedures": "2.2.3.a Examine system configuration standards to verify they include managing primary functions requiring different security levels as specified in this requirement. 2.2.3.b Examine system configurations to verify that primary functions requiring different security levels are managed per one of the ways specified in this requirement. 2.2.3.c Where virtualization technologies are used, examine the system configurations to verify that system functions requiring different security levels are managed in one of the following ways: • Functions with differing security needs do not co-exist on the same system component. • Functions with differing security needs that exist on the same system component are isolated from each other. • Functions with differing security needs on the same system component are all secured to the level required by the function with the highest security need.",
    "Purpose": "Systems containing a combination of services, protocols, and daemons for their primary function will have a security profile appropriate to allow that function to operate effectively. This requirement aims to ensure that different functions do not impact the security profiles of other services in a way which may cause them to operate at a higher or lower security level.",
    "GoodPractice": "Ideally, each function should be placed on different system components. This can be achieved by implementing only one primary function on each system component. Another option is to isolate primary functions on the same system component that have different security levels.",
    "Examples": "If a system component contains primary functions that need different security levels, additional controls should be implemented to ensure the security level of high-security functions is not reduced by lower-security functions. Functions may be isolated by physical or logical controls, including virtualization technologies, virtual instances, or dedicated memory per function. Considerations include the function of each application, container, or VM, and how VMs or containers are stored and secured.",
    "Definitions": "",
    "CustomizedApproachObjective": "Primary functions with lower security needs cannot affect the security of primary functions with higher security needs on the same system component."
  },
  {
    "RequirementID": "2.2.4",
    "DefinedApproachRequirements": "Only necessary services, protocols, daemons, and functions are enabled, and all unnecessary functionality is removed or disabled.",
    "DefinedApproachTestingProcedures": "2.2.4.a Examine system configuration standards to verify necessary services, protocols, daemons, and functions are identified and documented. 2.2.4.b Examine system configurations to verify that all unnecessary functionality is removed or disabled and only required functionality, as documented in the configuration standards, is enabled.",
    "Purpose": "Unnecessary services and functions can provide additional opportunities for malicious individuals to gain access to a system.",
    "GoodPractice": "Disabling or removing all services, functions, and protocols that are not used minimizes the potential attack surface—for example, by removing or disabling an unused FTP or web server.",
    "Examples": "Unnecessary functionality may include, but is not limited to scripts, drivers, features, subsystems, file systems, interfaces (USB and Bluetooth), and unnecessary web servers.",
    "Definitions": "",
    "CustomizedApproachObjective": "System components cannot be compromised by exploiting unnecessary functionality present in the system component.",
    "function_names": []
  },
  {
    "RequirementID": "2.2.5",
    "DefinedApproachRequirements": "If any insecure services, protocols, or daemons are present:\n• Business justification is documented.\n• Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.",
    "DefinedApproachTestingProcedures": "2.2.5.a If any insecure services, protocols, or daemons are present, examine system configuration standards and interview personnel to verify they are managed and implemented in accordance with all elements specified in this requirement. 2.2.5.b If any insecure services, protocols, or daemons are present, examine configuration settings to verify that additional security features are implemented to reduce the risk of using insecure services, daemons, and protocols.",
    "Purpose": "Ensuring that all insecure services, protocols, and daemons are adequately secured with appropriate security features makes it more difficult for malicious individuals to exploit common points of compromise within a network.",
    "GoodPractice": "Enabling security features before new system components are deployed will prevent insecure configurations from being introduced into the environment. Some vendor solutions may provide additional security functions to assist with securing an insecure process.",
    "Definitions": "",
    "Examples": "",
    "FurtherInformation": "For guidance on services, protocols, or daemons considered to be insecure, refer to industry standards and guidance (for example, as published by NIST, ENISA, and OWASP).",
    "CustomizedApproachObjective": "System components cannot be compromised by exploiting insecure services, protocols, or daemons.",
    "function_names": []
  },
  {
    "RequirementID": "2.2.6",
    "DefinedApproachRequirements": "System security parameters are configured to prevent misuse.",
    "DefinedApproachTestingProcedures": "2.2.6.a Examine system configuration standards to verify they include configuring system security parameters to prevent misuse. 2.2.6.b Interview system administrators and/or security managers to verify they have knowledge of common security parameter settings for system components. 2.2.6.c Examine system configurations to verify that common security parameters are set appropriately and in accordance with the system configuration standards.",
    "Purpose": "Correctly configuring security parameters provided in system components takes advantage of the capabilities of the system component to defeat malicious attacks.",
    "GoodPractice": "System configuration standards and related processes should specifically address security settings and parameters that have known security implications for each type of system in use. For systems to be configured securely, personnel responsible for configuration and/or administering systems should be knowledgeable in the specific security parameters and settings that apply to the system. Considerations should also include secure settings for parameters used to access cloud portals.",
    "FurtherInformation": "Refer to vendor documentation and industry references noted in Requirement 2.2.1 for information about applicable security parameters for each type of system.",
    "Definitions": "",
    "Examples": "",
    "CustomizedApproachObjective": "System components cannot be compromised because of incorrect security parameter configuration.",
    "function_names": []
  },
  {
    "RequirementID": "2.2.7",
    "DefinedApproachRequirements": "All non-console administrative access is encrypted using strong cryptography.",
    "DefinedApproachTestingProcedures": "2.2.7.a Examine system configuration standards to verify they include encrypting all non-console administrative access using strong cryptography. 2.2.7.b Observe an administrator log on to system components and examine system configurations to verify that non-console administrative access is managed in accordance with this requirement. 2.2.7.c Examine settings for system components and authentication services to verify that insecure remote login services are not available for non-console administrative access. 2.2.7.d Examine vendor documentation and interview personnel to verify that strong cryptography for the technology in use is implemented according to industry best practices and/or vendor recommendations.",
    "Purpose": "If non-console (including remote) administration does not use encrypted communications, administrative authorization factors (such as IDs and passwords) can be revealed to an eavesdropper. A malicious individual could use this information to access the network, become administrator, and steal data.",
    "GoodPractice": "Whichever security protocol is used, it should be configured to use only secure versions and configurations to prevent use of an insecure connection—for example, by using only trusted certificates, supporting only strong encryption, and not supporting fallback to weaker, insecure protocols or methods.",
    "Definitions": "",
    "Examples": "Cleartext protocols (such as HTTP, telnet, etc.) do not encrypt traffic or logon details, making it easy for an eavesdropper to intercept this information. Non-console access may be facilitated by technologies that provide alternative access to systems, including but not limited to, out-of-band (OOB), lights-out management (LOM), Intelligent Platform Management Interface (IPMI), and keyboard, video, mouse (KVM) switches with remote capabilities. These and other non-console access technologies and methods must be secured with strong cryptography.",
    "FurtherInformation": "Refer to industry standards and best practices such as NIST SP 800-52 and SP 800-57.",
    "CustomizedApproachObjective": "Cleartext administrative authorization factors cannot be read or intercepted from any network transmissions.",
    "ApplicabilityNotes": "This includes administrative access via browser-based interfaces and application programming interfaces (APIs).",
    "function_names": []
  },
  {
    "RequirementID": "2.3.1",
    "DefinedApproachRequirements": "For wireless environments connected to the CDE or transmitting account data, all wireless vendor defaults are changed at installation or are confirmed to be secure, including but not limited to: • Default wireless encryption keys. • Passwords on wireless access points. • SNMP defaults. • Any other security-related wireless vendor defaults.",
    "DefinedApproachTestingProcedures": "2.3.1.a Examine policies and procedures and interview responsible personnel to verify that processes are defined for wireless vendor defaults to either change them upon installation or to confirm them to be secure in accordance with all elements of this requirement. 2.3.1.b Examine vendor documentation and observe a system administrator logging into wireless devices to verify: • SNMP defaults are not used. • Default passwords/passphrases on wireless access points are not used. 2.3.1.c Examine vendor documentation and wireless configuration settings to verify other security-related wireless vendor defaults were changed, if applicable.",
    "Purpose": "If wireless networks are not implemented with sufficient security configurations (including changing default settings), wireless sniffers can eavesdrop on the traffic, easily capture data and passwords, and easily enter and attack the network.",
    "GoodPractice": "Wireless passwords should be constructed so that they are resistant to offline brute force attacks.",
    "Definitions": "",
    "Examples": "",
    "CustomizedApproachObjective": "Wireless networks cannot be accessed using vendor default passwords or default configurations.",
    "ApplicabilityNotes": "This includes, but is not limited to, default wireless encryption keys, passwords on wireless access points, SNMP defaults, and any other security-related wireless vendor defaults.",
    "function_names": []
  },
  {
    "RequirementID": "2.3.2",
    "DefinedApproachRequirements": "For wireless environments connected to the CDE or transmitting account data, wireless encryption keys are changed as follows: • Whenever personnel with knowledge of the key leave the company or the role for which the knowledge was necessary. • Whenever a key is suspected of or known to be compromised.",
    "DefinedApproachTestingProcedures": "2.3.2 Interview responsible personnel and examine key-management documentation to verify that wireless encryption keys are changed in accordance with all elements specified in this requirement.",
    "Purpose": "Changing wireless encryption keys whenever someone with knowledge of the key leaves the organization or moves to a role that no longer requires knowledge of the key, helps keep knowledge of keys limited to only those with a business need to know. Also, changing wireless encryption keys whenever a key is suspected or known to be comprised makes a wireless network more resistant to compromise.",
    "GoodPractice": "This goal can be accomplished in multiple ways, including periodic changes of keys, changing keys via a defined “joiners-movers-leavers” (JML) process, implementing additional technical controls, and not using fixed pre-shared keys. In addition, any keys that are known to be, or suspected of being, compromised should be managed in accordance with the entity’s incident response plan at Requirement 12.10.1.",
    "Definitions": "",
    "Examples": "",
    "CustomizedApproachObjective": "Knowledge of wireless encryption keys cannot allow unauthorized access to wireless networks.",
    "ApplicabilityNotes": "",
    "function_names": []
  },
  {
    "RequirementID": "3.1.1",
    "DefinedApproachRequirements": "Requirement 3.1.1 is about effectively managing and maintaining the various policies and procedures specified throughout Requirement 3. While it is important to define the specific policies or procedures called out in Requirement 3, it is equally important to ensure they are properly documented, maintained, and disseminated. 3.1.1 All security policies and operational procedures that are identified in Requirement 3 are: • Documented. • Kept up to date. • In use. • Known to all affected parties.",
    "DefinedApproachTestingProcedures": "3.1.1 Examine documentation and interview personnel to verify that security policies and operational procedures identified in Requirement 3 are managed in accordance with all elements specified in this requirement.",
    "Purpose": "Requirement 3.1.1 is about effectively managing and maintaining policies and procedures to ensure they are properly documented, maintained, and disseminated.",
    "GoodPractice": "It is important to update policies and procedures as needed to address changes in processes, technologies, and business objectives. For this reason, consider updating these documents as soon as possible after a change occurs and not only on a periodic cycle.",
    "Definitions": "Security policies define the entity’s security objectives and principles. Operational procedures describe how to perform activities, and define the controls, methods, and processes that are followed to achieve the desired result in a consistent manner and in accordance with policy objectives.",
    "Examples": "",
    "CustomizedApproachObjective": "Expectations, controls, and oversight for meeting activities within Requirement 3 are defined and adhered to by affected personnel. All supporting activities are repeatable, consistently applied, and conform to management’s intent.",
    "ApplicabilityNotes": "",
    "function_names": []
  },
  {
    "RequirementID": "3.1.2",
    "DefinedApproachRequirements": "Roles and responsibilities for performing activities in Requirement 3 are documented, assigned, and understood.",
    "DefinedApproachTestingProcedures": "3.1.2.a Examine documentation to verify that descriptions of roles and responsibilities performing activities in Requirement 3 are documented and assigned. 3.1.2.b Interview personnel with responsibility for performing activities in Requirement 3 to verify that roles and responsibilities are assigned as documented and are understood.",
    "Purpose": "If roles and responsibilities are not formally assigned, personnel may not be aware of their day-to-day responsibilities, and critical activities may not occur.",
    "GoodPractice": "Roles and responsibilities may be documented within policies and procedures or maintained within separate documents. As part of communicating roles and responsibilities, entities can consider having personnel acknowledge their acceptance and understanding of their assigned roles and responsibilities.",
    "Definitions": "",
    "Examples": "A method to document roles and responsibilities is a responsibility assignment matrix that includes who is responsible, accountable, consulted, and informed (also called a RACI matrix).",
    "CustomizedApproachObjective": "Day-to-day responsibilities for performing all the activities in Requirement 3 are allocated. Personnel are accountable for successful, continuous operation of these requirements.",
    "ApplicabilityNotes": "",
    "function_names": []
  },
  {
    "RequirementID": "3.2.1",
    "DefinedApproachRequirements": "A formal data retention policy identifies what data needs to be retained, for how long, and where that data resides so it can be securely destroyed or deleted as soon as it is no longer needed. The only account data that may be stored after authorization is the primary account number or PAN (rendered unreadable), expiration date, cardholder name, and service code. The storage of SAD data prior to the completion of the authorization process is also included in the data retention and disposal policy so that storage of this sensitive data is kept to minimum, and only retained for the defined amount of time. Account data storage is kept to a minimum through implementation of data retention and disposal policies, procedures, and processes that include at least the following: • Coverage for all locations of stored account data. • Coverage for any sensitive authentication data (SAD) stored prior to completion of authorization. • Limiting data storage amount and retention time to that which is required for legal or regulatory, and/or business requirements. • Specific retention requirements for stored account data that defines length of retention period and includes a documented business justification. • Processes for secure deletion or rendering account data unrecoverable when no longer needed per the retention policy. • A process for verifying, at least once every three months, that stored account data exceeding the defined retention period has been securely deleted or rendered unrecoverable.",
    "DefinedApproachTestingProcedures": "3.2.1.a Examine the data retention and disposal policies, procedures, and processes and interview personnel to verify processes are defined to include all elements specified in this requirement. 3.2.1.b Examine files and system records on system components where account data is stored to verify that the data storage amount and retention time does not exceed the requirements defined in the data retention policy. 3.2.1.c Observe the mechanisms used to render account data unrecoverable to verify data cannot be recovered.",
    "Purpose": "Ensures that account data is retained only as long as necessary and is securely deleted when no longer needed, minimizing risk and complying with business, legal, or regulatory requirements.",
    "GoodPractice": "When identifying locations of stored account data, consider all processes and personnel with access to the data, as data could have been moved and stored in different locations than originally defined. Implementing an automated process to ensure data is automatically and securely deleted upon its defined retention limit helps ensure account data is not retained beyond what is necessary. Considerations include backups, archives, removable media, paper-based media, and audio recordings.",
    "Definitions": "",
    "Examples": "An automated, programmatic procedure could be run to locate and remove data, or a manual review of data storage areas could be performed. Monitoring the process ensures completion and validation of results. Implementing secure deletion methods ensures that the data cannot be retrieved when it is no longer needed.",
    "CustomizedApproachObjective": "Account data is retained only where necessary and for the least amount of time needed and is securely deleted or rendered unrecoverable when no longer needed.",
    "ApplicabilityNotes": "Methods of eliminating data when it exceeds the retention period include secure deletion to complete removal of the data or rendering it unrecoverable and unable to be reconstructed. The deletion function in most operating systems is not “secure deletion,” so a dedicated secure deletion function or application must be used. Where account data is stored by a TPSP (e.g., cloud), entities are responsible for ensuring all geographic instances are securely deleted. Coverage of SAD stored prior to authorization is a best practice until 31 March 2025, after which it becomes required.",
    "function_names": []
  },
  {
    "RequirementID": "3.3.1",
    "Purpose": "SAD is very valuable to malicious individuals as it allows them to generate counterfeit payment cards and create fraudulent transactions. Therefore, the storage of SAD upon completion of the authorization process is prohibited.",
    "DefinedApproachRequirements": "SAD is not stored after authorization, even if encrypted. All sensitive authentication data received is rendered unrecoverable upon completion of the authorization process.",
    "DefinedApproachTestingProcedures": "3.3.1.a If SAD is received, examine documented policies, procedures, and system configurations to verify the data is not stored after authorization.\n3.3.1.b If SAD is received, examine the documented procedures and observe the secure data deletion processes to verify the data is rendered unrecoverable upon completion of the authorization process.",
    "GoodPractice": "It may be acceptable for an entity to store SAD in non-persistent memory for a short time after authorization is complete, if following conditions are met:\n• There is a legitimate business need to access SAD in memory after authorization is complete.\n• SAD is only ever stored in non-persistent memory (for example, RAM, volatile memory).\n• Controls are in place to ensure that memory maintains a non-persistent state.\n• SAD is removed as soon as the business purpose is complete.\nIt is not permissible to store SAD in persistent memory.",
    "Definitions": "The authorization process completes when a merchant receives a transaction response (for example, an approval or decline). Refer to Appendix G for the definition of “authorization.”",
    "CustomizedApproachObjective": "This requirement is not eligible for the customized approach.",
    "ApplicabilityNotes": "Issuers and companies that support issuing services, where there is a legitimate and documented business need to store SAD, are not required to meet this requirement. A legitimate business need is one that is necessary for the performance of the function being provided by or for the issuer. Refer to Requirement 3.3.3 for additional requirements specifically for these entities. Sensitive authentication data includes the data cited in Requirements 3.3.1.1 through 3.3.1.3.",
    "function_names": []
  },
  {
    "RequirementID": "3.3.1.1",
    "Purpose": "If full contents of any track (from the magnetic stripe on the back of a card if present, equivalent data contained on a chip, or elsewhere) is stored, malicious individuals who obtain that data can use it to reproduce payment cards and complete fraudulent transactions.",
    "DefinedApproachRequirements": "The full contents of any track are not stored upon completion of the authorization process.",
    "DefinedApproachTestingProcedures": "3.3.1.1 Examine data sources to verify that the full contents of any track are not stored upon completion of the authorization process.",
    "Definitions": "Full track data is alternatively called full track, track, track 1, track 2, and magnetic-stripe data. Each track contains a number of data elements, and this requirement specifies only those that may be retained post-authorization.",
    "Examples": "Data sources to review to ensure that the full contents of any track are not retained upon completion of the authorization process include, but are not limited to:\n• Incoming transaction data.\n• All logs (for example, transaction, history, debugging, error).\n• History files.\n• Trace files.\n• Database schemas.\n• Contents of databases, and on-premise and cloud data stores.\n• Any existing memory/crash dump files.",
    "CustomizedApproachObjective": "This requirement is not eligible for the customized approach.",
    "ApplicabilityNotes": "In the normal course of business, the following data elements from the track may need to be retained:\n• Cardholder name.\n• Primary account number (PAN).\n• Expiration date.\n• Service code.\nTo minimize risk, store securely only these data elements as needed for business.",
    "function_names": []
  },
  {
    "RequirementID": "3.3.1.2",
    "Purpose": "If card verification code data is stolen, malicious individuals can execute fraudulent Internet and mail order/telephone-order (MO/TO) transactions. Not storing this data reduces the probability of it being compromised.",
    "DefinedApproachRequirements": "The card verification code is not stored upon completion of the authorization process.",
    "DefinedApproachTestingProcedures": "3.3.1.2 Examine data sources, to verify that the card verification code is not stored upon completion of the authorization process.",
    "Examples": "If card verification codes are stored on paper media prior to completion of authorization, a method of erasing or covering the codes should prevent them from being read after authorization is complete. Example methods of rendering the codes unreadable include removing the code with scissors and applying a suitably opaque and un-removable marker over the code.\n\nData sources to review to ensure that the card verification code is not retained upon completion of the authorization process include, but are not limited to:\n• Incoming transaction data.\n• All logs (for example, transaction, history, debugging, error).\n• History files.\n• Trace files.\n• Database schemas.\n• Contents of databases, and on-premise and cloud data stores.\n• Any existing memory/crash dump files.",
    "CustomizedApproachObjective": "This requirement is not eligible for the customized approach.",
    "ApplicabilityNotes": "The card verification code is the three- or four-digit number printed on the front or back of a payment card used to verify card-not-present transactions.",
    "function_names": []
  },
  {
    "RequirementID": "3.3.1.3",
    "Purpose": "PIN and PIN blocks should be known only to the card owner or entity that issued the card. If this data is stolen, malicious individuals can execute fraudulent PIN-based transactions (for example, in-store purchases and ATM withdrawals). Not storing this data reduces the probability of it being compromised.",
    "DefinedApproachRequirements": "The personal identification number (PIN) and the PIN block are not stored upon completion of the authorization process.",
    "DefinedApproachTestingProcedures": "3.3.1.3 Examine data sources, to verify that PINs and PIN blocks are not stored upon completion of the authorization process.",
    "Examples": "Data sources to review to ensure that PIN and PIN blocks are not retained upon completion of the authorization process include, but are not limited to:\n• Incoming transaction data.\n• All logs (for example, transaction, history, debugging, error).\n• History files.\n• Trace files.\n• Database schemas.\n• Contents of databases, and on-premise and cloud data stores.\n• Any existing memory/crash dump files.",
    "CustomizedApproachObjective": "This requirement is not eligible for the customized approach.",
    "ApplicabilityNotes": "PIN blocks are encrypted during the natural course of transaction processes, but even if an entity encrypts the PIN block again, it is still not allowed to be stored after the completion of the authorization process.",
    "function_names": []
  },
  {
    "RequirementID": "3.3.2",
    "Purpose": "SAD can be used by malicious individuals to increase the probability of successfully generating counterfeit payment cards and creating fraudulent transactions.",
    "DefinedApproachRequirements": "SAD that is stored electronically prior to completion of authorization is encrypted using strong cryptography.",
    "DefinedApproachTestingProcedures": "3.3.2 Examine data stores, system configurations, and/or vendor documentation to verify that all SAD that is stored electronically prior to completion of authorization is encrypted using strong cryptography.",
    "GoodPractice": "Entities should consider encrypting SAD with a different cryptographic key than is used to encrypt PAN. Note that this does not mean that PAN present in SAD (as part of track data) would need to be separately encrypted.",
    "ApplicabilityNotes": "The authorization process is completed when a merchant receives a transaction response (for example, an approval or decline). Refer to Appendix G for the definition of “authorization.” Whether SAD is permitted to be stored prior to authorization is determined by the organizations that manage compliance programs (for example, payment brands and acquirers). Contact these organizations for any additional criteria. This requirement applies to all storage of SAD, even if no PAN is present in the environment. Refer to Requirement 3.2.1 for an additional requirement that applies if SAD is stored prior to completion of authorization. Issuers and companies that support issuing services, where there is a legitimate and documented business need to store SAD, are not required to meet this requirement. A legitimate business need is one that is necessary for the performance of the function being provided by or for the issuer. Refer to Requirement 3.3.3 for requirements specifically for these entities. This requirement does not replace how PIN blocks are required to be managed, nor does it mean that a properly encrypted PIN block needs to be encrypted again. This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.",
    "Definitions": "The authorization process is completed when a merchant receives a transaction response (for example, an approval or decline). Refer to Appendix G for the definition of “authorization.”",
    "CustomizedApproachObjective": "This requirement is not eligible for the customized approach.",
    "function_names": []
  },
  {
    "RequirementID": "3.3.3",
    "DefinedApproachRequirements": "Additional requirement for issuers and companies that support issuing services and store sensitive authentication data: Any storage of sensitive authentication data is: • Limited to that which is needed for a legitimate issuing business need and is secured. • Encrypted using strong cryptography. This bullet is a best practice until its effective date; refer to Applicability Notes below for details.",
    "DefinedApproachTestingProcedures": "3.3.3.a Additional testing procedure for issuers and companies that support issuing services and store sensitive authentication data: Examine documented policies and interview personnel to verify there is a documented business justification for the storage of sensitive authentication data. 3.3.3.b Additional testing procedure for issuers and companies that support issuing services and store sensitive authentication data: Examine data stores and system configurations to verify that the sensitive authentication data is stored securely.",
    "CustomizedApproachObjective": "Sensitive authentication data is retained only as required to support issuing functions and is secured from unauthorized access.",
    "Purpose": "SAD can be used by malicious individuals to increase the probability of successfully generating counterfeit payment cards and creating fraudulent transactions.",
    "GoodPractice": "Entities should consider encrypting SAD with a different cryptographic key than is used to encrypt PAN. Note that this does not mean that PAN present in SAD (as part of track data) would need to be separately encrypted.",
    "ApplicabilityNotes": "This requirement applies only to issuers and companies that support issuing services and store sensitive authentication data. Entities that issue payment cards or that perform or support issuing services will often create and control sensitive authentication data as part of the issuing function. It is allowable for companies that perform, facilitate, or support issuing services to store sensitive authentication data ONLY IF they have a legitimate business need to store such data. A legitimate issuing business need is one that is necessary for the performance of the function being provided by or for the issuer. The bullet above (for encrypting stored SAD with strong cryptography) is a best practice until 31 March 2025, after which it will be required as part of Requirement 3.3.3 and must be fully considered during a PCI DSS assessment.",
    "function_names": []
  },
  {
    "RequirementID": "3.4.1",
    "DefinedApproachRequirements": "PAN is masked when displayed (the BIN and last four digits are the maximum number of digits to be displayed), such that only personnel with a legitimate business need can see more than the BIN and last four digits of the PAN.",
    "DefinedApproachTestingProcedures": "3.4.1.a Examine documented policies and procedures for masking the display of PANs to verify: • A list of roles that need access to more than the BIN and last four digits of the PAN (includes full PAN) is documented, together with a legitimate business need for each role to have such access. • PAN is masked when displayed such that only personnel with a legitimate business need can see more than the BIN and last four digits of the PAN. • All roles not specifically authorized to see the full PAN must only see masked PANs. 3.4.1.b Examine system configurations to verify that full PAN is only displayed for roles with a documented business need, and that PAN is masked for all other requests. 3.4.1.c Examine displays of PAN (for example, on screen, on paper receipts) to verify that PANs are masked when displayed, and that only those with a legitimate business need are able to see more than the BIN and/or last four digits of the PAN.",
    "CustomizedApproachObjective": "PAN displays are restricted to the minimum number of digits necessary to meet a defined business need.",
    "Purpose": "The display of full PAN on computer screens, payment card receipts, paper reports, etc. can result in this data being obtained by unauthorized individuals and used fraudulently. Ensuring that the full PAN is displayed only for those with a legitimate business need minimizes the risk of unauthorized persons gaining access to PAN data.",
    "GoodPractice": "Applying access controls according to defined roles is one way to limit access to viewing full PAN to only those individuals with a defined business need. The masking approach should always display only the number of digits needed to perform a specific business function. For example, if only the last four digits are needed to perform a business function, PAN should be masked to only show the last four digits. As another example, if a function needs to view the bank identification number (BIN) for routing purposes, unmask only the BIN digits for that function.",
    "ApplicabilityNotes": "This requirement does not supersede stricter requirements in place for displays of cardholder data—for example, legal or payment brand requirements for point-of-sale (POS) receipts. Masking is not synonymous with truncation and these terms cannot be used interchangeably. Masking refers to the concealment of certain digits during display or printing, even when the entire PAN is stored on a system. This is different from truncation, in which the truncated digits are removed and cannot be retrieved within the system. Masked PAN could be 'unmasked', but there is no 'un-truncation' without recreating the PAN from another source. Refer to Appendix G for definitions of 'masking' and 'truncation.'",
    "FurtherInformation": "This requirement relates to protection of PAN where it is displayed on screens, paper receipts, printouts, etc., and is not to be confused with Requirement 3.5.1 for protection of PAN when stored, processed, or transmitted. For more information about masking and truncation, see PCI SSC’s FAQs on these topics.",
    "function_names": []
  },
  {
    "RequirementID": "3.4.2",
    "DefinedApproachRequirements": "When using remote-access technologies, technical controls prevent copy and/or relocation of PAN for all personnel, except for those with documented, explicit authorization and a legitimate, defined business need.",
    "DefinedApproachTestingProcedures": "3.4.2.a Examine documented policies and procedures and documented evidence for technical controls that prevent copy and/or relocation of PAN when using remote-access technologies onto local hard drives or removable electronic media to verify the following: • Technical controls prevent all personnel not specifically authorized from copying and/or relocating PAN. • A list of personnel with permission to copy and/or relocate PAN is maintained, together with the documented, explicit authorization and legitimate, defined business need. 3.4.2.b Examine configurations for remote-access technologies to verify that technical controls to prevent copy and/or relocation of PAN for all personnel, unless explicitly authorized. 3.4.2.c Observe processes and interview personnel to verify that only personnel with documented, explicit authorization and a legitimate, defined business need have permission to copy and/or relocate PAN when using remote access technologies.",
    "CustomizedApproachObjective": "PAN cannot be copied or relocated by unauthorized personnel using remote-access technologies.",
    "Purpose": "Relocation of PAN to unauthorized storage devices is a common way for this data to be obtained and used fraudulently. Methods to ensure that only those with explicit authorization and a legitimate business reason can copy or relocate PAN minimizes the risk of unauthorized persons gaining access to PAN.",
    "GoodPractice": "Copying and relocation of PAN should only be done to storage devices that are permissible and authorized for that individual.",
    "ApplicabilityNotes": "Storing or relocating PAN onto local hard drives, removable electronic media, and other storage devices brings these devices into scope for PCI DSS. This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.",
    "Definitions": "A virtual desktop is an example of a remote-access technology. Such remote access technologies often include tools to disable copy and/or relocation functionality. Storage devices include, but are not limited to, local hard drives, virtual drives, removable electronic media, network drives, and cloud storage.",
    "FurtherInformation": "Vendor documentation for the remote-access technology in use will provide information about the system settings needed to implement this requirement.",
    "function_names": []
  },
  {
    "RequirementID": "3.5.1",
    "Purpose": "Rendering stored PAN unreadable is a defense in depth control designed to protect the data if an unauthorized individual gains access to stored data by taking advantage of a vulnerability or misconfiguration of an entity’s primary access control.",
    "DefinedApproachRequirements": "PAN is rendered unreadable anywhere it is stored by using any of the following approaches: • One-way hashes based on strong cryptography of the entire PAN. • Truncation (hashing cannot be used to replace the truncated segment of PAN). – If hashed and truncated versions of the same PAN, or different truncation formats of the same PAN, are present in an environment, additional controls are in place such that the different versions cannot be correlated to reconstruct the original PAN. • Index tokens. • Strong cryptography with associated key management processes and procedures.",
    "DefinedApproachTestingProcedures": "3.5.1.a Examine documentation about the system used to render PAN unreadable, including the vendor, type of system/process, and the encryption algorithms (if applicable) to verify that the PAN is rendered unreadable using any of the methods specified in this requirement. 3.5.1.b Examine data repositories and audit logs, including payment application logs, to verify the PAN is rendered unreadable using any of the methods specified in this requirement. 3.5.1.c If hashed and truncated versions of the same PAN are present in the environment, examine implemented controls to verify that the hashed and truncated versions cannot be correlated to reconstruct the original PAN.",
    "GoodPractice": "It is a relatively trivial effort for a malicious individual to reconstruct original PAN data if they have access to both the truncated and hashed versions of a PAN. Controls that prevent the correlation of this data will help ensure that the original PAN remains unreadable. Implementing keyed cryptographic hashes with associated key management processes and procedures in accordance with Requirement 3.5.1.1 is a valid additional control to prevent correlation.",
    "FurtherInformation": "For information about truncation formats and truncation in general, see PCI SSC’s FAQs on the topic. Sources for information about index tokens include: • PCI SSC’s Tokenization Product Security Guidelines (https://www.pcisecuritystandards.org/documents/Tokenization_Product_Security_Guidelines.pdf) • ANSI X9.119-2-2017: Retail Financial Services - Requirements For Protection Of Sensitive Payment Card Data - Part 2: Implementing Post-Authorization Tokenization Systems",
    "CustomizedApproachObjective": "Cleartext PAN cannot be read from storage media.",
    "ApplicabilityNotes": "This requirement applies to PANs stored in primary storage (databases, or flat files such as text files spreadsheets) as well as non-primary storage (backup, audit logs, exception, or troubleshooting logs). This requirement does not preclude the use of temporary files containing cleartext PAN while encrypting and decrypting PAN.",
    "function_names": []
  },
  {
    "RequirementID": "3.5.1.1",
    "Purpose": "Rendering stored PAN unreadable is a defense in depth control designed to protect the data if an unauthorized individual gains access to stored data by taking advantage of a vulnerability or misconfiguration of an entity’s primary access control. A hashing function that incorporates a randomly generated secret key provides brute force attack resistance and secret authentication integrity.",
    "DefinedApproachRequirements": "Hashes used to render PAN unreadable (per the first bullet of Requirement 3.5.1) are keyed cryptographic hashes of the entire PAN, with associated key management processes and procedures in accordance with Requirements 3.6 and 3.7.",
    "DefinedApproachTestingProcedures": "3.5.1.1.a Examine documentation about the hashing method used to render PAN unreadable, including the vendor, type of system/process, and the encryption algorithms (as applicable) to verify that the hashing method results in keyed cryptographic hashes of the entire PAN, with associated key management processes and procedures. 3.5.1.1.b Examine documentation about the key management procedures and processes associated with the keyed cryptographic hashes to verify keys are managed in accordance with Requirements 3.6 and 3.7. 3.5.1.1.c Examine data repositories to verify the PAN is rendered unreadable. 3.5.1.1.d Examine audit logs, including payment application logs, to verify the PAN is rendered unreadable.",
    "Definitions": "Refer to Appendix G for the definition of “keyed cryptographic hash” and for information about appropriate keyed cryptographic hashing algorithms and additional resources.",
    "Examples": "Systems which only have access to one hash value at a time and which store no other account data on the same system as the hash, are not required to meet key-management processes and procedures (Requirements 3.6 and 3.7). Examples of such systems include transaction-originating devices that generate a hash of the PAN for use in a backend system, such as pay-at-gate transit turnstiles. However, in such an implementation, the backend system will have access to more than one hash value at a time, and therefore is required to meet key-management processes and procedures at Requirements 3.6 and 3.7.",
    "CustomizedApproachObjective": "Cleartext PAN cannot be determined from hashes of the PAN.",
    "ApplicabilityNotes": "All Applicability Notes for Requirement 3.5.1 also apply to this requirement. Key-management processes and procedures (Requirements 3.6 and 3.7) do not apply to system components used to generate individual keyed hashes of a PAN for comparison to another system if: • The system components only have access to one hash value at a time (hash values are not stored on the system) AND • There is no other account data stored on the same system as the hashes. This requirement is considered a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This requirement will replace the bullet in Requirement 3.5.1 for one-way hashes once its effective date is reached.",
    "function_names": []
  },
  {
    "RequirementID": "3.5.1.2",
    "Purpose": "Disk-level and partition-level encryption typically encrypts the entire disk or partition using the same key, with all data automatically decrypted when the system runs or when an authorized user requests it. For this reason, disk-level encryption is not appropriate to protect stored PAN on computers, laptops, servers, storage arrays, or any other system that provides transparent decryption upon user authentication.",
    "DefinedApproachRequirements": "If disk-level or partition-level encryption (rather than file-, column-, or field-level database encryption) is used to render PAN unreadable, it is implemented only as follows: • On removable electronic media OR • If used for non-removable electronic media, PAN is also rendered unreadable via another mechanism that meets Requirement 3.5.1.",
    "DefinedApproachTestingProcedures": "3.5.1.2.a Examine encryption processes to verify that, if disk-level or partition-level encryption is used to render PAN unreadable, it is implemented only as follows: • On removable electronic media, OR • If used for non-removable electronic media, examine encryption processes used to verify that PAN is also rendered unreadable via another method that meets Requirement 3.5.1. 3.5.1.2.b Examine configurations and/or vendor documentation and observe encryption processes to verify the system is configured according to vendor documentation the result is that the disk or the partition is rendered unreadable.",
    "CustomizedApproachObjective": "Encrypted PAN is only decrypted when there is a legitimate business need to access that PAN.",
    "FurtherInformation": "Where available, following vendors’ hardening and industry best practice guidelines can assist in securing PAN on these devices.",
    "ApplicabilityNotes": "This requirement applies to any encryption method that provides clear-text PAN automatically when a system runs, even though an authorized user has not specifically requested that data. While disk or partition encryption may still be present on these types of devices, it cannot be the only mechanism used to protect PAN stored on those systems. Any stored PAN must also be rendered unreadable per Requirement 3.5.1—for example, through truncation or a data-level encryption mechanism. Full disk encryption helps to protect data in the event of physical loss of a disk and therefore its use is appropriate only for removable electronic media storage devices. Media that is part of a data center architecture (for example, hot-swappable drives, bulk tape-backups) is considered non-removable electronic media to which Requirement 3.5.1 applies. Disk or partition encryption implementations must also meet all other PCI DSS encryption and key-management requirements. For issuers and companies that support issuing services: This requirement does not apply to PANs being accessed for real-time transaction processing. However, it does apply to PANs stored for other purposes. This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.",
    "function_names": []
  },
  {
    "RequirementID": "3.5.1.3",
    "Purpose": "Disk-level encryption typically encrypts the entire disk or partition using the same key, with all data automatically decrypted when the system runs or when an authorized user requests it. Many disk-encryption solutions intercept operating system read/write operations and perform the appropriate cryptographic transformations without any special action by the user other than supplying a password or passphrase at system start-up or at the beginning of a session. This provides no protection from a malicious individual that has already managed to gain access to a valid user account.",
    "DefinedApproachRequirements": "If disk-level or partition-level encryption is used (rather than file-, column-, or field-level database encryption) to render PAN unreadable, it is managed as follows: • Logical access is managed separately and independently of native operating system authentication and access control mechanisms. • Decryption keys are not associated with user accounts. • Authentication factors (passwords, passphrases, or cryptographic keys) that allow access to unencrypted data are stored securely.",
    "DefinedApproachTestingProcedures": "3.5.1.3.a If disk-level or partition-level encryption is used to render PAN unreadable, examine the system configuration and observe the authentication process to verify that logical access is implemented in accordance with all elements specified in this requirement. 3.5.1.3.b Examine files containing authentication factors (passwords, passphrases, or cryptographic keys) and interview personnel to verify that authentication factors that allow access to unencrypted data are stored securely and are independent from the native operating system’s authentication and access control methods.",
    "CustomizedApproachObjective": "Disk encryption implementations are configured to require independent authentication and logical access controls for decryption.",
    "GoodPractice": "Full disk encryption helps to protect data in the event of physical loss of a disk and therefore its use is best limited only to removable electronic media storage devices.",
    "ApplicabilityNotes": "Disk or partition encryption implementations must also meet all other PCI DSS encryption and key-management requirements.",
    "function_names": []
  },
  {
    "RequirementID": "3.6.1",
    "Purpose": "Cryptographic keys must be strongly protected because those who obtain access will be able to decrypt data.",
    "DefinedApproachRequirements": "Procedures are defined and implemented to protect cryptographic keys used to protect stored account data against disclosure and misuse that include: • Access to keys is restricted to the fewest number of custodians necessary. • Key-encrypting keys are at least as strong as the data-encrypting keys they protect. • Key-encrypting keys are stored separately from data-encrypting keys. • Keys are stored securely in the fewest possible locations and forms.",
    "DefinedApproachTestingProcedures": "Examine documented key-management policies and procedures to verify that processes to protect cryptographic keys used to protect stored account data against disclosure and misuse are defined to include all elements specified in this requirement.",
    "GoodPractice": "Having a centralized key management system based on industry standards is recommended for managing cryptographic keys.",
    "ApplicabilityNotes": "This requirement applies to keys used to protect stored account data and to key-encrypting keys used to protect data-encrypting keys. The requirement to protect keys used to protect stored account data from disclosure and misuse applies to both data-encrypting keys and key-encrypting keys. Because one key-encrypting key may grant access to many data-encrypting keys, the key-encrypting keys require strong protection measures.",
    "FurtherInformation": "The entity’s key management procedures will benefit through alignment with industry requirements, Sources for information on cryptographic key management life cycles include: • ISO 11568-1 Banking — Key management (retail) — Part 1: Principles (specifically Chapter 10 and the referenced Parts 2 & 4) • NIST SP 800-57 Part 1 Revision 5— Recommendation for Key Management, Part 1: General.",
    "CustomizedApproachObjective": "Processes that protect cryptographic keys used to protect stored account data against disclosure and misuse are defined and implemented.",
    "function_names": []
  },
  {
    "RequirementID": "3.6.1.1",
    "DefinedApproachRequirements": "Additional requirement for service providers only: A documented description of the cryptographic architecture is maintained that includes: • Details of all algorithms, protocols, and keys used for the protection of stored account data, including key strength and expiry date. • Preventing the use of the same cryptographic keys in production and test environments. This bullet is a best practice until its effective date; refer to Applicability Notes below for details. • Description of the key usage for each key. • Inventory of any hardware security modules (HSMs), key management systems (KMS), and other secure cryptographic devices (SCDs) used for key management, including type and location of devices, to support meeting Requirement 12.3.4.",
    "DefinedApproachTestingProcedures": "Additional testing procedure for service provider assessments only: Interview responsible personnel and examine documentation to verify that a document exists to describe the cryptographic architecture that includes all elements specified in this requirement.",
    "Purpose": "Maintaining current documentation of the cryptographic architecture enables an entity to understand the algorithms, protocols, and cryptographic keys used to protect stored account data, as well as the devices that generate, use, and protect the keys. This allows an entity to keep pace with evolving threats to its architecture and plan for updates as the assurance level provided by different algorithms and key strengths changes. Maintaining such documentation also allows an entity to detect lost or missing keys or key management devices and identify unauthorized additions to its cryptographic architecture. The use of the same cryptographic keys in both production and test environments introduces a risk of exposing the key if the test environment is not at the same security level as the production environment.",
    "GoodPractice": "Having an automated reporting mechanism can assist with maintenance of the cryptographic attributes.",
    "ApplicabilityNotes": "This requirement applies only when the entity being assessed is a service provider. In cloud HSM implementations, responsibility for the cryptographic architecture according to this Requirement will be shared between the cloud provider and the cloud customer. The bullet above (for including, in the cryptographic architecture, that the use of the same cryptographic keys in production and test is prevented) is a best practice until 31 March 2025, after which it will be required as part of Requirement 3.6.1.1 and must be fully considered during a PCI DSS assessment.",
    "CustomizedApproachObjective": "Accurate details of the cryptographic architecture are maintained and available.",
    "function_names": []
  },
  {
    "RequirementID": "3.6.1.2",
    "Purpose": "Storing cryptographic keys securely prevents unauthorized or unnecessary access that could result in the exposure of stored account data. Storing keys separately means they are stored such that if the location of one key is compromised, the second key is not also compromised.",
    "DefinedApproachRequirements": "Secret and private keys used to protect stored account data are stored in one (or more) of the following forms at all times: • Encrypted with a key-encrypting key that is at least as strong as the data-encrypting key, and that is stored separately from the data-encrypting key. • Within a secure cryptographic device (SCD), such as a hardware security module (HSM) or PTS-approved point-of-interaction device. • As at least two full-length key components or key shares, in accordance with an industry-accepted method.",
    "DefinedApproachTestingProcedures": "a. Examine documented procedures to verify it is defined that cryptographic keys used to encrypt/decrypt stored account data must exist only in one (or more) of the forms specified in this requirement. b. Examine system configurations and key storage locations to verify that cryptographic keys used to encrypt/decrypt stored account data exist in one (or more) of the forms specified in this requirement. c. Wherever key-encrypting keys are used, examine system configurations and key storage locations to verify: • Key-encrypting keys are at least as strong as the data-encrypting keys they protect. • Key-encrypting keys are stored separately from data-encrypting keys.",
    "GoodPractice": "Where data-encrypting keys are stored in an HSM, the HSM interaction channel should be protected to prevent interception of encryption or decryption operations.",
    "ApplicabilityNotes": "It is not required that public keys be stored in one of these forms. Cryptographic keys stored as part of a key management system (KMS) that employs SCDs are acceptable. A cryptographic key that is split into two parts does not meet this requirement. Secret or private keys stored as key components or key shares must be generated via one of the following: • Using an approved random number generator and within an SCD, OR • According to ISO 19592 or equivalent industry standard for generation of secret key shares.",
    "CustomizedApproachObjective": "Secret and private keys are stored in a secure form that prevents unauthorized retrieval or access.",
    "function_names": []
  },
  {
    "RequirementID": "3.6.1.3",
    "DefinedApproachRequirements": "Access to cleartext cryptographic key components is restricted to the fewest number of custodians necessary.",
    "DefinedApproachTestingProcedures": "Examine user access lists to verify that access to cleartext cryptographic key components is restricted to the fewest number of custodians necessary.",
    "Purpose": "Restricting the number of people who have access to cleartext cryptographic key components reduces the risk of stored account data being retrieved or rendered visible by unauthorized parties.",
    "GoodPractice": "Only personnel with defined key custodian responsibilities (creating, altering, rotating, distributing, or otherwise maintaining encryption keys) should be granted access to key components. Ideally this will be a very small number of people.",
    "CustomizedApproachObjective": "Access to cleartext cryptographic key components is restricted to necessary personnel.",
    "function_names": []
  },
  {
    "RequirementID": "3.6.1.4",
    "DefinedApproachRequirements": "Cryptographic keys are stored in the fewest possible locations.",
    "DefinedApproachTestingProcedures": "Examine key storage locations and observe processes to verify that keys are stored in the fewest possible locations.",
    "Purpose": "Storing any cryptographic keys in the fewest locations helps an organization track and monitor all key locations and minimizes the potential for keys to be exposed to unauthorized parties.",
    "CustomizedApproachObjective": "Cryptographic keys are retained only where necessary.",
    "function_names": []
  },
  {
    "RequirementID": "3.7.1",
    "Purpose": "Use of strong cryptographic keys significantly increases the level of security of encrypted account data.",
    "FurtherInformation": "See the sources referenced at Cryptographic Key Generation in Appendix G.",
    "DefinedApproachRequirements": "Key-management policies and procedures are implemented to include generation of strong cryptographic keys used to protect stored account data.",
    "DefinedApproachTestingProcedures": "3.7.1.a Examine the documented key-management policies and procedures for keys used for protection of stored account data to verify that they define generation of strong cryptographic keys.\n3.7.1.b Observe the method for generating keys to verify that strong keys are generated.",
    "CustomizedApproachObjective": "Strong cryptographic keys are generated.",
    "function_names": []
  },
  {
    "RequirementID": "3.7.2",
    "Purpose": "Secure distribution or conveyance of secret or private cryptographic keys means that keys are distributed only to authorized custodians, as identified in Requirement 3.6.1.2, and are never distributed insecurely.",
    "DefinedApproachRequirements": "Key-management policies and procedures are implemented to include secure distribution of cryptographic keys used to protect stored account data.",
    "DefinedApproachTestingProcedures": "3.7.2.a Examine the documented key-management policies and procedures for keys used for protection of stored account data to verify that they define secure distribution of cryptographic keys.\n3.7.2.b Observe the method for distributing keys to verify that keys are distributed securely.",
    "CustomizedApproachObjective": "Cryptographic keys are secured during distribution.",
    "function_names": []
  },
  {
    "RequirementID": "3.7.3",
    "DefinedApproachRequirements": "Key-management policies and procedures are implemented to include secure storage of cryptographic keys used to protect stored account data.",
    "DefinedApproachTestingProcedures": "3.7.3.a Examine the documented key-management policies and procedures for keys used for protection of stored account data to verify that they define secure storage of cryptographic keys.\n3.7.3.b Observe the method for storing keys to verify that keys are stored securely.",
    "Purpose": "Storing keys without proper protection could provide access to attackers, resulting in the decryption and exposure of account data.",
    "GoodPractice": "Data encryption keys can be protected by encrypting them with a key-encrypting key.\nKeys can be stored in a Hardware Security Module (HSM).\nSecret or private keys that can decrypt data should never be present in source code.",
    "CustomizedApproachObjective": "Cryptographic keys are secured when stored.",
    "function_names": []
  },
  {
    "RequirementID": "3.7.4",
    "Purpose": "Changing encryption keys when they reach the end of their cryptoperiod is imperative to minimize the risk of someone obtaining the encryption keys and using them to decrypt data.",
    "Definitions": "A cryptoperiod is the time span during which a cryptographic key can be used for its defined purpose. Cryptoperiods are often defined in terms of the period for which the key is active and/or the amount of ciphertext that has been produced by the key. Considerations for defining the cryptoperiod include, but are not limited to, the strength of the underlying algorithm, size or length of the key, risk of key compromise, and the sensitivity of the data being encrypted.",
    "FurtherInformation": "NIST SP 800-57 Part 1, Revision 5, Section 5.3 Cryptoperiods – provides guidance for establishing the time span during which a specific key is authorized for use by legitimate entities, or the keys for a given system will remain in effect. See Table 1 of SP 800-57 Part 1 for suggested cryptoperiods for different key types.",
    "DefinedApproachRequirements": "Key management policies and procedures are implemented for cryptographic key changes for keys that have reached the end of their cryptoperiod, as defined by the associated application vendor or key owner, and based on industry best practices and guidelines, including the following:\n• A defined cryptoperiod for each key type in use.\n• A process for key changes at the end of the defined cryptoperiod.",
    "DefinedApproachTestingProcedures": "3.7.4.a Examine the documented key-management policies and procedures for keys used for protection of stored account data to verify that they define changes to cryptographic keys that have reached the end of their cryptoperiod and include all elements specified in this requirement.\n3.7.4.b Interview personnel, examine documentation, and observe key storage locations to verify that keys are changed at the end of the defined cryptoperiod(s).",
    "CustomizedApproachObjective": "Cryptographic keys are not used beyond their defined cryptoperiod.",
    "function_names": []
  },
  {
    "RequirementID": "3.7.5",
    "Purpose": "Keys that are no longer required, keys with weakened integrity, and keys that are known or suspected to be compromised, should be archived, revoked, and/or destroyed to ensure that the keys can no longer be used. If such keys need to be kept (for example, to support archived encrypted data), they should be strongly protected.",
    "GoodPractice": "Archived cryptographic keys should be used only for decryption/verification purposes.\nThe encryption solution should provide for and facilitate a process to replace keys that are due for replacement or that are known to be, or suspected of being, compromised. In addition, any keys that are known to be, or suspected of being, compromised should be managed in accordance with the entity’s incident response plan per Requirement 12.10.1.",
    "FurtherInformation": "Industry best practices for archiving retired keys are outlined in NIST SP 800-57 Part 1, Revision 5, Section 8.3.1, and includes maintaining the archive with a trusted third party and storing archived key information separately from operational data.",
    "DefinedApproachRequirements": "Key management policies procedures are implemented to include the retirement, replacement, or destruction of keys used to protect stored account data, as deemed necessary when:\n• The key has reached the end of its defined cryptoperiod.\n• The integrity of the key has been weakened, including when personnel with knowledge of a cleartext key component leaves the company, or the role for which the key component was known.\n• The key is suspected of or known to be compromised. Retired or replaced keys are not used for encryption operations.",
    "DefinedApproachTestingProcedures": "3.7.5.a Examine the documented key-management policies and procedures for keys used for protection of stored account data and verify that they define retirement, replacement, or destruction of keys in accordance with all elements specified in this requirement.\n3.7.5.b Interview personnel to verify that processes are implemented in accordance with all elements specified in this requirement.",
    "CustomizedApproachObjective": "Keys are removed from active use when it is suspected or known that the integrity of the key is weakened.",
    "ApplicabilityNotes": "If retired or replaced cryptographic keys need to be retained, these keys must be securely archived (for example, by using a key-encryption key).",
    "function_names": []
  },
  {
    "RequirementID": "3.7.6",
    "Purpose": "Split knowledge and dual control of keys are used to eliminate the possibility of a single person having access to the whole key and therefore being able to gain unauthorized access to the data.",
    "Definitions": "Split knowledge is a method in which two or more people separately have key components, where each person knows only their own key component, and the individual key components convey no knowledge of other components or of the original cryptographic key. Dual control requires two or more people to authenticate the use of a cryptographic key or perform a key-management function. No single person can access or use the authentication factor (for example, the password, PIN, or key) of another.",
    "GoodPractice": "Where key components or key shares are used, procedures should ensure that no single custodian ever has access to sufficient key components or shares to reconstruct the cryptographic key. For example, in an m-of-n scheme (for example, Shamir), where only two of any three components are required to reconstruct the cryptographic key, a custodian must not have current or prior knowledge of more than one component. If a custodian was previously assigned component A, which was then reassigned, the custodian should not then be assigned component B or C, as this would give the custodian knowledge of two components and the ability to recreate the key.",
    "DefinedApproachRequirements": "Where manual cleartext cryptographic key management operations are performed by personnel, key-management policies and procedures are implemented, including managing these operations using split knowledge and dual control.",
    "DefinedApproachTestingProcedures": "3.7.6.a Examine the documented key-management policies and procedures for keys used for protection of stored account data and verify that they define using split knowledge and dual control.\n3.7.6.b Interview personnel and/or observe processes to verify that manual cleartext keys are managed with split knowledge and dual control.",
    "CustomizedApproachObjective": "Cleartext secret or private keys cannot be known by anyone. Operations involving cleartext keys cannot be carried out by a single person.",
    "ApplicabilityNotes": "This control is applicable for manual key management operations. A cryptographic key that is simply split into two parts does not meet this requirement. Secret or private keys stored as key components or key shares must be generated via one of the following:\n• Using an approved random number generator and within a secure cryptographic device (SCD), such as a hardware security module (HSM) or PTS-approved point-of-interaction device, OR\n• According to ISO 19592 or equivalent industry standard for generation of secret key shares.",
    "Examples": "Key-management operations that might be performed manually include, but are not limited to, key generation, transmission, loading, storage, and destruction.",
    "FurtherInformation": "Industry standards for managing key components include:\n• NIST SP 800-57 Part 2, Revision 1 -- Recommendation for Key Management: Part 2 – Best Practices for Key Management Organizations [4.6 Keying Material Distribution]\n• ISO 11568-2 Banking — Key management (retail) — Part 2: Symmetric ciphers, their key management and life cycle [4.7.2.3 Key components and 4.9.3 Key components]\n• European Payments Council EPC342-08 Guidelines on Cryptographic Algorithms Usage and Key Management [especially 4.1.4 Key installation].",
    "function_names": []
  },
  {
    "RequirementID": "3.7.7",
    "Purpose": "If an attacker is able to substitute an entity’s key with a key the attacker knows, the attacker will be able to decrypt all data encrypted with that key.",
    "GoodPractice": "The encryption solution should not allow for or accept substitution of keys from unauthorized sources or unexpected processes. Controls should include ensuring that individuals with access to key components or shares do not have access to other components or shares that form the necessary threshold to derive the key.",
    "DefinedApproachRequirements": "Key management policies and procedures are implemented to include the prevention of unauthorized substitution of cryptographic keys.",
    "DefinedApproachTestingProcedures": "3.7.7.a Examine the documented key-management policies and procedures for keys used for protection of stored account data and verify that they define prevention of unauthorized substitution of cryptographic keys.\n3.7.7.b Interview personnel and/or observe processes to verify that unauthorized substitution of keys is prevented.",
    "CustomizedApproachObjective": "Cryptographic keys cannot be substituted by unauthorized personnel.",
    "function_names": []
  },
  {
    "RequirementID": "3.7.8",
    "DefinedApproachRequirements": "3.7.8 Key management policies and procedures are implemented to include that cryptographic key custodians formally acknowledge (in writing or electronically) that they understand and accept their key-custodian responsibilities.",
    "DefinedApproachTestingProcedures": "3.7.8.a Examine the documented key-management policies and procedures for keys used for protection of stored account data and verify that they define acknowledgments for key custodians in accordance with all elements specified in this requirement.\n3.7.8.b Examine documentation or other evidence showing that key custodians have provided acknowledgments in accordance with all elements specified in this requirement.",
    "CustomizedApproachObjective": "Key custodians are knowledgeable about their responsibilities in relation to cryptographic operations and can access assistance and guidance when required.",
    "Purpose": "This process will help ensure individuals that act as key custodians commit to the key-custodian role and understand and accept the responsibilities. An annual reaffirmation can help remind key custodians of their responsibilities.",
    "FurtherInformation": "Industry guidance for key custodians and their roles and responsibilities includes:\n• NIST SP 800-130 A Framework for Designing Cryptographic Key Management Systems [5. Roles and Responsibilities (especially) for Key Custodians]\n• ISO 11568-1 Banking -- Key management (retail) -- Part 1: Principles [5 Principles of key management (especially b)]",
    "function_names": []
  },
  {
    "RequirementID": "3.7.9",
    "DefinedApproachRequirements": "3.7.9 Additional requirement for service providers only: Where a service provider shares cryptographic keys with its customers for transmission or storage of account data, guidance on secure transmission, storage and updating of such keys is documented and distributed to the service provider’s customers.",
    "DefinedApproachTestingProcedures": "3.7.9 Additional testing procedure for service provider assessments only: If the service provider shares cryptographic keys with its customers for transmission or storage of account data, examine the documentation that the service provider provides to its customers to verify it includes guidance on how to securely transmit, store, and update customers’ keys in accordance with all elements specified in Requirements 3.7.1 through 3.7.8 above.",
    "CustomizedApproachObjective": "Customers are provided with appropriate key management guidance whenever they receive shared cryptographic keys.",
    "Purpose": "Providing guidance to customers on how to securely transmit, store, and update cryptographic keys can help prevent keys from being mismanaged or disclosed to unauthorized entities.",
    "FurtherInformation": "Numerous industry standards for key management are cited above in the Guidance for Requirements 3.7.1–3.7.8.",
    "ApplicabilityNotes": "This requirement applies only when the entity being assessed is a service provider.",
    "function_names": []
  },
  {
    "RequirementID": "4.1.1",
    "DefinedApproachRequirements": "4.1.1 All security policies and operational procedures that are identified in Requirement 4 are:\n• Documented.\n• Kept up to date.\n• In use.\n• Known to all affected parties.",
    "DefinedApproachTestingProcedures": "4.1.1 Examine documentation and interview personnel to verify that security policies and operational procedures identified in Requirement 4 are managed in accordance with all elements specified in this requirement.",
    "Purpose": "Requirement 4.1.1 is about effectively managing and maintaining the various policies and procedures specified throughout Requirement 4. While it is important to define the specific policies or procedures called out in Requirement 4, it is equally important to ensure they are properly documented, maintained, and disseminated.",
    "GoodPractice": "It is important to update policies and procedures as needed to address changes in processes, technologies, and business objectives. For this reason, consider updating these documents as soon as possible after a change occurs and not only on a periodic cycle.",
    "Definitions": "Security policies define the entity’s security objectives and principles. Operational procedures describe how to perform activities, and define the controls, methods, and processes that are followed to achieve the desired result in a consistent manner and in accordance with policy objectives. Policies and procedures, including updates, are actively communicated to all affected personnel, and are supported by operating procedures describing how to perform activities.",
    "CustomizedApproachObjective": "Expectations, controls, and oversight for meeting activities within Requirement 4 are defined and adhered to by affected personnel. All supporting activities are repeatable, consistently applied, and conform to management’s intent.",
    "function_names": []
  },
  {
    "RequirementID": "4.1.2",
    "DefinedApproachRequirements": "4.1.2 Roles and responsibilities for performing activities in Requirement 4 are documented, assigned, and understood.",
    "DefinedApproachTestingProcedures": "4.1.2.a Examine documentation to verify that descriptions of roles and responsibilities for performing activities in Requirement 4 are documented and assigned.\n4.1.2.b Interview personnel with responsibility for performing activities in Requirement 4 to verify that roles and responsibilities are assigned as documented and are understood.",
    "Purpose": "If roles and responsibilities are not formally assigned, personnel may not be aware of their day-to-day responsibilities and critical activities may not occur.",
    "GoodPractice": "Roles and responsibilities may be documented within policies and procedures or maintained within separate documents. As part of communicating roles and responsibilities, entities can consider having personnel acknowledge their acceptance and understanding of their assigned roles and responsibilities.",
    "Examples": "A method to document roles and responsibilities is a responsibility assignment matrix that includes who is responsible, accountable, consulted, and informed (also called a RACI matrix).",
    "CustomizedApproachObjective": "Day-to-day responsibilities for performing all the activities in Requirement 4 are allocated. Personnel are accountable for successful, continuous operation of these requirements.",
    "function_names": []
  },
  {
    "RequirementID": "4.2.1",
    "DefinedApproachRequirements": "4.2.1 Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks:\n• Only trusted keys and certificates are accepted.\n• Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until its effective date; refer to applicability notes below for details.\n• The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations.\n• The encryption strength is appropriate for the encryption methodology in use.",
    "DefinedApproachTestingProcedures": "4.2.1.a Examine documented policies and procedures and interview personnel to verify processes are defined to include all elements specified in this requirement.\n4.2.1.b Examine system configurations to verify that strong cryptography and security protocols are implemented in accordance with all elements specified in this requirement.\n4.2.1.c Examine cardholder data transmissions to verify that all PAN is encrypted with strong cryptography when it is transmitted over open, public networks.\n4.2.1.d Examine system configurations to verify that keys and/or certificates that cannot be verified as trusted are rejected.",
    "Purpose": "Sensitive information must be encrypted during transmission over public networks because it is easy and common for a malicious individual to intercept and/or divert data while in transit.",
    "GoodPractice": "The network and data-flow diagrams defined in Requirement 1 are useful resources for identifying all connection points where account data is transmitted or received over open, public networks. While not required, it is considered a good practice for entities to also encrypt PAN over their internal networks, and for entities to establish any new network implementations with encrypted communications. PAN transmissions can be protected by encrypting the data before it is transmitted, or by encrypting the session over which the data is transmitted, or both. While it is not required that strong cryptography be applied at both the data level and the session level, it is strongly recommended. If encrypted at the data level, the cryptographic keys used for protecting the data can be managed in accordance with Requirements 3.6 and 3.7. If the data is encrypted at the session level, designated key custodians should be assigned responsibility for managing transmission keys and certificates.",
    "CustomizedApproachObjective": "Cleartext PAN cannot be read or intercepted from any transmissions over open, public networks.",
    "ApplicabilityNotes": "Some protocol implementations (such as SSL, SSH v1.0, and early TLS) have known vulnerabilities that an attacker can use to gain access to the cleartext data. It is critical that entities maintain awareness of industry-defined deprecation dates for the cipher suites they are using and are prepared to migrate to newer versions or protocols when older ones are no longer deemed secure. Verifying that certificates are trusted helps ensure the integrity of the secure connection. To be considered trusted, a certificate should be issued from a trusted source, such as a trusted certificate authority (CA), and not be expired. Up-to-date Certificate Revocation Lists (CRLs) or Online Certificate Status Protocol (OCSP) can be used to validate certificates. Techniques to validate certificates may include certificate and public key pinning, where the trusted certificate or a public key is pinned either during development or upon its first use. Entities can also confirm with developers or review source code to ensure that clients and servers reject connections if the certificate is bad. For browser-based TLS certificates, certificate trust can often be verified by clicking on the lock icon that appears next to the address bar. A self-signed certificate may also be acceptable if the certificate is issued by an internal CA within the organization, the certificate’s author is confirmed, and the certificate is verified—for example, via hash or signature—and has not expired. The bullet above (for confirming that certificates used to safeguard PAN during transmission over open, public networks are valid and are not expired or revoked) is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment.",
    "Examples": "Open, public networks include, but are not limited to:\n• The Internet\n• Wireless technologies, including Wi-Fi, Bluetooth, cellular technologies, and satellite communications.",
    "FurtherInformation": "Vendor recommendations and industry best practices can be consulted for information about the proper encryption strength specific to the encryption methodology in use. For more information about strong cryptography and secure protocols, see industry standards and best practices such as NIST SP 800-52 and SP 800-57. For more information about trusted keys and certificates, see NIST Cybersecurity Practice Guide Special Publication 1800-16, Securing Web Transactions: Transport Layer Security (TLS) Server Certificate Management.",
    "function_names": []
  },
  {
    "RequirementID": "4.2.1.1",
    "DefinedApproachRequirements": "An inventory of the entity’s trusted keys and certificates used to protect PAN during transmission is maintained.",
    "DefinedApproachTestingProcedures": "4.2.1.1.a Examine documented policies and procedures to verify processes are defined for the entity to maintain an inventory of its trusted keys and certificates.\n4.2.1.1.b Examine the inventory of trusted keys and certificates to verify it is kept up to date.",
    "CustomizedApproachObjective": "All keys and certificates used to protect PAN during transmission are identified and confirmed as trusted.",
    "ApplicabilityNotes": "This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.",
    "Purpose": "The inventory of trusted keys helps the entity keep track of the algorithms, protocols, key strength, key custodians, and key expiry dates. This enables the entity to respond quickly to vulnerabilities discovered in encryption software, certificates, and cryptographic algorithms.",
    "GoodPractice": "For certificates, the inventory should include the issuing CA and certification expiration date.",
    "function_names": []
  },
  {
    "RequirementID": "4.2.1.2",
    "DefinedApproachRequirements": "Wireless networks transmitting PAN or connected to the CDE use industry best practices to implement strong cryptography for authentication and transmission.",
    "DefinedApproachTestingProcedures": "4.2.1.2 Examine system configurations to verify that wireless networks transmitting PAN or connected to the CDE use industry best practices to implement strong cryptography for authentication and transmission.",
    "CustomizedApproachObjective": "Cleartext PAN cannot be read or intercepted from wireless network transmissions.",
    "Purpose": "Since wireless networks do not require physical media to connect, it is important to establish controls limiting who can connect and what transmission protocols will be used. Strong cryptography for authentication and transmission of PAN is required to prevent malicious users from gaining access to the wireless network or utilizing wireless networks to access other internal networks or data.",
    "GoodPractice": "Wireless networks should not permit fallback or downgrade to an insecure protocol or lower encryption strength that does not meet the intent of strong cryptography.",
    "FurtherInformation": "Review the vendor’s specific documentation for more details on the choice of protocols, configurations, and settings related to cryptography.",
    "function_names": []
  },
  {
    "RequirementID": "4.2.2",
    "DefinedApproachRequirements": "PAN is secured with strong cryptography whenever it is sent via end-user messaging technologies.",
    "DefinedApproachTestingProcedures": "4.2.2.a Examine documented policies and procedures to verify that processes are defined to secure PAN with strong cryptography whenever sent over end-user messaging technologies.\n4.2.2.b Examine system configurations and vendor documentation to verify that PAN is secured with strong cryptography whenever it is sent via end-user messaging technologies.",
    "CustomizedApproachObjective": "Cleartext PAN cannot be read or intercepted from transmissions using end-user messaging technologies.",
    "Purpose": "End-user messaging technologies typically can be easily intercepted by packet-sniffing during delivery across internal and public networks.",
    "GoodPractice": "The use of end-user messaging technology to send PAN should only be considered where there is a defined business need and should be controlled through the Acceptable Use Policies for end-user technologies defined by the entity according to Requirement 12.2.1.",
    "Examples": "E-mail, instant messaging, SMS, and chat are examples of the type of end-user messaging technology that this requirement refers to.",
    "ApplicabilityNotes": "This requirement also applies if a customer, or other third party, requests that PAN is sent to them via end-user messaging technologies. There could be occurrences where an entity receives unsolicited cardholder data via an insecure communication channel that was not intended for transmissions of sensitive data. In this situation, the entity can choose to either include the channel in the scope of their CDE and secure it according to PCI DSS or delete the cardholder data and implement measures to prevent the channel from being used for cardholder data.",
    "function_names": []
  },
  {
    "RequirementID": "5.1.1",
    "DefinedApproachRequirements": "All security policies and operational procedures that are identified in Requirement 5 are: • Documented. • Kept up to date. • In use. • Known to all affected parties.",
    "DefinedApproachTestingProcedures": "5.1.1 Examine documentation and interview personnel to verify that security policies and operational procedures identified in Requirement 5 are managed in accordance with all elements specified in this requirement.",
    "Purpose": "Requirement 5.1.1 is about effectively managing and maintaining the various policies and procedures specified throughout Requirement 5. While it is important to define the specific policies or procedures called out in Requirement 5, it is equally important to ensure they are properly documented, maintained, and disseminated.",
    "GoodPractice": "It is important to update policies and procedures as needed to address changes in processes, technologies, and business objectives. For this reason, consider updating these documents as soon as possible after a change occurs and not only on a periodic cycle.",
    "Definitions": "Security policies define the entity’s security objectives and principles. Operational procedures describe how to perform activities, and define the controls, methods, and processes that are followed to achieve the desired result in a consistent manner and in accordance with policy objectives.",
    "CustomizedApproachObjective": "Expectations, controls, and oversight for meeting activities within Requirement 5 are defined and adhered to by affected personnel. All supporting activities are repeatable, consistently applied, and conform to management’s intent.",
    "function_names": []
  },
  {
    "RequirementID": "5.1.2",
    "DefinedApproachRequirements": "Roles and responsibilities for performing activities in Requirement 5 are documented, assigned, and understood.",
    "DefinedApproachTestingProcedures": "5.1.2.a Examine documentation to verify that descriptions of roles and responsibilities for performing activities in Requirement 5 are documented and assigned.\n5.1.2.b Interview personnel with responsibility for performing activities in Requirement 5 to verify that roles and responsibilities are assigned as documented and are understood.",
    "Purpose": "If roles and responsibilities are not formally assigned, networks and systems may not be properly protected from malware.",
    "GoodPractice": "Roles and responsibilities may be documented within policies and procedures or maintained within separate documents. As part of communicating roles and responsibilities, entities can consider having personnel acknowledge their acceptance and understanding of their assigned roles and responsibilities.",
    "Examples": "A method to document roles and responsibilities is a responsibility assignment matrix that includes who is responsible, accountable, consulted, and informed (also called a RACI matrix).",
    "CustomizedApproachObjective": "Day-to-day responsibilities for performing all the activities in Requirement 5 are allocated. Personnel are accountable for successful, continuous operation of these requirements.",
    "function_names": []
  },
  {
    "RequirementID": "5.2.1",
    "DefinedApproachRequirements": "An anti-malware solution(s) is deployed on all system components, except for those system components identified in periodic evaluations per Requirement 5.2.3 that concludes the system components are not at risk from malware.",
    "DefinedApproachTestingProcedures": "5.2.1.a Examine system components to verify that an anti-malware solution(s) is deployed on all system components, except for those determined to not be at risk from malware based on periodic evaluations per Requirement 5.2.3.\n5.2.1.b For any system components without an anti-malware solution, examine the periodic evaluations to verify the component was evaluated and the evaluation concludes that the component is not at risk from malware.",
    "Purpose": "There is a constant stream of attacks targeting newly discovered vulnerabilities in systems previously regarded as secure. Without an anti-malware solution that is updated regularly, new forms of malware can be used to attack systems, disable a network, or compromise data.",
    "GoodPractice": "It is beneficial for entities to be aware of \"zero-day\" attacks (those that exploit a previously unknown vulnerability) and consider solutions that focus on behavioral characteristics and will alert and react to unexpected behavior.",
    "Definitions": "System components known to be affected by malware have active malware exploits available in the real world (not only theoretical exploits).",
    "CustomizedApproachObjective": "Automated mechanisms are implemented to prevent systems from becoming an attack vector for malware.",
    "function_names": []
  },
  {
    "RequirementID": "5.2.2",
    "DefinedApproachRequirements": "The deployed anti-malware solution(s): • Detects all known types of malware. • Removes, blocks, or contains all known types of malware.",
    "DefinedApproachTestingProcedures": "5.2.2 Examine vendor documentation and configurations of the anti-malware solution(s) to verify that the solution: • Detects all known types of malware. • Removes, blocks, or contains all known types of malware.",
    "Purpose": "It is important to protect against all types and forms of malware to prevent unauthorized access.",
    "GoodPractice": "Anti-malware solutions may include a combination of network-based controls, host-based controls, and endpoint security solutions. In addition to signature-based tools, capabilities used by modern anti-malware solutions include sandboxing, privilege escalation controls, and machine learning. Solution techniques include preventing malware from getting into the network and removing or containing malware that does get into the network.",
    "Examples": "Types of malware include, but are not limited to, viruses, Trojans, worms, spyware, ransomware, keyloggers, rootkits, malicious code, scripts, and links.",
    "CustomizedApproachObjective": "Malware cannot execute or infect other system components.",
    "function_names": []
  },
  {
    "RequirementID": "5.2.3",
    "Purpose": "Certain systems, at a given point in time, may not currently be commonly targeted or affected by malware. However, industry trends for malware can change quickly, so it is important for organizations to be aware of new malware that might affect their systems—for example, by monitoring vendor security notices and anti-malware forums to determine whether its systems might be coming under threat from new and evolving malware.",
    "DefinedApproachRequirements": "Any system components that are not at risk for malware are evaluated periodically to include the following: • A documented list of all system components not at risk for malware. • Identification and evaluation of evolving malware threats for those system components. • Confirmation whether such system components continue to not require anti-malware protection.",
    "DefinedApproachTestingProcedures": "5.2.3.a Examine documented policies and procedures to verify that a process is defined for periodic evaluations of any system components that are not at risk for malware that includes all elements specified in this requirement. 5.2.3.b Interview personnel to verify that the evaluations include all elements specified in this requirement. 5.2.3.c Examine the list of system components identified as not at risk of malware and compare to the system components without an anti-malware solution deployed per Requirement 5.2.1 to verify that the system components match for both requirements.",
    "GoodPractice": "If an entity determines that a particular system is not susceptible to any malware, the determination should be supported by industry evidence, vendor resources, and best practices. The following steps can help entities during their periodic evaluations: • Identification of all system types previously determined to not require malware protection. • Review of industry vulnerability alerts and notices to determine if new threats exist for any identified system. • A documented conclusion about whether the system types remain not susceptible to malware. • A strategy to add malware protection for any system types for which malware protection has become necessary. Trends in malware should be included in the identification of new security vulnerabilities at Requirement 6.3.1, and methods to address new trends should be incorporated into the entity’s configuration standards and protection mechanisms as needed.",
    "Examples": "",
    "ApplicabilityNotes": "System components covered by this requirement are those for which there is no anti-malware solution deployed per Requirement 5.2.1.",
    "Definitions": "",
    "FurtherInformation": "",
    "CustomizedApproachObjective": "The entity maintains awareness of evolving malware threats to ensure that any systems not protected from malware are not at risk of infection.",
    "function_names": []
  },
  {
    "RequirementID": "5.2.3.1",
    "Purpose": "Entities determine the optimum period to undertake the evaluation based on criteria such as the complexity of each entity’s environment and the number of types of systems that are required to be evaluated.",
    "DefinedApproachRequirements": "The frequency of periodic evaluations of system components identified as not at risk for malware is defined in the entity’s targeted risk analysis, which is performed according to all elements specified in Requirement 12.3.1.",
    "DefinedApproachTestingProcedures": "5.2.3.1.a Examine the entity’s targeted risk analysis for the frequency of periodic evaluations of system components identified as not at risk for malware to verify the risk analysis was performed in accordance with all elements specified in Requirement 12.3.1. 5.2.3.1.b Examine documented results of periodic evaluations of system components identified as not at risk for malware and interview personnel to verify that evaluations are performed at the frequency defined in the entity’s targeted risk analysis performed for this requirement.",
    "GoodPractice": "",
    "Examples": "",
    "ApplicabilityNotes": "This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.",
    "Definitions": "",
    "FurtherInformation": "",
    "CustomizedApproachObjective": "Systems not known to be at risk from malware are re-evaluated at a frequency that addresses the entity’s risk.",
    "function_names": []
  },
  {
    "RequirementID": "5.3.1",
    "Purpose": "For an anti-malware solution to remain effective, it needs to have the latest security updates, signatures, threat analysis engines, and any other malware protections on which the solution relies. Having an automated update process avoids burdening end users with responsibility for manually installing updates and provides greater assurance that anti-malware protection mechanisms are updated as quickly as possible after an update is released.",
    "DefinedApproachRequirements": "The anti-malware solution(s) is kept current via automatic updates.",
    "DefinedApproachTestingProcedures": "5.3.1.a Examine anti-malware solution(s) configurations, including any master installation of the software, to verify the solution is configured to perform automatic updates. 5.3.1.b Examine system components and logs, to verify that the anti-malware solution(s) and definitions are current and have been promptly deployed.",
    "GoodPractice": "Anti-malware mechanisms should be updated via a trusted source as soon as possible after an update is available. Using a trusted common source to distribute updates to end-user systems helps ensure the integrity and consistency of the solution architecture. Updates may be automatically downloaded to a central location—for example, to allow for testing—prior to being deployed to individual system components.",
    "Examples": "",
    "ApplicabilityNotes": "",
    "Definitions": "",
    "FurtherInformation": "",
    "CustomizedApproachObjective": "Anti-malware mechanisms can detect and address the latest malware threats.",
    "function_names": []
  },
  {
    "RequirementID": "5.3.2",
    "Purpose": "Periodic scans can identify malware that is present, but currently inactive, within the environment. Some malware, such as zero-day malware, can enter an environment before the scan solution is capable of detecting it. Performing regular periodic scans or continuous behavioral analysis of systems or processes helps ensure that previously undetectable malware can be identified, removed, and investigated to determine how it gained access to the environment.",
    "DefinedApproachRequirements": "The anti-malware solution(s): • Performs periodic scans and active or real-time scans. OR • Performs continuous behavioral analysis of systems or processes.",
    "DefinedApproachTestingProcedures": "5.3.2.a Examine anti-malware solution(s) configurations, including any master installation of the software, to verify the solution(s) is configured to perform at least one of the elements specified in this requirement. 5.3.2.b Examine system components, including all operating system types identified as at risk for malware, to verify the solution(s) is enabled in accordance with at least one of the elements specified in this requirement. 5.3.2.c Examine logs and scan results to verify that the solution(s) is enabled in accordance with at least one of the elements specified in this requirement.",
    "GoodPractice": "Using a combination of periodic scans (scheduled and on-demand) and active, real-time (on-access) scanning helps ensure that malware residing in both static and dynamic elements of the CDE is addressed. Users should also be able to run on-demand scans on their systems if suspicious activity is detected – this can be useful in the early detection of malware. Scans should include the entire file system, including all disks, memory, and start-up files and boot records (at system restart) to detect all malware upon file execution, including any software that may be resident on a system but not currently active. Scan scope should include all systems and software in the CDE, including those that are often overlooked such as email servers, web browsers, and instant messaging software.",
    "Examples": "",
    "ApplicabilityNotes": "",
    "Definitions": "Active, or real-time, scanning checks files for malware upon any attempt to open, close, rename, or otherwise interact with a file, preventing the malware from being activated.",
    "FurtherInformation": "",
    "CustomizedApproachObjective": "Malware cannot complete execution.",
    "function_names": []
  },
  {
    "RequirementID": "5.3.2.1",
    "Purpose": "Entities can determine the optimum period to undertake periodic scans based on their own assessment of the risks posed to their environments.",
    "DefinedApproachRequirements": "If periodic malware scans are performed to meet Requirement 5.3.2, the frequency of scans is defined in the entity’s targeted risk analysis, which is performed according to all elements specified in Requirement 12.3.1.",
    "DefinedApproachTestingProcedures": "5.3.2.1.a Examine the entity’s targeted risk analysis for the frequency of periodic malware scans to verify the risk analysis was performed in accordance with all elements specified in Requirement 12.3.1. 5.3.2.1.b Examine documented results of periodic malware scans and interview personnel to verify scans are performed at the frequency defined in the entity’s targeted risk analysis performed for this requirement.",
    "GoodPractice": "",
    "Examples": "",
    "ApplicabilityNotes": "This requirement applies to entities conducting periodic malware scans to meet Requirement 5.3.2. This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.",
    "Definitions": "",
    "FurtherInformation": "",
    "CustomizedApproachObjective": "Scans by the malware solution are performed at a frequency that addresses the entity’s risk.",
    "function_names": []
  },
  {
    "RequirementID": "5.3.3",
    "Purpose": "Portable media devices are often overlooked as an entry method for malware. Attackers will often pre-load malware onto portable devices such as USB and flash drives; connecting an infected device to a computer then triggers the malware, introducing new threats within the environment.",
    "DefinedApproachRequirements": "For removable electronic media, the anti-malware solution(s): • Performs automatic scans of when the media is inserted, connected, or logically mounted, OR • Performs continuous behavioral analysis of systems or processes when the media is inserted, connected, or logically mounted.",
    "DefinedApproachTestingProcedures": "5.3.3.a Examine anti-malware solution(s) configurations to verify that, for removable electronic media, the solution is configured to perform at least one of the elements specified in this requirement. 5.3.3.b Examine system components with removable electronic media connected to verify that the solution(s) is enabled in accordance with at least one of the elements as specified in this requirement. 5.3.3.c Examine logs and scan results to verify that the solution(s) is enabled in accordance with at least one of the elements specified in this requirement.",
    "GoodPractice": "",
    "Examples": "",
    "ApplicabilityNotes": "This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.",
    "Definitions": "",
    "FurtherInformation": "",
    "CustomizedApproachObjective": "Malware cannot be introduced to system components via external removable media.",
    "function_names": []
  },
  {
    "RequirementID": "5.3.4",
    "Purpose": "It is important to track the effectiveness of the anti-malware mechanisms—for example, by confirming that updates and scans are being performed as expected, and that malware is identified and addressed. Audit logs also allow an entity to determine how malware entered the environment and track its activity when inside the entity’s network.",
    "DefinedApproachRequirements": "Audit logs for the anti-malware solution(s) are enabled and retained in accordance with Requirement 10.5.1.",
    "DefinedApproachTestingProcedures": "5.3.4 Examine anti-malware solution(s) configurations to verify logs are enabled and retained in accordance with Requirement 10.5.1.",
    "GoodPractice": "",
    "Examples": "",
    "ApplicabilityNotes": "",
    "Definitions": "",
    "FurtherInformation": "",
    "CustomizedApproachObjective": "Historical records of anti-malware actions are immediately available and retained for at least 12 months.",
    "function_names": []
  },
  {
    "RequirementID": "5.3.5",
    "Purpose": "It is important that defensive mechanisms are always running so that malware is detected in real time. Ad-hoc starting and stopping of anti-malware solutions could allow malware to propagate unchecked and undetected.",
    "DefinedApproachRequirements": "Anti-malware mechanisms cannot be disabled or altered by users, unless specifically documented, and authorized by management on a case-by-case basis for a limited time period.",
    "DefinedApproachTestingProcedures": "5.3.5.a Examine anti-malware configurations, to verify that the anti-malware mechanisms cannot be disabled or altered by users. 5.3.5.b Interview responsible personnel and observe processes to verify that any requests to disable or alter anti-malware mechanisms are specifically documented and authorized by management on a case-by-case basis for a limited time period.",
    "GoodPractice": "Where there is a legitimate need to temporarily disable a system’s anti-malware protection—for example, to support a specific maintenance activity or investigation of a technical problem—the reason for taking such action should be understood and approved by an appropriate management representative. Any disabling or altering of anti-malware mechanisms, including on administrators’ own devices, should be performed by authorized personnel. It is recognized that administrators have privileges that may allow them to disable anti-malware on their own computers, but there should be alerting mechanisms in place when such software is disabled and then follow up that occurs to ensure correct processes were followed.",
    "Examples": "Additional security measures that may need to be implemented for the period during which anti-malware protection is not active include disconnecting the unprotected system from the Internet while the anti-malware protection is disabled and running a full scan once it is re-enabled.",
    "ApplicabilityNotes": "Anti-malware solutions may be temporarily disabled only if there is a legitimate technical need, as authorized by management on a case-by-case basis. If anti-malware protection needs to be disabled for a specific purpose, it must be formally authorized. Additional security measures may also need to be implemented for the period during which anti-malware protection is not active.",
    "Definitions": "",
    "FurtherInformation": "",
    "CustomizedApproachObjective": "Anti-malware mechanisms cannot be modified by unauthorized personnel.",
    "function_names": []
  },
  {
    "RequirementID": "5.4.1",
    "Purpose": "Technical controls can limit the number of occasions personnel have to evaluate the veracity of a communication and can also limit the effects of individual responses to phishing.",
    "DefinedApproachRequirements": "Processes and automated mechanisms are in place to detect and protect personnel against phishing attacks.",
    "DefinedApproachTestingProcedures": "5.4.1 Observe implemented processes and examine mechanisms to verify controls are in place to detect and protect personnel against phishing attacks.",
    "GoodPractice": "When developing anti-phishing controls, entities are encouraged to consider a combination of approaches. For example, using anti-spoofing controls such as Domain-based Message Authentication, Reporting & Conformance (DMARC), Sender Policy Framework (SPF), and Domain Keys Identified Mail (DKIM) will help stop phishers from spoofing the entity’s domain and impersonating personnel. The deployment of technologies for blocking phishing emails and malware before they reach personnel, such as link scrubbers and server-side anti-malware, can reduce incidents and decrease the time required by personnel to check and report phishing attacks. Additionally, training personnel to recognize and report phishing emails can allow similar emails to be identified and permit them to be removed before being opened. It is recommended (but not required) that anti-phishing controls are applied across an entity’s entire organization.",
    "Examples": "",
    "ApplicabilityNotes": "The focus of this requirement is on protecting personnel with access to system components in scope for PCI DSS. Meeting this requirement for technical and automated controls to detect and protect personnel against phishing is not the same as Requirement 12.6.3.1 for security awareness training. Meeting this requirement does not also meet the requirement for providing personnel with security awareness training, and vice versa. This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.",
    "Definitions": "Phishing is a form of social engineering and describes the different methods used by attackers to trick personnel into disclosing sensitive information, such as user account names and passwords, and account data. Attackers will typically disguise themselves and attempt to appear as a genuine or trusted source, directing personnel to send an email response, click on a web link, or enter data into a compromised website. Mechanisms that can detect and prevent phishing attempts are often included in anti-malware solutions.",
    "FurtherInformation": "See the following for more information about phishing: National Cyber Security Centre - Phishing Attacks: Defending your Organization. US Cybersecurity & Infrastructure Security Agency - Report Phishing Sites.",
    "CustomizedApproachObjective": "Mechanisms are in place to protect against and mitigate risk posed by phishing attacks.",
    "function_names": []
  },
  {
    "RequirementID": "6.1.1",
    "Purpose": "Requirement 6.1.1 is about effectively managing and maintaining the various policies and procedures specified throughout Requirement 6. While it is important to define the specific policies or procedures called out in Requirement 6, it is equally important to ensure they are properly documented, maintained, and disseminated.",
    "DefinedApproachRequirements": "All security policies and operational procedures that are identified in Requirement 6 are: • Documented. • Kept up to date. • In use. • Known to all affected parties.",
    "DefinedApproachTestingProcedures": "6.1.1 Examine documentation and interview personnel to verify that security policies and operational procedures identified in Requirement 6 are managed in accordance with all elements specified in this requirement.",
    "GoodPractice": "It is important to update policies and procedures as needed to address changes in processes, technologies, and business objectives. For this reason, consider updating these documents as soon as possible after a change occurs and not only on a periodic cycle.",
    "Examples": "",
    "ApplicabilityNotes": "",
    "Definitions": "Security policies define the entity’s security objectives and principles. Operational procedures describe how to perform activities, and define the controls, methods, and processes that are followed to achieve the desired result in a consistent manner and in accordance with policy objectives.",
    "FurtherInformation": "",
    "CustomizedApproachObjective": "Expectations, controls, and oversight for meeting activities within Requirement 6 are defined and adhered to by affected personnel. All supporting activities are repeatable, consistently applied, and conform to management’s intent.",
    "function_names": []
  },
  {
    "RequirementID": "6.1.2",
    "Purpose": "",
    "DefinedApproachRequirements": "Roles and responsibilities for performing activities in Requirement 6 are documented, assigned, and understood.",
    "DefinedApproachTestingProcedures": "6.1.2.a Examine documentation to verify that descriptions of roles and responsibilities for performing activities in Requirement 6 are documented and assigned. 6.1.2.b Interview personnel responsible for performing activities in Requirement 6 to verify that roles and responsibilities are assigned as documented and are understood.",
    "GoodPractice": "Roles and responsibilities may be documented within policies and procedures or maintained within separate documents. As part of communicating roles and responsibilities, entities can consider having personnel acknowledge their acceptance and understanding of their assigned roles and responsibilities.",
    "Examples": "A method to document roles and responsibilities is a responsibility assignment matrix that includes who is responsible, accountable, consulted, and informed (also called a RACI matrix).",
    "ApplicabilityNotes": "If roles and responsibilities are not formally assigned, systems will not be securely maintained, and their security level will be reduced.",
    "Definitions": "",
    "FurtherInformation": "",
    "CustomizedApproachObjective": "Day-to-day responsibilities for performing all the activities in Requirement 6 are allocated. Personnel are accountable for successful, continuous operation of these requirements.",
    "function_names": []
  },
  {
    "RequirementID": "6.2.1",
    "Purpose": "Without the inclusion of security during the requirements definition, design, analysis, and testing phases of software development, security vulnerabilities can be inadvertently or maliciously introduced into the production environment.",
    "DefinedApproachRequirements": "Bespoke and custom software are developed securely, as follows: • Based on industry standards and/or best practices for secure development. • In accordance with PCI DSS (for example, secure authentication and logging). • Incorporating consideration of information security issues during each stage of the software development lifecycle.",
    "DefinedApproachTestingProcedures": "6.2.1 Examine documented software development procedures to verify that processes are defined that include all elements specified in this requirement.",
    "GoodPractice": "Understanding how sensitive data is handled by the application—including when stored, transmitted, and in memory—can help identify where data needs to be protected. PCI DSS requirements must be considered when developing software to meet those requirements by design, rather than trying to retrofit the software later.",
    "Examples": "Secure software lifecycle management methodologies and frameworks include PCI Software Security Framework, BSIMM, OPENSAMM, and works from NIST, ISO, and SAFECode.",
    "ApplicabilityNotes": "This applies to all software developed for or by the entity for the entity’s own use. This includes both bespoke and custom software. This does not apply to third-party software.",
    "Definitions": "",
    "FurtherInformation": "",
    "CustomizedApproachObjective": "Bespoke and custom software is developed in accordance with PCI DSS and secure development processes throughout the software lifecycle.",
    "function_names": []
  },
  {
    "RequirementID": "6.2.2",
    "Purpose": "Having staff knowledgeable in secure coding methods, including techniques defined in Requirement 6.2.4, will help minimize the number of security vulnerabilities introduced through poor coding practices.",
    "DefinedApproachRequirements": "Software development personnel working on bespoke and custom software are trained at least once every 12 months as follows: • On software security relevant to their job function and development languages. • Including secure software design and secure coding techniques. • Including, if security testing tools are used, how to use the tools for detecting vulnerabilities in software.",
    "DefinedApproachTestingProcedures": "6.2.2.a Examine software development procedures to verify that processes are defined for training of software development personnel developing bespoke and custom software that includes all elements specified in this requirement. 6.2.2.b Examine training records and interview personnel to verify that software development personnel working on bespoke and custom software received software security training that is relevant to their job function and development languages in accordance with all elements specified in this requirement.",
    "GoodPractice": "Training for developers may be provided in-house or by third parties. Training should include, but is not limited to, development languages in use, secure software design, secure coding techniques, use of techniques/methods for finding vulnerabilities in code, processes to prevent reintroducing previously resolved vulnerabilities, and how to use any automated security testing tools for detecting vulnerabilities in software. As industry-accepted secure coding practices change, organizational coding practices and developer training may need to be updated to address new threats.",
    "Examples": "",
    "ApplicabilityNotes": "",
    "Definitions": "",
    "FurtherInformation": "",
    "CustomizedApproachObjective": "Software development personnel remain knowledgeable about secure development practices; software security; and attacks against the languages, frameworks, or applications they develop. Personnel are able to access assistance and guidance when required.",
    "function_names": []
  },
  {
    "RequirementID": "6.2.3",
    "Purpose": "Security vulnerabilities in bespoke and custom software are commonly exploited by malicious individuals to gain access to a network and compromise account data. Vulnerable code is far more difficult and expensive to address after it has been deployed or released into production environments. Requiring a formal review and signoff by management prior to release helps to ensure that code is approved and has been developed in accordance with policies and procedures.",
    "DefinedApproachRequirements": "Bespoke and custom software is reviewed prior to being released into production or to customers, to identify and correct potential coding vulnerabilities, as follows: • Code reviews ensure code is developed according to secure coding guidelines. • Code reviews look for both existing and emerging software vulnerabilities. • Appropriate corrections are implemented prior to release.",
    "DefinedApproachTestingProcedures": "6.2.3.a Examine documented software development procedures and interview responsible personnel to verify that processes are defined that require all bespoke and custom software to be reviewed in accordance with all elements specified in this requirement. 6.2.3.b Examine evidence of changes to bespoke and custom software to verify that the code changes were reviewed in accordance with all elements specified in this requirement.",
    "GoodPractice": "The following items should be considered for inclusion in code reviews: • Searching for undocumented features (implant tools, backdoors). • Confirming that software securely uses external components’ functions (libraries, frameworks, APIs, etc.). For example, if a third-party library providing cryptographic functions is used, verify that it was integrated securely. • Checking for correct use of logging to prevent sensitive data from getting into logs. • Analysis of insecure code structures that may contain potential vulnerabilities related to common software attacks identified in Requirement 6.2.4. • Checking the application’s behavior to detect logical vulnerabilities.",
    "Examples": "",
    "ApplicabilityNotes": "This requirement for code reviews applies to all bespoke and custom software (both internal and public facing), as part of the system development lifecycle. Public-facing web applications are also subject to additional controls, to address ongoing threats and vulnerabilities after implementation, as defined at PCI DSS Requirement 6.4. Code reviews may be performed using either manual or automated processes, or a combination of both.",
    "Definitions": "",
    "FurtherInformation": "",
    "CustomizedApproachObjective": "Bespoke and custom software cannot be exploited via coding vulnerabilities.",
    "function_names": []
  },
  {
    "RequirementID": "6.2.3.1",
    "DefinedApproachRequirements": "If manual code reviews are performed for bespoke and custom software prior to release to production, code changes are:\n• Reviewed by individuals other than the originating code author, and who are knowledgeable about code-review techniques and secure coding practices.\n• Reviewed and approved by management prior to release.",
    "DefinedApproachTestingProcedures": "6.2.3.1.a If manual code reviews are performed for bespoke and custom software prior to release to production, examine documented software development procedures and interview responsible personnel to verify that processes are defined for manual code reviews to be conducted in accordance with all elements specified in this requirement.\n6.2.3.1.b Examine evidence of changes to bespoke and custom software and interview personnel to verify that manual code reviews were conducted in accordance with all elements specified in this requirement.",
    "Purpose": "Having code reviewed by someone other than the original author, who is both experienced in code reviews and knowledgeable about secure coding practices, minimizes the possibility that code containing security or logic errors that could affect the security of cardholder data is released into a production environment. Requiring management approval that the code was reviewed limits the ability for the process to be bypassed.",
    "GoodPractice": "Having a formal review methodology and review checklists has been found to improve the quality of the code review process.\nCode review is a tiring process, and for this reason, it is most effective when reviewers only review small amounts of code at a time.\nTo maintain the effectiveness of code reviews, it is beneficial to monitor the general workload of reviewers and to have them review applications they are familiar with.\nCode reviews may be performed using either manual or automated processes, or a combination of both.\nEntities that rely solely on manual code review should ensure that reviewers maintain their skills through regular training as new vulnerabilities are found, and new secure coding methods are recommended.",
    "FurtherInformation": "See the OWASP Code Review Guide.",
    "CustomizedApproachObjective": "The manual code review process cannot be bypassed and is effective at discovering security vulnerabilities.",
    "ApplicabilityNotes": "Manual code reviews can be conducted by knowledgeable internal personnel or knowledgeable third-party personnel.\nAn individual that has been formally granted accountability for release control and who is neither the original code author nor the code reviewer fulfills the criteria of being management.",
    "Examples": "",
    "function_names": []
  },
  {
    "RequirementID": "6.2.4",
    "DefinedApproachRequirements": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following:\n• Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws.\n• Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data.\n• Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation.\n• Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF).\n• Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms.\n• Attacks via any “high-risk” vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.",
    "DefinedApproachTestingProcedures": "Examine documented procedures and interview responsible software development personnel to verify that software engineering techniques or other methods are defined and in use by developers of bespoke and custom software to prevent or mitigate all common software attacks as specified in this requirement.",
    "Purpose": "Detecting or preventing common errors that result in vulnerable code as early as possible in the software development process lowers the probability that such errors make it through to production and lead to a compromise. Having formal engineering techniques and tools embedded in the development process will catch these errors early. This philosophy is sometimes called “shifting security left.”",
    "GoodPractice": "For both bespoke and custom software, the entity must ensure that code is developed focusing on the prevention or mitigation of common software attacks, including:\n• Attempts to exploit common coding vulnerabilities (bugs).\n• Attempts to exploit software design flaws.\n• Attempts to exploit implementation/configuration flaws.\n• Enumeration attacks – automated attacks that are actively exploited in payments and abuse identification, authentication, or authorization mechanisms. See the PCI Perspectives blog article “Beware of Account Testing Attacks.”",
    "FurtherInformation": "",
    "CustomizedApproachObjective": "Researching and documenting software engineering techniques or other methods helps to define how software developers prevent or mitigate various software attacks by features or countermeasures they build into software. This might include identification/authentication mechanisms, access control, input validation routines, etc. Developers should be familiar with different types of vulnerabilities and potential attacks and use measures to avoid potential attack vectors when developing code.",
    "ApplicabilityNotes": "This applies to all software developed for or by the entity for the entity’s own use. This includes both bespoke and custom software. This does not apply to third-party software.",
    "Examples": "Techniques include automated processes and practices that scan code early in the development cycle when code is checked in to confirm the vulnerabilities are not present.\nBespoke and custom software cannot be exploited via common attacks and related vulnerabilities.",
    "function_names": []
  },
  {
    "RequirementID": "6.3.1",
    "DefinedApproachRequirements": "Security vulnerabilities are identified and managed as follows:\n• New security vulnerabilities are identified using industry-recognized sources for security vulnerability information, including alerts from international and national computer emergency response teams (CERTs).\n• Vulnerabilities are assigned a risk ranking based on industry best practices and consideration of potential impact.\n• Risk rankings identify, at a minimum, all vulnerabilities considered to be a high-risk or critical to the environment.\n• Vulnerabilities for bespoke and custom, and third-party software (for example operating systems and databases) are covered.",
    "DefinedApproachTestingProcedures": "6.3.1.a Examine policies and procedures for identifying and managing security vulnerabilities to verify that processes are defined in accordance with all elements specified in this requirement.\n6.3.1.b Interview responsible personnel, examine documentation, and observe processes to verify that security vulnerabilities are identified and managed in accordance with all elements specified in this requirement.",
    "Purpose": "Classifying the risks (for example, as critical, high, medium, or low) allows organizations to identify, prioritize, and address the highest risk items more quickly and reduce the likelihood that vulnerabilities posing the greatest risk will be exploited.",
    "GoodPractice": "Methods for evaluating vulnerabilities and assigning risk ratings will vary based on an organization’s environment and risk-assessment strategy.\nWhen an entity is assigning its risk rankings, it should consider using a formal, objective, justifiable methodology that accurately portrays the risks of the vulnerabilities pertinent to the organization and translates to an appropriate entity-assigned priority for resolution.\nRisk rankings should, at a minimum, identify all vulnerabilities considered to be a “high risk” to the environment. In addition to the risk ranking, vulnerabilities may be considered “critical” if they pose an imminent threat to the environment, impact critical systems, and/or would result in a potential compromise if not addressed. Examples of critical systems may include security systems, public-facing devices and systems, databases, and other systems that store, process, or transmit cardholder data.",
    "CustomizedApproachObjective": "New system and software vulnerabilities that may impact the security of cardholder data and/or sensitive authentication data are monitored, cataloged, and risk assessed.",
    "ApplicabilityNotes": "An organization’s processes for managing vulnerabilities should be integrated with other management processes—for example, risk management, change management, patch management, incident response, application security, as well as proper monitoring and logging of these processes. This process should include multiple sources of vulnerability information, including industry-recognized vulnerability databases (for example, the US National Vulnerability Database), CERTs, RSS feeds, information received from vendors and third parties, and vulnerabilities identified via internal and external vulnerability scans (Requirements 11.3.1 and 11.3.2). This will help to ensure all vulnerabilities are properly identified and addressed.\nProcesses should support ongoing evaluation of vulnerabilities. For example, a vulnerability initially identified as low risk could become a higher risk later. Additionally, vulnerabilities individually considered to be low or medium risk, could collectively pose a high or critical risk if present on the same system, or if exploited on a low-risk system that could result in access to the CDE.\nThis requirement is not achieved by, and is in addition to, performing vulnerability scans according to Requirements 11.3.1 and 11.3.2. This requirement is for a process to actively monitor industry sources for vulnerability information and for the entity to determine the risk ranking to be associated with each vulnerability.",
    "Examples": "Some organizations that issue alerts to advise entities about urgent vulnerabilities requiring immediate patches/updates are national Computer Emergency Readiness/Response Teams (CERTs) and vendors.\nCriteria for ranking vulnerabilities may include criticality of a vulnerability identified in an alert from Forum of Incident Response and Security Teams (FIRST) or a CERT, consideration of the CVSS score, the classification by the vendor, and/or type of systems affected.",
    "FurtherInformation": "Trustworthy sources for vulnerability information include vendor websites, industry newsgroups, mailing lists, etc. If software is developed in-house, the internal development team should also consider sources of information about new vulnerabilities that may affect internally developed applications. Other methods to ensure new vulnerabilities are identified include solutions that automatically recognize and alert upon detection of unusual behavior. Processes should account for widely published exploits as well as “zero-day” attacks, which target previously unknown vulnerabilities.\nFor bespoke and custom software, the organization may obtain information about libraries, frameworks, compilers, programming languages, etc. from public trusted sources (for example, special resources and resources from component developers). The organization may also independently analyze third-party components and identify vulnerabilities.\nFor control over in-house developed software, the organization may receive such information from external sources. The organization can consider using a “bug bounty” program where it posts information (for example, on its website) so third parties can contact the organization with vulnerability information. External sources may include independent investigators or companies that report to the organization about identified vulnerabilities and may include sources such as the Common Vulnerability Scoring System (CVSS) or the OWASP Risk Rating Methodology.",
    "function_names": []
  },
  {
    "RequirementID": "6.3.2",
    "DefinedApproachRequirements": "An inventory of bespoke and custom software, and third-party software components incorporated into bespoke and custom software is maintained to facilitate vulnerability and patch management.",
    "DefinedApproachTestingProcedures": "6.3.2.a Examine documentation and interview personnel to verify that an inventory of bespoke and custom software and third-party software components incorporated into bespoke and custom software is maintained, and that the inventory is used to identify and address vulnerabilities.\n6.3.2.b Examine software documentation, including for bespoke and custom software that integrates third-party software components, and compare it to the inventory to verify that the inventory includes the bespoke and custom software and third-party software components.",
    "Purpose": "Identifying and listing all the entity’s bespoke and custom software, and any third-party software that is incorporated into the entity’s bespoke and custom software enables the entity to manage vulnerabilities and patches.\nVulnerabilities in third-party components (including libraries, APIs, etc.) embedded in an entity’s software also renders those applications vulnerable to attacks.\nKnowing which third-party components are used in the entity’s software and monitoring the availability of security patches to address known vulnerabilities is critical to ensuring the security of the software.",
    "GoodPractice": "An entity’s inventory should cover all payment software components and dependencies, including supported execution platforms or environments, third-party libraries, services, and other required functionalities.\nThere are many different types of solutions that can help with managing software inventories, such as software composition analysis tools, application discovery tools, and mobile device management.",
    "CustomizedApproachObjective": "Known vulnerabilities in third-party software components cannot be exploited in bespoke and custom software.",
    "ApplicabilityNotes": "This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.",
    "Examples": "",
    "FurtherInformation": "",
    "function_names": []
  },
  {
    "RequirementID": "6.3.3",
    "DefinedApproachRequirements": "All system components are protected from known vulnerabilities by installing applicable security patches/updates as follows:\n• Patches/updates for critical vulnerabilities (identified according to the risk ranking process at Requirement 6.3.1) are installed within one month of release.\n• All other applicable security patches/updates are installed within an appropriate time frame as determined by the entity’s assessment of the criticality of the risk to the environment as identified according to the risk ranking process at Requirement 6.3.1.",
    "DefinedApproachTestingProcedures": "6.3.3.a Examine policies and procedures to verify processes are defined for addressing vulnerabilities by installing applicable security patches/updates in accordance with all elements specified in this requirement.\n6.3.3.b Examine system components and related software and compare the list of installed security patches/updates to the most recent security patch/update information to verify vulnerabilities are addressed in accordance with all elements specified in this requirement.",
    "Purpose": "New exploits are constantly being discovered, and these can permit attacks against systems that have previously been considered secure. If the most recent security patches/updates are not implemented on critical systems as soon as possible, a malicious actor can use these exploits to attack or disable a system or gain access to sensitive data.",
    "GoodPractice": "Prioritizing security patches/updates for critical infrastructure ensures that high-priority systems and devices are protected from vulnerabilities as soon as possible after a patch is released.\nAn entity’s patching cadence should factor in any re-evaluation of vulnerabilities and subsequent changes in the criticality of a vulnerability per Requirement 6.3.1. For example, a vulnerability initially identified as low risk could become a higher risk later. Additionally, vulnerabilities individually considered to be low or medium risk could collectively pose a high or critical risk if present on the same system, or if exploited on a low-risk system that could result in access to the CDE.",
    "CustomizedApproachObjective": "System components cannot be compromised via the exploitation of a known vulnerability.",
    "ApplicabilityNotes": "It is recommended that the entity complete a targeted risk analysis (TRA) according to PCI DSS Requirement 12.3.1 to document the frequency of installing all other applicable security patches/updates. This TRA would include consideration of the entity’s assessment of the criticality of the risk to their environment as identified in the risk ranking process at Requirement 6.3.1.",
    "Examples": "An example time frame for installation of patches/updates could be 60 days for high-risk vulnerabilities and 90 days for others, as determined by the entity’s assessment of risk.",
    "FurtherInformation": "",
    "function_names": []
  },
  {
    "RequirementID": "6.4.1",
    "DefinedApproachRequirements": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows:\n• Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows:\n  – At least once every 12 months and after significant changes.\n  – By an entity that specializes in application security.\n  – Including, at a minimum, all common software attacks in Requirement 6.2.4.\n  – All vulnerabilities are ranked in accordance with requirement 6.3.1.\n  – All vulnerabilities are corrected.\n  – The application is re-evaluated after the corrections.\nOR\n• Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows:\n  – Installed in front of public-facing web applications to detect and prevent web-based attacks.\n  – Actively running and up to date as applicable.\n  – Generating audit logs.\n  – Configured to either block web-based attacks or generate an alert that is immediately investigated.",
    "DefinedApproachTestingProcedures": "For public-facing web applications, ensure that either one of the required methods is in place as follows:\n• If manual or automated vulnerability security assessment tools or methods are in use, examine documented processes, interview personnel, and examine records of application security assessments to verify that public-facing web applications are reviewed in accordance with all elements of this requirement specific to the tool/method.\nOR\n• If an automated technical solution(s) is installed that continually detects and prevents web-based attacks, examine the system configuration settings and audit logs, and interview responsible personnel to verify that the automated technical solution(s) is installed in accordance with all elements of this requirement specific to the solution(s).",
    "Purpose": "Public-facing web applications are those that are available to the public (not only for internal use). These applications are primary targets for attackers, and poorly coded web applications provide an easy path for attackers to gain access to sensitive data and systems.",
    "GoodPractice": "Manual or automated vulnerability security assessment tools or methods review and/or test the application for vulnerabilities.\nCommon assessment tools include specialized web scanners that perform automatic analysis of web application protection.\nWhen using automated technical solutions, it is important to include processes that facilitate timely responses to alerts generated by the solutions so that any detected attacks can be mitigated.",
    "CustomizedApproachObjective": "Public-facing web applications are protected against malicious attacks.",
    "ApplicabilityNotes": "Another example of an automated technical solution is Runtime Application Self-Protection (RASP) technologies. When implemented correctly, RASP solutions can detect and block anomalous behavior by the software during execution. While WAFs typically monitor the application perimeter, RASP solutions monitor and block behavior within the application.\nThis assessment is not the same as the vulnerability scans performed for Requirement 11.3.1 and 11.3.2.\nThis requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.",
    "Examples": "A web application firewall (WAF) installed in front of public-facing web applications to check all traffic is an example of an automated technical solution that detects and prevents web-based attacks (for example, the attacks included in Requirement 6.2.4).\nWAFs filter and block non-essential traffic at the application layer. A properly configured WAF helps to prevent application-layer attacks on applications that are improperly coded or configured.",
    "FurtherInformation": "",
    "function_names": []
  },
  {
    "RequirementID": "6.4.2",
    "DefinedApproachRequirements": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following:\n• Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks.\n• Actively running and up to date as applicable.\n• Generating audit logs.\n• Configured to either block web-based attacks or generate an alert that is immediately investigated.",
    "DefinedApproachTestingProcedures": "For public-facing web applications, examine the system configuration settings and audit logs, and interview responsible personnel to verify that an automated technical solution that detects and prevents web-based attacks is in place in accordance with all elements specified in this requirement.",
    "Purpose": "Public-facing web applications are primary targets for attackers, and poorly coded web applications provide an easy path for attackers to gain access to sensitive data and systems.",
    "GoodPractice": "When using automated technical solutions, it is important to include processes that facilitate timely responses to alerts generated by the solutions so that any detected attacks can be mitigated. Such solutions may also be used to automate mitigation, for example rate-limiting controls, which can be implemented to mitigate against brute-force attacks and enumeration attacks.",
    "Examples": "A web application firewall (WAF), which can be either on-premise or cloud-based, installed in front of public-facing web applications to check all traffic, is an example of an automated technical solution that detects and prevents web-based attacks (for example, the attacks included in Requirement 6.2.4).\nWAFs filter and block non-essential traffic at the application layer. A properly configured WAF helps to prevent application-layer attacks on applications that are improperly coded or configured.",
    "ApplicabilityNotes": "This new requirement will replace Requirement 6.4.1 once its effective date is reached.\nThis requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.",
    "CustomizedApproachObjective": "Public-facing web applications are protected in real time against malicious attacks.",
    "FurtherInformation": "",
    "function_names": []
  },
  {
    "RequirementID": "6.4.3",
    "DefinedApproachRequirements": "All payment page scripts that are loaded and executed in the consumer’s browser are managed as follows:\n• A method is implemented to confirm that each script is authorized.\n• A method is implemented to assure the integrity of each script.\n• An inventory of all scripts is maintained with written business or technical justification as to why each is necessary.",
    "DefinedApproachTestingProcedures": "6.4.3.a Examine policies and procedures to verify that processes are defined for managing all payment page scripts that are loaded and executed in the consumer’s browser, in accordance with all elements specified in this requirement.\n6.4.3.b Interview responsible personnel and examine inventory records and system configurations to verify that all payment page scripts that are loaded and executed in the consumer’s browser are managed in accordance with all elements specified in this requirement.",
    "Purpose": "Scripts loaded and executed in the payment page can have their functionality altered without the entity’s knowledge and can also have the functionality to load additional external scripts (for example, advertising and tracking, tag management systems).\nSuch seemingly harmless scripts can be used by potential attackers to upload malicious scripts that can read and exfiltrate cardholder data from the consumer browser.\nEnsuring that the functionality of all such scripts is understood to be necessary for the operation of the payment page minimizes the number of scripts that could be tampered with.\nEnsuring that scripts have been explicitly authorized reduces the probability of unnecessary scripts being added to the payment page without appropriate management approval. Where it is impractical for such authorization to occur before a script is changed or a new script is added to the page, the authorization should be confirmed as soon as possible after a change is made.\nUsing techniques to prevent tampering with the script will minimize the probability of the script being modified to carry out unauthorized behavior, such as skimming the cardholder data from the payment page.",
    "GoodPractice": "Scripts may be authorized by manual or automated (e.g., workflow) processes.\nWhere the payment page will be loaded into an inline frame (iframe), restricting the location that the payment page can be loaded from, using the parent page’s Content Security Policy (CSP) can help prevent unauthorized content being substituted for the payment page.\nWhere an entity includes a TPSP’s/payment processor’s embedded payment page/form on its webpage, the entity should expect the TPSP/payment processor to provide evidence that the TPSP/payment processor is meeting this requirement, in accordance with the TPSP’s/payment processor’s PCI DSS assessment and Requirement 12.9.",
    "Examples": "The integrity of scripts can be enforced by several different mechanisms including, but not limited to:\n• Sub-resource integrity (SRI), which allows the consumer browser to validate that a script has not been tampered with.\n• A CSP, which limits the locations the consumer browser can load a script from and transmit account data to.\n• Proprietary script or tag-management systems, which can prevent malicious script execution.",
    "ApplicabilityNotes": "This requirement applies to all scripts loaded from the entity’s environment and scripts loaded from third and fourth parties.\nThis requirement also applies to scripts in the entity’s webpage(s) that includes a TPSP’s/payment processor’s embedded payment page/form (for example, one or more inline frames or iframes).\nThis requirement does not apply to an entity for scripts in a TPSP’s/payment processor’s embedded payment page/form (for example, one or more iframes), where the entity includes a TPSP’s/payment processor’s payment page/form on its webpage.\nScripts in the TPSP’s/payment processor’s embedded payment page/form are the responsibility of the TPSP/payment processor to manage in accordance with this requirement.\nThis requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.",
    "CustomizedApproachObjective": "Unauthorized code cannot be executed in the payment page as it is rendered in the consumer’s browser.",
    "FurtherInformation": "",
    "function_names": []
  },
  {
    "RequirementID": "6.5.1",
    "DefinedApproachRequirements": "Changes to all system components in the production environment are made according to established procedures that include:\n• Reason for, and description of, the change.\n• Documentation of security impact.\n• Documented change approval by authorized parties.\n• Testing to verify that the change does not adversely impact system security.\n• For bespoke and custom software changes, all updates are tested for compliance with Requirement 6.2.4 before being deployed into production.\n• Procedures to address failures and return to a secure state.",
    "DefinedApproachTestingProcedures": "6.5.1.a Examine documented change control procedures to verify procedures are defined for changes to all system components in the production environment to include all elements specified in this requirement.\n6.5.1.b Examine recent changes to system components and trace those changes back to related change control documentation. For each change examined, verify the change is implemented in accordance with all elements specified in this requirement.",
    "Purpose": "Change management procedures must be applied to all changes—including the addition, removal, or modification of any system component—in the production environment. It is important to document the reason for a change and the change description so that relevant parties understand and agree the change is needed. Likewise, documenting the impacts of the change allows all affected parties to plan appropriately for any processing changes.",
    "GoodPractice": "Approval by authorized parties confirms that the change is legitimate and that the change is sanctioned by the organization. Changes should be approved by individuals with the appropriate authority and knowledge to understand the impact of the change.\nThorough testing by the entity confirms that the security of the environment is not reduced by implementing a change and that all existing security controls either remain in place or are replaced with equal or stronger security controls after the change. The specific testing to be performed will vary according to the type of change and system component(s) affected.\nFor each change, it is important to have documented procedures that address any failures and provide instructions on how to return to a secure state in case the change fails or adversely affects the security of an application or system. These procedures will allow the application or system to be restored to its previous secure state.",
    "Examples": "",
    "ApplicabilityNotes": "",
    "CustomizedApproachObjective": "All changes are tracked, authorized, and evaluated for impact and security, and changes are managed to avoid unintended effects to the security of system components.",
    "FurtherInformation": "",
    "function_names": []
  },
  {
    "RequirementID": "6.5.2",
    "Purpose": "Having processes to analyze significant changes helps ensure that all appropriate PCI DSS controls are applied to any systems or networks added or changed within the in-scope environment, and that PCI DSS requirements continue to be met to secure the environment.",
    "DefinedApproachRequirements": "6.5.2 Upon completion of a significant change, all applicable PCI DSS requirements are confirmed to be in place on all new or changed systems and networks, and documentation is updated as applicable.",
    "DefinedApproachTestingProcedures": "6.5.2 Examine documentation for significant changes, interview personnel, and observe the affected systems/networks to verify that the entity confirmed applicable PCI DSS requirements were in place on all new or changed systems and networks and that documentation was updated as applicable.",
    "GoodPractice": "Building this validation into change management processes helps ensure that device inventories and configuration standards are kept up to date and security controls are applied where needed.",
    "Examples": "Applicable PCI DSS requirements that could be impacted include, but are not limited to:\n• Network and data-flow diagrams are updated to reflect changes.\n• Systems are configured per configuration standards, with all default passwords changed and unnecessary services disabled.\n• Systems are protected with required controls—for example, file integrity monitoring (FIM), anti-malware, patches, and audit logging.\n• Sensitive authentication data is not stored, and all account data storage is documented and incorporated into data retention policy and procedures.\n• New systems are included in the quarterly vulnerability scanning process.\n• Systems are scanned for internal and external vulnerabilities after significant changes per Requirements 11.3.1.3 and 11.3.2.1.",
    "ApplicabilityNotes": "These significant changes should also be captured and reflected in the entity’s annual PCI DSS scope confirmation activity per Requirement 12.5.2.",
    "Definitions": "",
    "FurtherInformation": "",
    "CustomizedApproachObjective": "All system components are verified after a significant change to be compliant with the applicable PCI DSS requirements.",
    "function_names": []
  },
  {
    "RequirementID": "6.5.3",
    "Purpose": "Due to the constantly changing state of pre-production environments, they are often less secure than the production environment.",
    "DefinedApproachRequirements": "6.5.3 Pre-production environments are separated from production environments and the separation is enforced with access controls.",
    "DefinedApproachTestingProcedures": "6.5.3.a Examine policies and procedures to verify that processes are defined for separating the pre-production environment from the production environment via access controls that enforce the separation.\n6.5.3.b Examine network documentation and configurations of network security controls to verify that the pre-production environment is separate from the production environment(s).\n6.5.3.c Examine access control settings to verify that access controls are in place to enforce separation between the pre-production and production environment(s).",
    "GoodPractice": "Organizations must clearly understand which environments are test environments or development environments and how these environments interact on the level of networks and applications.",
    "Examples": "",
    "ApplicabilityNotes": "",
    "Definitions": "Pre-production environments include development, testing, user acceptance testing (UAT), etc. Even where production infrastructure is used to facilitate testing or development, production environments still need to be separated (logically or physically) from pre-production functionality such that vulnerabilities introduced as a result of pre-production activities do not adversely affect production systems.",
    "FurtherInformation": "",
    "CustomizedApproachObjective": "Pre-production environments cannot introduce risks and vulnerabilities into production environments.",
    "function_names": []
  },
  {
    "RequirementID": "6.5.4",
    "Purpose": "The goal of separating roles and functions between production and pre-production environments is to reduce the number of personnel with access to the production environment and account data and thereby minimize risk of unauthorized, unintentional, or inappropriate access to data and system components and help ensure that access is limited to those individuals with a business need for such access.\nThe intent of this control is to separate critical activities to provide oversight and review to catch errors and minimize the chances of fraud or theft (since two people would need to collude in order to hide an activity).\nSeparating roles and functions, also referred to as separation or segregation of duties, is a key internal control concept to protect an entity’s assets.",
    "DefinedApproachRequirements": "6.5.4 Roles and functions are separated between production and pre-production environments to provide accountability such that only reviewed and approved changes are deployed.",
    "DefinedApproachTestingProcedures": "6.5.4.a Examine policies and procedures to verify that processes are defined for separating roles and functions to provide accountability such that only reviewed and approved changes are deployed.\n6.5.4.b Observe processes and interview personnel to verify implemented controls separate roles and functions and provide accountability such that only reviewed and approved changes are deployed.",
    "GoodPractice": "",
    "Examples": "",
    "ApplicabilityNotes": "In environments with limited personnel where individuals perform multiple roles or functions, this same goal can be achieved with additional procedural controls that provide accountability. For example, a developer may also be an administrator that uses an administrator-level account with elevated privileges in the development environment and, for their developer role, they use a separate account with user-level access to the production environment.",
    "Definitions": "",
    "FurtherInformation": "",
    "CustomizedApproachObjective": "Job roles and accountability that differentiate between pre-production and production activities are defined and managed to minimize the risk of unauthorized, unintentional, or inappropriate actions.",
    "function_names": []
  },
  {
    "RequirementID": "6.5.5",
    "Purpose": "Use of live PANs outside of protected CDEs provides malicious individuals with the opportunity to gain unauthorized access to cardholder data.",
    "DefinedApproachRequirements": "6.5.5 Live PANs are not used in pre-production environments, except where those environments are included in the CDE and protected in accordance with all applicable PCI DSS requirements.",
    "DefinedApproachTestingProcedures": "6.5.5.a Examine policies and procedures to verify that processes are defined for not using live PANs in pre-production environments, except where those environments are in a CDE and protected in accordance with all applicable PCI DSS requirements.\n6.5.5.b Observe testing processes and interview personnel to verify procedures are in place to ensure live PANs are not used in pre-production environments, except where those environments are in a CDE and protected in accordance with all applicable PCI DSS requirements.\n6.5.5.c Examine pre-production test data to verify live PANs are not used in pre-production environments, except where those environments are in a CDE and protected in accordance with all applicable PCI DSS requirements.",
    "GoodPractice": "",
    "Examples": "",
    "ApplicabilityNotes": "",
    "Definitions": "Live PANs refer to valid PANs (not test PANs) issued by, or on behalf of, a payment brand. Additionally, when payment cards expire, the same PAN is often reused with a different expiry date. All PANs must be verified as being unable to conduct payment transactions or pose fraud risk to the payment system before they are excluded from PCI DSS scope. It is the responsibility of the entity to confirm that PANs are not live.",
    "FurtherInformation": "",
    "CustomizedApproachObjective": "Live PANs cannot be present in pre-production environments outside the CDE.",
    "function_names": []
  },
  {
    "RequirementID": "6.5.6",
    "Purpose": "This data may give away information about the functioning of an application or system and is an easy target for unauthorized individuals to exploit to gain access to systems. Possession of such information could facilitate compromise of the system and related account data.",
    "DefinedApproachRequirements": "Test data and test accounts are removed from system components before the system goes into production.",
    "DefinedApproachTestingProcedures": "6.5.6.a Examine policies and procedures to verify that processes are defined for removal of test data and test accounts from system components before the system goes into production.\n6.5.6.b Observe testing processes for both off-the-shelf software and in-house applications, and interview personnel to verify test data and test accounts are removed before a system goes into production.\n6.5.6.c Examine data and accounts for recently installed or updated off-the-shelf software and in-house applications to verify there is no test data or test accounts on systems in production.",
    "GoodPractice": "",
    "Examples": "",
    "ApplicabilityNotes": "",
    "Definitions": "",
    "FurtherInformation": "",
    "CustomizedApproachObjective": "Test data and test accounts cannot exist in production environments.",
    "function_names": []
  },
  {
    "RequirementID": "7.1.1",
    "DefinedApproachRequirements": "All security policies and operational procedures that are identified in Requirement 7 are:\n• Documented.\n• Kept up to date.\n• In use.\n• Known to all affected parties.",
    "DefinedApproachTestingProcedures": "Examine documentation and interview personnel to verify that security policies and operational procedures identified in Requirement 7 are managed in accordance with all elements specified in this requirement.",
    "Purpose": "Processes and mechanisms for restricting access to system components and cardholder data by business need to know are defined and understood.",
    "GoodPractice": "It is important to update policies and procedures as needed to address changes in processes, technologies, and business objectives. For this reason, consider updating these documents as soon as possible after a change occurs and not only on a periodic cycle.",
    "Definitions": "Security policies define the entity’s security objectives and principles. Operational procedures describe how to perform activities, and define the controls, methods, and processes that are followed to achieve the desired result in a consistent manner and in accordance with policy objectives.",
    "CustomizedApproachObjective": "Expectations, controls, and oversight for meeting activities within Requirement 7 are defined and adhered to by affected personnel. All supporting activities are repeatable, consistently applied, and conform to management’s intent.",
    "function_names": []
  },
  {
    "RequirementID": "7.1.2",
    "DefinedApproachRequirements": "Roles and responsibilities for performing activities in Requirement 7 are documented, assigned, and understood.",
    "DefinedApproachTestingProcedures": "7.1.2.a Examine documentation to verify that descriptions of roles and responsibilities for performing activities in Requirement 7 are documented and assigned.\n7.1.2.b Interview personnel with responsibility for performing activities in Requirement 7 to verify that roles and responsibilities are assigned as and are understood.",
    "Purpose": "If roles and responsibilities are not formally assigned, personnel may not be aware of their day-to-day responsibilities, and critical activities may not occur.",
    "GoodPractice": "Roles and responsibilities may be documented within policies and procedures or maintained within separate documents. As part of communicating roles and responsibilities, entities can consider having personnel acknowledge their acceptance and understanding of their assigned roles and responsibilities.",
    "Examples": "A method to document roles and responsibilities is a responsibility assignment matrix that includes who is responsible, accountable, consulted, and informed (also called a RACI matrix).",
    "CustomizedApproachObjective": "Day-to-day responsibilities for performing all the activities in Requirement 7 are allocated. Personnel are accountable for successful, continuous operation of these requirements.",
    "function_names": []
  },
  {
    "RequirementID": "7.2.1",
    "DefinedApproachRequirements": "An access control model is defined and includes granting access as follows:  \n• Appropriate access depending on the entity’s business and access needs.  \n• Access to system components and data resources that is based on users’ job classification and functions.  \n• The least privileges required (for example, user, administrator) to perform a job function.",
    "DefinedApproachTestingProcedures": "7.2.1.a Examine documented policies and procedures and interview personnel to verify the access control model is defined in accordance with all elements specified in this requirement.  \n7.2.1.b Examine access control model settings and verify that access needs are appropriately defined in accordance with all elements specified in this requirement.",
    "Purpose": "Defining an access control model that is appropriate for the entity’s technology and access control philosophy supports a consistent and uniform way of allocating access and reduces the possibility of errors such as the granting of excessive rights.",
    "GoodPractice": "A factor to consider when defining access needs is the separation of duties principle. This principle is intended to prevent fraud and misuse or theft of resources. For example, 1) dividing mission-critical functions and information system support functions among different individuals and/or functions, 2) establishing roles such that information system support activities are performed by different functions/individuals (for example, system management, programming, configuration management, quality assurance and testing, and network security), and 3) ensuring security personnel administering access control functions do not also administer audit functions. In environments where one individual performs multiple functions, such as administration and security operations, duties may be assigned so that no single individual has end-to-end control of a process without an independent checkpoint. For example, responsibility for configuration and responsibility for approving changes could be assigned to separate individuals.",
    "CustomizedApproachObjective": "Access requirements are established according to job functions following least-privilege and need-to-know principles.",
    "Definitions": "Key elements of an access control model include:  \n• Resources to be protected (the systems/devices/data to which access is needed),  \n• Job functions that need access to the resource (for example, system administrator, call-center personnel, store clerk), and  \n• Which activities each job function needs to perform (for example, read/write or query).  \nOnce job functions, resources, and activities per job functions are defined, individuals can be granted access accordingly.",
    "Examples": "Access control models that entities can consider include role-based access control (RBAC) and attribute-based access control (ABAC). The access control model used by a given entity depends on their business and access needs.",
    "function_names": []
  },
  {
    "RequirementID": "7.2.2",
    "DefinedApproachRequirements": "Access is assigned to users, including privileged users, based on:  \n• Job classification and function.  \n• Least privileges necessary to perform job responsibilities.",
    "DefinedApproachTestingProcedures": "7.2.2.a Examine policies and procedures to verify they cover assigning access to users in accordance with all elements specified in this requirement.  \n7.2.2.b Examine user access settings, including for privileged users, and interview responsible management personnel to verify that privileges assigned are in accordance with all elements specified in this requirement.  \n7.2.2.c Interview personnel responsible for assigning access to verify that privileged user access is assigned in accordance with all elements specified in this requirement.",
    "Purpose": "Assigning least privileges helps prevent users without sufficient knowledge about the application from incorrectly or accidentally changing application configuration or altering its security settings. Enforcing least privilege also helps to minimize the scope of damage if an unauthorized person gains access to a user ID.",
    "GoodPractice": "Access rights are granted to a user by assignment to one or several functions. Access is assigned depending on the specific user functions and with the minimum scope required for the job. When assigning privileged access, it is important to assign individuals only the privileges they need to perform their job (the 'least privileges'). For example, the database administrator or backup administrator should not be assigned the same privileges as the overall systems administrator. Once needs are defined for user functions (per PCI DSS requirement 7.2.1), it is easy to grant individuals access according to their job classification and function by using the already-created roles. Entities may wish to consider use of Privileged Access Management (PAM), which is a method to grant access to privileged accounts only when those privileges are required, immediately revoking that access once they are no longer needed.",
    "CustomizedApproachObjective": "Access to systems and data is limited to only the access needed to perform job functions, as defined in the related access roles.",
    "function_names": []
  },
  {
    "RequirementID": "7.2.3",
    "DefinedApproachRequirements": "Required privileges are approved by authorized personnel.",
    "DefinedApproachTestingProcedures": "7.2.3.a Examine policies and procedures to verify they define processes for approval of all privileges by authorized personnel.  \n7.2.3.b Examine user IDs and assigned privileges, and compare with documented approvals to verify that:  \n• Documented approval exists for the assigned privileges.  \n• The approval was by authorized personnel.",
    "Purpose": "Documented approval (for example, in writing or electronically) assures that those with access and privileges are known and authorized by management, and that their access is necessary for their job function.",
    "CustomizedApproachObjective": "Access privileges cannot be granted to users without appropriate, documented authorization.",
    "function_names": []
  },
  {
    "RequirementID": "7.2.4",
    "DefinedApproachRequirements": "All user accounts and related access privileges, including third-party/vendor accounts, are reviewed as follows:  \n• At least once every six months.  \n• To ensure user accounts and access remain appropriate based on job function.  \n• Any inappropriate access is addressed.  \n• Management acknowledges that access remains appropriate.",
    "DefinedApproachTestingProcedures": "7.2.4.a Examine policies and procedures to verify they define processes to review all user accounts and related access privileges, including third-party/vendor accounts, in accordance with all elements specified in this requirement.  \n7.2.4.b Interview responsible personnel and examine documented results of periodic reviews of user accounts to verify that all the results are in accordance with all elements specified in this requirement.",
    "Purpose": "Regular review of access rights helps to detect excessive access rights remaining after user job responsibilities change, system functions change, or other modifications. This review also ensures accounts for terminated users and third parties no longer needing access are removed.",
    "GoodPractice": "Entities can implement a regular, repeatable process for conducting reviews of access rights and assigning 'data owners' responsible for managing and monitoring access related to their job function. Reviews could be monthly by direct managers and quarterly by senior managers to ensure updates as needed.",
    "CustomizedApproachObjective": "Account privilege assignments are verified periodically by management as correct, and nonconformities are remediated.",
    "ApplicabilityNotes": "This requirement applies to all user accounts and related access privileges, including personnel, third-party/vendor accounts, and accounts used to access third-party cloud services. This is a best practice until 31 March 2025, after which it becomes required.",
    "function_names": []
  },
  {
    "RequirementID": "7.2.5",
    "DefinedApproachRequirements": "All application and system accounts and related access privileges are assigned and managed as follows:  \n• Based on the least privileges necessary for the operability of the system or application.  \n• Access is limited to the systems, applications, or processes that specifically require their use.",
    "DefinedApproachTestingProcedures": "7.2.5.a Examine policies and procedures to verify they define processes to manage and assign application and system accounts and related access privileges in accordance with all elements specified in this requirement.  \n7.2.5.b Examine privileges associated with system and application accounts and interview responsible personnel to verify that application and system accounts and related access privileges are assigned and managed in accordance with all elements specified in this requirement.",
    "Purpose": "It is important to establish the appropriate access level for application or system accounts. Compromised accounts receive the same access level granted to the application or system.",
    "GoodPractice": "Entities may establish a baseline for system and application accounts, including ensuring the account is not a member of privileged groups, restricting which computers and hours the account can be used, and removing additional settings like VPN or remote access.",
    "CustomizedApproachObjective": "Access rights granted to application and system accounts are limited to only the access needed for the operability of that application or system.",
    "ApplicabilityNotes": "This requirement is a best practice until 31 March 2025, after which it becomes required.",
    "function_names": []
  },
  {
    "RequirementID": "7.2.5.1",
    "DefinedApproachRequirements": "All access by application and system accounts and related access privileges are reviewed as follows:  \n• Periodically (at the frequency defined in the entity’s targeted risk analysis, which is performed according to all elements specified in Requirement 12.3.1).  \n• The application/system access remains appropriate for the function being performed.  \n• Any inappropriate access is addressed.  \n• Management acknowledges that access remains appropriate.",
    "DefinedApproachTestingProcedures": "7.2.5.1.a Examine policies and procedures to verify they define processes to review all application and system accounts and related access privileges in accordance with all elements specified in this requirement.  \n7.2.5.1.b Examine the entity’s targeted risk analysis for the frequency of periodic reviews of application and system accounts and related access privileges to verify the risk analysis was performed in accordance with all elements specified in Requirement 12.3.1.  \n7.2.5.1.c Interview responsible personnel and examine documented results of periodic reviews of system and application accounts and related privileges to verify that the reviews occur in accordance with all elements specified in this requirement.",
    "Purpose": "Regular review of access rights helps to detect excessive access rights remaining after system functions change, or other application or system modifications occur. Excessive rights left in place may be used by malicious users for unauthorized access.",
    "CustomizedApproachObjective": "Application and system account privilege assignments are verified periodically by management as correct, and nonconformities are remediated.",
    "ApplicabilityNotes": "This requirement is a best practice until 31 March 2025, after which it becomes required.",
    "function_names": []
  },
  {
    "RequirementID": "7.2.6",
    "DefinedApproachRequirements": "All user access to query repositories of stored cardholder data is restricted as follows:  \n• Via applications or other programmatic methods, with access and allowed actions based on user roles and least privileges.  \n• Only the responsible administrator(s) can directly access or query repositories of stored CHD.",
    "DefinedApproachTestingProcedures": "7.2.6.a Examine policies and procedures and interview personnel to verify processes are defined for granting user access to query repositories of stored cardholder data, in accordance with all elements specified in this requirement.  \n7.2.6.b Examine configuration settings for querying repositories of stored cardholder data to verify they are in accordance with all elements specified in this requirement.",
    "Purpose": "The misuse of query access to repositories of cardholder data has been a regular cause of data breaches. Limiting such access to administrators reduces the risk of such access being abused by unauthorized users.",
    "GoodPractice": "Typical user actions include moving, copying, and deleting data. Granting access to repositories of cardholder data should follow the same role-based process as all other granted access, assigning only privileges needed to perform job functions.",
    "Definitions": "Programmatic methods means granting access through means such as database stored procedures that allow users to perform controlled actions to data in a table, rather than via direct, unfiltered access to the data repository by end users (except for the responsible administrator(s), who need direct access to the database for their administrative duties).",
    "CustomizedApproachObjective": "Direct unfiltered (ad hoc) query access to cardholder data repositories is prohibited, unless performed by an authorized administrator.",
    "ApplicabilityNotes": "This requirement applies to controls for user access to query repositories of stored cardholder data. See Requirements 7.2.5 and 7.2.5.1 and 8.6.1 through 8.6.3 for controls for application and system accounts.",
    "function_names": []
  },
  {
    "RequirementID": "7.3.1",
    "DefinedApproachRequirements": "An access control system(s) is in place that restricts access based on a user’s need to know and covers all system components.",
    "DefinedApproachTestingProcedures": "Examine vendor documentation and system settings to verify that access is managed for each system component via an access control system(s) that restricts access based on a user’s need to know and covers all system components.",
    "Purpose": "Without a mechanism to restrict access based on user’s need to know, a user may unknowingly be granted access to cardholder data. Access control systems automate the process of restricting access and assigning privileges.",
    "CustomizedApproachObjective": "Access rights and privileges are managed via mechanisms intended for that purpose.",
    "function_names": []
  },
  {
    "RequirementID": "7.3.2",
    "DefinedApproachRequirements": "The access control system(s) is configured to enforce permissions assigned to individuals, applications, and systems based on job classification and function.",
    "DefinedApproachTestingProcedures": "Examine vendor documentation and system settings to verify that the access control system(s) is configured to enforce permissions assigned to individuals, applications, and systems based on job classification and function.",
    "Purpose": "Restricting privileged access with an access control system reduces the opportunity for errors in the assignment of permissions to individuals, applications, and systems.",
    "CustomizedApproachObjective": "Individual account access rights and privileges to systems, applications, and data are only inherited from group membership.",
    "function_names": []
  },
  {
    "RequirementID": "7.3.3",
    "DefinedApproachRequirements": "The access control system(s) is set to “deny all” by default.",
    "DefinedApproachTestingProcedures": "Examine vendor documentation and system settings to verify that the access control system(s) is set to “deny all” by default.",
    "Purpose": "A default setting of “deny all” ensures no one is granted access unless a rule is established specifically granting such access.",
    "GoodPractice": "It is important to check the default configuration of access control systems because some are set by default to “allow all,” thereby permitting access unless/until a rule is written to specifically deny it.",
    "CustomizedApproachObjective": "Access rights and privileges are prohibited unless expressly permitted.",
    "function_names": []
  },
  {
    "RequirementID": "8.2.1",
    "DefinedApproachRequirements": "All users are assigned a unique ID before access to system components or cardholder data is allowed.",
    "DefinedApproachTestingProcedures": "8.2.1.a Interview responsible personnel to verify that all users are assigned a unique ID for access to system components and cardholder data.\n8.2.1.b Examine audit logs and other evidence to verify that access to system components and cardholder data can be uniquely identified and associated with individuals.",
    "Purpose": "The ability to trace actions performed on a computer system to an individual establishes accountability and traceability and is fundamental to establishing effective access controls. By ensuring each user is uniquely identified, instead of using one ID for several employees, an organization can maintain individual responsibility for actions and an effective record in the audit log per employee. In addition, this will assist with issue resolution and containment when misuse or malicious intent occurs.",
    "CustomizedApproachObjective": "All actions by all users are attributable to an individual.",
    "ApplicabilityNotes": "This requirement is not intended to apply to user accounts within point-of-sale terminals that have access to only one card number at a time to facilitate a single transaction.",
    "function_names": []
  },
  {
    "RequirementID": "8.2.2",
    "DefinedApproachRequirements": "Group, shared, or generic IDs, or other shared authentication credentials are only used when necessary on an exception basis, and are managed as follows:\n• ID use is prevented unless needed for an exceptional circumstance.\n• Use is limited to the time needed for the exceptional circumstance.\n• Business justification for use is documented.\n• Use is explicitly approved by management.\n• Individual user identity is confirmed before access to an account is granted.\n• Every action taken is attributable to an individual user.",
    "DefinedApproachTestingProcedures": "8.2.2.a Examine user account lists on system components and applicable documentation to verify that shared authentication credentials are only used when necessary, on an exception basis, and are managed in accordance with all elements specified in this requirement.\n8.2.2.b Examine authentication policies and procedures to verify processes are defined for shared authentication credentials such that they are only used when necessary, on an exception basis, and are managed in accordance with all elements specified in this requirement.\n8.2.2.c Interview system administrators to verify that shared authentication credentials are only used when necessary, on an exception basis, and are managed in accordance with all elements specified in this requirement.",
    "GoodPractice": "If shared IDs are used for any reason, strong management controls need to be established to maintain individual accountability and traceability.",
    "Examples": "Tools and techniques can facilitate both management and security of these types of accounts and confirm individual user identity before access to an account is granted. Entities can consider password vaults or other system-managed controls such as the sudo command. An example of an exceptional circumstance is where all other authentication methods have failed, and a shared ID is needed for emergency use or “break the glass” administrator access.",
    "CustomizedApproachObjective": "All actions performed by users with group, shared, or generic IDs are attributable to an individual person.",
    "ApplicabilityNotes": "This requirement is not intended to apply to user accounts within point-of-sale terminals that have access to only one card number at a time to facilitate a single transaction.",
    "function_names": []
  },
  {
    "RequirementID": "8.2.3",
    "DefinedApproachRequirements": "Additional requirement for service providers only: Service providers with remote access to customer premises use unique authentication factors for each customer premises.",
    "DefinedApproachTestingProcedures": "Additional testing procedure for service provider assessments only: Examine authentication policies and procedures and interview personnel to verify that service providers with remote access to customer premises use unique authentication factors for remote access to each customer premises.",
    "CustomizedApproachObjective": "A service provider’s credential used for one customer cannot be used for any other customer.",
    "ApplicabilityNotes": "This requirement applies only when the entity being assessed is a service provider. This requirement is not intended to apply to service providers accessing their own shared services environments, where multiple customer environments are hosted. If service provider employees use shared authentication factors to remotely access customer premises, these factors must be unique per customer and managed in accordance with Requirement 8.2.2. Technologies such as multi-factor mechanisms that provide a unique credential for each connection (such as a single-use password) could also meet the intent of this requirement.",
    "function_names": []
  },
  {
    "RequirementID": "8.2.4",
    "DefinedApproachRequirements": "Addition, deletion, and modification of user IDs, authentication factors, and other identifier objects are managed as follows:\n• Authorized with the appropriate approval.\n• Implemented with only the privileges specified on the documented approval.",
    "DefinedApproachTestingProcedures": "8.2.4 Examine documented authorizations across various phases of the account lifecycle (additions, modifications, and deletions) and examine system settings to verify the activity has been managed in accordance with all elements specified in this requirement.",
    "Purpose": "It is imperative that the lifecycle of a user ID (additions, deletions, and modifications) is controlled so that only authorized accounts can perform functions, actions are auditable, and privileges are limited to only what is required. Attackers often compromise an existing account and then escalate the privileges of that account to perform unauthorized acts, or they may create new IDs to continue their activity in the background. It is essential to detect and respond when user IDs are created or changed outside the normal change process or without corresponding authorization.",
    "CustomizedApproachObjective": "Lifecycle events for user IDs and authentication factors cannot occur without appropriate authorization.",
    "ApplicabilityNotes": "This requirement applies to all user accounts, including employees, contractors, consultants, temporary workers, and third-party vendors.",
    "function_names": []
  },
  {
    "RequirementID": "8.2.5",
    "DefinedApproachRequirements": "Access for terminated users is immediately revoked.",
    "DefinedApproachTestingProcedures": "8.2.5.a Examine information sources for terminated users and review current user access lists—for both local and remote access—to verify that terminated user IDs have been deactivated or removed from the access lists.\n8.2.5.b Interview responsible personnel to verify that all physical authentication factors—such as smart cards, tokens, etc.—have been returned or deactivated for terminated users.",
    "Purpose": "If an employee or third party/vendor has left the company and still has access to the network via their user account, unnecessary or malicious access to cardholder data could occur—either by the former employee or by a malicious user who exploits the old and/or unused account.",
    "CustomizedApproachObjective": "The accounts of terminated users cannot be used.",
    "function_names": []
  },
  {
    "RequirementID": "8.2.6",
    "DefinedApproachRequirements": "Inactive user accounts are removed or disabled within 90 days of inactivity.",
    "DefinedApproachTestingProcedures": "Examine user accounts and last logon information, and interview personnel to verify that any inactive user accounts are removed or disabled within 90 days of inactivity.",
    "GoodPractice": "Where it may be reasonably anticipated that an account will not be used for an extended period of time, such as an extended leave of absence, the account should be disabled as soon as the leave begins, rather than waiting 90 days.",
    "CustomizedApproachObjective": "Inactive user accounts cannot be used.",
    "function_names": []
  },
  {
    "RequirementID": "8.2.7",
    "DefinedApproachRequirements": "Accounts used by third parties to access, support, or maintain system components via remote access are managed as follows:\n• Enabled only during the time period needed and disabled when not in use.\n• Use is monitored for unexpected activity.",
    "DefinedApproachTestingProcedures": "Interview personnel, examine documentation for managing accounts, and examine evidence to verify that accounts used by third parties for remote access are managed according to all elements specified in this requirement.",
    "CustomizedApproachObjective": "Third-party remote access cannot be used except where specifically authorized and use is overseen by management.",
    "GoodPractice": "Enabling access only for the time periods needed and disabling it as soon as it is no longer required helps prevent misuse of these connections. Additionally, consider assigning third parties a start and stop date for their access in accordance with their service contract. Monitoring third-party access helps ensure that third parties are accessing only the systems necessary and only during approved time frames. Any unusual activity using third-party accounts should be followed up and resolved.",
    "function_names": []
  },
  {
    "RequirementID": "8.2.8",
    "DefinedApproachRequirements": "If a user session has been idle for more than 15 minutes, the user is required to re-authenticate to re-activate the terminal or session.",
    "DefinedApproachTestingProcedures": "Examine system configuration settings to verify that system/session idle timeout features for user sessions have been set to 15 minutes or less.",
    "Purpose": "When users walk away from an open machine with access to system components or cardholder data, there is a risk that the machine may be used by others in the user’s absence, resulting in unauthorized account access and/or misuse.",
    "GoodPractice": "The re-authentication can be applied either at the system level to protect all sessions running on that machine or at the application level. Entities may also want to consider staging controls in succession to further restrict the access of an unattended session as time passes. For example, the screensaver may activate after 15 minutes and log off the user after an hour. If a user needs to run a program from an unattended computer, the user can log in to the computer to initiate the program, and then 'lock' the computer so that no one else can use the user’s login while the computer is unattended.",
    "Examples": "One way to meet this requirement is to configure an automated screensaver to launch whenever the console is idle for 15 minutes and requiring the logged-in user to enter their password to unlock the screen.",
    "CustomizedApproachObjective": "A user session cannot be used except by the authorized user.",
    "ApplicabilityNotes": "This requirement is not intended to apply to user accounts on point-of-sale terminals that have access to only one card number at a time to facilitate a single transaction. This requirement is not meant to prevent legitimate activities from being performed while the console/PC is unattended.",
    "function_names": []
  },
  {
    "RequirementID": "8.3.1",
    "DefinedApproachRequirements": "All user access to system components for users and administrators is authenticated via at least one of the following authentication factors:\n• Something you know, such as a password or passphrase.\n• Something you have, such as a token device or smart card.\n• Something you are, such as a biometric element.",
    "DefinedApproachTestingProcedures": "8.3.1.a Examine documentation describing the authentication factor(s) used to verify that user access to system components is authenticated via at least one authentication factor specified in this requirement.\n8.3.1.b For each type of authentication factor used with each type of system component, observe an authentication to verify that authentication is functioning consistently with documented authentication factor(s).",
    "Purpose": "When used in addition to unique IDs, an authentication factor helps protect user IDs from being compromised, since the attacker needs to have the unique ID and compromise the associated authentication factor(s).",
    "GoodPractice": "A common approach for a malicious individual to compromise a system is to exploit weak or nonexistent authentication factors (for example, passwords/passphrases). Requiring strong authentication factors helps protect against this attack.",
    "FurtherInformation": "See fidoalliance.org for more information about using tokens, smart cards, or biometrics as authentication factors.",
    "CustomizedApproachObjective": "An account cannot be accessed except with a combination of user identity and an authentication factor.",
    "ApplicabilityNotes": "This requirement is not intended to apply to user accounts on point-of-sale terminals that have access to only one card number at a time to facilitate a single transaction. This requirement does not supersede multi-factor authentication (MFA) requirements but applies to those in-scope systems not otherwise subject to MFA requirements. A digital certificate is a valid option for 'something you have' if it is unique for a particular user.",
    "function_names": []
  },
  {
    "RequirementID": "8.3.2",
    "DefinedApproachRequirements": "Strong cryptography is used to render all authentication factors unreadable during transmission and storage on all system components.",
    "DefinedApproachTestingProcedures": "8.3.2.a Examine vendor documentation and system configuration settings to verify that authentication factors are rendered unreadable with strong cryptography during transmission and storage.\n8.3.2.b Examine repositories of authentication factors to verify that they are unreadable during storage.\n8.3.2.c Examine data transmissions to verify that authentication factors are unreadable during transmission.",
    "Purpose": "Network devices and applications have been known to transmit unencrypted, readable authentication factors (such as passwords and passphrases) across the network and/or store these values without encryption. As a result, a malicious individual can easily intercept this information during transmission using a 'sniffer,' or directly access unencrypted authentication factors in files where they are stored, and then use this data to gain unauthorized access.",
    "CustomizedApproachObjective": "Cleartext authentication factors cannot be obtained, derived, or reused from the interception of communications or from stored data.",
    "function_names": []
  },
  {
    "RequirementID": "8.3.3",
    "DefinedApproachRequirements": "User identity is verified before modifying any authentication factor.",
    "DefinedApproachTestingProcedures": "Examine procedures for modifying authentication factors and observe security personnel to verify that when a user requests a modification of an authentication factor, the user’s identity is verified before the authentication factor is modified.",
    "Purpose": "Malicious individuals use 'social engineering' techniques to impersonate a user of a system—for example, calling a help desk and acting as a legitimate user—to have an authentication factor changed so they can use a valid user ID.",
    "GoodPractice": "Modifications to authentication factors for which user identity should be verified include but are not limited to performing password resets, provisioning new hardware or software tokens, and generating new keys.",
    "Examples": "Methods to verify a user’s identity include a secret question/answer, knowledge-based information, and calling the user back at a known and previously established phone number.",
    "CustomizedApproachObjective": "Unauthorized individuals cannot gain system access by impersonating the identity of an authorized user.",
    "function_names": []
  },
  {
    "RequirementID": "8.3.4",
    "DefinedApproachRequirements": "Invalid authentication attempts are limited by:\n• Locking out the user ID after not more than 10 attempts.\n• Setting the lockout duration to a minimum of 30 minutes or until the user’s identity is confirmed.",
    "DefinedApproachTestingProcedures": "8.3.4.a Examine system configuration settings to verify that authentication parameters are set to require that user accounts be locked out after not more than 10 invalid logon attempts.\n8.3.4.b Examine system configuration settings to verify that password parameters are set to require that once a user account is locked out, it remains locked for a minimum of 30 minutes or until the user’s identity is confirmed.",
    "Purpose": "Without account-lockout mechanisms in place, an attacker can continually try to guess a password through manual or automated tools until the attacker succeeds and gains access to a user’s account.",
    "GoodPractice": "Before reactivating a locked account, the user’s identity should be confirmed.",
    "CustomizedApproachObjective": "An authentication factor cannot be guessed in a brute force, online attack.",
    "ApplicabilityNotes": "This requirement is not intended to apply to user accounts on point-of-sale terminals that have access to only one card number at a time to facilitate a single transaction.",
    "function_names": []
  },
  {
    "RequirementID": "8.3.5",
    "DefinedApproachRequirements": "If passwords/passphrases are used as authentication factors to meet Requirement 8.3.1, they are set and reset for each user as follows:\n• Set to a unique value for first-time use and upon reset.\n• Forced to be changed immediately after the first use.",
    "DefinedApproachTestingProcedures": "Examine procedures for setting and resetting passwords/passphrases (if used as authentication factors to meet Requirement 8.3.1) and observe security personnel to verify that passwords/passphrases are set and reset in accordance with all elements specified in this requirement.",
    "Purpose": "If the same password/passphrase is used for every new user, an internal user, former employee, or malicious individual may know or easily discover the value and use it to gain access to accounts before the authorized user attempts to use the password.",
    "CustomizedApproachObjective": "An initial or reset password/passphrase assigned to a user cannot be used by an unauthorized user.",
    "function_names": []
  },
  {
    "RequirementID": "8.3.6",
    "DefinedApproachRequirements": "If passwords/passphrases are used as authentication factors to meet Requirement 8.3.1, they meet the following minimum level of complexity:\n• A minimum length of 12 characters (or if the system does not support 12 characters, a minimum length of eight characters).\n• Contain both numeric and alphabetic characters.",
    "DefinedApproachTestingProcedures": "Examine system configuration settings to verify that user password/passphrase complexity parameters are set in accordance with all elements specified in this requirement.",
    "GoodPractice": "Password/passphrase strength is dependent on complexity, length, and randomness. Entities can consider adding special characters, upper- and lower-case characters, or comparing proposed passwords to a bad password list.",
    "CustomizedApproachObjective": "A guessed password/passphrase cannot be verified by either an online or offline brute force attack.",
    "ApplicabilityNotes": "This requirement is not intended to apply to user accounts on point-of-sale terminals with access to only one card number, or application/system accounts governed by section 8.6. Until 31 March 2025, passwords must be a minimum length of seven characters according to PCI DSS v3.2.1 Requirement 8.2.3.",
    "function_names": []
  },
  {
    "RequirementID": "8.3.7",
    "DefinedApproachRequirements": "Individuals are not allowed to submit a new password/passphrase that is the same as any of the last four passwords/passphrases used.",
    "DefinedApproachTestingProcedures": "Examine system configuration settings to verify that password parameters are set to require that new passwords/passphrases cannot be the same as the four previously used passwords/passphrases.",
    "Purpose": "If password history is not maintained, previously used passwords can be reused repeatedly, reducing security.",
    "CustomizedApproachObjective": "A previously used password cannot be used to gain access to an account for at least 12 months.",
    "ApplicabilityNotes": "This requirement is not intended to apply to user accounts on point-of-sale terminals that have access to only one card number at a time to facilitate a single transaction.",
    "function_names": []
  },
  {
    "RequirementID": "8.3.8",
    "DefinedApproachRequirements": "Authentication policies and procedures are documented and communicated to all users including:\n• Guidance on selecting strong authentication factors.\n• Guidance for how users should protect their authentication factors.\n• Instructions not to reuse previously used passwords/passphrases.\n• Instructions to change passwords/passphrases if there is any suspicion or knowledge that the password/passphrases have been compromised and how to report the incident.",
    "DefinedApproachTestingProcedures": "8.3.8.a Examine procedures and interview personnel to verify that authentication policies and procedures are distributed to all users.\n8.3.8.b Review authentication policies and procedures that are distributed to users and verify they include the elements specified in this requirement.\n8.3.8.c Interview users to verify that they are familiar with authentication policies and procedures.",
    "Purpose": "Communicating authentication policies and procedures to all users helps them to understand and abide by the policies.",
    "GoodPractice": "Guidance on selecting strong passwords may include suggestions to help personnel select hard-to-guess passwords that do not contain dictionary words or personal information. Guidance for protecting authentication factors may include not writing down passwords, not saving them in insecure files, and being alert to malicious attempts to exploit passwords.",
    "CustomizedApproachObjective": "Users are knowledgeable about the correct use of authentication factors and can access assistance and guidance when required.",
    "function_names": []
  },
  {
    "RequirementID": "8.3.9",
    "DefinedApproachRequirements": "If passwords/passphrases are used as the only authentication factor for user access (i.e., in any single-factor authentication implementation) then either:\n• Passwords/passphrases are changed at least once every 90 days,\nOR\n• The security posture of accounts is dynamically analyzed, and real-time access to resources is automatically determined accordingly.",
    "DefinedApproachTestingProcedures": "Inspect system configuration settings to verify that passwords/passphrases are managed in accordance with ONE of the elements specified in this requirement.",
    "Purpose": "Using a password/passphrase as the only authentication factor provides a single point of failure if compromised. Controls are needed to minimize how long malicious activity could occur via a compromised password/passphrase.",
    "GoodPractice": "Passwords/passphrases that are valid for a long time without a change provide malicious individuals with more time to break the password/phrase. Periodically changing passwords reduces the time available to crack a password. Dynamically analyzing an account's security posture allows rapid detection and response to potentially compromised credentials, considering factors such as device integrity, location, access times, and resources accessed.",
    "FurtherInformation": "See NIST SP 800-207 Zero Trust Architecture for information about using dynamic analysis to manage user access to resources.",
    "CustomizedApproachObjective": "An undetected compromised password/passphrase cannot be used indefinitely.",
    "ApplicabilityNotes": "This requirement does not apply to in-scope system components where MFA is used. It is not intended for user accounts on point-of-sale terminals accessing only one card number for a transaction. It does not apply to service providers' customer accounts but does apply to accounts for service provider personnel.",
    "function_names": []
  },
  {
    "RequirementID": "8.3.10",
    "DefinedApproachRequirements": "Additional requirement for service providers only: If passwords/passphrases are used as the only authentication factor for customer user access to cardholder data, guidance is provided to customer users including:\n• Guidance for customers to change their user passwords/passphrases periodically.\n• Guidance as to when, and under what circumstances, passwords/passphrases are to be changed.",
    "DefinedApproachTestingProcedures": "Examine guidance provided to customer users to verify that the guidance includes all elements specified in this requirement.",
    "Purpose": "Using a password/passphrase as the only authentication factor provides a single point of failure if compromised. Controls are needed to minimize how long malicious activity could occur via a compromised password/passphrase.",
    "GoodPractice": "Passwords/passphrases that are valid for a long time without a change provide malicious individuals with more time to break the password/phrase. Periodically changing passwords reduces the time available to crack a password. Dynamically analyzing an account's security posture allows rapid detection and response to potentially compromised credentials.",
    "FurtherInformation": "See NIST SP 800-207 Zero Trust Architecture for dynamic account security analysis.",
    "CustomizedApproachObjective": "Passwords/passphrases for service providers’ customers cannot be used indefinitely.",
    "ApplicabilityNotes": "This requirement applies only when the entity being assessed is a service provider. It does not apply to accounts of consumer users accessing their own payment card information. This requirement will be superseded by Requirement 8.3.10.1 once it becomes effective.",
    "function_names": []
  },
  {
    "RequirementID": "8.3.10.1",
    "DefinedApproachRequirements": "Additional requirement for service providers only: If passwords/passphrases are used as the only authentication factor for customer user access, then either:\n• Passwords/passphrases are changed at least once every 90 days,\nOR\n• The security posture of accounts is dynamically analyzed, and real-time access to resources is automatically determined accordingly.",
    "DefinedApproachTestingProcedures": "Inspect system configuration settings to verify that passwords/passphrases are managed in accordance with ONE of the elements specified in this requirement.",
    "Purpose": "Controls are needed to minimize how long malicious activity could occur via a compromised password/passphrase in single-factor authentication implementations.",
    "GoodPractice": "Dynamically analyzing an account’s security posture allows rapid detection and response to address potentially compromised credentials by considering factors such as device integrity, location, access times, and resources accessed.",
    "FurtherInformation": "See NIST SP 800-207 Zero Trust Architecture for guidance on dynamic account security analysis.",
    "CustomizedApproachObjective": "Passwords/passphrases for service providers’ customers cannot be used indefinitely.",
    "ApplicabilityNotes": "This requirement applies only when the entity being assessed is a service provider. It does not apply to accounts of consumer users accessing their own payment card information. This requirement is a best practice until 31 March 2025, after which it will be required and fully considered during a PCI DSS assessment. Until then, service providers may meet either Requirement 8.3.10 or 8.3.10.1.",
    "function_names": []
  },
  {
    "RequirementID": "8.3.11",
    "DefinedApproachRequirements": "Where authentication factors such as physical or logical security tokens, smart cards, or certificates are used:\n• Factors are assigned to an individual user and not shared among multiple users.\n• Physical and/or logical controls ensure only the intended user can use that factor to gain access.",
    "DefinedApproachTestingProcedures": "8.3.11.a Examine authentication policies and procedures to verify that procedures for using authentication factors are defined and include all elements specified in this requirement.\n8.3.11.b Interview security personnel to verify authentication factors are assigned to an individual user and not shared among multiple users.\n8.3.11.c Examine system configuration settings and/or observe physical controls to verify that controls are implemented to ensure only the intended user can use that factor to gain access.",
    "Purpose": "If multiple users can use authentication factors such as tokens, smart cards, and certificates, it may be impossible to identify the individual using the authentication mechanism.",
    "GoodPractice": "Having physical and/or logical controls (e.g., PIN, biometric data, or password) to uniquely authenticate the user will prevent unauthorized users from gaining access to the account through shared authentication factors.",
    "CustomizedApproachObjective": "An authentication factor cannot be used by anyone other than the user to which it is assigned.",
    "function_names": []
  },
  {
    "RequirementID": "8.4.1",
    "DefinedApproachRequirements": "MFA is implemented for all non-console access into the CDE for personnel with administrative access.",
    "DefinedApproachTestingProcedures": "8.4.1.a Examine network and/or system configurations to verify MFA is required for all non-console access into the CDE for personnel with administrative access.\n8.4.1.b Observe administrator personnel logging into the CDE and verify that MFA is required.",
    "Purpose": "Requiring more than one type of authentication factor reduces the probability that an attacker can gain access to a system by masquerading as a legitimate user, because the attacker would need to compromise multiple authentication factors.",
    "GoodPractice": "Implementing MFA for non-console administrative access to in-scope system components that are not part of the CDE helps prevent unauthorized users from using a single factor to gain access.",
    "Definitions": "Using one factor twice (e.g., two separate passwords) is not considered multi-factor authentication.",
    "CustomizedApproachObjective": "Administrative access to the CDE cannot be obtained by the use of a single authentication factor.",
    "ApplicabilityNotes": "This requirement applies to all personnel with elevated or increased privileges accessing the CDE via a non-console connection—that is, via logical access over a network interface rather than a direct, physical connection.",
    "function_names": []
  },
  {
    "RequirementID": "8.4.2",
    "DefinedApproachRequirements": "MFA is implemented for all non-console access into the CDE.",
    "DefinedApproachTestingProcedures": "8.4.2.a Examine network and/or system configurations to verify MFA is implemented for all non-console access into the CDE.\n8.4.2.b Observe personnel logging in to the CDE and examine evidence to verify that MFA is required.",
    "Purpose": "Requiring more than one type of authentication factor reduces the probability that an attacker can gain access to a system by masquerading as a legitimate user, because the attacker would need to compromise multiple authentication factors.",
    "Definitions": "Using one factor twice (e.g., two separate passwords) is not considered multi-factor authentication.",
    "CustomizedApproachObjective": "Access into the CDE cannot be obtained by the use of a single authentication factor.",
    "ApplicabilityNotes": "This requirement does not apply to application or system accounts performing automated functions, user accounts on POS terminals accessing only one card number per transaction, or accounts authenticated only with phishing-resistant authentication factors. MFA must be applied to all types of non-console access, including cloud, hosted systems, on-premises applications, network devices, workstations, servers, and endpoints.",
    "function_names": []
  },
  {
    "RequirementID": "8.4.3",
    "DefinedApproachRequirements": "MFA is implemented for all remote access originating from outside the entity’s network that could access or impact the CDE.",
    "DefinedApproachTestingProcedures": "8.4.3.a Examine network and/or system configurations for remote access servers and systems to verify MFA is required.\n8.4.3.b Observe personnel and third parties connecting remotely to the network and verify that MFA is required.",
    "Purpose": "Requiring more than one type of authentication factor reduces the probability that an attacker can gain access to a system by masquerading as a legitimate user, because the attacker would need to compromise multiple authentication factors.",
    "Definitions": "Multi-factor authentication (MFA) requires an individual to present a minimum of two of the three authentication factors specified in Requirement 8.3.1 before access is granted. Using one factor twice (e.g., two separate passwords) is not considered multi-factor authentication.",
    "CustomizedApproachObjective": "Remote access to the entity’s network cannot be obtained by using a single authentication factor.",
    "ApplicabilityNotes": "Applies to all user accounts that can access the network remotely, including personnel and third parties, if remote access leads to or could lead to access into the CDE. MFA is not required for remote access to properly segmented parts of the network that cannot access the CDE. MFA applies to all types of system components including cloud, hosted, on-premises applications, network devices, workstations, servers, and endpoints, and includes direct and web-based access.",
    "function_names": []
  },
  {
    "RequirementID": "8.5",
    "DefinedApproachRequirements": "MFA systems are configured to prevent misuse, including preventing replay attacks, using at least two different types of authentication factors, requiring success of all factors before granting access, and disallowing bypass except when specifically authorized on a limited exception basis.",
    "DefinedApproachTestingProcedures": "8.5.1.a Examine vendor system documentation to verify that the MFA system is not susceptible to replay attacks.\n8.5.1.b Examine system configurations for the MFA implementation to verify it is configured in accordance with all elements specified in this requirement.\n8.5.1.c Interview responsible personnel and observe processes to verify that any requests to bypass MFA are specifically documented and authorized by management on an exception basis, for a limited time period.\n8.5.1.d Observe personnel logging into system components in the CDE to verify that access is granted only after all authentication factors are successful.\n8.5.1.e Observe personnel connecting remotely from outside the entity’s network to verify that access is granted only after all authentication factors are successful.",
    "Purpose": "Poorly configured MFA systems can be bypassed by attackers. Proper configuration reduces the risk of unauthorized access to system components in the CDE.",
    "GoodPractice": "",
    "Definitions": "Using one type of factor twice (e.g., two separate passwords) is not considered multi-factor authentication. A replay attack is when an attacker intercepts and resends valid data to gain unauthorized access.",
    "Examples": "Methods to protect against replay attacks include unique session identifiers and session keys, timestamps, time-based one-time passwords or passcodes, and anti-replay mechanisms that detect and reject duplicated authentication attempts.",
    "CustomizedApproachObjective": "MFA systems are resistant to attack and strictly control any administrative overrides.",
    "ApplicabilityNotes": "This requirement is a best practice until 31 March 2025, after which it will be required during a PCI DSS assessment.",
    "FurtherInformation": "Refer to PCI SSC’s Information Supplement: Multi-Factor Authentication and PCI SSC’s FAQs on this topic.",
    "function_names": []
  },
  {
    "RequirementID": "8.6.1",
    "DefinedApproachRequirements": "If accounts used by systems or applications can be used for interactive login, they must be strictly managed: interactive use prevented unless exceptional, limited to needed time, documented and approved, individual identity confirmed, and all actions attributable to an individual.",
    "DefinedApproachTestingProcedures": "Examine application and system accounts that can be used interactively and interview administrative personnel to verify that accounts are managed according to all elements specified in this requirement.",
    "Purpose": "Like individual user accounts, system and application accounts require accountability and strict management to ensure they are used only for the intended purpose and are not misused.",
    "GoodPractice": "Configure system and application accounts to disallow interactive login where possible and limit the machines and devices on which the account can be used.",
    "Definitions": "Interactive login is the ability for a person to log into a system or application account like a normal user account.",
    "CustomizedApproachObjective": "When used interactively, all actions with accounts designated as system or application accounts are authorized and attributable to an individual person.",
    "ApplicabilityNotes": "This requirement is a best practice until 31 March 2025, after which it will be required during a PCI DSS assessment.",
    "function_names": []
  },
  {
    "RequirementID": "8.6.2",
    "DefinedApproachRequirements": "Passwords/passphrases for any application and system accounts that can be used for interactive login must not be hard coded in scripts, configuration/property files, or bespoke/custom source code.",
    "DefinedApproachTestingProcedures": "8.6.2.a Interview personnel and examine system development procedures to verify processes prevent hard coding passwords.\n8.6.2.b Examine scripts, configuration/property files, and custom code to verify passwords/passphrases are not present.",
    "Purpose": "Not properly protecting passwords/passphrases increases the risk and success of unauthorized use of privileged accounts.",
    "GoodPractice": "Tools such as password vaults can facilitate management and security of authentication factors.",
    "Definitions": "",
    "CustomizedApproachObjective": "Passwords/passphrases used by application and system accounts cannot be used by unauthorized personnel.",
    "ApplicabilityNotes": "Stored passwords/passphrases must be encrypted according to PCI DSS Requirement 8.3.2. This is a best practice until 31 March 2025.",
    "function_names": []
  },
  {
    "RequirementID": "8.6.3",
    "DefinedApproachRequirements": "Passwords/passphrases for application and system accounts are protected against misuse: changed periodically according to risk analysis, upon suspicion or confirmation of compromise, and constructed with sufficient complexity based on change frequency.",
    "DefinedApproachTestingProcedures": "8.6.3.a Examine policies and procedures to verify protection procedures.\n8.6.3.b Examine targeted risk analysis for change frequency and complexity for passwords/passphrases to verify alignment with Requirement 12.3.1.\n8.6.3.c Interview responsible personnel and examine system configurations to verify protection measures are implemented.",
    "Purpose": "Systems and application accounts pose higher security risk than user accounts due to elevated privileges; special consideration must be made to protect passwords/passphrases.",
    "GoodPractice": "Consider risk factors such as storage method, staff turnover, number of people with access, interactive login, and dynamic security analysis to determine how to protect passwords/passphrases.",
    "Definitions": "",
    "CustomizedApproachObjective": "Passwords/passphrases used by application and system accounts cannot be used indefinitely and are structured to resist brute-force and guessing attacks.",
    "ApplicabilityNotes": "This is a best practice until 31 March 2025. Recommended complexity and change frequency examples: at least once a year, minimum 15-character length, alphanumeric with upper/lower case and special characters.",
    "FurtherInformation": "For information about password strength variability and equivalency, see industry standards such as NIST SP 800-63 Digital Identity Guidelines.",
    "function_names": []
  },
  {
    "RequirementID": "9.1.1",
    "DefinedApproachRequirements": "All security policies and operational procedures identified in Requirement 9 are documented, kept up to date, in use, and known to all affected parties.",
    "DefinedApproachTestingProcedures": "Examine documentation and interview personnel to verify that security policies and operational procedures identified in Requirement 9 are managed according to all specified elements.",
    "Purpose": "Requirement 9.1.1 is about effectively managing and maintaining policies and procedures for restricting physical access to cardholder data.",
    "GoodPractice": "Update policies and procedures as needed to address changes in processes, technologies, and business objectives, rather than only on a periodic cycle.",
    "Definitions": "Security policies define the entity’s security objectives and principles. Operational procedures describe how to perform activities and define controls, methods, and processes to achieve results consistently.",
    "CustomizedApproachObjective": "Expectations, controls, and oversight for Requirement 9 activities are defined, adhered to, and repeatable.",
    "ApplicabilityNotes": "",
    "function_names": []
  },
  {
    "RequirementID": "9.1.2",
    "DefinedApproachRequirements": "Roles and responsibilities for performing activities in Requirement 9 are documented, assigned, and understood.",
    "DefinedApproachTestingProcedures": "9.1.2.a Examine documentation to verify descriptions of roles and responsibilities are documented and assigned.\n9.1.2.b Interview personnel to verify roles and responsibilities are assigned as documented and understood.",
    "Purpose": "Formally assigning roles ensures personnel are aware of responsibilities and critical activities occur.",
    "GoodPractice": "Roles and responsibilities may be documented in policies or separate documents. Personnel can acknowledge understanding. A RACI matrix can be used.",
    "Definitions": "",
    "CustomizedApproachObjective": "Day-to-day responsibilities for all Requirement 9 activities are allocated, and personnel are accountable for continuous operation.",
    "ApplicabilityNotes": "",
    "function_names": []
  },
  {
    "RequirementID": "9.2.1",
    "DefinedApproachRequirements": "Appropriate facility entry controls are in place to restrict physical access to systems in the CDE.",
    "DefinedApproachTestingProcedures": "Observe entry controls and interview responsible personnel to verify physical security controls restrict access to systems in the CDE.",
    "Purpose": "Physical access controls prevent unauthorized persons from gaining access to the CDE or altering/destroying equipment.",
    "GoodPractice": "Entry mechanisms must ensure only authorized personnel are granted access.",
    "Examples": "Facility entry controls can include badge readers, locks and keys, and controlled access to computer rooms and data centers.",
    "CustomizedApproachObjective": "System components in the CDE cannot be physically accessed by unauthorized personnel.",
    "ApplicabilityNotes": "Does not apply to locations publicly accessible by consumers (cardholders).",
    "function_names": []
  },
  {
    "RequirementID": "9.2.1.1",
    "DefinedApproachRequirements": "Individual physical access to sensitive areas within the CDE is monitored using video cameras or physical access control mechanisms, protected from tampering, reviewed and correlated, and stored for at least three months.",
    "DefinedApproachTestingProcedures": "9.2.1.1.a Observe locations to verify monitoring mechanisms are in place.\n9.2.1.1.b Verify monitoring mechanisms are protected from tampering or disabling.\n9.2.1.1.c Examine collected data, review correlation processes, and confirm data retention for at least three months.",
    "Purpose": "Monitoring access helps investigations of physical breaches and ensures accountability.",
    "GoodPractice": "Monitoring devices should be positioned to prevent tampering. Physical access mechanisms could be monitored or physically protected.",
    "Definitions": "",
    "CustomizedApproachObjective": "Trusted, verifiable records are maintained of individual physical entry to, and exit from, sensitive areas.",
    "ApplicabilityNotes": "",
    "function_names": []
  },
  {
    "RequirementID": "9.2.2",
    "DefinedApproachRequirements": "Physical and/or logical controls restrict use of publicly accessible network jacks within the facility.",
    "DefinedApproachTestingProcedures": "Interview personnel and observe publicly accessible network jacks to verify controls are in place to restrict access.",
    "Purpose": "Restricting access to network jacks prevents unauthorized devices from connecting to the network and accessing the CDE.",
    "GoodPractice": "Controls should prevent unauthorized individuals or devices from connecting to the network.",
    "Examples": "Disable network jacks in public areas or escort visitors in areas with active network jacks.",
    "CustomizedApproachObjective": "Unauthorized devices cannot connect to the network from public areas within the facility.",
    "ApplicabilityNotes": "",
    "function_names": []
  },
  {
    "RequirementID": "9.2.3",
    "DefinedApproachRequirements": "Physical access to wireless access points, gateways, networking/communications hardware, and telecommunication lines within the facility is restricted.",
    "DefinedApproachTestingProcedures": "Interview personnel and observe hardware and lines to verify physical access is restricted.",
    "Purpose": "Securing networking hardware prevents unauthorized access to network resources and the CDE.",
    "GoodPractice": "",
    "Definitions": "",
    "CustomizedApproachObjective": "Physical networking equipment cannot be accessed by unauthorized personnel.",
    "ApplicabilityNotes": "",
    "function_names": []
  },
  {
    "RequirementID": "9.2.4",
    "DefinedApproachRequirements": "Access to consoles in sensitive areas is restricted via locking when not in use.",
    "DefinedApproachTestingProcedures": "Observe a system administrator’s attempt to log into consoles in sensitive areas and verify they are locked to prevent unauthorized use.",
    "Purpose": "Locking console login screens prevents unauthorized access, alteration of system configurations, or destruction of records.",
    "GoodPractice": "",
    "Definitions": "",
    "CustomizedApproachObjective": "Physical consoles within sensitive areas cannot be used by unauthorized personnel.",
    "ApplicabilityNotes": "",
    "function_names": []
  },
  {
    "RequirementID": "9.3.1",
    "DefinedApproachRequirements": "Procedures are implemented for authorizing and managing physical access of personnel to the CDE, including identifying personnel, managing changes to access, revoking/terminating identification, and limiting access to the identification process/system to authorized personnel.",
    "DefinedApproachTestingProcedures": "9.3.1.a Examine documented procedures.\n9.3.1.b Observe identification methods, such as ID badges.\n9.3.1.c Verify that access to the identification process is limited to authorized personnel.",
    "Purpose": "Establishing procedures for granting, managing, and removing access ensures non-authorized individuals are prevented from gaining access to areas containing cardholder data.",
    "GoodPractice": "Visually identify personnel and whether they are visitors or employees.",
    "Definitions": "Refer to Appendix G for the definition of 'personnel.'",
    "Examples": "Assign badges to personnel to identify them.",
    "CustomizedApproachObjective": "Requirements for access to the physical CDE are defined and enforced to identify and authorize personnel.",
    "ApplicabilityNotes": "",
    "function_names": []
  },
  {
    "RequirementID": "9.3.1.1",
    "DefinedApproachRequirements": "Physical access to sensitive areas within the CDE is authorized based on job function, revoked immediately upon termination, and all access mechanisms are returned or disabled upon termination.",
    "DefinedApproachTestingProcedures": "9.3.1.1.a Observe personnel and examine physical access control lists to verify authorization and job-based access.\n9.3.1.1.b Verify access is revoked immediately upon termination.\n9.3.1.1.c For terminated personnel, examine physical access control lists and interview personnel to verify all access mechanisms were returned or disabled.",
    "Purpose": "Controlling physical access ensures only authorized personnel with legitimate business need are granted access.",
    "GoodPractice": "Policies should ensure physical access mechanisms are returned or disabled promptly upon personnel leaving the organization.",
    "Definitions": "",
    "Examples": "",
    "CustomizedApproachObjective": "Sensitive areas cannot be accessed by unauthorized personnel.",
    "ApplicabilityNotes": "",
    "function_names": []
  },
  {
    "RequirementID": "9.3.2",
    "DefinedApproachRequirements": "Procedures are implemented for authorizing and managing visitor access to the CDE, including authorization before entry, escorting, clear identification, badge expiration, and distinguishing visitors from personnel.",
    "DefinedApproachTestingProcedures": "9.3.2.a Examine documented procedures and interview personnel.\n9.3.2.b Observe visitor authorization and escort processes.\n9.3.2.c Observe use of visitor badges to verify they do not permit unescorted access.\n9.3.2.d Observe visitors to verify badges are used and distinguish visitors from personnel.\n9.3.2.e Examine visitor badges and badging system to verify expiration.",
    "Purpose": "Visitor controls reduce the ability of unauthorized persons to gain access to facilities and cardholder data.",
    "GoodPractice": "",
    "Definitions": "Refer to Appendix G for the definition of 'visitor.'",
    "Examples": "",
    "CustomizedApproachObjective": "Visitor access to the CDE is defined and enforced. Visitors cannot exceed authorized access.",
    "ApplicabilityNotes": "",
    "function_names": []
  },
  {
    "RequirementID": "9.3.3",
    "DefinedApproachRequirements": "Visitor badges or identification are surrendered or deactivated before visitors leave the facility or upon expiration.",
    "DefinedApproachTestingProcedures": "Observe visitors leaving the facility and interview personnel to verify visitor badges or identification are surrendered or deactivated.",
    "Purpose": "Ensuring visitor badges are returned or deactivated prevents malicious persons from using a previously authorized pass after the visit has ended.",
    "GoodPractice": "",
    "Definitions": "",
    "Examples": "",
    "CustomizedApproachObjective": "Visitor identification or badges cannot be reused after expiration.",
    "ApplicabilityNotes": "",
    "function_names": []
  },
  {
    "RequirementID": "9.3.4",
    "DefinedApproachRequirements": "Visitor logs maintain a physical record of visitor activity within the facility and sensitive areas, including visitor name, organization, authorizing personnel, date and time of visit, and retention for at least three months.",
    "DefinedApproachTestingProcedures": "9.3.4.a Examine visitor logs and interview personnel.\n9.3.4.b Verify logs contain visitor name, organization, authorizing personnel, and date/time of visit.\n9.3.4.c Examine log storage and verify logs are retained for at least three months.",
    "Purpose": "A visitor log documents minimum information to assist in identifying historical physical access and potential access to cardholder data.",
    "GoodPractice": "Recording both in and out times and verifying visitor ID matches the log entry provides helpful tracking information and assurance.",
    "Definitions": "",
    "Examples": "",
    "CustomizedApproachObjective": "Records of visitor access that enable identification of individuals are maintained.",
    "ApplicabilityNotes": "",
    "function_names": []
  },
  {
    "RequirementID": "9.4.1",
    "DefinedApproachRequirements": "All media with cardholder data is physically secured.",
    "DefinedApproachTestingProcedures": "Examine documentation to verify that the procedures defined for protecting cardholder data include controls for physically securing all media.",
    "Purpose": "Cardholder data is susceptible to unauthorized viewing, copying, or scanning if it is unprotected while it is on removable or portable media, printed out, or left on someone’s desk.",
    "GoodPractice": "",
    "Definitions": "",
    "Examples": "",
    "CustomizedApproachObjective": "Media with cardholder data cannot be accessed by unauthorized personnel.",
    "ApplicabilityNotes": "",
    "function_names": []
  },
  {
    "RequirementID": "9.4.1.1",
    "DefinedApproachRequirements": "Offline media backups with cardholder data are stored in a secure location.",
    "DefinedApproachTestingProcedures": "9.4.1.1.a Examine documentation to verify that procedures are defined for physically securing offline media backups with cardholder data in a secure location.\n9.4.1.1.b Examine logs or other documentation and interview responsible personnel at the storage location to verify that offline media backups are stored in a secure location.",
    "Purpose": "If stored in a non-secured facility, backups containing cardholder data may easily be lost, stolen, or copied for malicious intent.",
    "GoodPractice": "For secure storage of backup media, a good practice is to store media in an off-site facility, such as an alternate or backup site or commercial storage facility.",
    "Definitions": "",
    "Examples": "",
    "CustomizedApproachObjective": "Offline backups cannot be accessed by unauthorized personnel.",
    "ApplicabilityNotes": "",
    "function_names": []
  },
  {
    "RequirementID": "9.4.1.2",
    "DefinedApproachRequirements": "The security of the offline media backup location(s) with cardholder data is reviewed at least once every 12 months.",
    "DefinedApproachTestingProcedures": "9.4.1.2.a Examine documentation to verify that procedures are defined for reviewing the security of the offline media backup location(s) with cardholder data at least once every 12 months.\n9.4.1.2.b Examine documented procedures, logs, or other documentation, and interview responsible personnel at the storage location(s) to verify that the storage location’s security is reviewed at least once every 12 months.",
    "Purpose": "Conducting regular reviews of the storage facility enables the organization to address identified security issues promptly, minimizing the potential risk. It is important for the entity to be aware of the security of the area where media is being stored.",
    "GoodPractice": "",
    "Definitions": "",
    "Examples": "",
    "CustomizedApproachObjective": "The security controls protecting offline backups are verified periodically by inspection.",
    "ApplicabilityNotes": "",
    "function_names": []
  },
  {
    "RequirementID": "9.4.2",
    "DefinedApproachRequirements": "All media with cardholder data is classified in accordance with the sensitivity of the data.",
    "DefinedApproachTestingProcedures": "9.4.2.a Examine documentation to verify that procedures are defined for classifying media with cardholder data in accordance with the sensitivity of the data.\n9.4.2.b Examine media logs or other documentation to verify that all media is classified in accordance with the sensitivity of the data.",
    "Purpose": "Media not identified as confidential may not be adequately protected or may be lost or stolen.",
    "GoodPractice": "It is important that media be identified such that its classification status is apparent. This does not mean, however, that the media needs to have a 'confidential' label.",
    "Definitions": "",
    "Examples": "",
    "CustomizedApproachObjective": "Media are classified and protected appropriately.",
    "ApplicabilityNotes": "",
    "function_names": []
  },
  {
    "RequirementID": "9.4.3",
    "DefinedApproachRequirements": "Media with cardholder data sent outside the facility is secured as follows: logged, sent via secured courier or other trackable delivery method, with offsite tracking logs including details about media location.",
    "DefinedApproachTestingProcedures": "9.4.3.a Examine documentation to verify that procedures are defined for securing media sent outside the facility in accordance with all elements specified in this requirement.\n9.4.3.b Interview personnel and examine records to verify that all media sent outside the facility is logged and sent via secured courier or other delivery method that can be tracked.\n9.4.3.c Examine offsite tracking logs for all media to verify tracking details are documented.",
    "Purpose": "Media may be lost or stolen if sent via a non-trackable method. Use of secure couriers allows organizations to track media location and inventory.",
    "GoodPractice": "",
    "Definitions": "",
    "Examples": "",
    "CustomizedApproachObjective": "Media is secured and tracked when transported outside the facility.",
    "ApplicabilityNotes": "",
    "function_names": []
  },
  {
    "RequirementID": "9.4.4",
    "DefinedApproachRequirements": "Management approves all media with cardholder data that is moved outside the facility (including distribution to individuals).",
    "DefinedApproachTestingProcedures": "9.4.4.a Examine documentation to verify that procedures are defined to ensure that media moved outside the facility is approved by management.\n9.4.4.b Examine offsite media tracking logs and interview responsible personnel to verify that proper management authorization is obtained for all media moved outside the facility.",
    "Purpose": "Without a process ensuring all media movements are approved, media could be lost, stolen, or untracked.",
    "GoodPractice": "",
    "Definitions": "",
    "Examples": "",
    "CustomizedApproachObjective": "Media cannot leave a facility without the approval of accountable personnel.",
    "ApplicabilityNotes": "Individuals approving media movements should have the appropriate level of management authority, but do not need 'manager' in their title.",
    "function_names": []
  },
  {
    "RequirementID": "9.4.5",
    "DefinedApproachRequirements": "Inventory logs of all electronic media with cardholder data are maintained.",
    "DefinedApproachTestingProcedures": "9.4.5.a Examine documentation to verify that procedures are defined to maintain electronic media inventory logs.\n9.4.5.b Examine electronic media inventory logs and interview responsible personnel to verify that logs are maintained.",
    "Purpose": "Without careful inventory methods and storage controls, stolen or missing electronic media could go unnoticed for an indefinite amount of time.",
    "GoodPractice": "",
    "Definitions": "",
    "Examples": "",
    "CustomizedApproachObjective": "Accurate inventories of stored electronic media are maintained.",
    "ApplicabilityNotes": "",
    "function_names": []
  },
  {
    "RequirementID": "9.4.5.1",
    "DefinedApproachRequirements": "Inventories of electronic media with cardholder data are conducted at least once every 12 months.",
    "DefinedApproachTestingProcedures": "9.4.5.1.a Examine documentation to verify that procedures are defined to conduct inventories of electronic media with cardholder data at least once every 12 months.\n9.4.5.1.b Examine electronic media inventory logs and interview personnel to verify that electronic media inventories are performed at least once every 12 months.",
    "Purpose": "Without careful inventory methods and storage controls, stolen or missing electronic media could go unnoticed for an indefinite amount of time.",
    "GoodPractice": "",
    "Definitions": "",
    "Examples": "",
    "CustomizedApproachObjective": "Media inventories are verified periodically.",
    "ApplicabilityNotes": "",
    "function_names": []
  },
  {
    "RequirementID": "9.4.6",
    "DefinedApproachRequirements": "Hard-copy materials with cardholder data are destroyed when no longer needed for business or legal reasons, as follows: cross-cut shredded, incinerated, or pulped; stored in secure containers prior to destruction.",
    "DefinedApproachTestingProcedures": "9.4.6.a Examine the media destruction policy to verify that procedures are defined to destroy hard-copy media with cardholder data when no longer needed.\n9.4.6.b Observe processes and interview personnel to verify that hard-copy materials are destroyed such that cardholder data cannot be reconstructed.\n9.4.6.c Observe storage containers used for materials to verify that the containers are secure.",
    "Purpose": "If steps are not taken to destroy information on hard-copy media, malicious individuals may retrieve information, leading to a data compromise (e.g., 'dumpster diving'). Securing storage containers prevents capture of sensitive information while materials are collected.",
    "GoodPractice": "Consider 'to-be-shredded' containers with a lock that prevents access to contents or physically prevents access to the inside.",
    "Definitions": "",
    "Examples": "",
    "FurtherInformation": "See NIST Special Publication 800-88, Revision 1: Guidelines for Media Sanitization.",
    "CustomizedApproachObjective": "Cardholder data cannot be recovered from media that has been destroyed or is pending destruction.",
    "ApplicabilityNotes": "These media destruction requirements are separate from PCI DSS Requirement 3.2.1, which is for securely deleting cardholder data per retention policies.",
    "function_names": []
  },
  {
    "RequirementID": "9.4.7",
    "DefinedApproachRequirements": "Electronic media with cardholder data is destroyed when no longer needed for business or legal reasons via one of the following: the electronic media is destroyed or the cardholder data is rendered unrecoverable so that it cannot be reconstructed.",
    "DefinedApproachTestingProcedures": "9.4.7.a Examine the media destruction policy to verify that procedures are defined to destroy electronic media when no longer needed for business or legal reasons in accordance with all elements specified in this requirement.\n9.4.7.b Observe the media destruction process and interview responsible personnel to verify that electronic media with cardholder data is destroyed via one of the methods specified in this requirement.",
    "Purpose": "If steps are not taken to destroy information contained on electronic media when no longer needed, malicious individuals may retrieve information from the disposed media, leading to a data compromise. For example, malicious individuals may use a technique known as “dumpster diving,” where they search through trashcans and recycle bins looking for information they can use to launch an attack.",
    "GoodPractice": "The deletion function in most operating systems allows deleted data to be recovered, so instead, a dedicated secure deletion function or application should be used to make data unrecoverable.",
    "Examples": "Methods for securely destroying electronic media include secure wiping in accordance with industry-accepted standards for secure deletion, degaussing, or physical destruction (such as grinding or shredding hard disks).",
    "FurtherInformation": "See NIST Special Publication 800-88, Revision 1: Guidelines for Media Sanitization.",
    "CustomizedApproachObjective": "Cardholder data cannot be recovered from media that has been erased or destroyed.",
    "ApplicabilityNotes": "These requirements for media destruction when that media is no longer needed for business or legal reasons are separate and distinct from PCI DSS Requirement 3.2.1, which is for securely deleting cardholder data when no longer needed per the entity’s cardholder data retention policies.",
    "function_names": []
  },
  {
    "RequirementID": "9.5.1",
    "DefinedApproachRequirements": "Point-of-interaction (POI) devices are protected from tampering and unauthorized substitution. POI devices that capture payment card data via direct physical interaction with the payment card form factor are protected from tampering and unauthorized substitution, including: maintaining a list of POI devices; periodically inspecting POI devices to look for tampering or unauthorized substitution; training personnel to be aware of suspicious behavior and to report tampering or unauthorized substitution of devices.",
    "DefinedApproachTestingProcedures": "9.5.1 Examine documented policies and procedures to verify that processes are defined that include all elements specified in this requirement.",
    "Purpose": "Criminals attempt to steal payment card data by stealing and/or manipulating card-reading devices and terminals. They may steal devices to learn how to break into them or replace legitimate devices with fraudulent devices that capture payment card data. Criminals may also attach 'skimming' components to capture payment card data before it enters the legitimate device.",
    "GoodPractice": "Entities may consider implementing protection from tampering and unauthorized substitution for deployed POI devices used in card-present transactions. For on-the-road devices, the location may include the name of the personnel to whom the device is assigned.",
    "Definitions": "",
    "Examples": "Methods to maintain device locations include identifying the address of the site or facility where the device is located.",
    "FurtherInformation": "Additional best practices on skimming prevention are available on the PCI SSC website.",
    "CustomizedApproachObjective": "The entity has defined procedures to protect and manage point-of-interaction devices. Expectations, controls, and oversight for the management and protection of POI devices are defined and adhered to by affected personnel. The identity and location of POI devices is recorded and known at all times.",
    "ApplicabilityNotes": "These requirements apply to deployed POI devices used in card-present transactions (swiped, tapped, or dipped). These requirements do not apply to components used only for manual PAN key entry or commercial off-the-shelf (COTS) devices, such as smartphones or tablets, which are mobile merchant-owned devices designed for mass-market distribution.",
    "function_names": []
  },
  {
    "RequirementID": "9.5.1.1",
    "DefinedApproachRequirements": "An up-to-date list of POI devices is maintained, including make and model of the device, location of device, and device serial number or other methods of unique identification.",
    "DefinedApproachTestingProcedures": "9.5.1.1.a Examine the list of POI devices to verify it includes all elements specified in this requirement.\n9.5.1.1.b Observe POI devices and device locations and compare to devices in the list to verify that the list is accurate and up to date.\n9.5.1.1.c Interview personnel to verify the list of POI devices is updated when devices are added, relocated, decommissioned, etc.",
    "Purpose": "Keeping an up-to-date list of POI devices helps an organization track where devices are supposed to be and quickly identify if a device is missing or lost.",
    "GoodPractice": "The method for maintaining a list of devices may be automated (for example, a device management system) or manual (for example, documented in electronic or paper records).",
    "Examples": "For on-the-road devices, the location may include the name of the personnel to whom the device is assigned. Methods to maintain device locations include identifying the address of the site or facility where the device is located.",
    "CustomizedApproachObjective": "The identity and location of POI devices is recorded and known at all times.",
    "ApplicabilityNotes": "",
    "FurtherInformation": "",
    "function_names": []
  },
  {
    "RequirementID": "9.5.1.2",
    "DefinedApproachRequirements": "POI device surfaces are periodically inspected to detect tampering and unauthorized substitution.",
    "DefinedApproachTestingProcedures": "9.5.1.2.a Examine documented procedures to verify processes are defined for periodic inspections of POI device surfaces to detect tampering and unauthorized substitution.\n9.5.1.2.b Interview responsible personnel and observe inspection processes to verify: personnel are aware of procedures for inspecting devices; all devices are periodically inspected for evidence of tampering and unauthorized substitution.",
    "Purpose": "Regular inspections of devices will help organizations detect tampering more quickly via external evidence—for example, the addition of a card skimmer—or replacement of a device, thereby minimizing the potential impact of using fraudulent devices.",
    "GoodPractice": "Methods for periodic inspection include checking the serial number or other device characteristics and comparing the information to the list of POI devices to verify the device has not been swapped with a fraudulent device.",
    "Examples": "The type of inspection will depend on the device. For instance, photographs of devices known to be secure can be used to compare a device’s current appearance with its original appearance to see whether it has changed. Another option may be to use a secure marker pen, such as a UV light marker, to mark device surfaces and device openings so any tampering or replacement will be apparent. Criminals will often replace the outer casing of a device to hide their tampering, and these methods may help to detect such activities. Device vendors may also provide security guidance and 'how to' guides to help determine whether the device has been subject to tampering. Signs that a device might have been tampered with or substituted include: unexpected attachments or cables plugged into the device, missing or changed security labels, broken or differently colored casing, changes to the serial number or other external markings.",
    "CustomizedApproachObjective": "Point of interaction devices cannot be tampered with, substituted without authorization, or have skimming attachments installed without timely detection.",
    "ApplicabilityNotes": "",
    "FurtherInformation": "",
    "function_names": []
  },
  {
    "RequirementID": "9.5.1.2.1",
    "DefinedApproachRequirements": "The frequency of periodic POI device inspections and the type of inspections performed is defined in the entity’s targeted risk analysis, which is performed according to all elements specified in Requirement 12.3.1.",
    "DefinedApproachTestingProcedures": "9.5.1.2.1.a Examine the entity’s targeted risk analysis for the frequency of periodic POI device inspections and type of inspections performed to verify the risk analysis was performed in accordance with all elements specified in Requirement 12.3.1.\n9.5.1.2.1.b Examine documented results of periodic device inspections and interview personnel to verify that the frequency and type of POI device inspections performed match what is defined in the entity’s targeted risk analysis conducted for this requirement.",
    "Purpose": "Entities are best placed to determine the frequency of POI device inspections based on the environment in which the device operates.",
    "GoodPractice": "The frequency of inspections will depend on factors such as the location of a device and whether the device is attended or unattended. Devices left in public areas without supervision may require more frequent inspections than devices in secure areas or supervised when accessible to the public. Vendors may provide guidance on how often POI devices should be checked, which should be incorporated into periodic inspections.",
    "Examples": "",
    "CustomizedApproachObjective": "POI devices are inspected at a frequency that addresses the entity’s risk.",
    "ApplicabilityNotes": "This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.",
    "FurtherInformation": "",
    "function_names": []
  },
  {
    "RequirementID": "9.5.1.3",
    "DefinedApproachRequirements": "Training is provided for personnel in POI environments to be aware of attempted tampering or replacement of POI devices, and includes: verifying the identity of any third-party persons claiming to be repair or maintenance personnel before granting access, procedures to ensure devices are not installed, replaced, or returned without verification, being aware of suspicious behavior around devices, and reporting suspicious behavior and indications of device tampering or substitution to appropriate personnel.",
    "DefinedApproachTestingProcedures": "9.5.1.3.a Review training materials for personnel in POI environments to verify they include all elements specified in this requirement.\n9.5.1.3.b Interview personnel in POI environments to verify they have received training and know the procedures for all elements specified in this requirement.",
    "Purpose": "Criminals will often pose as authorized maintenance personnel to gain access to POI devices.",
    "GoodPractice": "Personnel training should include being alert to and questioning anyone who shows up to do POI maintenance to ensure they are authorized and have a valid work order, including agents, maintenance or repair personnel, technicians, service providers, or other third parties. Personnel should always verify with management or suppliers that devices are legitimate before installation. Suspicious behaviors such as unsolicited 'new' POI devices with return instructions should be treated cautiously.",
    "Examples": "Suspicious behavior that personnel should be aware of includes attempts by unknown persons to unplug or open devices. Ensuring personnel are aware of mechanisms for reporting suspicious behavior and who to report to, such as a manager or security officer, helps reduce the likelihood and potential impact of a device being tampered with or substituted.",
    "CustomizedApproachObjective": "Personnel are knowledgeable about the types of attacks against POI devices, the entity’s technical and procedural countermeasures, and can access assistance and guidance when required.",
    "ApplicabilityNotes": "",
    "FurtherInformation": "",
    "function_names": []
  },
  {
    "RequirementID": "10.1.1",
    "DefinedApproachRequirements": "All security policies and operational procedures that are identified in Requirement 10 are: documented, kept up to date, in use, known to all affected parties.",
    "DefinedApproachTestingProcedures": "Examine documentation and interview personnel to verify that security policies and operational procedures identified in Requirement 10 are managed in accordance with all elements specified in this requirement.",
    "Purpose": "Requirement 10.1.1 is about effectively managing and maintaining the various policies and procedures specified throughout Requirement 10. While it is important to define the specific policies or procedures called out in Requirement 10, it is equally important to ensure they are properly documented, maintained, and disseminated.",
    "GoodPractice": "It is important to update policies and procedures as needed to address changes in processes, technologies, and business objectives. Consider updating these documents as soon as possible after a change occurs and not only on a periodic cycle.",
    "Definitions": "Security policies define the entity’s security objectives and principles. Operational procedures describe how to perform activities, and define the controls, methods, and processes that are followed to achieve the desired result in a consistent manner and in accordance with policy objectives.",
    "CustomizedApproachObjective": "Expectations, controls, and oversight for meeting activities within Requirement 10 are defined and adhered to by affected personnel. All supporting activities are repeatable, consistently applied, and conform to management’s intent.",
    "function_names": []
  },
  {
    "RequirementID": "10.1.2",
    "DefinedApproachRequirements": "Roles and responsibilities for performing activities in Requirement 10 are documented, assigned, and understood.",
    "DefinedApproachTestingProcedures": "10.1.2.a Examine documentation to verify that descriptions of roles and responsibilities for performing activities in Requirement 10 are documented and assigned.\n10.1.2.b Interview personnel with responsibility for performing activities in Requirement 10 to verify that roles and responsibilities are assigned as defined and are understood.",
    "Purpose": "If roles and responsibilities are not formally assigned, personnel may not be aware of their day-to-day responsibilities and critical activities may not occur.",
    "GoodPractice": "Roles and responsibilities may be documented within policies and procedures or maintained within separate documents. As part of communicating roles and responsibilities, entities can consider having personnel acknowledge their acceptance and understanding of their assigned roles and responsibilities.",
    "Examples": "A method to document roles and responsibilities is a responsibility assignment matrix that includes who is responsible, accountable, consulted, and informed (RACI matrix).",
    "CustomizedApproachObjective": "Day-to-day responsibilities for performing all the activities in Requirement 10 are allocated. Personnel are accountable for successful, continuous operation of these requirements.",
    "function_names": []
  },
  {
    "RequirementID": "10.2.1",
    "DefinedApproachRequirements": "Audit logs are enabled and active for all system components and cardholder data.",
    "DefinedApproachTestingProcedures": "Interview the system administrator and examine system configurations to verify that audit logs are enabled and active for all system components.",
    "Purpose": "Audit logs send alerts to the system administrator, provide data to other monitoring mechanisms such as intrusion-detection systems (IDS) and SIEM tools, and provide a history trail for post-incident investigation. Logging and analyzing security-relevant events enable an organization to identify and trace potentially malicious activities.",
    "GoodPractice": "When considering which information to record in logs, it is important to remember that information stored in audit logs is sensitive and should be protected. Only essential information should be stored to minimize risk.",
    "CustomizedApproachObjective": "Records of all activities affecting system components and cardholder data are captured.",
    "function_names": []
  },
  {
    "RequirementID": "10.2.1.1",
    "DefinedApproachRequirements": "Audit logs capture all individual user access to cardholder data.",
    "DefinedApproachTestingProcedures": "Examine audit log configurations and log data to verify that all individual user access to cardholder data is logged.",
    "Purpose": "It is critical to have a process or system that links user access to system components accessed. Malicious individuals could obtain knowledge of a user account with access to systems in the CDE, or create an unauthorized account to access cardholder data.",
    "GoodPractice": "A record of all individual access to cardholder data can identify which accounts may have been compromised or misused.",
    "CustomizedApproachObjective": "Records of all individual user access to cardholder data are captured.",
    "function_names": []
  },
  {
    "RequirementID": "10.2.1.2",
    "DefinedApproachRequirements": "Audit logs capture all actions taken by any individual with administrative access, including any interactive use of application or system accounts.",
    "DefinedApproachTestingProcedures": "Examine audit log configurations and log data to verify that all actions taken by any individual with administrative access, including any interactive use of application or system accounts, are logged.",
    "Purpose": "Accounts with increased access privileges, such as administrator or root accounts, have the potential to significantly impact system security or operational functionality. Without a log of activities, an organization cannot trace issues resulting from administrative mistakes or misuse of privileges back to specific actions and accounts.",
    "Definitions": "The functions or activities considered administrative are beyond those performed by regular users as part of routine business functions. Refer to Appendix G for the definition of 'administrative access.'",
    "CustomizedApproachObjective": "Records of all actions performed by individuals with elevated privileges are captured.",
    "function_names": []
  },
  {
    "RequirementID": "10.2.1.3",
    "DefinedApproachRequirements": "Audit logs capture all access to audit logs.",
    "DefinedApproachTestingProcedures": "Examine audit log configurations and log data to verify that access to all audit logs is captured.",
    "Purpose": "Malicious users often attempt to alter audit logs to hide their actions. A record of access allows an organization to trace any inconsistencies or potential tampering of logs to an individual account.",
    "CustomizedApproachObjective": "Records of all access to audit logs are captured.",
    "function_names": []
  },
  {
    "RequirementID": "10.2.1.4",
    "DefinedApproachRequirements": "Audit logs capture all invalid logical access attempts.",
    "DefinedApproachTestingProcedures": "Examine audit log configurations and log data to verify that invalid logical access attempts are captured.",
    "Purpose": "Malicious individuals often perform multiple access attempts on targeted systems. Multiple invalid login attempts may indicate an unauthorized user attempting to 'brute force' or guess a password.",
    "CustomizedApproachObjective": "Records of all invalid access attempts are captured.",
    "function_names": []
  },
  {
    "RequirementID": "10.2.1.5",
    "DefinedApproachRequirements": "Audit logs capture all changes to identification and authentication credentials including: creation of new accounts, elevation of privileges, all changes, additions, or deletions to accounts with administrative access.",
    "DefinedApproachTestingProcedures": "Examine audit log configurations and log data to verify that changes to identification and authentication credentials are captured in accordance with all elements specified in this requirement.",
    "Purpose": "Logging changes to authentication credentials (including elevation of privileges, additions, and deletions of accounts with administrative access) provides residual evidence of activities. Malicious users may attempt to manipulate authentication credentials to bypass them or impersonate a valid account.",
    "CustomizedApproachObjective": "Records of all changes to identification and authentication credentials are captured.",
    "function_names": []
  },
  {
    "RequirementID": "10.2.1.6",
    "DefinedApproachRequirements": "Audit logs capture the following: all initialization of new audit logs, and all starting, stopping, or pausing of existing audit logs.",
    "DefinedApproachTestingProcedures": "Examine audit log configurations and log data to verify that all elements specified in this requirement are captured.",
    "Purpose": "Turning off or pausing audit logs before performing illicit activities is common for malicious users who want to avoid detection. Initialization of audit logs could indicate that a user disabled the log function to hide their actions.",
    "CustomizedApproachObjective": "Records of all changes to audit log activity status are captured.",
    "function_names": []
  },
  {
    "RequirementID": "10.2.1.7",
    "DefinedApproachRequirements": "Audit logs capture all creation and deletion of system-level objects.",
    "DefinedApproachTestingProcedures": "Examine audit log configurations and log data to verify that creation and deletion of system-level objects is captured.",
    "Purpose": "Malicious software often creates or replaces system-level objects on the target system to control a particular function or operation. By logging creation or deletion of system-level objects, it is easier to determine whether modifications were authorized.",
    "CustomizedApproachObjective": "Records of alterations that indicate a system has been modified from its intended functionality are captured.",
    "function_names": []
  },
  {
    "RequirementID": "10.2.2",
    "DefinedApproachRequirements": "Audit logs record the following details for each auditable event: user identification, type of event, date and time, success and failure indication, origination of event, identity or name of affected data, system component, resource, or service.",
    "DefinedApproachTestingProcedures": "Interview personnel and examine audit log configurations and log data to verify that all elements specified in this requirement are included in log entries for each auditable event (from 10.2.1.1 through 10.2.1.7).",
    "Purpose": "Recording these details for auditable events enables identification of successful and failed attempts and provides sufficient detail to follow up on suspicious activities.",
    "CustomizedApproachObjective": "Sufficient data to be able to identify successful and failed attempts and who, what, when, where, and how for each event listed in requirement 10.2.1 are captured.",
    "function_names": []
  },
  {
    "RequirementID": "10.3.1",
    "DefinedApproachRequirements": "Read access to audit log files is limited to those with a job-related need.",
    "DefinedApproachTestingProcedures": "Interview system administrators and examine system configurations and privileges to verify that only individuals with a job-related need have read access to audit log files.",
    "Purpose": "Audit log files contain sensitive information and read access must be limited to those with a valid business need. This includes logs on originating systems as well as any storage locations.",
    "GoodPractice": "Adequate protection includes strong access control based on 'need to know' and physical or network segregation to make logs harder to find and modify.",
    "CustomizedApproachObjective": "Stored activity records cannot be accessed by unauthorized personnel.",
    "function_names": []
  },
  {
    "RequirementID": "10.3.2",
    "DefinedApproachRequirements": "Audit log files are protected to prevent modifications by individuals.",
    "DefinedApproachTestingProcedures": "Examine system configurations and privileges and interview system administrators to verify that current audit log files are protected from modifications by individuals via access control, physical segregation, and/or network segregation.",
    "Purpose": "Malicious individuals may try to edit audit logs to hide activity. Without adequate protection, the completeness, accuracy, and integrity of audit logs cannot be guaranteed.",
    "GoodPractice": "Entities should prevent logs from being exposed in publicly accessible locations.",
    "CustomizedApproachObjective": "Stored activity records cannot be modified by personnel.",
    "function_names": []
  },
  {
    "RequirementID": "10.3.3",
    "DefinedApproachRequirements": "Audit log files, including those for external-facing technologies, are promptly backed up to a secure, central, internal log server(s) or other media that is difficult to modify.",
    "DefinedApproachTestingProcedures": "Examine backup configurations or log files to verify that current audit log files are promptly backed up to a secure, central, internal log server(s) or other media that is difficult to modify.",
    "Purpose": "Promptly backing up logs to centralized media keeps them protected, even if the system generating the logs becomes compromised. Writing logs from external-facing technologies reduces risk of loss or alteration.",
    "GoodPractice": "Entities may back up logs directly, offload, or copy from external systems to secure internal systems or media.",
    "CustomizedApproachObjective": "Stored activity records are secured and preserved in a central location to prevent unauthorized modification.",
    "function_names": []
  },
  {
    "RequirementID": "10.3.4",
    "DefinedApproachRequirements": "File integrity monitoring or change-detection mechanisms are used on audit logs to ensure existing log data cannot be changed without generating alerts.",
    "DefinedApproachTestingProcedures": "Examine system settings, monitored files, and results from monitoring activities to verify the use of file integrity monitoring or change-detection software on audit logs.",
    "Purpose": "File integrity monitoring checks for changes to critical files and notifies when changes are identified. Existing log data or files changed should trigger alerts, while new log entries should not.",
    "GoodPractice": "Software used to monitor changes to audit logs should generate alerts when existing log data is changed or deleted.",
    "CustomizedApproachObjective": "Stored activity records cannot be modified without an alert being generated.",
    "function_names": []
  },
  {
    "RequirementID": "10.4.1",
    "DefinedApproachRequirements": "The following audit logs are reviewed at least once daily: all security events, logs of all system components that store, process, or transmit CHD and/or SAD, logs of all critical system components, and logs of all servers and system components that perform security functions (network security controls, IDS/IPS, authentication servers).",
    "DefinedApproachTestingProcedures": "10.4.1.a Examine security policies and procedures to verify that processes are defined for reviewing all elements specified in this requirement at least once daily.\n10.4.1.b Observe processes and interview personnel to verify that all elements specified in this requirement are reviewed at least once daily.",
    "Purpose": "Many breaches occur months before being detected. Regular log reviews mean incidents can be quickly identified and proactively addressed.",
    "GoodPractice": "Checking logs daily (7 days a week, 365 days a year, including holidays) minimizes the amount of time and exposure of a potential breach. Log harvesting, parsing, and alerting tools, centralized log management systems, event log analyzers, and SIEM solutions are examples of automated tools that can be used to meet this requirement. Daily review of security events, logs from critical system components, and logs from systems that perform security functions (firewalls, IDS/IPS, FIM systems) is necessary. Organizations may maintain a baseline of 'normal' traffic to help identify anomalous behavior. Third-party service providers performing log review services must understand the entity's environment and baseline to provide accurate anomaly notifications.",
    "CustomizedApproachObjective": "Potentially suspicious or anomalous activities are quickly identified to minimize impact.",
    "function_names": []
  },
  {
    "RequirementID": "10.4.1.1",
    "DefinedApproachRequirements": "Automated mechanisms are used to perform audit log reviews.",
    "DefinedApproachTestingProcedures": "Examine log review mechanisms and interview personnel to verify that automated mechanisms are used to perform log reviews.",
    "Purpose": "",
    "GoodPractice": "Manual log reviews are difficult due to the amount of log data generated. Using log harvesting, parsing, alerting tools, centralized log management, event log analyzers, and SIEM solutions can facilitate the process. Establishing a baseline of normal audit activity patterns improves identification of suspicious activities. Logging tools should be aligned with environment changes by periodically reviewing and updating settings.",
    "CustomizedApproachObjective": "Potentially suspicious or anomalous activities are identified via a repeatable and consistent mechanism.",
    "ApplicabilityNotes": "This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.",
    "FurtherInformation": "Refer to the Information Supplement: Effective Daily Log Monitoring for additional guidance.",
    "function_names": []
  },
  {
    "RequirementID": "10.4.2",
    "DefinedApproachRequirements": "Logs of all other system components (those not specified in Requirement 10.4.1) are reviewed periodically.",
    "DefinedApproachTestingProcedures": "10.4.2.a Examine security policies and procedures to verify that processes are defined for reviewing logs of all other system components periodically.\n10.4.2.b Examine documented results of log reviews and interview personnel to verify that log reviews are performed periodically.",
    "Purpose": "Periodic review of logs for all other system components helps identify indications of potential issues or attempts to access critical systems via less-critical systems.",
    "GoodPractice": "",
    "CustomizedApproachObjective": "Potentially suspicious or anomalous activities for other system components (not included in 10.4.1) are reviewed in accordance with the entity’s identified risk.",
    "ApplicabilityNotes": "This requirement is applicable to all other in-scope system components not included in Requirement 10.4.1.",
    "function_names": []
  },
  {
    "RequirementID": "10.4.2.1",
    "DefinedApproachRequirements": "The frequency of periodic log reviews for all other system components (not defined in Requirement 10.4.1) is defined in the entity’s targeted risk analysis, which is performed according to all elements specified in Requirement 12.3.1.",
    "DefinedApproachTestingProcedures": "10.4.2.1.a Examine the entity’s targeted risk analysis for the frequency of periodic log reviews for all other system components to verify the risk analysis was performed in accordance with all elements specified at Requirement 12.3.1.\n10.4.2.1.b Examine documented results of periodic log reviews of all other system components and interview personnel to verify log reviews are performed at the frequency specified in the entity’s targeted risk analysis performed for this requirement.",
    "Purpose": "Entities can determine the optimum period to review these logs based on criteria such as complexity of each entity’s environment, number of system types, and system functions.",
    "GoodPractice": "",
    "CustomizedApproachObjective": "Log reviews for lower-risk system components are performed at a frequency that addresses the entity’s risk.",
    "ApplicabilityNotes": "This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.",
    "function_names": []
  },
  {
    "RequirementID": "10.4.3",
    "DefinedApproachRequirements": "Exceptions and anomalies identified during the review process are addressed.",
    "DefinedApproachTestingProcedures": "10.4.3.a Examine security policies and procedures to verify that processes are defined for addressing exceptions and anomalies identified during the review process.\n10.4.3.b Observe processes and interview personnel to verify that, when exceptions and anomalies are identified, they are addressed.",
    "Purpose": "If exceptions and anomalies identified during the log-review process are not investigated, the entity may be unaware of unauthorized and potentially malicious activities occurring within their network.",
    "GoodPractice": "Entities should consider how to address the following when developing their processes for defining and managing exceptions and anomalies: how log review activities are recorded, how to rank and prioritize exceptions and anomalies, what procedures should be in place to report and escalate exceptions and anomalies, and who is responsible for investigating and any remediation tasks.",
    "CustomizedApproachObjective": "Suspicious or anomalous activities are addressed.",
    "function_names": []
  },
  {
    "RequirementID": "10.5.1",
    "DefinedApproachRequirements": "Retain audit log history for at least 12 months, with at least the most recent three months immediately available for analysis.",
    "DefinedApproachTestingProcedures": "10.5.1.a Examine documentation to verify that the following is defined:\n• Audit log retention policies.\n• Procedures for retaining audit log history for at least 12 months, with at least the most recent three months immediately available online.\n10.5.1.b Examine configurations of audit log history, interview personnel and examine audit logs to verify that audit logs history is retained for at least 12 months.\n10.5.1.c Interview personnel and observe processes to verify that at least the most recent three months’ audit log history is immediately available for analysis.",
    "Purpose": "Retaining historical audit logs for at least 12 months is necessary because compromises often go unnoticed for significant lengths of time. Having centrally stored log history allows investigators to better determine the length of time a potential breach was occurring, and the possible system(s) impacted. By having three months of logs immediately available, an entity can quickly identify and minimize impact of a data breach.",
    "Examples": "Methods that allow logs to be immediately available include storing logs online, archiving logs, or restoring logs quickly from backups.",
    "CustomizedApproachObjective": "Historical records of activity are available immediately to support incident response and are retained for at least 12 months.",
    "function_names": []
  },
  {
    "RequirementID": "10.6.1",
    "DefinedApproachRequirements": "System clocks and time are synchronized using time-synchronization technology.",
    "DefinedApproachTestingProcedures": "Examine system configuration settings to verify that time-synchronization technology is implemented and kept current.",
    "Purpose": "Time synchronization technology is used to synchronize clocks on multiple systems. When clocks are not properly synchronized, it can be difficult, if not impossible, to compare log files from different systems and establish an exact sequence of events, which is crucial for forensic analysis following a breach. For post-incident forensics teams, the accuracy and consistency of time across all systems and the time of each activity are critical in determining how the systems were compromised.",
    "Examples": "Network Time Protocol (NTP) is one example of time-synchronization technology.",
    "CustomizedApproachObjective": "Common time is established across all systems.",
    "ApplicabilityNotes": "Keeping time-synchronization technology current includes managing vulnerabilities and patching the technology according to PCI DSS Requirements 6.3.1 and 6.3.3.",
    "function_names": []
  },
  {
    "RequirementID": "10.6.2",
    "DefinedApproachRequirements": "Systems are configured to the correct and consistent time as follows:\n• One or more designated time servers are in use.\n• Only the designated central time server(s) receives time from external sources.\n• Time received from external sources is based on International Atomic Time or Coordinated Universal Time (UTC).\n• The designated time server(s) accept time updates only from specific industry-accepted external sources.\n• Where there is more than one designated time server, the time servers peer with one another to keep accurate time.\n• Internal systems receive time information only from designated central time server(s).",
    "DefinedApproachTestingProcedures": "Examine system configuration settings for acquiring, distributing, and storing the correct time to verify the settings are configured in accordance with all elements specified in this requirement.",
    "Purpose": "Using reputable time servers is a critical component of the time synchronization process. Accepting time updates from specific, industry-accepted external sources helps prevent a malicious individual from changing time settings on systems.",
    "GoodPractice": "Another option to prevent unauthorized use of internal time servers is to encrypt updates with a symmetric key and create access control lists that specify the IP addresses of client machines that will be provided with the time updates.",
    "CustomizedApproachObjective": "The time on all systems is accurate and consistent.",
    "function_names": []
  },
  {
    "RequirementID": "10.6.3",
    "DefinedApproachRequirements": "Time synchronization settings and data are protected as follows:\n• Access to time data is restricted to only personnel with a business need.\n• Any changes to time settings on critical systems are logged, monitored, and reviewed.",
    "DefinedApproachTestingProcedures": "10.6.3.a Examine system configurations and time synchronization settings to verify that access to time data is restricted to only personnel with a business need.\n10.6.3.b Examine system configurations and time synchronization settings and logs and observe processes to verify that any changes to time settings on critical systems are logged, monitored, and reviewed.",
    "Purpose": "Attackers will try to change time configurations to hide their activity. Therefore, restricting the ability to change or modify time synchronization configurations or the system time to administrators will lessen the probability of an attacker successfully changing time configurations.",
    "CustomizedApproachObjective": "System time settings cannot be modified by unauthorized personnel.",
    "function_names": []
  },
  {
    "RequirementID": "10.7.1",
    "DefinedApproachRequirements": "Additional requirement for service providers only: Failures of critical security control systems are detected, alerted, and addressed promptly, including but not limited to failure of the following critical security control systems:\n• Network security controls.\n• IDS/IPS.\n• FIM.\n• Anti-malware solutions.\n• Physical access controls.\n• Logical access controls.\n• Audit logging mechanisms.\n• Segmentation controls (if used).",
    "DefinedApproachTestingProcedures": "10.7.1.a Additional testing procedure for service provider assessments only: Examine documentation to verify that processes are defined for the prompt detection and addressing of failures of critical security control systems, including but not limited to failure of all elements specified in this requirement.\n10.7.1.b Additional testing procedure for service provider assessments only: Observe detection and alerting processes and interview personnel to verify that failures of critical security control systems are detected and reported, and that failure of a critical security control results in the generation of an alert.",
    "Purpose": "Without formal processes to detect and alert when critical security controls fail, failures may go undetected for extended periods and provide attackers ample time to compromise system components and steal account data from the CDE.",
    "GoodPractice": "The specific types of failures may vary, depending on the function of the device system component and technology in use. Typical failures include a system ceasing to perform its security function or not functioning in its intended manner, such as a firewall erasing all its rules or going offline.",
    "CustomizedApproachObjective": "Failures in critical security control systems are promptly identified and addressed.",
    "ApplicabilityNotes": "This requirement applies only when the entity being assessed is a service provider. This requirement will be superseded by Requirement 10.7.2 as of 31 March 2025.",
    "function_names": []
  },
  {
    "RequirementID": "10.7.2",
    "DefinedApproachRequirements": "Failures of critical security control systems are detected, alerted, and addressed promptly, including but not limited to failure of the following critical security control systems:\n• Network security controls.\n• IDS/IPS.\n• Change-detection mechanisms.\n• Anti-malware solutions.\n• Physical access controls.\n• Logical access controls.\n• Audit logging mechanisms.\n• Segmentation controls (if used).\n• Audit log review mechanisms.\n• Automated security testing tools (if used).",
    "DefinedApproachTestingProcedures": "10.7.2.a Examine documentation to verify that processes are defined for the prompt detection and addressing of failures of critical security control systems, including but not limited to failure of all elements specified in this requirement.\n10.7.2.b Observe detection and alerting processes and interview personnel to verify that failures of critical security control systems are detected and reported, and that failure of a critical security control results in the generation of an alert.",
    "Purpose": "Without formal processes to detect and alert when critical security controls fail, failures may go undetected for extended periods and provide attackers ample time to compromise system components and steal account data from the CDE.",
    "GoodPractice": "The specific types of failures may vary, depending on the function of the device system component and technology in use. However, typical failures include a system no longer performing its security function or not functioning in its intended manner—for example, a firewall erasing its rules or going offline.",
    "CustomizedApproachObjective": "Failures in critical security control systems are promptly identified and addressed.",
    "ApplicabilityNotes": "This requirement applies to all entities, including service providers, and will supersede Requirement 10.7.1 as of 31 March 2025. It includes two additional critical security control systems not in Requirement 10.7.1. This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.",
    "function_names": []
  },
  {
    "RequirementID": "10.7.3",
    "DefinedApproachRequirements": "Failures of any critical security control systems are responded to promptly, including but not limited to:\n• Restoring security functions.\n• Identifying and documenting the duration (date and time from start to end) of the security failure.\n• Identifying and documenting the cause(s) of failure and documenting required remediation.\n• Identifying and addressing any security issues that arose during the failure.\n• Determining whether further actions are required as a result of the security failure.\n• Implementing controls to prevent the cause of failure from reoccurring.\n• Resuming monitoring of security controls.",
    "DefinedApproachTestingProcedures": "10.7.3.a Examine documentation and interview personnel to verify that processes are defined and implemented to respond to a failure of any critical security control system and include at least all elements specified in this requirement.\n10.7.3.b Examine records to verify that failures of critical security control systems are documented to include:\n• Identification of cause(s) of the failure.\n• Duration (date and time start and end) of the security failure.\n• Details of the remediation required to address the root cause.",
    "Purpose": "If alerts from failures of critical security control systems are not responded to quickly and effectively, attackers may use this time to insert malicious software, gain control of a system, or steal data from the entity’s environment.",
    "GoodPractice": "Documented evidence (for example, records within a problem management system) should provide support that processes and procedures are in place to respond to security failures. In addition, personnel should be aware of their responsibilities in the event of a failure. Actions and responses to the failure should be captured in the documented evidence.",
    "CustomizedApproachObjective": "Failures of critical security control systems are analyzed, contained, and resolved, and security controls restored to minimize impact. Resulting security issues are addressed, and measures taken to prevent reoccurrence.",
    "ApplicabilityNotes": "This requirement applies only when the entity being assessed is a service provider until 31 March 2025, after which this requirement will apply to all entities. This is a current v3.2.1 requirement that applies to service providers only. However, this requirement is a best practice for all other entities until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.",
    "function_names": []
  },
  {
    "RequirementID": "11.1.1",
    "DefinedApproachRequirements": "All security policies and operational procedures that are identified in Requirement 11 are:\n• Documented.\n• Kept up to date.\n• In use.\n• Known to all affected parties.",
    "DefinedApproachTestingProcedures": "Examine documentation and interview personnel to verify that security policies and operational procedures are managed in accordance with all elements specified in this requirement.",
    "Purpose": "Requirement 11.1.1 is about effectively managing and maintaining the various policies and procedures specified throughout Requirement 11. While it is important to define the specific policies or procedures called out in Requirement 11, it is equally important to ensure they are properly documented, maintained, and disseminated.",
    "GoodPractice": "It is important to update policies and procedures as needed to address changes in processes, technologies, and business objectives. Consider updating these documents as soon as possible after a change occurs and not only on a periodic cycle.",
    "Definitions": "Security policies define the entity’s security objectives and principles. Operational procedures describe how to perform activities, and define the controls, methods, and processes that are followed to achieve the desired result in a consistent manner and in accordance with policy objectives.",
    "CustomizedApproachObjective": "Expectations, controls, and oversight for meeting activities within Requirement 11 are defined and adhered to by affected personnel. All supporting activities are repeatable, consistently applied, and conform to management’s intent.",
    "function_names": []
  },
  {
    "RequirementID": "11.1.2",
    "DefinedApproachRequirements": "Roles and responsibilities for performing activities in Requirement 11 are documented, assigned, and understood.",
    "DefinedApproachTestingProcedures": "11.1.2.a Examine documentation to verify that descriptions of roles and responsibilities for performing activities in Requirement 11 are documented and assigned.\n11.1.2.b Interview personnel with responsibility for performing activities in Requirement 11 to verify that roles and responsibilities are assigned as documented and are understood.",
    "Purpose": "If roles and responsibilities are not formally assigned, personnel may not be aware of their day-to-day responsibilities and critical activities may not occur.",
    "GoodPractice": "Roles and responsibilities may be documented within policies and procedures or maintained within separate documents. Personnel can acknowledge their acceptance and understanding of their assigned roles and responsibilities.",
    "Examples": "A method to document roles and responsibilities is a responsibility assignment matrix that includes who is responsible, accountable, consulted, and informed (RACI matrix).",
    "CustomizedApproachObjective": "Day-to-day responsibilities for performing all the activities in Requirement 11 are allocated. Personnel are accountable for successful, continuous operation of these requirements.",
    "function_names": []
  },
  {
    "RequirementID": "11.2.1",
    "DefinedApproachRequirements": "Authorized and unauthorized wireless access points are managed as follows:\n• The presence of wireless (Wi-Fi) access points is tested for.\n• All authorized and unauthorized wireless access points are detected and identified.\n• Testing, detection, and identification occurs at least once every three months.\n• If automated monitoring is used, personnel are notified via generated alerts.",
    "DefinedApproachTestingProcedures": "11.2.1.a Examine policies and procedures to verify processes are defined for managing both authorized and unauthorized wireless access points with all elements specified in this requirement.\n11.2.1.b Examine the methodology(ies) in use and the resulting documentation, and interview personnel to verify processes are defined to detect and identify both authorized and unauthorized wireless access points in accordance with all elements specified in this requirement.\n11.2.1.c Examine wireless assessment results and interview personnel to verify that wireless assessments were conducted in accordance with all elements specified in this requirement.\n11.2.1.d If automated monitoring is used, examine configuration settings to verify the configuration will generate alerts to notify personnel.",
    "Purpose": "Implementation and/or exploitation of wireless technology within a network are common paths for malicious users to gain unauthorized access to the network and cardholder data. Detecting and removing such unauthorized access points reduces the duration and likelihood of such devices being leveraged for an attack.",
    "GoodPractice": "The size and complexity of an environment will dictate the appropriate tools and processes to provide sufficient assurance that a rogue wireless access point has not been installed. Methods may include multiple approaches combined, such as physical inspections and wireless analyzer results.",
    "Definitions": "This is also referred to as rogue access point detection.",
    "Examples": "Methods that may be used include but are not limited to wireless network scans, physical/logical inspections of system components and infrastructure, network access control (NAC), or wireless IDS/IPS. NAC and wireless IDS/IPS are examples of automated monitoring tools. The requirement applies even when a policy exists that prohibits the use of wireless technology. Methods used must detect and identify both authorized and unauthorized devices, including unauthorized devices attached to authorized devices.",
    "CustomizedApproachObjective": "Unauthorized wireless access points are identified and addressed periodically.",
    "ApplicabilityNotes": "The size and complexity of the environment dictate the appropriate tools and processes to ensure rogue wireless access points are detected.",
    "function_names": []
  },
  {
    "RequirementID": "11.2.2",
    "DefinedApproachRequirements": "An inventory of authorized wireless access points is maintained, including a documented business justification.",
    "DefinedApproachTestingProcedures": "Examine documentation to verify that an inventory of authorized wireless access points is maintained, and a business justification is documented for all authorized wireless access points.",
    "Purpose": "An inventory of authorized wireless access points can help administrators quickly respond when unauthorized wireless access points are detected. This helps to proactively minimize the exposure of CDE to malicious individuals.",
    "GoodPractice": "If using a wireless scanner, it is equally important to have a defined list of known access points which, while not attached to the company’s network, will usually be detected during a scan. Detection of unauthorized wireless access points that are a threat to the CDE should be managed following the entity’s incident response plan per Requirement 12.10.1.",
    "CustomizedApproachObjective": "Unauthorized wireless access points are not mistaken for authorized wireless access points.",
    "function_names": []
  },
  {
    "RequirementID": "11.3.1",
    "DefinedApproachRequirements": "Internal vulnerability scans are performed as follows:\n• At least once every three months.\n• Vulnerabilities that are either high-risk or critical (according to the entity’s vulnerability risk rankings defined at Requirement 6.3.1) are resolved.\n• Rescans are performed to confirm all high-risk and critical vulnerabilities have been resolved.\n• Scan tool is kept up to date with latest vulnerability information.\n• Scans are performed by qualified personnel and organizational independence of the tester exists.",
    "DefinedApproachTestingProcedures": "11.3.1.a Examine internal scan report results from the last 12 months to verify that internal scans occurred at least once every three months in the most recent 12-month period.\n11.3.1.b Examine internal scan report results from each scan and rescan run in the last 12 months to verify that all high-risk and critical vulnerabilities are resolved.\n11.3.1.c Examine scan tool configurations and interview personnel to verify that the scan tool is kept up to date with the latest vulnerability information.\n11.3.1.d Interview responsible personnel to verify that the scan was performed by a qualified internal resource(s) or qualified external third party and that organizational independence of the tester exists.",
    "Purpose": "Identifying and addressing vulnerabilities promptly reduces the likelihood of a vulnerability being exploited and the potential compromise of a system component or cardholder data.",
    "GoodPractice": "Vulnerabilities posing the greatest risk should be resolved with the highest priority. Multiple scan reports can be combined for the quarterly scan process to show all systems were scanned. Additional documentation may be required for non-remediated vulnerabilities. More frequent scans are recommended depending on network complexity and change frequency.",
    "Definitions": "A vulnerability scan is a combination of automated tools, techniques, and/or methods run against external and internal devices and servers, designed to expose potential vulnerabilities in applications, operating systems, and network devices that could be exploited by malicious individuals.",
    "CustomizedApproachObjective": "The security posture of all system components is verified periodically using automated tools designed to detect vulnerabilities operating inside the network. Detected vulnerabilities are assessed and rectified based on a formal risk assessment framework.",
    "ApplicabilityNotes": "It is not required to use a QSA or ASV to conduct internal vulnerability scans. Internal scans can be performed by qualified internal staff reasonably independent of the system components being scanned, or by an external specialized firm.",
    "function_names": []
  },
  {
    "RequirementID": "11.3.1.1",
    "DefinedApproachRequirements": "All other applicable vulnerabilities (those not ranked as high-risk or critical) are managed as follows:\n• Addressed based on the risk defined in the entity’s targeted risk analysis, performed according to Requirement 12.3.1.\n• Rescans are conducted as needed.",
    "DefinedApproachTestingProcedures": "11.3.1.1.a Examine the entity’s targeted risk analysis to verify the risk analysis was performed in accordance with Requirement 12.3.1.\n11.3.1.1.b Interview responsible personnel and examine internal scan reports or other documentation to verify that all other applicable vulnerabilities are addressed based on the risk defined in the entity’s targeted risk analysis and that rescans are conducted as needed.",
    "Purpose": "All vulnerabilities, regardless of criticality, provide a potential avenue of attack and must therefore be addressed periodically.",
    "CustomizedApproachObjective": "Lower ranked vulnerabilities are addressed at a frequency in accordance with the entity’s risk.",
    "ApplicabilityNotes": "Timeframe for addressing lower-risk vulnerabilities is subject to the results of a risk analysis per Requirement 12.3.1. This requirement is a best practice until 31 March 2025, after which it will be required.",
    "function_names": []
  },
  {
    "RequirementID": "11.3.1.2",
    "DefinedApproachRequirements": "Internal vulnerability scans are performed via authenticated scanning as follows:\n• Systems unable to accept credentials for authenticated scanning are documented.\n• Sufficient privileges are used for systems that accept credentials.\n• If accounts used for authenticated scanning can be used for interactive login, they are managed in accordance with Requirement 8.2.2.",
    "DefinedApproachTestingProcedures": "11.3.1.2.a Examine scan tool configurations to verify authenticated scanning is used with sufficient privileges.\n11.3.1.2.b Examine scan report results and interview personnel to verify that authenticated scans are performed.\n11.3.1.2.c If accounts used for authenticated scanning can be used for interactive login, examine accounts and interview personnel to verify compliance with Requirement 8.2.2.\n11.3.1.2.d Examine documentation to verify systems unable to accept credentials are defined.",
    "Purpose": "Authenticated scanning provides greater insight since it can detect vulnerabilities that unauthenticated scans cannot detect.",
    "GoodPractice": "Credentials used for scans should be highly privileged, protected, and controlled, following PCI DSS Requirements 7 and 8.",
    "CustomizedApproachObjective": "Automated tools used to detect vulnerabilities can detect vulnerabilities local to each system, which are not visible remotely.",
    "ApplicabilityNotes": "Authenticated scanning tools can be host-based or network-based. Sufficient privileges are those needed to access system resources for a thorough scan. This does not apply to systems that cannot accept credentials (e.g., some network appliances, mainframes, containers). This is a best practice until 31 March 2025, after which it will be required.",
    "function_names": []
  },
  {
    "RequirementID": "11.3.1.3",
    "DefinedApproachRequirements": "Internal vulnerability scans are performed after any significant change as follows:\n• Vulnerabilities that are either high-risk or critical (according to the entity’s vulnerability risk rankings defined at Requirement 6.3.1) are resolved.\n• Rescans are conducted as needed.\n• Scans are performed by qualified personnel and organizational independence of the tester exists (not required to be a QSA or ASV).",
    "DefinedApproachTestingProcedures": "11.3.1.3.a Examine change control documentation and internal scan reports to verify that system components were scanned after any significant changes.\n11.3.1.3.b Interview personnel and examine internal scan and rescan reports to verify that internal scans were performed after significant changes and that all high-risk and critical vulnerabilities were resolved.\n11.3.1.3.c Interview personnel to verify that internal scans are performed by a qualified internal resource(s) or qualified external third party and that organizational independence of the tester exists.",
    "Purpose": "Scanning an environment after any significant changes ensures that changes were completed appropriately such that the security of the environment was not compromised because of the change.",
    "GoodPractice": "Entities should perform scans after significant changes as part of the change process per Requirement 6.5.2 and before considering the change complete. All system components affected by the change will need to be scanned.",
    "CustomizedApproachObjective": "The security posture of all system components is verified following significant changes to the network or systems, by using automated tools designed to detect vulnerabilities operating inside the network. Detected vulnerabilities are assessed and rectified based on a formal risk assessment framework.",
    "ApplicabilityNotes": "Authenticated internal vulnerability scanning per Requirement 11.3.1.2 is not required for scans performed after significant changes.",
    "function_names": []
  },
  {
    "RequirementID": "11.3.2",
    "DefinedApproachRequirements": "External vulnerability scans are performed as follows:\n• At least once every three months.\n• By a PCI SSC Approved Scanning Vendor (ASV).\n• Vulnerabilities are resolved and ASV Program Guide requirements for a passing scan are met.\n• Rescans are performed as needed to confirm that vulnerabilities are resolved per the ASV Program Guide requirements for a passing scan.",
    "DefinedApproachTestingProcedures": "11.3.2.a Examine ASV scan reports from the last 12 months to verify that external vulnerability scans occurred at least once every three months in the most recent 12-month period.\n11.3.2.b Examine the ASV scan report from each scan and rescan run in the last 12 months to verify that vulnerabilities are resolved and ASV Program Guide requirements for a passing scan are met.\n11.3.2.c Examine the ASV scan reports to verify that the scans were completed by a PCI SSC Approved Scanning Vendor (ASV).",
    "Purpose": "Attackers routinely look for unpatched or vulnerable externally facing servers, which can be leveraged to launch a directed attack. Organizations must ensure these externally facing devices are regularly scanned for weaknesses and that vulnerabilities are patched or remediated.",
    "GoodPractice": "While scans are required at least once every three months, more frequent scans are recommended depending on network complexity, frequency of change, and types of devices, software, and operating systems used. Vulnerabilities identified during external scans should be part of a vulnerability management process that includes multiple vulnerability sources. Multiple scan reports can be combined to show all systems were scanned, but additional documentation may be required to verify non-remediated vulnerabilities are being resolved. See the ASV Program Guide for further information.",
    "CustomizedApproachObjective": "This requirement is not eligible for the customized approach.",
    "ApplicabilityNotes": "For the initial PCI DSS assessment against this requirement, it is not required that four passing scans be completed within 12 months if the assessor verifies: 1) the most recent scan result was a passing scan, 2) documented policies and procedures require scanning at least once every three months, and 3) vulnerabilities noted in the scan results have been corrected as shown in a re-scan(s). For subsequent years, passing scans at least every three months must have occurred. ASV scanning tools can scan a vast array of network types and topologies. Any specifics about the target environment should be coordinated between the ASV and scan customer.",
    "function_names": []
  },
  {
    "RequirementID": "11.3.2.1",
    "DefinedApproachRequirements": "External vulnerability scans are performed after any significant change as follows:\n• Vulnerabilities scored 4.0 or higher by the CVSS are resolved.\n• Rescans are conducted as needed.\n• Scans are performed by qualified personnel and organizational independence of the tester exists (not required to be a QSA or ASV).",
    "DefinedApproachTestingProcedures": "11.3.2.1.a Examine change control documentation and external scan reports to verify that system components were scanned after any significant changes.\n11.3.2.1.b Interview personnel and examine external scan and rescan reports to verify that external scans were performed after significant changes and that vulnerabilities scored 4.0 or higher by the CVSS were resolved.\n11.3.2.1.c Interview personnel to verify that external scans are performed by a qualified internal resource(s) or qualified external third party and that organizational independence of the tester exists.",
    "Purpose": "Scanning an environment after any significant changes ensures that changes were completed appropriately such that the security of the environment was not compromised because of the change.",
    "GoodPractice": "Entities should include the need to perform scans after significant changes as part of the change process and before the change is considered complete. All system components affected by the change will need to be scanned.",
    "CustomizedApproachObjective": "The security posture of all system components is verified following significant changes to the network or systems, by using tools designed to detect vulnerabilities operating from outside the network. Detected vulnerabilities are assessed and rectified based on a formal risk assessment framework.",
    "function_names": []
  },
  {
    "RequirementID": "11.4.1",
    "DefinedApproachRequirements": "A penetration testing methodology is defined, documented, and implemented by the entity, and includes:\n• Industry-accepted penetration testing approaches.\n• Coverage for the entire CDE perimeter and critical systems.\n• Testing from both inside and outside the network.\n• Testing to validate any segmentation and scope reduction controls.\n• Application-layer penetration testing to identify, at a minimum, the vulnerabilities listed in Requirement 6.2.4.\n• Network-layer penetration tests that encompass all components that support network functions as well as operating systems.\n• Review and consideration of threats and vulnerabilities experienced in the last 12 months.\n• Documented approach to assessing and addressing the risk posed by exploitable vulnerabilities and security weaknesses found during penetration testing.\n• Retention of penetration testing results and remediation activities results for at least 12 months.",
    "DefinedApproachTestingProcedures": "Examine documentation and interview personnel to verify that the penetration-testing methodology defined, documented, and implemented by the entity includes all elements specified in this requirement.",
    "Purpose": "Attackers spend a lot of time finding external and internal vulnerabilities to leverage to obtain access to cardholder data and exfiltrate that data. Entities need to test their networks thoroughly, just as an attacker would do, to identify and remediate weaknesses that might be leveraged to compromise the network and data.",
    "GoodPractice": "Penetration testing techniques will differ based on the organization’s needs and structure and should be suitable for the tested environment—for example, fuzzing, injection, and forgery tests might be appropriate. The type, depth, and complexity of the testing will depend on the specific environment and needs of the organization.",
    "Definitions": "Penetration tests simulate real-world attack scenarios intending to identify how far an attacker could penetrate an environment, given differing amounts of information. This differs from vulnerability scans as penetration tests actively attempt to exploit vulnerabilities.",
    "CustomizedApproachObjective": "Scanning for vulnerabilities alone is not a penetration test, nor is a penetration test adequate if the focus is solely on exploiting vulnerabilities from a vulnerability scan. A formal methodology is defined for thorough technical testing using simulated attack methods by a competent manual attacker.",
    "ApplicabilityNotes": "Internal penetration testing means testing from inside the CDE, including trusted and untrusted internal networks. External penetration testing means testing the exposed external perimeter and critical systems connected to public network infrastructures.",
    "FurtherInformation": "Refer to the Information Supplement: Penetration Testing Guidance. Industry-accepted approaches include OSSTMM and OWASP penetration testing programs.",
    "function_names": []
  },
  {
    "RequirementID": "11.4.2",
    "DefinedApproachRequirements": "Internal penetration testing is performed:\n• Per the entity’s defined methodology\n• At least once every 12 months\n• After any significant infrastructure or application upgrade or change\n• By a qualified internal resource or qualified external third-party\n• Organizational independence of the tester exists (not required to be a QSA or ASV).",
    "DefinedApproachTestingProcedures": "11.4.2.a Examine the scope of work and results from the most recent internal penetration test to verify that penetration testing is performed in accordance with all elements specified in this requirement.\n11.4.2.b Interview personnel to verify that the internal penetration test was performed by a qualified internal resource or qualified external third-party and that organizational independence of the tester exists.",
    "Purpose": "Internal penetration testing discovers vulnerabilities and misconfigurations that could be used by attackers with some access to the internal network and verifies controls operating within the CDE.",
    "GoodPractice": "Consider penetration testing certifications and prior experience when choosing qualified resources.",
    "CustomizedApproachObjective": "Internal system defenses are verified by technical testing according to the entity’s defined methodology as frequently as needed to address evolving and new attacks and threats and ensure that significant changes do not introduce unknown vulnerabilities.",
    "function_names": []
  },
  {
    "RequirementID": "11.4.3",
    "DefinedApproachRequirements": "External penetration testing is performed:\n• Per the entity’s defined methodology\n• At least once every 12 months\n• After any significant infrastructure or application upgrade or change\n• By a qualified internal resource or qualified external third party\n• Organizational independence of the tester exists (not required to be a QSA or ASV).",
    "DefinedApproachTestingProcedures": "11.4.3.a Examine the scope of work and results from the most recent external penetration test to verify that penetration testing is performed according to all elements specified in this requirement.\n11.4.3.b Interview personnel to verify that the external penetration test was performed by a qualified internal resource or qualified external third party and that organizational independence of the tester exists.",
    "Purpose": "External penetration testing identifies weaknesses in externally facing systems, validating the security posture from outside the network.",
    "GoodPractice": "Similar considerations as internal testing apply, including tester qualifications and methodology appropriateness.",
    "CustomizedApproachObjective": "External system defenses are verified by technical testing according to the entity’s defined methodology as frequently as needed to address evolving and new attacks and threats, and to ensure that significant changes do not introduce unknown vulnerabilities.",
    "function_names": []
  },
  {
    "RequirementID": "11.4.4",
    "DefinedApproachRequirements": "Exploitable vulnerabilities and security weaknesses found during penetration testing are corrected as follows:\n• In accordance with the entity’s assessment of the risk posed by the security issue as defined in Requirement 6.3.1.\n• Penetration testing is repeated to verify the corrections.",
    "DefinedApproachTestingProcedures": "Examine penetration testing results to verify that noted exploitable vulnerabilities and security weaknesses were corrected in accordance with all elements specified in this requirement.",
    "Purpose": "The results of a penetration test provide a prioritized list of vulnerabilities. Remediating these reduces the probability that the same vulnerabilities will be exploited by attackers.",
    "GoodPractice": "Entities should consider how likely a vulnerability is to be exploited and whether other controls reduce the risk. Weaknesses that indicate non-compliance with PCI DSS should be addressed.",
    "CustomizedApproachObjective": "Vulnerabilities and security weaknesses found while verifying system defenses are mitigated.",
    "function_names": []
  },
  {
    "RequirementID": "11.4.5",
    "DefinedApproachRequirements": "If segmentation is used to isolate the CDE from other networks, penetration tests are performed on segmentation controls as follows:\n• At least once every 12 months and after any changes to segmentation controls/methods.\n• Covering all segmentation controls/methods in use.\n• According to the entity’s defined penetration testing methodology.\n• Confirming that the segmentation controls/methods are operational and effective, isolating the CDE from all out-of-scope systems.\n• Confirming effectiveness of any use of isolation to separate systems with differing security levels.\n• Performed by a qualified internal resource or qualified external third party.\n• Organizational independence of the tester exists (not required to be a QSA or ASV).",
    "DefinedApproachTestingProcedures": "11.4.5.a Examine segmentation controls and review penetration-testing methodology to verify that penetration-testing procedures are defined to test all segmentation methods.\n11.4.5.b Examine the results from the most recent penetration test to verify the penetration test covers and addresses all elements specified.\n11.4.5.c Interview personnel to verify that the test was performed by a qualified internal resource or qualified external third party and that organizational independence of the tester exists.",
    "Purpose": "Validating segmentation ensures untrusted networks are isolated from the CDE and segmentation controls are functioning correctly.",
    "GoodPractice": "Techniques such as host discovery and port scanning can be used to verify out-of-scope segments have no access to the CDE.",
    "CustomizedApproachObjective": "Segmentation is verified periodically by technical testing to be effective, including after any changes, in isolating the CDE from all out-of-scope systems.",
    "function_names": []
  },
  {
    "RequirementID": "11.4.6",
    "DefinedApproachRequirements": "Additional requirement for service providers only: If segmentation is used to isolate the CDE from other networks, penetration tests are performed on segmentation controls as follows:\n• At least once every six months and after any changes to segmentation controls/methods.\n• Covering all segmentation controls/methods in use.\n• According to the entity’s defined penetration testing methodology.\n• Confirming that the segmentation controls/methods are operational and effective, and isolate the CDE from all out-of-scope systems.\n• Confirming effectiveness of any use of isolation to separate systems with differing security levels.\n• Performed by a qualified internal resource or qualified external third party.\n• Organizational independence of the tester exists (not required to be a QSA or ASV).",
    "DefinedApproachTestingProcedures": "11.4.6.a Examine results from the most recent penetration test to verify coverage of all elements.\n11.4.6.b Interview personnel to verify that the test was performed by a qualified internal resource or qualified external third party and that organizational independence of the tester exists.",
    "Purpose": "Service providers’ networks are more complex and dynamic, so validating segmentation more frequently helps detect failures before attackers can exploit them.",
    "GoodPractice": "Although at least every six months is required, the exercise should be performed as frequently as possible.",
    "CustomizedApproachObjective": "Segmentation is verified by technical testing to be effective, including after any changes, in isolating the CDE from out-of-scope systems.",
    "ApplicabilityNotes": "This requirement applies only when the entity being assessed is a service provider.",
    "function_names": []
  },
  {
    "RequirementID": "11.4.7",
    "DefinedApproachRequirements": "Additional requirement for multi-tenant service providers only: Multi-tenant service providers support their customers for external penetration testing per Requirement 11.4.3 and 11.4.4.",
    "DefinedApproachTestingProcedures": "Examine evidence to verify that multi-tenant service providers support their customers for external penetration testing per Requirements 11.4.3 and 11.4.4.",
    "Purpose": "Multi-tenant service providers must support customer penetration testing requests to ensure customer systems are protected and vulnerabilities are discovered.",
    "CustomizedApproachObjective": "Multi-tenant service providers support their customers’ need for technical testing either by providing access or evidence that comparable technical testing has been undertaken.",
    "ApplicabilityNotes": "This requirement applies only when the entity being assessed is a multi-tenant service provider. Evidence can include redacted penetration testing results or providing prompt access for customers to perform testing.",
    "function_names": []
  },
  {
    "RequirementID": "11.5.1",
    "DefinedApproachRequirements": "Intrusion-detection and/or intrusion-prevention techniques (IDS/IPS) are used to detect and/or prevent intrusions into the network as follows:\n• All traffic is monitored at the perimeter of the CDE.\n• All traffic is monitored at critical points in the CDE.\n• Personnel are alerted to suspected compromises.\n• All intrusion-detection and prevention engines, baselines, and signatures are kept up to date.",
    "DefinedApproachTestingProcedures": "11.5.1.a Examine system configurations and network diagrams to verify monitoring of all traffic at the CDE perimeter and critical points.\n11.5.1.b Examine system configurations and interview personnel to verify alerts are generated for suspected compromises.\n11.5.1.c Examine system configurations and vendor documentation to verify engines, baselines, and signatures are up to date.",
    "Purpose": "Without detection, attacks could go unnoticed for long periods. The impact of an intrusion depends on how long an attacker remains undetected.",
    "GoodPractice": "Security alerts should be continually monitored to stop intrusions and limit potential damage.",
    "Definitions": "Critical locations could include network security controls between network segments or points protecting connections between less trusted and more trusted system components.",
    "CustomizedApproachObjective": "Mechanisms detect real-time suspicious or anomalous traffic. Alerts are responded to by personnel or automated means to prevent compromise.",
    "function_names": []
  },
  {
    "RequirementID": "11.5.1.1",
    "DefinedApproachRequirements": "Additional requirement for service providers: Intrusion-detection and/or intrusion-prevention techniques detect, alert on/prevent, and address covert malware communication channels.",
    "DefinedApproachTestingProcedures": "11.5.1.1.a Examine documentation and configuration settings to verify methods to detect/prevent covert malware communication.\n11.5.1.1.b Examine the incident-response plan (Requirement 12.10.1) to verify a defined response to covert malware communication.\n11.5.1.1.c Interview responsible personnel and observe processes to verify personnel are knowledgeable about covert malware communication and response.",
    "Purpose": "Detecting covert malware communication helps block lateral spread of malware and exfiltration of data.",
    "GoodPractice": "Techniques include endpoint scanning, egress filtering, allow-listing, DLP tools, and IDS/IPS monitoring. DNS queries/responses are key for incident response and intrusion detection.",
    "CustomizedApproachObjective": "Mechanisms detect and alert/prevent covert communication with C&C systems. Alerts are acted upon by personnel or automated means to block such communications.",
    "ApplicabilityNotes": "Applies only to service providers. Best practice until 31 March 2025, after which mandatory.",
    "function_names": []
  },
  {
    "RequirementID": "11.5.2",
    "DefinedApproachRequirements": "A change-detection mechanism (e.g., file integrity monitoring) is deployed to alert personnel to unauthorized modification (changes, additions, deletions) of critical files and perform critical file comparisons at least once weekly.",
    "DefinedApproachTestingProcedures": "11.5.2.a Examine system settings, monitored files, and monitoring results to verify the mechanism.\n11.5.2.b Examine settings to verify configuration meets all requirements.",
    "Purpose": "Changes to critical system, configuration, or content files can indicate an attacker has accessed the system. Detecting these changes allows appropriate response actions.",
    "GoodPractice": "Monitor system executables, application executables, configuration files, archived logs, and other critical files.",
    "Examples": "File integrity monitoring (FIM) tools detect additions, deletions, or modifications to critical files, including OS and custom application files.",
    "CustomizedApproachObjective": "Critical files cannot be modified by unauthorized personnel without generating an alert.",
    "function_names": []
  },
  {
    "RequirementID": "11.6.1",
    "DefinedApproachRequirements": "A change- and tamper-detection mechanism is deployed to alert personnel to unauthorized modification (including indicators of compromise, changes, additions, deletions) to the security-impacting HTTP headers and script contents of payment pages as received by the consumer browser. The mechanism evaluates received headers and pages at least weekly or per entity-defined frequency based on targeted risk analysis.",
    "DefinedApproachTestingProcedures": "11.6.1.a Examine system settings, monitored pages, and results to verify mechanism.\n11.6.1.b Examine configuration settings to verify compliance with all elements.\n11.6.1.c Examine entity-defined risk analysis frequency if used.\n11.6.1.d Examine configuration settings and interview personnel to verify mechanism operates at least weekly or per defined frequency.",
    "Purpose": "Unauthorized changes to payment pages can indicate skimming or removal of anti-skimming measures. Detection allows timely response.",
    "GoodPractice": "Applies to entities with embedded TPSP/payment processor pages. Does not apply to scripts managed entirely by TPSPs. Mechanisms can include CSP violation reports, external monitoring, embedded tamper-detection scripts, and reverse proxies/CDNs.",
    "CustomizedApproachObjective": "E-commerce skimming code or techniques cannot be added or removed from payment pages without generating timely alerts.",
    "function_names": []
  },
  {
    "RequirementID": "12.1.1",
    "DefinedApproachRequirements": "An overall information security policy is established, published, maintained, and disseminated to all relevant personnel, as well as relevant vendors and business partners.",
    "DefinedApproachTestingProcedures": "Examine the information security policy and interview personnel to verify that the overall information security policy is managed in accordance with all elements specified in this requirement.",
    "Purpose": "The information security policy communicates management’s intent and objectives regarding protection of cardholder data. Without it, personnel may make inconsistent control decisions, potentially leading to inadequate protection of assets and noncompliance.",
    "GoodPractice": "The policy should identify purpose, scope, accountability, and organizational position regarding information security. It sets directives for the entire organization, while individual policies align with it and communicate specific objectives.",
    "Definitions": "“Relevant” means disseminated to those with roles applicable to some or all topics in the policy, either within the company or because of services/functions performed by a vendor or third party.",
    "CustomizedApproachObjective": "The strategic objectives and principles of information security are defined, adopted, and known to all personnel.",
    "function_names": []
  },
  {
    "RequirementID": "12.1.2",
    "DefinedApproachRequirements": "The information security policy is reviewed at least once every 12 months and updated as needed to reflect changes to business objectives or risks to the environment.",
    "DefinedApproachTestingProcedures": "Examine the information security policy and interview responsible personnel to verify the policy is managed in accordance with all elements specified in this requirement.",
    "Purpose": "Security threats and protection methods evolve rapidly. Without updating the policy, new defensive measures may not be addressed.",
    "CustomizedApproachObjective": "The information security policy continues to reflect the organization’s strategic objectives and principles.",
    "function_names": []
  },
  {
    "RequirementID": "12.1.3",
    "DefinedApproachRequirements": "The security policy clearly defines information security roles and responsibilities for all personnel, and all personnel are aware of and acknowledge their responsibilities.",
    "DefinedApproachTestingProcedures": "12.1.3.a Examine the information security policy to verify it defines roles and responsibilities.\n12.1.3.b Interview personnel in various roles to verify they understand their responsibilities.\n12.1.3.c Examine documented evidence to verify personnel acknowledge their responsibilities.",
    "Purpose": "Without clearly defined roles and responsibilities, there could be misuse of information assets or inconsistent interaction with security personnel, leading to insecure technology implementation.",
    "CustomizedApproachObjective": "Personnel understand their role in protecting the entity’s cardholder data.",
    "function_names": []
  },
  {
    "RequirementID": "12.1.4",
    "DefinedApproachRequirements": "Responsibility for information security is formally assigned to a Chief Information Security Officer (CISO) or other information security-knowledgeable member of executive management.",
    "DefinedApproachTestingProcedures": "Examine the information security policy to verify that information security is formally assigned to a CISO or other executive-level security-knowledgeable individual.",
    "Purpose": "To ensure someone with sufficient authority and responsibility is actively managing and championing the organization’s information security program.",
    "GoodPractice": "Executive management positions should be at the most senior level, often reporting to the CEO or Board. Knowledge can be indicated by experience, education, or relevant certifications. Transition/succession plans should be considered to avoid gaps.",
    "CustomizedApproachObjective": "A designated member of executive management is responsible for information security.",
    "function_names": []
  },
  {
    "RequirementID": "12.2.1",
    "DefinedApproachRequirements": "Acceptable use policies for end-user technologies are documented and implemented, including:\n• Explicit approval by authorized parties.\n• Acceptable uses of the technology.\n• List of products approved by the company for employee use, including hardware and software.",
    "DefinedApproachTestingProcedures": "Examine the acceptable use policies for end-user technologies and interview responsible personnel to verify processes are documented and implemented in accordance with all elements specified in this requirement.",
    "Purpose": "End-user technologies are a significant investment and may pose significant risk to an organization if not managed properly. Acceptable use policies outline expected behavior, legally protect the organization, and instruct personnel on correct and incorrect uses of company resources.",
    "GoodPractice": "It is important that usage policies are supported by technical controls. Structuring policies as simple 'do' and 'do not' requirements linked to a purpose can help remove ambiguity and provide personnel context.",
    "CustomizedApproachObjective": "The use of end-user technologies is defined and managed to ensure authorized usage.",
    "ApplicabilityNotes": "Examples include, but are not limited to, remote access, wireless technologies, laptops, tablets, mobile phones, removable electronic media, email usage, and Internet usage.",
    "function_names": []
  },
  {
    "RequirementID": "12.3.1",
    "DefinedApproachRequirements": "For each PCI DSS requirement that specifies completion of a targeted risk analysis, the analysis is documented and includes:\n• Identification of the assets being protected.\n• Identification of the threat(s) that the requirement is protecting against.\n• Identification of factors that contribute to the likelihood and/or impact of a threat being realized.\n• Resulting analysis that determines, and includes justification for, how the frequency or processes defined by the entity to meet the requirement minimize the likelihood and/or impact of the threat being realized.\n• Review of each targeted risk analysis at least once every 12 months.\n• Performance of updated risk analyses when needed, as determined by the annual review.",
    "DefinedApproachTestingProcedures": "Examine documented policies and procedures to verify a process is defined for performing targeted risk analyses for each PCI DSS requirement that specifies completion of a targeted risk analysis, and that the process includes all elements specified in this requirement.",
    "Purpose": "Some PCI DSS requirements allow an entity to define how frequently an activity is performed based on risk. Performing this risk analysis according to a methodology ensures validity and consistency. Reviewing results at least annually and upon changes ensures analyses remain current with organizational changes, evolving threats, trends, and technologies.",
    "GoodPractice": "Enterprise-wide risk assessments are recommended but not required. They can be used to identify broader and emerging threats and may serve as input to annual review of the overall information security policy. Examples of risk-assessment methodologies include ISO 27005 and NIST SP 800-30.",
    "CustomizedApproachObjective": "Up-to-date knowledge and assessment of risks to the CDE are maintained.",
    "ApplicabilityNotes": "This requirement is a best practice until 31 March 2025, after which it will be required.",
    "FurtherInformation": "Refer to PCI SSC Information Supplement: TRA Guidance and Sample Template: TRA for Activity Frequency.",
    "function_names": []
  },
  {
    "RequirementID": "12.3.2",
    "DefinedApproachRequirements": "A targeted risk analysis is performed for each PCI DSS requirement that the entity meets with the customized approach, to include:\n• Documented evidence detailing each element specified in Appendix D: Customized Approach (including, at a minimum, a controls matrix and risk analysis).\n• Approval of documented evidence by senior management.\n• Performance of the targeted analysis of risk at least once every 12 months.",
    "DefinedApproachTestingProcedures": "Examine the documented targeted risk analysis for each PCI DSS requirement that the entity meets with the customized approach to verify that documentation for each requirement exists and is in accordance with all elements specified in this requirement.",
    "Purpose": "A risk analysis following a repeatable and robust methodology enables an entity to meet the customized approach objective.",
    "Definitions": "The customized approach to meeting a PCI DSS requirement allows entities to define the controls used to meet a given requirement’s stated Customized Approach Objective in a way that does not strictly follow the defined requirement. These controls are expected to at least meet or exceed the security provided by the defined requirement and require extensive documentation by the entity using the customized approach.",
    "CustomizedApproachObjective": "This requirement is part of the customized approach and must be met for those using the customized approach.",
    "ApplicabilityNotes": "This requirement only applies to entities using a Customized Approach.",
    "FurtherInformation": "See Appendix D: Customized Approach and PCI DSS v4.x Sample Templates to Support Customized Approach for documentation instructions. Templates are optional, but all required information must be documented and provided to each entity’s assessor.",
    "function_names": []
  },
  {
    "RequirementID": "12.3.3",
    "DefinedApproachRequirements": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including:\n• An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used.\n• Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use.\n• Documentation of a plan to respond to anticipated changes in cryptographic vulnerabilities.",
    "DefinedApproachTestingProcedures": "Examine documentation for cryptographic suites and protocols in use and interview personnel to verify the documentation and review is in accordance with all elements specified in this requirement.",
    "Purpose": "Protocols and encryption strengths may quickly change or be deprecated due to vulnerabilities or design flaws. Entities need to know where cryptography is used and understand how to respond rapidly to changes impacting cryptographic implementations.",
    "GoodPractice": "Cryptographic agility ensures alternatives to encryption methods or primitives are available, with plans to upgrade without major infrastructure changes.",
    "Definitions": "Cryptographic agility refers to the ability to monitor and manage encryption and related verification technologies deployed across an organization.",
    "CustomizedApproachObjective": "The entity is able to respond quickly to vulnerabilities in cryptographic protocols or algorithms affecting protection of cardholder data.",
    "ApplicabilityNotes": "Applies to all cryptographic cipher suites and protocols used to meet PCI DSS requirements.",
    "FurtherInformation": "Refer to NIST SP 800-131a, Transitioning the Use of Cryptographic Algorithms and Key Lengths.",
    "function_names": []
  },
  {
    "RequirementID": "12.3.4",
    "DefinedApproachRequirements": "Hardware and software technologies in use are reviewed at least once every 12 months, including:\n• Analysis that the technologies continue to receive security fixes promptly.\n• Analysis that the technologies continue to support PCI DSS compliance.\n• Documentation of any industry announcements or trends, including end-of-life plans.\n• Documentation of a plan, approved by senior management, to remediate outdated technologies.",
    "DefinedApproachTestingProcedures": "Examine documentation for the review of hardware and software technologies in use and interview personnel to verify that the review is in accordance with all elements specified in this requirement.",
    "Purpose": "Hardware and software technologies evolve constantly, and organizations need awareness of changes and threats to manage vulnerabilities that will not be remediated by vendors.",
    "GoodPractice": "Organizations should review firmware versions and vendor product/process changes to understand impacts on technology usage. Regular reviews ensure controls relying on technologies remain effective.",
    "CustomizedApproachObjective": "The entity’s hardware and software technologies are up to date and supported by the vendor. Plans to remove or replace unsupported system components are reviewed periodically.",
    "ApplicabilityNotes": "Best practice until 31 March 2025, after which it will be required.",
    "function_names": []
  },
  {
    "RequirementID": "12.4.1",
    "DefinedApproachRequirements": "Service providers only: Responsibility is established by executive management for protection of cardholder data and a PCI DSS compliance program, including:\n• Overall accountability for maintaining PCI DSS compliance.\n• Defining a charter for a PCI DSS compliance program and communication to executive management.",
    "DefinedApproachTestingProcedures": "Examine documentation to verify that executive management has established responsibility for the protection of cardholder data and a PCI DSS compliance program in accordance with all elements specified in this requirement.",
    "Purpose": "Ensures executive-level visibility and provides opportunity to assess program effectiveness and influence strategic priorities.",
    "CustomizedApproachObjective": "Executives are responsible and accountable for security of cardholder data.",
    "ApplicabilityNotes": "Applies only when the entity being assessed is a service provider. Executive management may include C-level positions, board of directors, or equivalent. Responsibility may be assigned to individual roles or business units.",
    "function_names": []
  },
  {
    "RequirementID": "12.4.2",
    "DefinedApproachRequirements": "Service providers only: Reviews are performed at least once every three months to confirm personnel are performing their tasks in accordance with all security policies and operational procedures. Reviews are performed by personnel other than those responsible for performing the given task, and include:\n• Daily log reviews.\n• Configuration reviews for network security controls.\n• Applying configuration standards to new systems.\n• Responding to security alerts.\n• Change-management processes.",
    "DefinedApproachTestingProcedures": "Examine policies and procedures to verify that processes are defined for conducting reviews. Interview responsible personnel and examine records of reviews to verify they are performed at least once every three months by personnel other than those responsible for the task.",
    "Purpose": "Regularly confirming that security policies and procedures are being followed provides assurance that expected controls are active and working as intended. The objective is to confirm ongoing performance of security activities, not to reperform other PCI DSS requirements.",
    "GoodPractice": "Reviews can verify appropriate evidence is maintained, such as audit logs, vulnerability scan reports, and network security control rulesets.",
    "Examples": "For Requirement 1.2.7, Requirement 12.4.2 is met by confirming quarterly reviews of network security configurations have occurred, distinct from reviewing configurations as specified in Requirement 1.2.7.",
    "CustomizedApproachObjective": "The operational effectiveness of critical PCI DSS controls is verified periodically by manual inspection of records.",
    "ApplicabilityNotes": "Applies only when the entity being assessed is a service provider.",
    "function_names": []
  },
  {
    "RequirementID": "12.4.2.1",
    "DefinedApproachRequirements": "Reviews conducted in accordance with Requirement 12.4.2 are documented to include:\n• Results of the reviews.\n• Documented remediation actions taken for any tasks that were found to not be performed at Requirement 12.4.2.\n• Review and sign-off of results by personnel assigned responsibility for the PCI DSS compliance program.",
    "DefinedApproachTestingProcedures": "Examine documentation from the reviews conducted in accordance with PCI DSS Requirement 12.4.2 to verify the documentation includes all elements specified in this requirement.",
    "Purpose": "The intent of these independent checks is to confirm whether security activities are being performed on an ongoing basis. These reviews can also be used to verify that appropriate evidence is being maintained—for example, audit logs, vulnerability scan reports, reviews of network security control rulesets—to assist in the entity’s preparation for its next PCI DSS assessment.",
    "CustomizedApproachObjective": "Findings from operational effectiveness reviews are evaluated by management; appropriate remediation activities are implemented.",
    "ApplicabilityNotes": "This requirement applies only when the entity being assessed is a service provider.",
    "function_names": []
  },
  {
    "RequirementID": "12.5.1",
    "DefinedApproachRequirements": "An inventory of system components that are in scope for PCI DSS, including a description of function/use, is maintained and kept current.",
    "DefinedApproachTestingProcedures": "12.5.1.a Examine the inventory to verify it includes all in-scope system components and a description of function/use for each.\n12.5.1.b Interview personnel to verify the inventory is kept current.",
    "Purpose": "Maintaining a current list of all system components will enable an organization to define the scope of its environment and implement PCI DSS requirements accurately and efficiently. Without an inventory, some system components could be overlooked and be inadvertently excluded from the organization’s configuration standards.",
    "GoodPractice": "If an entity keeps an inventory of all assets, those system components in scope for PCI DSS should be clearly identifiable among the other assets. Inventories should include containers or images that may be instantiated. Assigning an owner to the inventory helps ensure it stays current.",
    "Examples": "Methods to maintain an inventory include as a database, as a series of files, or in an inventory management tool.",
    "CustomizedApproachObjective": "All system components in scope for PCI DSS are identified and known."
  },
  {
    "RequirementID": "12.5.2",
    "DefinedApproachRequirements": "PCI DSS scope is documented and confirmed by the entity at least once every 12 months and upon significant change to the in-scope environment. At a minimum, the scoping validation includes:\n• Identifying all data flows for the various payment stages (authorization, capture, settlement, chargebacks, refunds) and acceptance channels (card-present, card-not-present, e-commerce).\n• Updating all data-flow diagrams per Requirement 1.2.4.\n• Identifying all locations where account data is stored, processed, and transmitted, including but not limited to: 1) any locations outside of the currently defined CDE, 2) applications that process CHD, 3) transmissions between systems and networks, and 4) file backups.\n• Identifying all system components in the CDE, connected to the CDE, or that could impact security of the CDE.\n• Identifying all segmentation controls in use and the environment(s) from which the CDE is segmented, including justification for environments being out of scope.\n• Identifying all connections from third-party entities with access to the CDE.\n• Confirming that all identified data flows, account data, system components, segmentation controls, and connections from third parties with access to the CDE are included in scope.",
    "DefinedApproachTestingProcedures": "12.5.2.a Examine documented results of scope reviews and interview personnel to verify that the reviews are performed:\n• At least once every 12 months.\n• After significant changes to the in-scope environment.\n12.5.2.b Examine documented results of scope reviews performed by the entity to verify that PCI DSS scoping confirmation activity includes all elements specified in this requirement.",
    "Purpose": "Frequent validation of PCI DSS scope helps ensure the scope remains up to date and aligned with changing business objectives, ensuring security controls protect all appropriate system components.",
    "GoodPractice": "Accurate scoping involves critically evaluating the CDE and connected system components. Scoping activities, including analysis and ongoing monitoring, help ensure in-scope systems are secured. When documenting account data locations, the entity can create a table/spreadsheet including data stores, CHD elements stored, how data is secured, and logging mechanisms in use.",
    "CustomizedApproachObjective": "In addition to internal systems and networks, all connections from third-party entities need to be identified to determine inclusion for PCI DSS scope. A data discovery tool or methodology can be used to identify all sources and locations of PAN, ensuring previously unknown locations are detected and secured.",
    "FurtherInformation": "Refer to Information Supplement: Guidance for PCI DSS Scoping and Network Segmentation. PCI DSS scope is verified periodically and after significant changes by comprehensive analysis and technical measures.",
    "ApplicabilityNotes": "This annual confirmation of PCI DSS scope is expected to be performed by the entity under assessment and is not replaced by the scoping confirmation performed by the entity’s assessor during the annual assessment.",
    "function_names": []
  },
  {
    "RequirementID": "12.5.2.1",
    "DefinedApproachRequirements": "PCI DSS scope is documented and confirmed by the entity at least once every six months and upon significant change to the in-scope environment. At a minimum, the scoping validation includes all the elements specified in Requirement 12.5.2.",
    "DefinedApproachTestingProcedures": "12.5.2.1.a Additional testing procedure for service provider assessments only: Examine documented results of scope reviews and interview personnel to verify that reviews per Requirement 12.5.2 are performed:\n• At least once every six months, and\n• After significant changes\n12.5.2.1.b Additional testing procedure for service provider assessments only: Examine documented results of scope reviews to verify that scoping validation includes all elements specified in Requirement 12.5.2.",
    "Purpose": "Service providers typically have access to greater volumes of cardholder data than do merchants, or can provide an entry point that can be exploited to then compromise multiple other entities. Service providers also typically have larger and more complex networks that are subject to more frequent change. The probability of overlooked changes to scope in complex and dynamic networks is greater in service-providers environments. Validating PCI DSS scope more frequently is likely to discover such overlooked changes before they can be exploited by an attacker.",
    "CustomizedApproachObjective": "The accuracy of PCI DSS scope is verified to be continuously accurate by comprehensive analysis and appropriate technical measures.",
    "ApplicabilityNotes": "This requirement applies only when the entity being assessed is a service provider. This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.",
    "function_names": []
  },
  {
    "RequirementID": "12.5.3",
    "DefinedApproachRequirements": "Significant changes to organizational structure result in a documented (internal) review of the impact to PCI DSS scope and applicability of controls, with results communicated to executive management.",
    "DefinedApproachTestingProcedures": "12.5.3.a Additional testing procedure for service provider assessments only: Examine policies and procedures to verify that processes are defined such that a significant change to organizational structure results in documented review of the impact to PCI DSS scope and applicability of controls.\n12.5.3.b Additional testing procedure for service provider assessments only: Examine documentation (for example, meeting minutes) and interview responsible personnel to verify that significant changes to organizational structure resulted in documented reviews that included all elements specified in this requirement, with results communicated to executive management.",
    "Purpose": "An organization’s structure and management define the requirements and protocol for effective and secure operations. Changes to this structure could have negative effects to existing controls and frameworks by reallocating or removing resources that once supported PCI DSS controls or inheriting new responsibilities that may not have established controls in place. Therefore, it is important to revisit PCI DSS scope and controls when there are changes to an organization’s structure and management to ensure controls are in place and active.",
    "Examples": "Changes to organizational structure include, but are not limited to, company mergers or acquisitions, and significant changes or reassignments of personnel with responsibility for security controls.",
    "CustomizedApproachObjective": "PCI DSS scope is confirmed after significant organizational change.",
    "ApplicabilityNotes": "This requirement applies only when the entity being assessed is a service provider. This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.",
    "function_names": []
  },
  {
    "RequirementID": "12.6.1",
    "DefinedApproachRequirements": "A formal security awareness program is implemented to make all personnel aware of the entity’s information security policy and procedures, and their role in protecting the cardholder data.",
    "DefinedApproachTestingProcedures": "12.6.1 Examine the security awareness program to verify it provides awareness to all personnel about the entity’s information security policy and procedures, and personnel’s role in protecting the cardholder data.",
    "Purpose": "If personnel are not educated about their company’s information security policies and procedures and their own security responsibilities, security safeguards and processes that have been implemented may become ineffective through unintentional errors or intentional actions.",
    "CustomizedApproachObjective": "Personnel are knowledgeable about the threat landscape, their responsibility for the operation of relevant security controls, and are able to access assistance and guidance when required.",
    "function_names": []
  },
  {
    "RequirementID": "12.6.2",
    "DefinedApproachRequirements": "The security awareness program is:\n• Reviewed at least once every 12 months, and\n• Updated as needed to address any new threats and vulnerabilities that may impact the security of the entity’s cardholder data and/or sensitive authentication data, or the information provided to personnel about their role in protecting cardholder data.",
    "DefinedApproachTestingProcedures": "12.6.2 Examine security awareness program content, evidence of reviews, and interview personnel to verify that the security awareness program is in accordance with all elements specified in this requirement.",
    "Purpose": "The threat environment and an entity’s defenses are not static. As such, the security awareness program materials must be updated as frequently as needed to ensure that the education received by personnel is up to date and represents the current threat environment.",
    "CustomizedApproachObjective": "The content of security awareness material is reviewed and updated periodically.",
    "ApplicabilityNotes": "This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.",
    "function_names": []
  },
  {
    "RequirementID": "12.6.3",
    "DefinedApproachRequirements": "Personnel receive security awareness training as follows:\n• Upon hire and at least once every 12 months.\n• Multiple methods of communication are used.\n• Personnel acknowledge at least once every 12 months that they have read and understood the information security policy and procedures.",
    "DefinedApproachTestingProcedures": "12.6.3.a Examine security awareness program records to verify that personnel attend security awareness training upon hire and at least once every 12 months.\n12.6.3.b Examine security awareness program materials to verify the program includes multiple methods of communicating awareness and educating personnel.\n12.6.3.c Interview personnel to verify they have completed awareness training and are aware of their role in protecting cardholder data.\n12.6.3.d Examine security awareness program materials and personnel acknowledgments to verify that personnel acknowledge at least once every 12 months that they have read and understand the information security policy and procedures.",
    "Purpose": "Training of personnel ensures they receive the information about the importance of information security and that they understand their role in protecting the organization. Requiring an acknowledgment by personnel helps ensure that they have read and understood the security policies and procedures, and that they have made and will continue to make a commitment to comply with these policies.",
    "GoodPractice": "Entities may incorporate new-hire training as part of the Human Resources onboarding process. Training should outline the security-related “dos” and “don’ts.” Periodic refresher training reinforces key security processes and procedures that may be forgotten or bypassed. Entities should consider requiring security awareness training anytime personnel transfer into roles where they can impact the security of cardholder data and/or sensitive authentication data from roles where they did not have this impact. Methods and training content can vary, depending on personnel roles.",
    "Examples": "Different methods that can be used to provide security awareness and education include posters, letters, web-based training, in-person training, team meetings, and incentives. Personnel acknowledgments may be recorded in writing or electronically.",
    "CustomizedApproachObjective": "Personnel remain knowledgeable about the threat landscape, their responsibility for the operation of relevant security controls, and are able to access assistance and guidance when required.",
    "function_names": []
  },
  {
    "RequirementID": "12.6.3.1",
    "DefinedApproachRequirements": "Security awareness training includes awareness of threats and vulnerabilities that could impact the security of cardholder data and/or sensitive authentication data, including but not limited to:\n• Phishing and related attacks.\n• Social engineering.",
    "DefinedApproachTestingProcedures": "12.6.3.1 Examine security awareness training content to verify it includes all elements specified in this requirement.",
    "Purpose": "Educating personnel on how to detect, react to, and report potential phishing and related attacks and social engineering attempts is essential to minimizing the probability of successful attacks.",
    "GoodPractice": "An effective security awareness program should include examples of phishing emails and periodic testing to determine the prevalence of personnel reporting such attacks. Training material an entity can consider for this topic include: How to identify phishing and other social engineering attacks, How to react to suspected phishing and social engineering, Where and how to report suspected phishing and social engineering activity. An emphasis on reporting allows the organization to reward positive behavior, to optimize technical defenses, and to take immediate action to remove similar phishing emails that evaded technical defenses from recipient inboxes.",
    "CustomizedApproachObjective": "Personnel are knowledgeable about their own human vulnerabilities and how threat actors will attempt to exploit such vulnerabilities. Personnel are able to access assistance and guidance when required.",
    "ApplicabilityNotes": "See Requirement 5.4.1 for guidance on the difference between technical and automated controls to detect and protect users from phishing attacks, and this requirement for providing users security awareness training about phishing and social engineering. These are two separate and distinct requirements, and one is not met by implementing controls required by the other one. This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.",
    "function_names": []
  },
  {
    "RequirementID": "12.6.3.2",
    "DefinedApproachRequirements": "Security awareness training includes awareness about the acceptable use of end-user technologies in accordance with Requirement 12.2.1.",
    "DefinedApproachTestingProcedures": "12.6.3.2 Examine security awareness training content to verify it includes awareness about acceptable use of end-user technologies in accordance with Requirement 12.2.1.",
    "Purpose": "By including the key points of the acceptable use policy in regular training and the related context, personnel will understand their responsibilities and how these impact the security of an organization’s systems.",
    "CustomizedApproachObjective": "Personnel are knowledgeable about their responsibility for the security and operation of end-user technologies and are able to access assistance and guidance when required.",
    "ApplicabilityNotes": "This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.",
    "function_names": []
  },
  {
    "RequirementID": "12.7.1",
    "DefinedApproachRequirements": "Potential personnel who will have access to the CDE are screened, within the constraints of local laws, prior to hire to minimize the risk of attacks from internal sources.",
    "DefinedApproachTestingProcedures": "12.7.1 Interview responsible Human Resource department management to verify that screening is conducted, within the constraints of local laws, prior to hiring potential personnel who will have access to the CDE.",
    "Purpose": "Performing thorough screening prior to hiring potential personnel who are expected to be given access to the CDE provides entities with the information necessary to make informed risk decisions regarding personnel they hire that will have access to the CDE. Other benefits of screening potential personnel include helping to ensure workplace safety and confirming information provided by prospective employees on their resumes.",
    "GoodPractice": "Entities should consider screening for existing personnel anytime they transfer into roles where they have access to the CDE from roles where they did not have this access. To be effective, the level of screening should be appropriate for the position. For example, positions requiring greater responsibility or that have administrative access to critical data or systems may warrant more detailed or more frequent screening than positions with less responsibility and access.",
    "Examples": "Screening options can include, as appropriate for the entity’s region, previous employment history, review of public information/social media resources, criminal record, credit history, and reference checks.",
    "CustomizedApproachObjective": "The risk related to allowing new members of staff access to the CDE is understood and managed.",
    "ApplicabilityNotes": "For those potential personnel to be hired for positions such as store cashiers, who only have access to one card number at a time when facilitating a transaction, this requirement is a recommendation only.",
    "function_names": []
  },
  {
    "RequirementID": "12.8.1",
    "DefinedApproachRequirements": "A list of all third-party service providers (TPSPs) with which account data is shared or that could affect the security of account data is maintained, including a description for each of the services provided.",
    "DefinedApproachTestingProcedures": "12.8.1.a Examine policies and procedures to verify that processes are defined to maintain a list of TPSPs, including a description for each of the services provided, for all TPSPs with whom account data is shared or that could affect the security of account data. 12.8.1.b Examine documentation to verify that a list of all TPSPs is maintained that includes a description of the services provided.",
    "Purpose": "Maintaining a list of all TPSPs identifies where potential risk extends outside the organization and defines the organization’s extended attack surface.",
    "Examples": "Different types of TPSPs include those that:\n• Store, process, or transmit account data on the entity’s behalf (such as payment gateways, payment processors, payment service providers (PSPs), and off-site storage providers).\n• Manage system components included in the entity’s PCI DSS assessment (such as providers of network security control services, anti-malware services, and security incident and event management (SIEM); contact and call centers; web-hosting companies; and IaaS, PaaS, SaaS, and FaaS cloud providers).\n• Could impact the security of the entity’s cardholder data and/or sensitive authentication data (such as vendors providing support via remote access, and bespoke software developers).",
    "CustomizedApproachObjective": "Records are maintained of TPSPs and the services provided.",
    "ApplicabilityNotes": "The use of a PCI DSS compliant TPSP does not make an entity PCI DSS compliant, nor does it remove the entity’s responsibility for its own PCI DSS compliance."
  },
  {
    "RequirementID": "12.8.2",
    "DefinedApproachRequirements": "Written agreements with TPSPs are maintained as follows:\n• Written agreements are maintained with all TPSPs with which account data is shared or that could affect the security of the CDE.\n• Written agreements include acknowledgments from TPSPs that TPSPs are responsible for the security of account data the TPSPs possess or otherwise store, process, or transmit on behalf of the entity, or to the extent that the TPSP could impact the security of the entity’s cardholder data and/or sensitive authentication data.",
    "DefinedApproachTestingProcedures": "12.8.2.a Examine policies and procedures to verify that processes are defined to maintain written agreements with all TPSPs in accordance with all elements specified in this requirement. 12.8.2.b Examine written agreements with TPSPs to verify they are maintained in accordance with all elements as specified in this requirement.",
    "Purpose": "The written acknowledgment from a TPSP demonstrates its commitment to maintaining proper security of account data that it obtains from its customers and that the TPSP is fully aware of the assets that could be affected during the provisioning of the TPSP’s service. The extent to which a specific TPSP is responsible for the security of account data will depend on the service provided and the responsibilities agreed between the provider and assessed entity (the customer). In conjunction with Requirement 12.9.1, this requirement is intended to promote a consistent level of understanding between parties about their applicable PCI DSS responsibilities.",
    "GoodPractice": "The entity may also want to consider including in their written agreement with a TPSP that the TPSP will support the entity’s request for information per Requirement 12.9.2. Entities will also want to understand whether any TPSPs have 'nested' relationships with other TPSPs, meaning the primary TPSP contracts with another TPSP(s) for the purposes of providing a service. It is important to understand whether the primary TPSP is relying on the secondary TPSP(s) to achieve overall compliance of a service, and what types of written agreements the primary TPSP has in place with the secondary TPSPs. Entities can consider including coverage in their written agreement for any 'nested' TPSPs a primary TPSP may use.",
    "FurtherInformation": "Refer to the Information Supplement: Third-Party Security Assurance for further guidance. The exact wording of an agreement will depend on the details of the service being provided, and the responsibilities assigned to each party. The agreement does not have to include the exact wording provided in this requirement. The TPSP’s written acknowledgment is a confirmation that states the TPSP is responsible for the security of the account data it may store, process, or transmit on behalf of the customer or to the extent the TPSP may impact the security of a customer’s cardholder data and/or sensitive authentication data. Evidence that a TPSP is meeting PCI DSS requirements (is not the same as a written acknowledgment specified in this requirement. For example, a PCI DSS Attestation of Compliance (AOC), a declaration on a company’s website, a policy statement, a responsibility matrix, or other evidence not included in a written agreement is not a written acknowledgment."
  },
  {
    "RequirementID": "12.8.3",
    "DefinedApproachRequirements": "An established process is implemented for engaging TPSPs, including proper due diligence prior to engagement.",
    "DefinedApproachTestingProcedures": "12.8.3.a Examine policies and procedures to verify that processes are defined for engaging TPSPs, including proper due diligence prior to engagement. 12.8.3.b Examine evidence and interview responsible personnel to verify the process for engaging TPSPs includes proper due diligence prior to engagement.",
    "Purpose": "A thorough process for engaging TPSPs, including details for selection and vetting prior to engagement, helps ensure that a TPSP is thoroughly vetted internally by an entity prior to establishing a formal relationship and that the risk to cardholder data associated with the engagement of the TPSP is understood.",
    "GoodPractice": "Specific due-diligence processes and goals will vary for each organization. Elements that should be considered include the provider’s reporting practices, breach-notification and incident response procedures, details of how PCI DSS responsibilities are assigned between each party, how the TPSP validates their PCI DSS compliance and what evidence they provide.",
    "CustomizedApproachObjective": "The capability, intent, and resources of a prospective TPSP to adequately protect account data are assessed before the TPSP is engaged.",
    "function_names": []
  },
  {
    "RequirementID": "12.8.4",
    "DefinedApproachRequirements": "A program is implemented to monitor TPSPs’ PCI DSS compliance status at least once every 12 months.",
    "DefinedApproachTestingProcedures": "12.8.4.a Examine policies and procedures to verify that processes are defined to monitor TPSPs’ PCI DSS compliance status at least once every 12 months. 12.8.4.b Examine documentation and interview responsible personnel to verify that the PCI DSS compliance status of each TPSP is monitored at least once every 12 months.",
    "Purpose": "Knowing the PCI DSS compliance status of all engaged TPSPs provides assurance and awareness about whether they comply with the requirements applicable to the services they offer to the organization.",
    "GoodPractice": "If the TPSP offers a variety of services, the compliance status the entity monitors should be specific to those services delivered to the entity and those services in scope for the entity’s PCI DSS assessment.",
    "ApplicabilityNotes": "If a TPSP has a PCI DSS Attestation of Compliance (AOC), the expectation is that the TPSP should provide that to customers upon request to demonstrate their PCI DSS compliance status. If the TPSP did not undergo a PCI DSS assessment, it may be able to provide other sufficient evidence to demonstrate that it has met the applicable requirements without undergoing a formal compliance validation. For example, the TPSP can provide specific evidence to the entity’s assessor so the assessor can confirm applicable requirements are met. Alternatively, the TPSP can elect to undergo multiple on-demand assessments by each of its customers’ assessors, with each assessment targeted to confirm that applicable requirements are met.",
    "FurtherInformation": "For more information about third-party service providers, refer to:\n• PCI DSS section: Use of Third-Party Service Providers.\n• Information Supplement: Third-Party Security Assurance. Where an entity has an agreement with a TPSP for meeting PCI DSS requirements on behalf of the entity (for example, via a firewall service), the entity must work with the TPSP to make sure the applicable PCI DSS requirements are met. If the TPSP does not meet those applicable PCI DSS requirements, then those requirements are also 'not in place' for the entity.",
    "function_names": []
  },
  {
    "RequirementID": "12.8.5",
    "DefinedApproachRequirements": "Information is maintained about which PCI DSS requirements are managed by each TPSP, which are managed by the entity, and any that are shared between the TPSP and the entity.",
    "DefinedApproachTestingProcedures": "12.8.5.a Examine policies and procedures to verify that processes are defined to maintain information about which PCI DSS requirements are managed by each TPSP, which are managed by the entity, and any that are shared between both the TPSP and the entity. 12.8.5.b Examine documentation and interview personnel to verify the entity maintains information about which PCI DSS requirements are managed by each TPSP, which are managed by the entity, and any that are shared between both entities.",
    "Purpose": "It is important that the entity understands which PCI DSS requirements and sub-requirements its TPSPs have agreed to meet, which requirements are shared between the TPSP and the entity, and for those that are shared, specifics about how the requirements are shared and which entity is responsible for meeting each sub-requirement. Without this shared understanding, it is inevitable that the entity and the TPSP will assume a given PCI DSS sub-requirement is the responsibility of the other party, and therefore that sub-requirement may not be addressed at all. The specific information an entity maintains will depend on the particular agreement with their providers, the type of service, etc. TPSPs may define their PCI DSS responsibilities to be the same for all their customers; otherwise, this responsibility should be agreed upon by both the entity and TPSP.",
    "GoodPractice": "Entities can document these responsibilities via a matrix that identifies all applicable PCI DSS requirements and indicates for each requirement whether the entity or TPSP is responsible for meeting that requirement or whether it is a shared responsibility. This type of document is often referred to as a responsibility matrix.",
    "CustomizedApproachObjective": "Records detailing the PCI DSS requirements and related system components for which each TPSP is solely or jointly responsible, are maintained and reviewed periodically.",
    "ApplicabilityNotes": "It is also important for entities to understand whether any TPSPs have 'nested' relationships with other TPSPs, meaning the primary TPSP contracts with another TPSP(s) for the purposes of providing a service. It is important to understand whether the primary TPSP is relying on the secondary TPSP(s) to achieve overall compliance of a service, and how the primary TPSP is monitoring performance of the service and the PCI DSS compliance status of the secondary TPSP(s). Note that it is the responsibility of the primary TPSP to manage and monitor any secondary TPSPs.",
    "FurtherInformation": "Refer to Information Supplement: Third-Party Security Assurance for a sample responsibility matrix template.",
    "function_names": []
  },
  {
    "RequirementID": "12.9.1",
    "DefinedApproachRequirements": "Additional requirement for service providers only: TPSPs provide written agreements to customers that include acknowledgments that TPSPs are responsible for the security of account data the TPSP possesses or otherwise stores, processes, or transmits on behalf of the customer, or to the extent that the TPSP could impact the security of the customer’s cardholder data and/or sensitive authentication data.",
    "DefinedApproachTestingProcedures": "Additional testing procedure for service provider assessments only: Examine TPSP policies, procedures, and templates used for written agreements to verify processes are defined for the TPSP to provide written acknowledgments to customers in accordance with all elements specified in this requirement.",
    "Purpose": "In conjunction with Requirement 12.8.2, this requirement is intended to promote a consistent level of understanding between TPSPs and their customers about their applicable PCI DSS responsibilities. The acknowledgment from the TPSP evidences the TPSP’s commitment to maintaining proper security of the account data that it obtains from its customers. The TPSP’s internal policies and procedures related to their customer engagement process and any templates used for written agreements should include provision of an applicable PCI DSS acknowledgement to its customers. The method by which the TPSP provides written acknowledgment should be agreed between the provider and its customers.",
    "CustomizedApproachObjective": "TPSPs formally acknowledge their security responsibilities to their customers.",
    "ApplicabilityNotes": "This requirement applies only when the entity being assessed is a service provider. The exact wording of an agreement will depend on the details of the service being provided, and the responsibilities assigned to each party. The agreement does not have to include the exact wording provided in this requirement. The TPSP’s written acknowledgment is a confirmation that states the TPSP is responsible for the security of the account data it may store, process, or transmit on behalf of the customer or to the extent the TPSP may impact the security of a customer’s cardholder data and/or sensitive authentication data. Evidence that a TPSP is meeting PCI DSS requirements is not the same as a written agreement specified in this requirement. For example, a PCI DSS Attestation of Compliance (AOC), a declaration on a company’s website, a policy statement, a responsibility matrix, or other evidence not included in a written agreement is not a written acknowledgment.",
    "function_names": []
  },
  {
    "RequirementID": "12.9.2",
    "DefinedApproachRequirements": "Additional requirement for service providers only: TPSPs support their customers’ requests for information to meet Requirements 12.8.4 and 12.8.5 by providing the following upon customer request:\n• PCI DSS compliance status information (Requirement 12.8.4).\n• Information about which PCI DSS requirements are the responsibility of the TPSP and which are the responsibility of the customer, including any shared responsibilities (Requirement 12.8.5), for any service the TPSP provides that meets a PCI DSS requirement(s) on behalf of customers or that can impact security of customers’ cardholder data or sensitive authentication data.",
    "DefinedApproachTestingProcedures": "Additional testing procedure for service provider assessments only: Examine policies and procedures to verify processes are defined for the TPSPs to support customers’ request for information to meet Requirements 12.8.4 and 12.8.5 in accordance with all elements specified in this requirement.",
    "Purpose": "If a TPSP does not provide the necessary information to enable its customers to meet their security and compliance requirements, the customers will not be able to protect cardholder data nor meet their own contractual obligations.",
    "GoodPractice": "If a TPSP has a PCI DSS Attestation of Compliance (AOC), the expectation is that the TPSP should provide that to customers upon request to demonstrate their PCI DSS compliance status. If the TPSP did not undergo a PCI DSS assessment, they may be able to provide other sufficient evidence to demonstrate that it has met the applicable requirements without undergoing a formal compliance validation. For example, the TPSP can provide specific evidence to the entity’s assessor so the assessor can confirm applicable requirements are met. Alternatively, the TPSP can elect to undergo multiple on-demand assessments by each of its customers’ assessors, with each assessment targeted to confirm that applicable requirements are met. TPSPs should provide sufficient evidence to their customers to verify that the scope of the TPSP’s PCI DSS assessment covered the services applicable to the customer and that the relevant PCI DSS requirements were examined and determined to be in place.",
    "CustomizedApproachObjective": "TPSPs provide information as needed to support their customers’ PCI DSS compliance efforts.",
    "ApplicabilityNotes": "This requirement applies only when the entity being assessed is a service provider. TPSPs may define their PCI DSS responsibilities to be the same for all their customers; otherwise, this responsibility should be agreed upon by both the customer and TPSP. It is important that the customer understands which PCI DSS requirements and sub-requirements its TPSPs have agreed to meet, which requirements are shared between the TPSP and the customer, and for those that are shared, specifics about how the requirements are shared and which entity is responsible for meeting each sub-requirement. An example of a way to document these responsibilities is via a matrix that identifies all applicable PCI DSS requirements and indicates whether the customer or TPSP is responsible for meeting that requirement or whether it is a shared responsibility.",
    "FurtherInformation": "For further guidance, refer to:\n• PCI DSS section: Use of Third-Party Service Providers.\n• Information Supplement: Third-Party Security Assurance (includes a sample responsibility matrix template).",
    "function_names": []
  },
  {
    "RequirementID": "12.10.1",
    "DefinedApproachRequirements": "An incident response plan exists and is ready to be activated in the event of a suspected or confirmed security incident. The plan includes, but is not limited to:\n• Roles, responsibilities, and communication and contact strategies in the event of a suspected or confirmed security incident, including notification of payment brands and acquirers, at a minimum.\n• Incident response procedures with specific containment and mitigation activities for different types of incidents.\n• Business recovery and continuity procedures.\n• Data backup processes.\n• Analysis of legal requirements for reporting compromises.\n• Coverage and responses of all critical system components.\n• Reference or inclusion of incident response procedures from the payment brands.",
    "DefinedApproachTestingProcedures": "12.10.1.a Examine the incident response plan to verify that the plan exists and includes at least the elements specified in this requirement. 12.10.1.b Interview personnel and examine documentation from previously reported incidents or alerts to verify that the documented incident response plan and procedures were followed.",
    "Purpose": "Without a comprehensive incident response plan that is properly disseminated, read, and understood by the parties responsible, confusion and lack of a unified response could create further downtime for the business, unnecessary public media exposure, as well as risk of financial and/or reputational loss and legal liabilities.",
    "GoodPractice": "The incident response plan should be thorough and contain all the key elements for stakeholders (for example, legal, communications) to allow the entity to respond effectively in the event of a breach that could impact account data. It is important to keep the plan up to date with current contact information of all individuals designated as having a role in incident response. Other relevant parties for notifications may include customers, financial institutions (acquirers and issuers), and business partners. Entities should consider how to address all compromises of data within the CDE in their incident response plans, including compromises to account data, wireless encryption keys, encryption keys used for transmission and storage or account data or cardholder data, etc.",
    "CustomizedApproachObjective": "A comprehensive incident response plan that meets card brand expectations is maintained.",
    "Examples": "Legal requirements for reporting compromises include those in most US states, the EU General Data Protection Regulation (GDPR), and the Personal Data Protection Act (Singapore).",
    "FurtherInformation": "For more information, refer to the NIST SP 800-61 Rev. 2, Computer Security Incident Handling Guide.",
    "function_names": []
  },
  {
    "RequirementID": "12.10.2",
    "DefinedApproachRequirements": "At least once every 12 months, the security incident response plan is:\n• Reviewed and the content is updated as needed.\n• Tested, including all elements listed in Requirement 12.10.1.",
    "DefinedApproachTestingProcedures": "Interview personnel and review documentation to verify that, at least once every 12 months, the security incident response plan is:\n• Reviewed and updated as needed.\n• Tested, including all elements listed in Requirement 12.10.1.",
    "Purpose": "Proper testing of the security incident response plan can identify broken business processes and ensure key steps are not missed, which could result in increased exposure during an incident. Periodic testing of the plan ensures that the processes remain viable, as well as ensuring that all relevant personnel in the organization are familiar with the plan.",
    "GoodPractice": "The test of the incident response plan can include simulated incidents and the corresponding responses in the form of a 'table-top exercise' that includes participation by relevant personnel. A review of the incident and the quality of the response can provide entities with the assurance that all required elements are included in the plan.",
    "CustomizedApproachObjective": "The incident response plan is kept current and tested periodically.",
    "function_names": []
  },
  {
    "RequirementID": "12.10.3",
    "DefinedApproachRequirements": "Specific personnel are designated to be available on a 24/7 basis to respond to suspected or confirmed security incidents.",
    "DefinedApproachTestingProcedures": "Examine documentation and interview responsible personnel occupying designated roles to verify that specific personnel are designated to be available on a 24/7 basis to respond to security incidents.",
    "Purpose": "An incident could occur at any time, therefore if a person who is trained in incident response and familiar with the entity’s plan is available when an incident is detected, the entity’s ability to correctly respond to the incident is increased.",
    "GoodPractice": "Often, specific personnel are designated to be part of a security incident response team, with the team having overall responsibility for responding to incidents (perhaps on a rotating schedule basis) and managing those incidents in accordance with the plan. The incident response team can consist of core members who are permanently assigned or 'on-demand' personnel who may be called up as necessary, depending on their expertise and the specifics of the incident. Having available resources to respond quickly to incidents minimizes disruption to the organization. Examples of types of activity the team or individuals should respond to include any evidence of unauthorized activity, detection of unauthorized wireless access points, critical IDS alerts, and reports of unauthorized critical system or content file changes.",
    "CustomizedApproachObjective": "Incidents are responded to immediately where appropriate.",
    "function_names": []
  },
  {
    "RequirementID": "12.10.4",
    "DefinedApproachRequirements": "Personnel responsible for responding to suspected and confirmed security incidents are appropriately and periodically trained on their incident response responsibilities.",
    "DefinedApproachTestingProcedures": "Examine training documentation and interview incident response personnel to verify that personnel are appropriately and periodically trained on their incident response responsibilities.",
    "Purpose": "Without a trained and readily available incident response team, extended damage to the network could occur, and critical data and systems may become 'polluted' by inappropriate handling of the targeted systems. This can hinder the success of a post-incident investigation.",
    "GoodPractice": "It is important that all personnel involved in incident response are trained and knowledgeable about managing evidence for forensics and investigations.",
    "CustomizedApproachObjective": "Personnel are knowledgeable about their role and responsibilities in incident response and are able to access assistance and guidance when required.",
    "function_names": []
  },
  {
    "RequirementID": "12.10.4.1",
    "DefinedApproachRequirements": "The frequency of periodic training for incident response personnel is defined in the entity’s targeted risk analysis, which is performed according to all elements specified in Requirement 12.3.1.",
    "DefinedApproachTestingProcedures": "12.10.4.1.a Examine the entity’s targeted risk analysis for the frequency of training for incident response personnel to verify the risk analysis was performed in accordance with all elements specified in Requirement 12.3.1. 12.10.4.1.b Examine documented results of periodic training of incident response personnel and interview personnel to verify training is performed at the frequency defined in the entity’s targeted risk analysis performed for this requirement.",
    "CustomizedApproachObjective": "Incident response personnel are trained at a frequency that addresses the entity’s risk.",
    "ApplicabilityNotes": "This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.",
    "function_names": []
  },
  {
    "RequirementID": "12.10.5",
    "DefinedApproachRequirements": "The security incident response plan includes monitoring and responding to alerts from security monitoring systems, including but not limited to:\n• Intrusion-detection and intrusion-prevention systems.\n• Network security controls.\n• Change-detection mechanisms for critical files.\n• The change-and tamper-detection mechanism for payment pages. This bullet is a best practice until its effective date; refer to Applicability Notes below for details.\n• Detection of unauthorized wireless access points.",
    "DefinedApproachTestingProcedures": "12.10.5 Examine documentation and observe incident response processes to verify that monitoring and responding to alerts from security monitoring systems are covered in the security incident response plan, including but not limited to the systems specified in this requirement.",
    "Purpose": "Responding to alerts generated by security monitoring systems that are explicitly designed to focus on potential risk to data is critical to prevent a breach and therefore, this must be included in the incident-response processes.",
    "CustomizedApproachObjective": "Alerts generated by monitoring and detection technologies are responded to in a structured, repeatable manner.",
    "ApplicabilityNotes": "The bullet above (for monitoring and responding to alerts from a change- and tamper-detection mechanism for payment pages) is a best practice until 31 March 2025, after which it will be required as part of Requirement 12.10.5 and must be fully considered during a PCI DSS assessment.",
    "function_names": []
  },
  {
    "RequirementID": "12.10.6",
    "DefinedApproachRequirements": "The security incident response plan is modified and evolved according to lessons learned and to incorporate industry developments.",
    "DefinedApproachTestingProcedures": "12.10.6.a Examine policies and procedures to verify that processes are defined to modify and evolve the security incident response plan according to lessons learned and to incorporate industry developments. 12.10.6.b Examine the security incident response plan and interview responsible personnel to verify that the incident response plan is modified and evolved according to lessons learned and to incorporate industry developments.",
    "Purpose": "Incorporating lessons learned into the incident response plan after an incident occurs and in-step with industry developments, helps keep the plan current and able to react to emerging threats and security trends.",
    "GoodPractice": "The lessons-learned exercise should include all levels of personnel. Although it is often included as part of the review of the entire incident, it should focus on how the entity’s response to the incident could be improved. It is important to not just consider elements of the response that did not have the planned outcomes but also to understand what worked well and whether lessons from those elements that worked well can be applied to areas of the plan that did not. Another way to optimize an entity’s incident response plan is to understand the attacks made against other organizations and use that information to fine-tune the entity’s detection, containment, mitigation, or recovery procedures.",
    "CustomizedApproachObjective": "The effectiveness and accuracy of the incident response plan is reviewed and updated after each invocation.",
    "function_names": []
  },
  {
    "RequirementID": "12.10.7",
    "DefinedApproachRequirements": "Incident response procedures are in place, to be initiated upon the detection of stored PAN anywhere it is not expected, and include:\n• Determining what to do if PAN is discovered outside the CDE, including its retrieval, secure deletion, and/or migration into the currently defined CDE, as applicable.\n• Identifying whether sensitive authentication data is stored with PAN.\n• Determining where the account data came from and how it ended up where it was not expected.\n• Remediating data leaks or process gaps that resulted in the account data being where it was not expected.",
    "DefinedApproachTestingProcedures": "12.10.7.a Examine documented incident response procedures to verify that procedures for responding to the detection of stored PAN anywhere it is not expected exist, are ready to be initiated, and include all elements specified in this requirement. 12.10.7.b Interview personnel and examine records of response actions to verify that incident response procedures are performed upon detection of stored PAN anywhere it is not expected.",
    "Purpose": "Having documented incident response procedures that are followed in the event that stored PAN is found anywhere it is not expected, helps to identify the necessary remediation actions and prevent future leaks.",
    "GoodPractice": "If PAN was found outside the CDE, analysis should be performed to 1) determine whether it was saved independently of other data or with sensitive authentication data, 2) identify the source of the data, and 3) identify the control gaps that resulted in the data being outside the CDE. Entities should consider whether there are contributory factors, such as business processes, user behavior, improper system configurations, etc. that caused the PAN to be stored in an unexpected location. If such contributory factors are present, they should be addressed per this Requirement to prevent recurrence.",
    "CustomizedApproachObjective": "Processes are in place to quickly respond, analyze, and address situations in the event that cleartext PAN is detected where it is not expected.",
    "ApplicabilityNotes": "This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.",
    "function_names": []
  }
]
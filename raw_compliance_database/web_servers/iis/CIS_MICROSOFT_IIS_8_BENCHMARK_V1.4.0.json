[
  {
    "id": "1.1.1",
    "title": "Ensure Web Content Is on Non-System Partition",
    "assessment": "Scored",
    "description": "Web resources published through IIS are mapped, via Virtual Directories, to physical locations on disk.  It is recommended to map all Virtual Directories to a non-system disk volume.",
    "rationale": "Isolating web content from system files may reduce the probability of:  Web sites/applications exhausting system disk space  File IO vulnerability in the web site/application from affecting the confidentiality and/or integrity of system files",
    "audit": "Execute the following command to ensure no virtual directories are mapped to the system drive: %systemroot%\\system32\\inetsrv\\appcmd list vdir",
    "remediation": "1. Browse to web content in C:\\inetpub\\wwwroot\\ 2. Copy or cut content onto a dedicated and restricted web folder on a non-system drive such as D:\\webroot\\ 11 | P a g e 3. Change mappings for any applications or Virtual Directories to reflect the new location To change the mapping for the application named app1 which resides under the Default Web Site, open IIS Manager: 1. Expand the server node 2. Expand Sites 3. Expand Default Web Site 4. Click on app1 5. In the Actions pane, select Basic Settings 6. In the Physical path text box, put the new location of the application, D:\\wwwroot\\app1 in the example above References: 1. http://technet.microsoft.com/en-us/library/cc179961.aspx 2. http://blogs.iis.net/thomad/archive/2008/02/10/moving-the-iis7-inetpub- directory-to-a-different-drive.aspx",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://technet.microsoft.com/en-us/library/cc179961.aspx 2. http://blogs.iis.net/thomad/archive/2008/02/10/moving-the-iis7-inetpub- directory-to-a-different-drive.aspx",
    "function_names": [
      "iis_virtual_directory_non_system_partition",
      "iis_web_content_non_system_disk",
      "iis_virtual_directory_non_os_volume",
      "iis_web_resource_non_system_partition",
      "iis_content_mapping_non_system_disk"
    ]
  },
  {
    "id": "1.1.2",
    "title": "Require Host Headers on all Sites",
    "assessment": "Scored",
    "description": "Host headers provide the ability to host multiple websites on the same IP address and port. It is recommended that host headers be configured for all sites.",
    "rationale": "Requiring a Host header for all sites may reduce the probability of:  DNS rebinding attacks successfully compromising or abusing site data or functionality [2]  IP-based scans successfully identifying or interacting with a target application hosted on IIS  12 | P a g e",
    "audit": "Execute the following command to identify sites that are not configured to require host headers: %systemroot%\\system32\\inetsrv\\appcmd list sites All sites will be listed as such: SITE \"Default Web Site\" (id:1,bindings:http/*:80:test.com,state:Started) SITE \"badsite\" (id:3,bindings:http/*:80:,state:Started) For all non-SSL sites, ensure that the IP:port:host binding triplet contains a host name.  In the example above, the first site is configured as recommended given the Default Web Site has a host header of test.com.  badsite, however, does not have a host header configured - it shows *:80: which means all IPs over port 80, with no host header.",
    "remediation": "Obtain a listing of all sites by using the following appcmd.exe command: %systemroot%\\system32\\inetsrv\\appcmd list sites Perform the following in IIS Manager to configure host headers for the Default Web Site: 1. Open IIS Manager 2. In the Connections pane expand the Sites node and select Default Web Site 3. In the Actions pane click Bindings 4. In the Site Bindings dialog box, select the binding for which host headers are going to be configured, Port 80 in this example 5. Click Edit 6. Under host name, enter the sites FQDN, such as <www.examplesite.com> 7. Click OK, then Close Note: Requiring a host header may impair site functionality for HTTP/1.0 clients. References: 1. http://technet.microsoft.com/en-us/library/cc753195%28WS.10%29.aspx 2. http://crypto.stanford.edu/dns/dns-rebinding.pdf 3. http://www.sslshopper.com/article-ssl-host-headers-in-iis-7.html 4. http://blogs.iis.net/thomad/archive/2008/01/25/ssl-certificates-on-sites-with- host-headers.aspx   13 | P a g e",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://technet.microsoft.com/en-us/library/cc753195%28WS.10%29.aspx 2. http://crypto.stanford.edu/dns/dns-rebinding.pdf 3. http://www.sslshopper.com/article-ssl-host-headers-in-iis-7.html 4. http://blogs.iis.net/thomad/archive/2008/01/25/ssl-certificates-on-sites-with- host-headers.aspx   13 | P a g e",
    "function_names": [
      "cloud_cdn_site_host_header_required",
      "cloud_cdn_site_host_header_configured",
      "cloud_cdn_site_host_header_enabled",
      "cloud_cdn_site_host_header_all_sites",
      "cloud_cdn_site_host_header_valid"
    ]
  },
  {
    "id": "1.1.3",
    "title": "Disable Directory Browsing",
    "assessment": "Scored",
    "description": "Directory browsing allows the contents of a directory to be displayed upon request from a web client.  If directory browsing is enabled for a directory in Internet Information Services, users receive a page that lists the contents of the directory when the following two conditions are met: 1. No specific file is requested in the URL 2. The Default Documents feature is disabled in IIS, or if it is enabled, IIS is unable to locate a file in the directory that matches a name specified in the IIS default document list It is recommended that directory browsing be disabled.",
    "rationale": "Ensuring that directory browsing is disabled may reduce the probability of disclosing sensitive content that is inadvertently accessible via IIS.",
    "audit": "Perform the following to verify that Directory Browsing has been disabled at the server level: %systemroot%\\system32\\inetsrv\\appcmd list config /section:directoryBrowse If the server is configured as recommended, the following will be displayed: <system.webServer> <directoryBrowse enabled=\"false\" /> <system.webServer>",
    "remediation": "Directory Browsing can be set by using the UI, running appcmd.exe commands, by editing configuration files directly, or by writing WMI scripts.  To disable directory browsing at the server level using an appcmd.exe command: %systemroot%\\system32\\inetsrv\\appcmd set config /section:directoryBrowse /enabled:false 14 | P a g e References: 1. http://technet.microsoft.com/en-us/library/cc725840%28WS.10%29.aspx 2. http://technet.microsoft.com/en-us/library/cc731109%28WS.10%29.aspx",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://technet.microsoft.com/en-us/library/cc725840%28WS.10%29.aspx 2. http://technet.microsoft.com/en-us/library/cc731109%28WS.10%29.aspx",
    "function_names": [
      "iis_directory_browsing_disabled",
      "iis_directory_listing_disabled",
      "iis_directory_contents_hidden",
      "iis_default_document_secure",
      "iis_directory_access_restricted",
      "iis_web_server_directory_browsing_disabled",
      "iis_directory_enumeration_disabled",
      "iis_directory_indexing_disabled"
    ]
  },
  {
    "id": "1.1.4",
    "title": "Configure all Application Pools to use Application Pool Identity",
    "assessment": "Scored",
    "description": "Application Pool Identities are the actual users/authorities that will run the worker process - w3wp.exe.  Assigning the correct user authority will help ensure that applications can function properly, while not giving overly permissive permissions on the system.  These identities can further be used in ACLs to protect system content.  It is recommended that each Application Pool run under a unique identity. IIS 8.0 has additional built-in least privilege identities intended for use by Application Pools.  It is recommended that the default Application Pool Identity be changed to a least privilege principle other than Network Service. Furthermore, it is recommended that all application pool identities be assigned a unique least privilege principal. To achieve isolation in IIS 8, application pools can be run as separate identities.  IIS can be configured to automatically use the application pool identity if no anonymous user account is configured for a Web site.  This can greatly reduce the number of accounts needed for Web sites and make management of the accounts easier.  It is recommended the Application Pool Identity be set as the Anonymous User Identity. The name of the Application Pool account corresponds to the name of the Application Pool. Application Pool Identities were introduced in Windows Server 2008 SP2.  It is recommended that Application Pools be set to run as ApplicationPoolIdentity unless there is an underlying reason that the application pool needs to run as a specified end user account. One example where this is needed is for web farms using Kerberos authentication.  15 | P a g e",
    "rationale": "Setting Application Pools to use unique least privilege identities such as ApplicationPoolIdentity reduces the potential harm the identity could cause should the application ever become compromised. Additionally, it will simplify application pools configuration and account management.",
    "audit": "To verify the Application Pools have been set to run under the ApplicationPoolIdentity using IIS Manager: 1. Open IIS Manager 2. Open the Application Pools node underneath the machine node; select Application Pool to be verified 3. Right click the Application Pool and select Advanced Settings… 4. Under the Process Model section, locate the Identity option and ensure that ApplicationPoolIdentity is set This configuration is stored in the same applicationHost.config file for web sites and application/virtual directories, at the bottom of the file, surrounded by <location path=\"path/to/resource\"> tags. To verify that any new Application Pools use the ApplicationPoolIdentity, execute the following command to determine if the Application Pool default has been changed to ApplicationPoolIdentity: %systemroot%\\system32\\inetsrv\\appcmd list config /section:applicationPools",
    "remediation": "The default Application Pool identity may be set for an application using the IIS Manager GUI, using AppCmd.exe commands in a command-line window, directly editing the configuration files, or by writing WMI scripts. Perform the following to change the default identity to the built-in ApplicationPoolIdentity in the IIS Manager GUI: 1. Open the IIS Manager GUI 2. In the connections pane, expand the server node and click Application Pools 3. On the Application Pools page, select the DefaultAppPool, and then click Advanced Settings in the Actions pane 4. For the Identity property, click the '...' button to open the Application Pool Identity dialog box 5. Select the Built-in account option choose ApplicationPoolIdentity from the list, or input a unique application user created for this purpose 16 | P a g e 6. Restart IIS To change the ApplicationPool identity to the built-in ApplicationPoolIdentity using AppCmd.exe, run the following from a command prompt: %systemroot%\\system32\\inetsrv\\appcmd set config /section:applicationPools /[name='<your apppool>'].processModel.identityType:ApplicationPoolIdentity The example code above will set just the DefaultAppPool.  Run this command for each configured Application Pool.  Additionally, ApplicationPoolIdentity can be made the default for all Application Pools by using the Set Application Pool Defaults action on the Application Pools node. If using a custom defined Windows user such as a dedicated service account, that user will need to be a member of the IIS_IUSRS group. The IIS_IUSRS group has access to all the necessary file and system resources so that an account, when added to this group, can seamlessly act as an application pool identity. References: 1. http://technet.microsoft.com/en-us/library/cc771170%28WS.10%29.aspx 2. http://learn.iis.net/page.aspx/140/understanding-built-in-user-and-group- accounts-in-iis-7/ 3. http://learn.iis.net/page.aspx/624/application-pool-identities/ 4. http://learn.iis.net/page.aspx/202/application-pool-identity-as-anonymous-user/ 5. http://blogs.iis.net/tomwoolums/archive/2008/12/17/iis-7-0-application- pools.aspx",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://technet.microsoft.com/en-us/library/cc771170%28WS.10%29.aspx 2. http://learn.iis.net/page.aspx/140/understanding-built-in-user-and-group- accounts-in-iis-7/ 3. http://learn.iis.net/page.aspx/624/application-pool-identities/ 4. http://learn.iis.net/page.aspx/202/application-pool-identity-as-anonymous-user/ 5. http://blogs.iis.net/tomwoolums/archive/2008/12/17/iis-7-0-application- pools.aspx",
    "function_names": [
      "iis_application_pool_use_pool_identity",
      "iis_application_pool_unique_identity",
      "iis_application_pool_no_network_service",
      "iis_application_pool_least_privilege_identity",
      "iis_application_pool_anonymous_user_identity",
      "iis_application_pool_no_custom_account",
      "iis_application_pool_identity_isolation_enabled"
    ]
  },
  {
    "id": "1.1.5",
    "title": "Ensure Unique Application Pools for Sites",
    "assessment": "Scored",
    "description": "IIS 8.0 introduced a new security feature called Application Pool Identities that allows Application Pools to be run under unique accounts without the need to create and manage local or domain accounts.  It is recommended that all Sites run under unique, dedicated Application Pools. 17 | P a g e",
    "rationale": "By setting sites to run under unique Application Pools, resource-intensive applications can be assigned to their own application pools which could improve server and application performance.  In addition, it can help maintain application availability: if an application in one pool fails, applications in other pools are not affected.  Last, isolating applications helps mitigate the potential risk of one application being allowed access to the resources of another application. It is also recommended to stop any application pool that is not in use or was created by an installation such as .Net 4.0.",
    "audit": "The following appcmd.exe command will give a listing of all applications configured, which site they are in, which application pool is serving them and which application pool identity they are running under: %systemroot%\\system32\\inetsrv\\appcmd list app The output of this command will be similar to the following: APP \"Default Web Site/\" (applicationPool:DefaultAppPool) 1. Run the above command and ensure a unique application pool is assigned for each site listed",
    "remediation": "1. Open IIS Manager 2. Open the Sites node underneath the machine node 3. Select the Site to be changed 4. In the Actions pane, select Basic Settings 5. Click the Select… box next to the Application Pool text box 6. Select the desired Application Pool 7. Once selected, click OK References: 1. http://technet.microsoft.com/en-us/library/cc753449%28WS.10%29.aspx 2. http://blogs.iis.net/tomwoolums/archive/2008/12/17/iis-7-0-application- pools.aspx 3. http://learn.iis.net/page.aspx/624/application-pool-identities/    18 | P a g e",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://technet.microsoft.com/en-us/library/cc753449%28WS.10%29.aspx 2. http://blogs.iis.net/tomwoolums/archive/2008/12/17/iis-7-0-application- pools.aspx 3. http://learn.iis.net/page.aspx/624/application-pool-identities/    18 | P a g e",
    "function_names": [
      "iis_site_unique_application_pool",
      "iis_application_pool_dedicated_identity",
      "iis_site_application_pool_isolation",
      "iis_application_pool_no_shared_identity",
      "iis_site_application_pool_unique_identity"
    ]
  },
  {
    "id": "1.1.6",
    "title": "Configure Anonymous User Identity to Use Application Pool Identity",
    "assessment": "Scored",
    "description": "To achieve isolation in IIS 8, application pools can be run as separate identities.  IIS can be configured to automatically use the application pool identity if no anonymous user account is configured for a Web site.  This can greatly reduce the number of accounts needed for Web sites and make management of the accounts easier.  It is recommended the Application Pool Identity be set as the Anonymous User Identity.",
    "rationale": "Configuring the anonymous user identity to use the application pool identity will help ensure site isolation - provided sites are set to use the application pool identity.  Since a unique principal will run each application pool, it will ensure the identity is least privilege.  Additionally, it will simplify Site management.",
    "audit": "Find and open the applicationHost.config file and verify that the userName attribute of the anonymousAuthentication tag is set to a blank string: <system.webServer> <security> <authentication> <anonymousAuthentication userName=\"\" /> </authentication> </security> </system.webServer> This configuration is stored in the same applicationHost.config file for web sites and application/virtual directories, at the bottom of the file, surrounded by <location path=\"path/to/resource\"> tags.",
    "remediation": "The Anonymous User Identity can be set to Application Pool Identity by using the IIS Manager GUI, using AppCmd.exe commands in a command-line window, directly editing the 19 | P a g e configuration files, or by writing WMI scripts.  Perform the following to set the username attribute of the anonymousAuthentication node in the IIS Manager GUI: 1. Open the IIS Manager GUI and navigate to the desired server, site, or application 2. In Features View, find and double-click the Authentication icon 3. Select the Anonymous Authentication option and in the Actions pane select Edit... 4. Choose Application pool identity in the modal window and then press the OK button To use AppCmd.exe to configure anonymousAuthentication at the server level, the command would look like this: %windir%\\system32\\inetsrv\\appcmd set config -section:anonymousAuthentication /username:\"\" --password References: 1. http://learn.iis.net/page.aspx/202/application-pool-identity-as-anonymous-user/ 2. http://learn.iis.net/page.aspx/624/application-pool-identities/  1.2 Configure Authentication This section contains recommendations around the different layers of authentication in IIS.",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://learn.iis.net/page.aspx/202/application-pool-identity-as-anonymous-user/ 2. http://learn.iis.net/page.aspx/624/application-pool-identities/  1.2 Configure Authentication This section contains recommendations around the different layers of authentication in IIS.",
    "function_names": [
      "iis_site_anonymous_user_identity_pool_identity",
      "iis_application_pool_identity_anonymous_user",
      "iis_site_anonymous_auth_pool_identity",
      "iis_pool_identity_anonymous_user_enabled",
      "iis_anonymous_user_application_pool_identity"
    ]
  },
  {
    "id": "1.2.1",
    "title": "Configure Global Authorization Rule to Restrict Access",
    "assessment": "Not Scored",
    "description": "IIS 7 introduced URL Authorization, which allows the addition of Authorization rules to the actual URL, instead of the underlying file system resource, as a way to protect it.  Authorization rules can be configured at the server, web site, folder (including Virtual Directories), or file level.  The native URL Authorization module applies to all requests, whether they are .NET managed or other types of files (e.g. static files or ASP files).  It is recommended that URL Authorization be configured to only grant access to the necessary security principals.  20 | P a g e",
    "rationale": "Configuring a global Authorization rule that restricts access will ensure inheritance of the settings down through the hierarchy of web directories; if that content is copied elsewhere, the authorization rules flow with it.  This will ensure access to current and future content is only granted to the appropriate principals, mitigating risk of accidental or unauthorized access.",
    "audit": "At the web site or application level, verify that the authorization rule configured has been applied: 1. Connect to Internet Information Services (IIS Manager) 2. Select the site or application where Authorization was configured 3. Select Authorization Rules and verify the configured rules were added To verify an authorization rule specifying no access to all users except the Administrators group, browse to and open the web.config file for the configured site/application/content: <configuration> <system.webServer> <security> <authorization> <remove users=\"*\" roles=\"\" verbs=\"\" /> <add accessType=\"Allow\" roles=\"administrators\" /> </authorization> </security> </system.webServer> </configuration>",
    "remediation": "To configure URL Authorization at the server level using IIS Manager: 1. Connect to Internet Information Services (IIS Manager) 2. Select the server 3. Select Authorization Rules 4. Remove the \"Allow All Users\" rule 5. Click Add Allow Rule… 6. Allow access to the user(s), user groups, or roles that are authorized across all of the web sites and applications (e.g. the Administratorsgroup) References: 1. http://learn.iis.net/page.aspx/142/understanding-iis-70-url-authorization/ 2. http://learn.iis.net/page.aspx/110/changes-between-iis6-and-iis7-security/ 21 | P a g e",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://learn.iis.net/page.aspx/142/understanding-iis-70-url-authorization/ 2. http://learn.iis.net/page.aspx/110/changes-between-iis6-and-iis7-security/ 21 | P a g e",
    "function_names": [
      "iis_url_authorization_restrict_access",
      "iis_global_rule_restrict_access",
      "iis_authorization_rule_minimal_privileges",
      "iis_url_authorization_secure_principal",
      "iis_authorization_rule_deny_all_by_default",
      "iis_url_authorization_deny_anonymous",
      "iis_authorization_rule_explicit_allow",
      "iis_url_authorization_deny_public_access",
      "iis_authorization_rule_restrict_to_roles",
      "iis_url_authorization_deny_unauthenticated"
    ]
  },
  {
    "id": "1.2.2",
    "title": "Ensure Access to Sensitive Site Features Is Restricted To Authenticated Principals Only",
    "assessment": "Not Scored",
    "description": "IIS 8 supports both challenge-based and login redirection-based authentication methods.  Challenge-based authentication methods, such as Integrated Windows Authentication, require a client to respond correctly to a server-initiated challenge.  A login redirection-based authentication method such as Forms Authentication relies on redirection to a login page to determine the identity of the principal.  Challenge-based authentication and login redirection-based authentication methods cannot be used in conjunction with one another. Public servers/sites are typically configured to use Anonymous Authentication.  This method typically works, provided the content or services is intended for use by the public.  When sites, applications, or specific content containers are not intended for anonymous public use, an appropriate authentication mechanism should be utilized.  Authentication will help confirm the identity of clients who request access to sites, application, and content.  IIS 7.0 provides the following authentication modules by default:  Anonymous Authentication - allows anonymous users to access sites, applications, and/or content  Integrated Windows Authentication - authenticates users using the NTLM or Kerberos protocols; Kerberos v5 requires a connection to Active Directory  ASP.NET Impersonation - allows ASP.NET applications to run under a security context different from the default security context for an application  Forms Authentication - enables a user to login to the configured space with a valid user name and password which is then validated against a database or other credentials store  Basic authentication - requires a valid user name and password to access content  Client Certificate Mapping Authentication - allows automatic authentication of users who log on with client certificates that have been configured; requires SSL  Digest Authentication - uses Windows domain controller to authenticate users who request access Note that none of the challenge-based authentication modules can be used at the same time Forms Authentication is enabled for certain applications/content.  Forms Authentication 22 | P a g e does not rely on IIS authentication, so anonymous access for the ASP.NET application can be configured if Forms Authentication will be used. It is recommended that sites containing sensitive information, confidential data, or non- public web services be configured with a credentials-based authentication mechanism.",
    "rationale": "Configuring authentication will help mitigate the risk of unauthorized users accessing data and/or services, and in some cases reduce the potential harm that can be done to a system.",
    "audit": "To verify that the authentication module is enabled for a specific site, application, or content, browse to and open the web.config file pertaining to the content.  Verify the configuration file now has a mode defined within the <authentication>tags.  The example below shows that Forms Authentication is configured, cookies will always be used, and SSL is required: <system.web> <authentication> <forms cookieless=\"UseCookies\" requireSSL=\"true\" /> </authentication> </system.web>",
    "remediation": "Enabling authentication can be performed by using the user interface (UI), running AppCmd.exe commands in a command-line window, editing configuration files directly, or by writing WMI scripts.  To verify an authentication mechanism is in place for sensitive content using the IIS Manager GUI: 1. Open IIS Manager and navigate to level with sensitive content 2. In Features View, double-click Authentication 3. On the Authentication page, make sure an authentication module is enabled, while anonymous authentication is enabled (Forms Authentication can have anonymous as well) 4. If necessary, select the desired authentication module, then in the Actions pane, click Enable Note: When configuring an authentication module for the first time, each mechanism must be further configured before use.   23 | P a g e References: 1. http://learn.iis.net/page.aspx/377/using-aspnet-forms-authentication/rev/1 2. http://learn.iis.net/page.aspx/244/how-to-take-advantage-of-the-iis7-integrated- pipeline/ 3. http://technet.microsoft.com/en-us/library/cc733010%28WS.10%29.aspx 4. http://msdn.microsoft.com/en-us/library/aa480476.aspx",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://learn.iis.net/page.aspx/377/using-aspnet-forms-authentication/rev/1 2. http://learn.iis.net/page.aspx/244/how-to-take-advantage-of-the-iis7-integrated- pipeline/ 3. http://technet.microsoft.com/en-us/library/cc733010%28WS.10%29.aspx 4. http://msdn.microsoft.com/en-us/library/aa480476.aspx"
  },
  {
    "id": "1.2.3",
    "title": "Require SSL in Forms Authentication",
    "assessment": "Scored",
    "description": "Forms-based authentication can pass credentials across the network in clear text.  It is therefore imperative that the traffic between client and server be encrypted using SSL, especially in cases where the site is publicly accessible.  It is recommended that communications with any portion of a site using Forms Authentication be encrypted using SSL.",
    "rationale": "Requiring SSL for Forms Authentication will protect the confidentiality of credentials during the login process, helping mitigate the risk of stolen user information.",
    "audit": "To verify that SSL is required for forms authentication for a specific site, application, or content, browse to and open the web.config file for the level in which forms authentication was enabled.  Verify the tag <forms requireSSL=\"true\" />: <system.web> <authentication> <forms requireSSL=\"true\" /> </authentication> </system.web>   24 | P a g e",
    "remediation": "1. Open IIS Manager and navigate to the appropriate tier 2. In Features View, double-click Authentication 3. On the Authentication page, select Forms Authentication 4. In the Actions pane, click Edit 5. Check the Requires SSL checkbox in the cookie settings section, click OK References: 1. http://technet.microsoft.com/en-us/library/cc771077(WS.10).aspx",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://technet.microsoft.com/en-us/library/cc771077(WS.10).aspx",
    "function_names": [
      "cloud_cdn_distribution_ssl_required",
      "compute_load_balancer_ssl_enforced",
      "app_gateway_auth_ssl_required",
      "web_app_auth_ssl_enforced",
      "forms_auth_ssl_required",
      "network_load_balancer_ssl_required",
      "api_gateway_auth_ssl_required",
      "cloud_front_auth_ssl_required",
      "web_server_auth_ssl_required",
      "auth_service_ssl_required"
    ]
  },
  {
    "id": "1.2.4",
    "title": "Configure Forms Authentication to Use Cookies",
    "assessment": "Scored",
    "description": "Forms Authentication can be configured to maintain the site visitor's session identifier in either a URI or cookie.  It is recommended that Forms Authentication be set to use cookies.",
    "rationale": "Using cookies to manage session state may help mitigate the risk of session hi-jacking attempts by preventing ASP.NET from having to move session information to the URL.  Moving session information identifiers into the URL may cause session IDs to show up in proxy logs, browsing history, and be accessible to client scripting via document.location.",
    "audit": "Locate and open the web.config for the configured application.  Verify the presence of <forms cookieless=\"UseCookies\" />. <system.web> <authentication> <forms cookieless=\"UseCookies\" requireSSL=\"true\" timeout=\"30\" /> </authentication> </system.web> 25 | P a g e",
    "remediation": "1. Open IIS Manager and navigate to the level where Forms Authentication is enabled 2. In Features View, double-click Authentication 3. On the Authentication page, select Forms Authentication 4. In the Actions pane, click Edit 5. In the Cookie settings section, select Use cookies from the Mode dropdown References: 1. http://technet.microsoft.com/en-us/library/cc732830%28WS.10%29.aspx",
    "profile_applicability": "  Level 2 - IIS 8.0   Level 2 - IIS 8.5",
    "references": "1. http://technet.microsoft.com/en-us/library/cc732830%28WS.10%29.aspx",
    "function_names": [
      "forms_authentication_cookie_enabled",
      "forms_authentication_uri_disabled",
      "forms_authentication_session_cookie_required",
      "forms_authentication_cookie_secure_enabled",
      "forms_authentication_cookie_http_only_enabled"
    ]
  },
  {
    "id": "1.2.5",
    "title": "Configure Cookie Protection Mode for Forms Authentication",
    "assessment": "Scored",
    "description": "The cookie protection mode defines the protection Forms Authentication cookies will be given within a configured application.  The four cookie protection modes that can be defined are:  Encryption and validation - Specifies that the application use both data validation and encryption to help protect the cookie; this option uses the configured data validation algorithm (based on the machine key) and triple-DES (3DES) for encryption, if available and if the key is long enough (48 bytes or more)  None - Specifies that both encryption and validation are disabled for sites that are using cookies only for personalization and have weaker security requirements  Encryption - Specifies that the cookie is encrypted by using Triple-DES or DES, but data validation is not performed on the cookie; cookies used in this manner might be subject to plain text attacks  Validation - Specifies that a validation scheme verifies that the contents of an encrypted cookie have not been changed in transit It is recommended that cookie protection mode always encrypt and validate Forms Authentication cookies. 26 | P a g e",
    "rationale": "By encrypting and validating the cookie, the confidentiality and integrity of data within the cookie is assured.  This helps mitigate the risk of attacks such as session hijacking and impersonation.",
    "audit": "Locate and open the web.config for the configured application.  Verify the presence of <forms protection=\"All\" />. <system.web> <authentication> <forms cookieless=\"UseCookies\" protection=\"All\" /> </authentication> </system.web> Note: The protection=\"All\" property will only show up if cookie protection mode was set to something different, and then changed to Encryption and validation.  To truly verify the protection=\"All\" property in the web.config, the protection mode can be changed, and then changed back.  Conversely, the protection=\"All\" line can be added to the web.config manually.",
    "remediation": "Cookie protection mode can be configured by using the user interface (UI), by running Appcmd.exe commands in a command-line window, by editing configuration files directly, or by writing WMI scripts.  Using IIS Manager: 1. Open IIS Manager and navigate to the level where Forms Authentication is enabled 2. In Features View, double-click Authentication 3. On the Authentication page, select Forms Authentication 4. In the Actions pane, click Edit 5. In the Cookie settings section, verify the drop-down for Protection mode is set for Encryption and validation References: 1. http://technet.microsoft.com/en-us/library/cc731804%28WS.10%29.aspx 2.    27 | P a g e",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://technet.microsoft.com/en-us/library/cc731804%28WS.10%29.aspx 2.    27 | P a g e",
    "function_names": [
      "app_service_auth_cookie_encryption_and_validation_enabled",
      "app_service_auth_cookie_protection_mode_configured",
      "app_service_auth_cookie_encryption_enabled",
      "app_service_auth_cookie_validation_enabled",
      "app_service_auth_cookie_protection_mode_not_none",
      "app_service_auth_cookie_triple_des_encryption_enabled",
      "app_service_auth_cookie_data_validation_enabled",
      "app_service_auth_cookie_secure_config_enabled"
    ]
  },
  {
    "id": "1.2.6",
    "title": "Lock down Encryption Providers",
    "assessment": "Scored",
    "description": "By default, whenever a property is encrypted, IIS 8.0 uses the defaultProvider for encryption defined in machine.config.  The IIS 8.0 local system process (WAS) runs under the context of LOCALSYSTEM and needs access to the application pool passwords.  However, by default the IIS_IUSRS security group is granted read access.  It is recommended that the IIS_IUSRS group have access to the iisWasKey revoked.",
    "rationale": "The iisWasKey is intended for access only by Administrators and SYSTEM.  Since the IIS_IUSRS group is granted read access, an attacker compromising an application set to use a principal in the IIS_IUSRS group could potentially gain access to the encryption key(s).  Revoking this unnecessary privilege will reduce attack surface and help maintain confidentiality and system/application integrity.",
    "audit": "To verify the permissions have been removed: 1. Obtain the machine GUID at the Registry Value \"MachineGuid\" in the Registry Key: HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography 2. Next, open a command prompt and run the following icacls command, ensuring that BUILTIN\\IIS_IUSRS(R) has been removed: icacls %ALLUSERSPROFILE%\\Microsoft\\Crypto\\RSA\\MachineKeys\\76944fb33636aeddb9590521c2e8815a_ <M achineGUID>",
    "remediation": "Removing access to the iisWasKey can be done by using an aspnet_regiis.exe command.  The syntax is as follows, and is dependent on the version of .NET being used: %systemroot%\\Microsoft.NET\\Framework\\\\aspnet_regiis.exe -pr iisWasKey IIS_IUSRS To remove read access to the IIS_IUSRS security group on a system using .NET Framework v2.0: 28 | P a g e 1. Open an elevated command prompt 2. Run the following aspnet_regiis.exe command: %systemroot%\\Microsoft.NET\\Framework\\v2.0.50727\\aspnet_regiis.exe -pr iisWasKey IIS_IUSRS If running a 64-bit system, also run the following: %systemroot%\\Microsoft.NET\\Framework64\\v2.0.50727\\aspnet_regiis.exe -pr iisWasKey IIS_IUSRS Note: A unique version of aspnet_regiis.exe is included with each version of the .NET Framework.  Since each version of the tool applies only to its associated version of the .NET Framework, be sure to use the appropriate version of the tool. References: 1. http://learn.iis.net/page.aspx/141/using-encryption-to-protect-passwords/ 2. http://support.microsoft.com/kb/977754",
    "profile_applicability": "  Level 2 - IIS 8.0   Level 2 - IIS 8.5",
    "references": "1. http://learn.iis.net/page.aspx/141/using-encryption-to-protect-passwords/ 2. http://support.microsoft.com/kb/977754",
    "function_names": [
      "iis_encryption_provider_default_restricted",
      "iis_encryption_provider_iis_iusrs_access_revoked",
      "iis_encryption_provider_was_key_protected",
      "iis_encryption_provider_local_system_access_limited",
      "iis_encryption_provider_machine_config_secure"
    ]
  },
  {
    "id": "1.2.7",
    "title": "Configure SSL for Basic Authentication",
    "assessment": "Not Scored",
    "description": "Basic Authentication can pass credentials across the network in clear text.  It is therefore imperative that the traffic between client and server be encrypted using SSL, especially in cases where the site is publicly accessible and is recommended that SSL be configured and required for any Site or Application using Basic Authentication.",
    "rationale": "Credentials sent in clear text can be easily intercepted by malicious code or persons.  Enforcing the use of Secure Sockets Layer will help mitigate the chances of hijacked credentials.",
    "audit": "Once SSL has been configured and required for a Site or application, only the https:// address will be available.  Attempt loading the Site or application for which Basic 29 | P a g e Authentication is configured using http://, the requests will fail and IIS will throw a 403.4 - Forbidden error.",
    "remediation": "To Use Basic Authentication with SSL: 1. Open IIS Manager 2. In the Connections pane on the left, select the server to be configured 3. In the Connections pane, expand the server, then expand Sites and select the site to be configured 4. In the Actions pane, click Bindings; the Site Bindings dialog appears 5. If an HTTPS binding is available, click Close and see below \"To require SSL\" 6. If no HTTPS binding is visible, perform the following steps To add an HTTPS binding: 1. In the Site Bindings dialog, click Add; the Add Site Binding dialog appears 2. Under Type, select https 3. Under SSL certificate, select an SSL certificate 4. Click OK, then close To require SSL: 1. In Features View, double-click SSL Settings 2. On the SSL Settings page, select Require SSL, and Require 128-bit SSL 3. In the Actions pane, click Apply References: 1. http://technet.microsoft.com/en-us/library/dd378853%28WS.10%29.aspx",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://technet.microsoft.com/en-us/library/dd378853%28WS.10%29.aspx",
    "function_names": [
      "cloud_cdn_distribution_ssl_required",
      "cloud_cdn_distribution_basic_auth_ssl_enabled",
      "compute_load_balancer_ssl_enforced",
      "compute_load_balancer_basic_auth_ssl_required",
      "cloud_cdn_endpoint_https_only",
      "compute_instance_basic_auth_ssl_enabled",
      "cloud_cdn_distribution_tls_1_2_min",
      "compute_load_balancer_tls_1_2_min_basic_auth"
    ]
  },
  {
    "id": "1.2.8",
    "title": "Ensure passwordFormat Credentials Element Not Set To Clear",
    "assessment": "Scored",
    "description": "30 | P a g e The <credentials> element of the <authentication> element allows optional definitions of name and password for IIS Manager User accounts within the configuration file. Forms based authentication also uses these elements to define the users.  IIS Manager Users can use the administration interface to connect to sites and applications in which they've been granted authorization. Note that the <credentials> element only applies when the default provider, ConfigurationAuthenticationProvider, is configured as the authentication provider.  It is recommended that passwordFormat be set to a value other than Clear, such as SHA1 or MD5.",
    "rationale": "Authentication credentials should always be protected to reduce the risk of stolen authentication credentials.",
    "audit": "Locate and open the configuration file for the configured application.  Verify the credentials element is not present: <configuration> <system.web> <authentication mode=\"Forms\"> <forms name=\"SampleApp\" loginUrl=\"/login.aspx\"> <credentials passwordFormat=\"SHA1\"> <user name=\" UserName1 \" password=\" SHA1EncryptedPassword1 \"/> <user name=\" UserName2 \" password=\" SHA1EncryptedPassword2 \"/> </credentials> </forms> </authentication> </system.web> </configuration>",
    "remediation": "Authentication mode is configurable at the machine.config, root-level web.config, or application-level web.config: 1. Locate and open the configuration file where the credentials are stored 2. Find the <credentials> element 3. If present, ensure passwordFormat is not set to Clear 4. ChangepasswordFormattoSHA1 orMD5 The clear text passwords will need to be replaced with the appropriate hashed version.  31 | P a g e References: 1. http://msdn.microsoft.com/en-us/library/e01fc50a.aspx 2. http://www.iis.net/ConfigReference/system.webServer/management/authenticati on/credentials 3. http://msdn.microsoft.com/en-us/library/bb422401%28VS.90%29.aspx",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://msdn.microsoft.com/en-us/library/e01fc50a.aspx 2. http://www.iis.net/ConfigReference/system.webServer/management/authenticati on/credentials 3. http://msdn.microsoft.com/en-us/library/bb422401%28VS.90%29.aspx",
    "function_names": [
      "iis_credentials_password_format_encrypted",
      "iis_authentication_credentials_no_clear_password",
      "iis_manager_user_password_format_secure",
      "iis_config_credentials_password_not_clear",
      "iis_authentication_provider_password_encrypted"
    ]
  },
  {
    "id": "1.2.9",
    "title": "Ensure credentials are not stored in configuration files",
    "assessment": "Scored",
    "description": "The <credentials> element of the <authentication> element allows optional definitions of name and password for IIS Manager User accounts within the configuration file. Forms based authentication also uses these elements to define the users.  IIS Manager Users can use the administration interface to connect to sites and applications in which they've been granted authorization. Note that the <credentials> element only applies when the default provider, ConfigurationAuthenticationProvider, is configured as the authentication provider.  It is recommended that passwordFormat be set to a value other than Clear, such as SHA1 or MD5.",
    "rationale": "Authentication credentials should always be protected to reduce the risk of stolen authentication credentials. For security reasons, it is recommended that user credentials not be stored an any IIS configuration files.",
    "audit": "Locate and open the configuration file for the configured application.  Verify the credentials element is not present: <configuration> <system.web> <authentication mode=\"Forms\"> <forms name=\"SampleApp\" loginUrl=\"/login.aspx\"> </forms> </authentication> </system.web> </configuration> 32 | P a g e",
    "remediation": "Authentication mode is configurable at the machine.config, root-level web.config, or application-level web.config: 1. Locate and open the configuration file where the credentials are stored 2. Find the <credentials> element 3. If present, remove the section This will remove all references to stored users in the configuration files. References: 1. http://msdn.microsoft.com/en-us/library/e01fc50a.aspx 2. http://www.iis.net/ConfigReference/system.webServer/management/authenticati on/credentials 3. http://msdn.microsoft.com/en-us/library/bb422401%28VS.90%29.aspx  1.3 ASP.NET Configuration Recommendations This section contains recommendations specific to ASP.NET.",
    "profile_applicability": "  Level 2 - IIS 8.0   Level 2 - IIS 8.5",
    "references": "1. http://msdn.microsoft.com/en-us/library/e01fc50a.aspx 2. http://www.iis.net/ConfigReference/system.webServer/management/authenticati on/credentials 3. http://msdn.microsoft.com/en-us/library/bb422401%28VS.90%29.aspx  1.3 ASP.NET Configuration Recommendations This section contains recommendations specific to ASP.NET.",
    "function_names": [
      "iis_authentication_credentials_encrypted",
      "iis_authentication_no_cleartext_credentials",
      "iis_config_no_stored_credentials",
      "iis_manager_user_password_format_secure",
      "iis_authentication_provider_secure_format",
      "iis_credentials_password_format_hashed",
      "iis_config_authentication_credentials_protected"
    ]
  },
  {
    "id": "1.3.1",
    "title": "Set Deployment Method to Retail",
    "assessment": "Scored",
    "description": "The <deployment retail> switch is intended for use by production IIS servers.  This switch is used to help applications run with the best possible performance and least possible security information leakages by disabling the application's ability to generate trace output on a page, disabling the ability to display detailed error messages to end users, and disabling the debug switch.  Often times, switches and options that are developer- focused, such as failed request tracing and debugging, are enabled during active development.  It is recommended that the deployment method on any production server be set to retail. 33 | P a g e",
    "rationale": "Utilizing the switch specifically intended for production IIS servers will eliminate the risk of vital application and system information leakages that would otherwise occur if tracing or debug were to be left enabled, or customErrors were to be left off.",
    "audit": "After the next time IIS is restarted, open the machine.config file and verify that <deployment retail=\"true\" /> remains set to true. <system.web> <deployment retail=\"true\" /> </system.web>",
    "remediation": "1. Open the machine.config file located in:  %windir%\\Microsoft.NET\\Framework\\ <framework_version> \\CONFIG 2. Add the line <deployment retail=\"true\" /> within the <system.web> section 3. If systems are 64-bit, do the same for the machine.config located in: %windir%\\Microsoft.NET\\Framework64\\ <framework_version> \\CONFIG References: 1. http://msdn.microsoft.com/en-US/library/ms228298%28VS.80%29.aspx",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://msdn.microsoft.com/en-US/library/ms228298%28VS.80%29.aspx",
    "function_names": [
      "iis_server_deployment_retail_enabled",
      "iis_server_production_mode_enabled",
      "iis_server_debug_disabled",
      "iis_server_trace_output_disabled",
      "iis_server_detailed_errors_disabled",
      "iis_server_retail_switch_enabled",
      "iis_server_development_features_disabled"
    ]
  },
  {
    "id": "1.3.2",
    "title": "Turn Debug Off",
    "assessment": "Scored",
    "description": "Developers often enable the debug mode during active ASP.NET development so that they do not have to continually clear their browsers cache every time they make a change to a resource handler.  The problem would arise from this being left \"on\" or set to \"true\".  Compilation debug output is displayed to the end user, allowing malicious persons to obtain detailed information about applications. 34 | P a g e This is a defense in depth recommendation due to the <deployment retail=\"true\" /> in the machine.config configuration file overriding any debug settings.  It is recommended that debugging still be turned off.",
    "rationale": "Setting <compilation debug> to false ensures that detailed error information does not inadvertently display during live application usage, mitigating the risk of application information leakage falling into unscrupulous hands.",
    "audit": "Browse to and open the web.config file pertaining to the server or specific application that has been configured.  Locate the <compilation debug>switch and verify it is set to false. <configuration> <system.web> <compilation debug=\"false\" /> </system.web> </configuration>",
    "remediation": "To use the UI to make this change: 1. Open IIS Manager and navigate desired server, site, or application 2. In Features View, double-click .NET Compilation 3. On the .NET Compilation page, in the Behavior section, ensure the Debug field is set to False 4. When finished, click Apply in the Actions pane Note: The <compilation debug> switch will not be present in the web.config file unless it has been added manually, or has previously been configured using the IIS Manager GUI. References: 1. http://technet.microsoft.com/en-us/library/cc725812%28WS.10%29.aspx     35 | P a g e",
    "profile_applicability": "  Level 2 - IIS 8.0   Level 2 - IIS 8.5",
    "references": "1. http://technet.microsoft.com/en-us/library/cc725812%28WS.10%29.aspx     35 | P a g e",
    "function_names": [
      "compute_webapp_debug_disabled",
      "compute_webapp_debug_mode_off",
      "compute_webapp_compilation_debug_disabled",
      "compute_webapp_retail_mode_enabled",
      "compute_webapp_debug_output_suppressed"
    ]
  },
  {
    "id": "1.3.3",
    "title": "Ensure Custom Error Messages are not Off",
    "assessment": "Scored",
    "description": "When an ASP.NET application fails and causes an HTTP/1.x 500 Internal Server Error, or a feature configuration (such as Request Filtering) prevents a page from being displayed, an error message will be generated.  Administrators can choose whether or not the application should display a friendly message to the client, detailed error message to the client, or detailed error message to localhost only.  The <customErrors> tag in the web.config has three modes:  On:  Specifies that custom errors are enabled.  If no defaultRedirect attribute is specified, users see a generic error.  The custom errors are shown to the remote clients and to the local host  Off:  Specifies that custom errors are disabled.  The detailed ASP.NET errors are shown to the remote clients and to the local host  RemoteOnly:  Specifies that custom errors are shown only to the remote clients, and that ASP.NET errors are shown to the local host.  This is the default value This is a defense in depth recommendation due to the <deployment retail=\"true\" /> in the machine.config file overriding any settings for customErrors to be turned Off.  It is recommended that customErrors still be turned to On or RemoteOnly.",
    "rationale": "customErrors can be set to On or RemoteOnly without leaking detailed application information to the client. Ensuring that customErrors is not set to Off will help mitigate the risk of malicious persons learning detailed application error and server configuration information.",
    "audit": "Find and open the web.config file for the application/site and verify that the tag has either <customErrors mode=\"RemoteOnly\" /> or <customErrors mode=\"On\" /> defined.   36 | P a g e",
    "remediation": "customErrors may be set for a server, site, or application using the IIS Manager GUI, using AppCmd.exe commands in a command-line window, directly editing the configuration files, or by writing WMI scripts.  Perform the following to set the customErrors mode to RemoteOnly or On for a Web Site in the IIS Manager GUI: 1. Open the IIS Manager GUI and navigate to the site to be configured 2. In Features View, find and double-click .NET Error Pages icon 3. In the Actions Pane, click Edit Feature Settings 4. In modal dialog, choose On or Remote Only for Mode settings 5. Click OK References: 1. http://msdn.microsoft.com/en-us/library/h0hfz6fc.aspx 2. http://technet.microsoft.com/en-us/library/dd569096%28WS.10%29.aspx",
    "profile_applicability": "  Level 2 - IIS 8.0   Level 2 - IIS 8.5",
    "references": "1. http://msdn.microsoft.com/en-us/library/h0hfz6fc.aspx 2. http://technet.microsoft.com/en-us/library/dd569096%28WS.10%29.aspx",
    "function_names": [
      "app_service_custom_errors_enabled",
      "app_service_custom_errors_not_off",
      "app_service_custom_errors_remote_only",
      "app_service_web_config_custom_errors_secure",
      "app_service_error_messages_restricted"
    ]
  },
  {
    "id": "1.3.4",
    "title": "ASP.NET stack tracing is Not Enabled",
    "assessment": "Scored",
    "description": "The trace element configures the ASP.NET code tracing service that controls how trace results are gathered, stored, and displayed.  When tracing is enabled, each page request generates trace messages that can be appended to the page output or stored in an application trace log. This is a defense in depth recommendation due to the <deployment retail=\"true\" /> in the machine.config file overriding any settings for ASP.NET stack tracing that are left on.  It is recommended that ASP.NET stack tracing still be turned off.",
    "rationale": "In an active Web Site, tracing should not be enabled because it can display sensitive configuration and detailed stack trace information to anyone who views the pages in the site.  If necessary, the localOnly attribute can be set to true to have trace information 37 | P a g e displayed only for localhost requests.  Ensuring that ASP.NET stack tracing is not on will help mitigate the risk of malicious persons learning detailed stack trace information.",
    "audit": "Verify asp.net tracing is not turned on, via a per-page basis in the application. Ensure the trace attribute is not enabled: Trace=\"true\" On an application basis like in the web.config ensure that tracing is not enabled like: <configuration> <system.web> ... <trace enabled=\"true\"> ... </system.web> </configuration> Note that tracing is configurable at numerous levels: 1.    Machine.config 2.    Root-level web.config 3.    Application-level web.config 4.    Virtual or physical directory-level web.config",
    "remediation": "1. Ensure <deployment retail=\"true\" /> is enabled in the machine.config. 2. Remove all attribute references to ASP.NET tracing by deleting the trace and trace enable attributes. Per Page: Remove any references to: Trace=\"true\" Per Application: <configuration> <system.web> ... <trace enabled=\"true\"> ... </system.web> </configuration> Default Value: The default value for ASP.NET tracing is off. 38 | P a g e References: 1. http://msdn.microsoft.com/en-us/library/94c55d08%28v=vs.100%29.aspx 2. http://msdn.microsoft.com/en-us/library/0x5wc973%28v=vs.100%29.aspx",
    "profile_applicability": "  Level 2 - IIS 8.0   Level 2 - IIS 8.5",
    "references": "1. http://msdn.microsoft.com/en-us/library/94c55d08%28v=vs.100%29.aspx 2. http://msdn.microsoft.com/en-us/library/0x5wc973%28v=vs.100%29.aspx",
    "function_names": [
      "asp_net_trace_disabled",
      "asp_net_stack_tracing_disabled",
      "asp_net_trace_element_disabled",
      "asp_net_tracing_disabled",
      "asp_net_trace_service_disabled"
    ]
  },
  {
    "id": "1.3.5",
    "title": "Configure Use Cookies Mode for Session State",
    "assessment": "Scored",
    "description": "A session cookie associates session information with client information for that session, which can be the duration of a user's connection to a site.  The cookie is passed in a HTTP header together with all requests between the client and server. Session information can also be stored in the URL.  However, storing session information in this manner has security implications that can open attack vectors such as session hijacking.  An effective method used to prevent session hijacking attacks is to force web applications to use cookies to store the session token.  This is accomplished by setting the cookieless attribute of the sessionState node to UseCookies or False which will in turn keep session state data out of URI.  It is recommended that session state be configured to UseCookies.",
    "rationale": "Cookies that have been properly configured help mitigate the risk of attacks such as session hi-jacking attempts by preventing ASP.NET from having to move session information to the URL; moving session information in URI causes session IDs to show up in proxy logs, and is accessible to client scripting via document.location.",
    "audit": "Find and open the web.config file for the application/site and verify that the sessionState tag is set to use cookies: <system.web> <sessionState cookieless=\"UseCookies\" /> </system.web> 39 | P a g e",
    "remediation": "SessionState can be set to UseCookies by using the IIS Manager GUI, using AppCmd.exe commands in a command-line window, directly editing the configuration files, or by writing WMI scripts.  Perform the following to set the cookieless attribute of the sessionState node to UseCookies in the IIS Manager GUI: 1. Open the IIS Manager GUI and navigate desired server, site, or application 2. In Features View, find and double-click the Session State icon 3. In the Cookie Settings section, choose Use Cookies from the Mode dropdown 4. In the Actions Pane, click Apply To use AppCmd.exe to configure sessionState at the server level, the command would look like this: %windir%\\system32\\inetsrv\\appcmd set config /commit:WEBROOT /section:sessionState /cookieless:UseCookies /cookieName:ASP.NET_SessionID /timeout:20 Note: When Appcmd.exe is used to configure the <sessionstate> element at the global level in IIS 8.0, the /commit:WEBROOT switch must be included so that configuration changes are made to the root web.config file instead of ApplicationHost.config. References: 1. http://technet.microsoft.com/en-us/library/cc770672%28WS.10%29.aspx 2. http://msdn.microsoft.com/en-us/library/h6bb9cz9%28VS.71%29.aspx",
    "profile_applicability": "  Level 2 - IIS 8.0   Level 2 - IIS 8.5",
    "references": "1. http://technet.microsoft.com/en-us/library/cc770672%28WS.10%29.aspx 2. http://msdn.microsoft.com/en-us/library/h6bb9cz9%28VS.71%29.aspx",
    "function_names": [
      "cloud_cdn_load_balancer_use_cookies_enabled",
      "cloud_cdn_load_balancer_session_cookie_required",
      "cloud_cdn_load_balancer_cookieless_disabled",
      "cloud_cdn_load_balancer_session_state_use_cookies",
      "cloud_cdn_load_balancer_uri_session_data_disabled"
    ]
  },
  {
    "id": "1.3.6",
    "title": "Ensure Cookies Are Set With HttpOnly Attribute",
    "assessment": "Scored",
    "description": "The httpOnlyCookies attribute of the httpCookies node determines if IIS will set the HttpOnly flag on HTTP cookies it sets.  The HttpOnly flag indicates to the user agent that the cookie must not be accessible by client-side script (i.e document.cookie).  It is recommended that the httpOnlyCookies attribute be set to true.",
    "rationale": "40 | P a g e When cookies are set with the HttpOnly flag, they cannot be accessed by client side scripting running in the user's browser.  Preventing client-side scripting from accessing cookie content may reduce the probability of a cross site scripting attack materializing into a successful session hijack.",
    "audit": "After the next time IIS is restarted, browse to and open the web.config for the application in which httpOnly cookies have been turned on.  Confirm the httpOnlyCookies attribute is set to true: <httpCookies httpOnlyCookies=\"true\" />.",
    "remediation": "1. Locate and open the application's web.config file 2. Add the <httpCookies httpOnlyCookies=\"true\" /> tag within <system.web>: <configuration> <system.web> <httpCookies httpOnlyCookies=\"true\" /> </system.web> </configuration> Note: Setting the value of the httpOnlyCookies attribute of the httpCookies element to true will add the HttpOnly flag to all the cookies set by the application.  This attribute, HttpOnly, is currently only recognized by modern versions of Internet Explorer; older versions will either treat them as normal cookies or simply ignore them altogether. References: 1. http://authors.aspalliance.com/aspxtreme/aspnet/syntax/httpCookies.aspx 2. http://www.asp101.com/tips/index.asp?id=160 3. https://tools.ietf.org/wg/httpstate/charters",
    "profile_applicability": "  Level 2 - IIS 8.0   Level 2 - IIS 8.5",
    "references": "1. http://authors.aspalliance.com/aspxtreme/aspnet/syntax/httpCookies.aspx 2. http://www.asp101.com/tips/index.asp?id=160 3. https://tools.ietf.org/wg/httpstate/charters",
    "function_names": [
      "iis_http_cookies_http_only_enabled",
      "iis_http_cookies_secure_attribute_enabled",
      "iis_http_cookies_http_only_attribute_set",
      "iis_http_cookies_client_script_access_disabled",
      "iis_http_cookies_secure_flag_enabled"
    ]
  },
  {
    "id": "1.3.7",
    "title": "Configure MachineKey Validation Method - .Net 3.5",
    "assessment": "Scored",
    "description": "The machineKey element of the ASP.NET web.config specifies the algorithm and keys that ASP.NET will use for encryption.  The Machine Key feature can be managed to specify hashing and encryption settings for application services such as view state, Forms authentication, membership and roles, and anonymous identification. The following encryption methods are available:  Advanced Encryption Standard (AES) is relatively easy to implement and requires little memory.  AES has a key size of 128, 192, or 256 bits.  This method uses the same private key to encrypt and decrypt data, whereas a public-key method must use a pair of keys  Message Digest 5 (MD5) is used for digital signing of applications.  This method produces a 128-bit message digest, which is a compressed form of the original data  Secure Hash Algorithm (SHA1) is considered more secure than MD5 because it produces a 160-bit message digest  Triple Data Encryption Standard (TripleDES) is a minor variation of Data Encryption Standard (DES).  It is three times slower than regular DES but can be more secure because it has a key size of 192 bits.  If performance is not a primary consideration, consider using TripleDES It is recommended that AES or SHA1 methods be configured for use at the global level.",
    "rationale": "Setting the validation property to AES will provide confidentiality and integrity protection to the viewstate.  AES is the strongest encryption algorithm supported by the validation property.  Setting the validation property to SHA1 will provide integrity protection to the viewstate.  SHA1 is the strongest hashing algorithm supported by the validation property.",
    "audit": "To verify the Machine Key encryption method using IIS Manager: 1. Open IIS Manager and navigate to the level that was configured, the WEBROOT, or server in this case 2. In the features view, double click Machine Key 3. On the Machine Key page, verify that SHA1 is selected in the Encryption method dropdown   42 | P a g e",
    "remediation": "Machine key encryption can be set by using the UI, running appcmd.exe commands, by editing configuration files directly, or by writing WMI scripts.  To set the Machine Key encryption at the global level using an appcmd.exe command: %systemroot%\\system32\\inetsrv\\appcmd set config /commit:WEBROOT /section:machineKey /validation:SHA1 Note: When Appcmd.exe is used to configure the <machineKey> element at the global level in IIS 7.0, the /commit:WEBROOT switch must be included so that configuration changes are made to the root web.config file instead of ApplicationHost.config. References: 1. http://technet.microsoft.com/en-us/library/cc772271%28WS.10%29.aspx 2. http://technet.microsoft.com/en-us/library/cc772287%28WS.10%29.aspx",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5   41 | P a g e",
    "references": "1. http://technet.microsoft.com/en-us/library/cc772271%28WS.10%29.aspx 2. http://technet.microsoft.com/en-us/library/cc772287%28WS.10%29.aspx",
    "function_names": [
      "compute_machine_key_aes_encryption_enabled",
      "compute_machine_key_sha1_hashing_enabled",
      "compute_machine_key_md5_hashing_disabled",
      "compute_machine_key_triple_des_encryption_enabled",
      "compute_machine_key_secure_algorithm_configured",
      "compute_machine_key_weak_algorithm_disabled",
      "compute_machine_key_validation_method_configured",
      "compute_machine_key_global_level_secure_settings"
    ]
  },
  {
    "id": "1.3.8",
    "title": "Configure MachineKey Validation Method - .Net 4.5",
    "assessment": "Scored",
    "description": "The machineKey element of the ASP.NET web.config specifies the algorithm and keys that ASP.NET will use for encryption.  The Machine Key feature can be managed to specify hashing and encryption settings for application services such as view state, Forms authentication, membership and roles, and anonymous identification. The following encryption methods are available:  Advanced Encryption Standard (AES) is relatively easy to implement and requires little memory.  AES has a key size of 128, 192, or 256 bits.  This method uses the same private key to encrypt and decrypt data, whereas a public-key method must use a pair of keys  Message Digest 5 (MD5) is used for digital signing of applications.  This method produces a 128-bit message digest, which is a compressed form of the original data  Secure Hash Algorithm (SHA1) is considered more secure than MD5 because it produces a 160-bit message digest 43 | P a g e  Triple Data Encryption Standard (TripleDES) is a minor variation of Data Encryption Standard (DES).  It is three times slower than regular DES but can be more secure because it has a key size of 192 bits.  If performance is not a primary consideration, consider using TripleDES  Secure Hash Algorithm (SHA-2) is a family of two similar hash functions, with different block sizes known as SHA-256 and SHA-512. They differ in the word size; SHAS-256 used 32-bit words and SHA-512 uses 64-bit words. It is recommended that SHA-2 methods be configured for use at the global level.",
    "rationale": "SHA-2 is the strongest hashing algorithm supported by the validation property so it should be used as the validation method for the MachineKey in .Net 4.5.",
    "audit": "To verify the Machine Key encryption method using IIS Manager: 1. Open IIS Manager and navigate to the level that was configured, the WEBROOT, or server in this case 2. In the features view, double click Machine Key 3. On the Machine Key page, verify that HMACSHA256 is selected in the Encryption method dropdown",
    "remediation": "Machine key encryption can be set by using the UI, running appcmd.exe commands, by editing configuration files directly, or by writing WMI scripts.  To set the Machine Key encryption at the global level using an appcmd.exe command: %systemroot%\\system32\\inetsrv\\appcmd set config /commit:WEBROOT /section:machineKey /validation:HMACSHA256 Note: When Appcmd.exe is used to configure the <machineKey> element at the global level in IIS 7.0, the /commit:WEBROOT switch must be included so that configuration changes are made to the root web.config file instead of ApplicationHost.config. References: 1. http://www.iis.net/learn/get-started/whats-new-in-iis-8/iis-80-aspnet- configuration-management   44 | P a g e",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://www.iis.net/learn/get-started/whats-new-in-iis-8/iis-80-aspnet- configuration-management   44 | P a g e",
    "function_names": [
      "asp_net_machine_key_aes_encryption_enabled",
      "asp_net_machine_key_md5_disabled",
      "asp_net_machine_key_sha1_disabled",
      "asp_net_machine_key_triple_des_disabled",
      "asp_net_machine_key_sha256_enabled",
      "asp_net_machine_key_sha512_enabled",
      "asp_net_machine_key_secure_hash_algorithm_enabled",
      "asp_net_machine_key_strong_encryption_enabled",
      "asp_net_machine_key_weak_algorithm_disabled",
      "asp_net_machine_key_validation_method_configured"
    ]
  },
  {
    "id": "1.3.9",
    "title": "Configure Global .NET Trust Level",
    "assessment": "Not Scored",
    "description": "This only applies to .Net 2.0. Future versions have stopped supporting this feature. An application's trust level determines the permissions that are granted by the ASP.NET code access security (CAS) policy. CAS defines two trust categories: full trust and partial trust.  An application that has full trust permissions may access all resource types on a server and perform privileged operations, while applications that run with partial trust have varying levels of operating permissions and access to resources. The possible values for the Level property of the TrustSection class are:  Full: Specifies unrestricted permissions and grants the ASP.NET application permissions to access any resource that is subject to operating system security; all privileged operations are supported  High: specifies a high level of code access security which limits the application from doing the following: o Call unmanaged code o Call serviced components o Write to the event log o Access Microsoft Windows Message Queuing queues o Access ODBC, OLD DB, or Oracle data sources  Medium: specifies a medium level of code access security, which means that in addition to the restrictions for High, the ASP.NET application cannot do any of the following things: o Access files outside the application directory o Access the registry  Low: specifies a low level of code access security, which means that in addition to the restrictions for Medium, the application is prevented from performing any of the following actions: o Write to the file system o Call the System.Security.CodeAccessPermission.Assert method to expand permissions to resources o Minimal: specifies a minimal level of code access security, which means that the application has only execute permission It is recommended that the global .NET Trust Level be set to Medium or lower. 45 | P a g e",
    "rationale": "The CAS determines the permissions that are granted to the application on the server.  Setting a minimal level of trust that is compatible with the applications will limit the potential harm that a compromised application could cause to a system.",
    "audit": "To verify the global .NET Trust Level using IIS Manager: 1. Open IIS Manager and navigate to the level that was configured, the server in this example 2. In the features view, double click .NET Trust Levels 3. On the .NET Trust Levels page, verify that Medium (web_mediumtrust.config) is selected in the Trust Level dropdown",
    "remediation": "Trust level can be set by using the UI, running appcmd.exe commands, by editing configuration files directly, or by writing WMI scripts.  To set the .Net Trust Level to Medium at the server level using an appcmd.exe command: %systemroot%\\system32\\inetsrv\\appcmd set config /commit:WEBROOT /section:trust /level:Medium Note: When Appcmd.exe is used to configure the element at the global level in IIS 7.0, the /commit:WEBROOT switch must be included so that configuration changes are made to the root web.config file instead of ApplicationHost.config. References: 1. http://technet.microsoft.com/en-us/library/cc772237(WS.10).aspx 2. http://msdn.microsoft.com/en-us/library/ms691448%28VS.90%29.aspx 3. Professional IIS 7 by Ken Schaefer, Jeff Cochran, Scott Forsyth, Rob Baugh, Mike Everest, Dennis Glendenning 4. http://support.microsoft.com/kb/2698981     46 | P a g e",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://technet.microsoft.com/en-us/library/cc772237(WS.10).aspx 2. http://msdn.microsoft.com/en-us/library/ms691448%28VS.90%29.aspx 3. Professional IIS 7 by Ken Schaefer, Jeff Cochran, Scott Forsyth, Rob Baugh, Mike Everest, Dennis Glendenning 4. http://support.microsoft.com/kb/2698981     46 | P a g e",
    "function_names": [
      "asp_net_trust_level_medium_or_lower",
      "asp_net_trust_level_no_full_trust",
      "asp_net_trust_level_restrict_high",
      "asp_net_trust_level_restrict_medium",
      "asp_net_trust_level_restrict_low",
      "asp_net_trust_level_restrict_minimal",
      "asp_net_trust_level_no_unmanaged_code",
      "asp_net_trust_level_no_serviced_components",
      "asp_net_trust_level_no_event_log_write",
      "asp_net_trust_level_no_msmq_access",
      "asp_net_trust_level_no_odbc_ole_db_oracle",
      "asp_net_trust_level_no_file_access_outside_app_dir",
      "asp_net_trust_level_no_registry_access",
      "asp_net_trust_level_no_file_system_write",
      "asp_net_trust_level_no_assert_permission_expansion"
    ]
  },
  {
    "id": "1.3.10",
    "title": "Hide IIS HTTP Detailed Errors from Displaying Remotely",
    "assessment": "Scored",
    "description": "A Web site's error pages are often set to show detailed error information for troubleshooting purposes during testing or initial deployment.  To prevent unauthorized users from viewing this privileged information, detailed error pages must not be seen by remote users.  This setting can be modified in the errorMode attribute setting for a Web site's error pages.  By default, the errorMode attribute is set in the Web.config file for the Web site or application and is located in the <httpErrors> element of the <system.webServer> section.  It is recommended that custom errors be prevented from displaying remotely.",
    "rationale": "The information contained in custom error messages can provide clues as to how applications function, opening up unnecessary attack vectors.  Ensuring custom errors are never displayed remotely can help mitigate the risk of malicious persons obtaining information as to how the application works.",
    "audit": "The errorMode attribute is set in the Web.config file for the Web site or application in the <httpErrors> element of the <system.webServer> section.  Browse to the web.config and verify the errorMode is set to DetailedLocalOnly or Custom: <system.web> <system.webServer> <httpErrors errorMode=\"DetailedLocalOnly\"> </httpErrors> </system.webServer> </system.web>     47 | P a g e",
    "remediation": "The following describes how to change the errorMode attribute to DetailedLocalOnly or Custom for a Web site by using IIS Manager: 1. Open IIS Manager with Administrative privileges 2. In the Connections pane on the left, expand the server, then expand the Sites folder 3. Select the Web site or application to be configured 4. In Features View, select Error Pages, in the Actions pane, select Open Feature 5. In the Actions pane, select Edit Feature Settings 6. In the Edit Error Pages Settings dialog, under Error Responses, select either Custom error pages or Detailed errors for local requests and custom error pages for remote requests 7. Click OK and exit the Edit Error Pages Settings dialog References: 1. http://technet.microsoft.com/en-us/library/dd391900%28WS.10%29.aspx 2. http://www.iis.net/configreference/system.webserver/httperrors  1.4 Request Filtering and Other Restriction Modules Request Filtering is a powerful new module implemented in IIS 7.0 which provides a configurable set of rules that enables administrators to allow or reject the types of requests that they determine should be allowed or rejected at the server, web site, or web application levels. Earlier versions of Internet Information Services provided the tool UrlScan, which was provided as an add-on to enable system administrators to enforce tighter security policies on their web servers.  For IIS 7.0, all of the core features of URLScan have been incorporated into the Request Filtering module.  Due to the close nature of functionality in these two tools, reference to legacy URLScan settings will be made where applicable. IIS8 also introduced modules for Dynamic IP Address Restrictions. This module can be configured to automatically block web site access based on specific rules. Note: Request Filtering and IP and Domain Restrictions must be installed as a role service under IIS in order to configure any of its features.  48 | P a g e",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://technet.microsoft.com/en-us/library/dd391900%28WS.10%29.aspx 2. http://www.iis.net/configreference/system.webserver/httperrors  1.4 Request Filtering and Other Restriction Modules Request Filtering is a powerful new module implemented in IIS 7.0 which provides a configurable set of rules that enables administrators to allow or reject the types of requests that they determine should be allowed or rejected at the server, web site, or web application levels. Earlier versions of Internet Information Services provided the tool UrlScan, which was provided as an add-on to enable system administrators to enforce tighter security policies on their web servers.  For IIS 7.0, all of the core features of URLScan have been incorporated into the Request Filtering module.  Due to the close nature of functionality in these two tools, reference to legacy URLScan settings will be made where applicable. IIS8 also introduced modules for Dynamic IP Address Restrictions. This module can be configured to automatically block web site access based on specific rules. Note: Request Filtering and IP and Domain Restrictions must be installed as a role service under IIS in order to configure any of its features.  48 | P a g e",
    "function_names": [
      "iis_site_detailed_errors_hidden_remotely",
      "iis_http_errors_remote_display_disabled",
      "iis_web_config_error_mode_secure",
      "iis_system_webserver_http_errors_restricted",
      "iis_custom_errors_remote_view_blocked"
    ]
  },
  {
    "id": "1.4.1",
    "title": "Configure maxAllowedContentLength Request Filter",
    "assessment": "Not Scored",
    "description": "The maxAllowedContentLength Request Filter is the maximum size of the http request, measured in bytes, which can be sent from a client to the server.  Configuring this value enables the total request size to be restricted to a configured value.  It is recommended that the overall size of requests be restricted to a maximum value appropriate for the server, site, or application.",
    "rationale": "Setting an appropriate value that has been tested for the maxAllowedContentLength filter will lower the impact an abnormally large request would otherwise have on IIS and/or web applications.  This helps to ensure availability of web content and services, and may also help mitigate the risk of buffer overflow type attacks in unmanaged components.",
    "audit": "Upon exceeding the configured value set for the Request Filter, IIS will throw a Status Code 404.13. To manually verify the change, locate and open the web.config for the web site or application in which the request filter was set.  Ensure the value defined for maxAllowedContentLength is what was set.  The 28.6MB max example would show: <configuration> <system.webServer> <security> <requestFiltering> <requestLimits maxAllowedContentLength=\"30000000\" /> </requestFiltering> </security> </system.webServer> </configuration>   49 | P a g e",
    "remediation": "The MaxAllowedContentLength Request Filter may be set for a server, website, or application using the IIS Manager GUI, using AppCmd.exe commands in a command-line window, and/or directly editing the configuration files.  To configure using the IIS Manager GUI: 1. Open Internet Information Services (IIS) Manager 2. In the Connections pane, click on the server, site, application, or directory to be configured 3. In the Home pane, double-click Request Filtering 4. Click Edit Feature Settings... in the Actions pane 5. Under the Request Limits section, key the maximum content length in bytes that will allow applications to retain their intended functionality, such as 30000000 (approx. 28.6 MB) References: 1. http://www.iis.net/ConfigReference/system.webServer/security/requestFiltering/ requestLimits 2. http://learn.iis.net/page.aspx/143/use-request-filtering/",
    "profile_applicability": "  Level 2 - IIS 8.0   Level 2 - IIS 8.5",
    "references": "1. http://www.iis.net/ConfigReference/system.webServer/security/requestFiltering/ requestLimits 2. http://learn.iis.net/page.aspx/143/use-request-filtering/",
    "function_names": [
      "cloud_cdn_request_filter_max_length_configured",
      "cloud_cdn_request_filter_size_restricted",
      "cloud_cdn_request_filter_max_allowed_content_length_set",
      "cloud_cdn_request_filter_request_size_limited",
      "cloud_cdn_request_filter_content_length_restricted"
    ]
  },
  {
    "id": "1.4.2",
    "title": "Configure maxURL Request Filter",
    "assessment": "Scored",
    "description": "The maxURL attribute of the <requestLimits> property is the maximum length (in Bytes) in which a requested URL can be (excluding query string) in order for IIS to accept.  Configuring this Request Filter enables administrators to restrict the length of the requests that the server will accept.  It is recommended that a limit be put on the length of URI.   50 | P a g e",
    "rationale": "With a properly configured Request Filter limiting the amount of data accepted in the URL, chances of undesired application behaviors affecting the availability of content and services are reduced.",
    "audit": "IIS will log a 404.14 HTTP status if the requested URL was rejected because it exceeded the length defined in the filter. To manually verify the change, locate and open the web.config for the web site or application in which the request filter was set.  Verify the value defined for maxURL. <configuration> <system.webServer> <security> <requestFiltering> <requestLimits maxURL=\"4096\" /> </requestFiltering> </security> </system.webServer> </configuration>",
    "remediation": "The MaxURL Request Filter may be set for a server, website, or application using the IIS Manager GUI, using AppCmd.exe commands in a command-line window, and/or directly editing the configuration files.  To configure using the IIS Manager GUI: 1. Open Internet Information Services (IIS) Manager 2. In the Connections pane, click on the connection, site, application, or directory to be configured 3. In the Home pane, double-click Request Filtering 4. Click Edit Feature Settings... in the Actions pane 5. Under the Request Limits section, key the maximum URL length in bytes that has been tested with web applications References: 1. http://www.iis.net/ConfigReference/system.webServer/security/requestFiltering/ requestLimits 2. http://learn.iis.net/page.aspx/143/use-request-filtering/  51 | P a g e",
    "profile_applicability": "  Level 2 - IIS 8.0   Level 2 - IIS 8.5",
    "references": "1. http://www.iis.net/ConfigReference/system.webServer/security/requestFiltering/ requestLimits 2. http://learn.iis.net/page.aspx/143/use-request-filtering/  51 | P a g e",
    "function_names": [
      "iis_request_limits_max_url_configured",
      "iis_request_limits_url_length_restricted",
      "iis_request_limits_uri_size_limited",
      "iis_request_limits_max_url_bytes_set",
      "iis_request_limits_url_request_filter_enabled"
    ]
  },
  {
    "id": "1.4.3",
    "title": "Configure MaxQueryString Request Filter",
    "assessment": "Scored",
    "description": "The MaxQueryString Request Filter describes the upper limit on the length of the query string that the configured IIS server will allow for websites or applications.  It is recommended that values always be established to limit the amount of data will can be accepted in the query string.",
    "rationale": "With a properly configured Request Filter limiting the amount of data accepted in the query string, chances of undesired application behaviors such as app pool failures are reduced.",
    "audit": "If a request is rejected because it exceeds the value set in the maxQueryString Request Filter, a 404.15 HTTP status is logged to the IIS log file. To manually verify the change, locate and open the web.config for the web site or application in which the filter was set.  Ensure the value defined for maxQueryString is what was configured. <configuration> <system.webServer> <security> <requestFiltering> <requestLimits maxQueryString=\"2048\" /> </requestFiltering> </security> </system.webServer> </configuration>",
    "remediation": "The MaxQueryString Request Filter may be set for a server, website, or application using the IIS Manager GUI, using AppCmd.exe commands in a command-line window, and/or directly editing the configuration files.  To configure using the IIS Manager GUI: 52 | P a g e 1. Open Internet Information Services (IIS) Manager 2. In the Connections pane, go to the connection, site, application, or directory to be configured 3. In the Home pane, double-click Request Filtering 4. Click Edit Feature Settings... in the Actions pane 5. Under the Request Limits section, key in a safe upper bound in the Maximum query string (Bytes) textbox References: 1. http://www.iis.net/ConfigReference/system.webServer/security/requestFiltering/ requestLimits 2. http://learn.iis.net/page.aspx/143/use-request-filtering/",
    "profile_applicability": "  Level 2 - IIS 8.0   Level 2 - IIS 8.5",
    "references": "1. http://www.iis.net/ConfigReference/system.webServer/security/requestFiltering/ requestLimits 2. http://learn.iis.net/page.aspx/143/use-request-filtering/",
    "function_names": [
      "iis_request_filter_max_query_string_configured",
      "iis_request_filter_query_string_length_limited",
      "iis_website_query_string_size_restricted",
      "iis_application_query_string_limit_set",
      "iis_request_filter_query_string_upper_bound_defined"
    ]
  },
  {
    "id": "1.4.4",
    "title": "Disallow non-ASCII Characters in URLs",
    "assessment": "Scored",
    "description": "This feature is used to allow or reject all requests to IIS 7 that contain non-ASCII characters.  When using this feature, Request Filtering will deny the request if high-bit characters are present in the URL.  The UrlScan equivalent is AllowHighBitCharacters.  It is recommended that requests containing non-ASCII characters be rejected, where possible.",
    "rationale": "This feature can help defend against canonicalization attacks, reducing the potential attack surface of servers, sites, and/or applications.",
    "audit": "If a request is rejected because it contains a high-bit character, a 404.12 HTTP status is logged to the IIS log file. To manually verify the change, locate and open the web.config for the web site or application in which the request filter was set.  Ensure the value defined for the filter is false, as such: 53 | P a g e <configuration> <system.webServer> <security> <requestFiltering allowHighBitCharacters=\"false\"> </requestFiltering> </security> </system.webServer> </configuration>",
    "remediation": "The AllowHighBitCharacters Request Filter may be set for a server, website, or application using the IIS Manager GUI, using AppCmd.exe commands in a command-line window, and/or directly editing the configuration files.  To configure using the IIS Manager GUI: 1. Open Internet Information Services (IIS) Manager 2. In the Connections pane, go to the connection, site, application, or directory to be configured 3. In the Home pane, double-click Request Filtering 4. Click Edit Feature Settings... in the Actions pane 5. Under the General section, uncheck Allow high-bit characters Note: Disallowing high-bit ASCII characters in the URL may negatively impact the functionality of sites requiring international language support. References: 1. http://learn.iis.net/page.aspx/143/use-request-filtering/ 2. http://learn.iis.net/page.aspx/936/urlscan-1-reference/ 3. Professional IIS 7 by Ken Schaefer, Jeff Cochran, Scott Forsyth, Rob Baugh, Mike Everest, Dennis Glendenning",
    "profile_applicability": "  Level 2 - IIS 8.0   Level 2 - IIS 8.5",
    "references": "1. http://learn.iis.net/page.aspx/143/use-request-filtering/ 2. http://learn.iis.net/page.aspx/936/urlscan-1-reference/ 3. Professional IIS 7 by Ken Schaefer, Jeff Cochran, Scott Forsyth, Rob Baugh, Mike Everest, Dennis Glendenning",
    "function_names": [
      "iis_request_filtering_non_ascii_rejected",
      "iis_url_high_bit_characters_denied",
      "iis_request_non_ascii_blocked",
      "iis_url_encoding_ascii_only",
      "iis_request_filtering_ascii_enforced"
    ]
  },
  {
    "id": "1.4.5",
    "title": "Ensure Double-Encoded Requests will be Rejected",
    "assessment": "Scored",
    "description": "This Request Filter feature prevents attacks that rely on double-encoded requests and applies if an attacker submits a double-encoded request to IIS.  When the double-encoded requests filter is enabled, IIS 7 will go through a two iteration process of normalizing the request.  If the first normalization differs from the second, the request is rejected and the error code is logged as a 404.11.  The double-encoded requests filter was the VerifyNormalization option in UrlScan.  It is recommended that double-encoded requests be rejected.",
    "rationale": "This feature will help prevent attacks that rely on URLs that have been crafted to contain double-encoded request(s).",
    "audit": "If a request is rejected because it contains a double-encoded request, a 404.11 HTTP status is logged to the IIS log file. To manually verify the change, locate and open the web.config for the web site or application in which the request filter was set.  Ensure the value defined for allowDoubleEscaping is false: <configuration> <system.webServer> <security> <requestFiltering allowDoubleEscaping=\"false\"> </requestFiltering> </security> </system.webServer> </configuration>",
    "remediation": "The allowDoubleEscaping Request Filter may be set for a server, website, or application using the IIS Manager GUI, using AppCmd.exe commands in a command-line window, and/or directly editing the configuration files.  To configure using the IIS Manager GUI: 1. Open Internet Information Services (IIS) Manager 2. In the Connections pane, select the site, application, or directory to be configured 3. In the Home pane, double-click Request Filtering 4. Click Edit Feature Settings... in the Actions pane 5. Under the General section, uncheck Allow double escaping 55 | P a g e If a file name in a URL includes \"+\" then allowDoubleEscaping must be set to true to allow functionality. References: 1. http://www.iis.net/ConfigReference/system.webServer/security/requestFiltering/ requestLimits 2. http://learn.iis.net/page.aspx/143/use-request-filtering/",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5   54 | P a g e",
    "references": "1. http://www.iis.net/ConfigReference/system.webServer/security/requestFiltering/ requestLimits 2. http://learn.iis.net/page.aspx/143/use-request-filtering/",
    "function_names": [
      "iis_request_filter_double_encoding_rejected",
      "iis_request_filter_normalization_verify_enabled",
      "iis_request_filter_verify_normalization_enabled",
      "iis_request_filter_double_encoded_requests_blocked",
      "iis_request_filter_url_scan_normalization_enabled"
    ]
  },
  {
    "id": "1.4.6",
    "title": "Disallow Unlisted File Extensions",
    "assessment": "Scored",
    "description": "The FileExtensions Request Filter allows administrators to define specific extensions their web server(s) will allow and disallow.  The property allowUnlisted will cover all other file extensions not explicitly allowed or denied.  Often times, extensions such as .config, .bat, .exe, to name a few, should never be served.  The AllowExtensions and DenyExtensions options are the UrlScan equivalents.  It is recommended that all extensions be unallowed at the most global level possible, with only those necessary being allowed.",
    "rationale": "Disallowing all but the necessary file extensions can greatly reduce the attack surface of applications and servers.",
    "audit": "When IIS 7 rejects a request based on a file extensions filter, the error code logged is 404.7. To manually verify the change, locate and open the web.config for the web site or application in which the Request Filter was set.  Ensure <fileExtensions allowUnlisted=\"false\">.  The following web.config will disallow any requests for files that do not have .asp, .aspx, or .html as their extension: 56 | P a g e <configuration> <system.webServer> <security> <requestFiltering> <fileExtensions allowUnlisted=\"false\"> <add fileExtension=\".asp\" allowed=\"true\" /> <add fileExtension=\".aspx\" allowed=\"true\" /> <add fileExtension=\".html\" allowed=\"true\" /> </fileExtensions> </requestFiltering> </security> </system.webServer> </configuration>",
    "remediation": "The allowUnlisted Request Filter may be set for a server, website, or application using the IIS Manager GUI, using AppCmd.exe commands in a command-line window, and/or directly editing the configuration files.  To configure at the server level using the IIS Manager GUI: 1. Open Internet Information Services (IIS) Manager 2. In the Connections pane, select the server 3. In the Home pane, double-click Request Filtering 4. Click Edit Feature Settings... in the Actions pane 5. Under the General section, uncheck Allow unlisted file name extensions To set this Request Filter using an AppCmd.exe command, run the following command at an elevated command prompt: %windir%\\system32\\inetsrv\\appcmd set config /section:requestfiltering /fileExtensions.allowunlisted:false References: 1. http://www.iis.net/ConfigReference/system.webServer/security/requestFiltering/ requestLimits 2. http://www.iis.net/learn/manage/configuring-security/configure-request- filtering-in-iis     57 | P a g e",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://www.iis.net/ConfigReference/system.webServer/security/requestFiltering/ requestLimits 2. http://www.iis.net/learn/manage/configuring-security/configure-request- filtering-in-iis     57 | P a g e",
    "function_names": [
      "cloud_cdn_request_filter_allow_unlisted_disabled",
      "cloud_cdn_request_filter_deny_extensions_configured",
      "cloud_cdn_request_filter_allow_extensions_restricted",
      "cloud_cdn_request_filter_unlisted_extensions_blocked",
      "cloud_cdn_request_filter_secure_extensions_enforced"
    ]
  },
  {
    "id": "1.4.7",
    "title": "Ensure Handler is not granted Write and Script/Execute",
    "assessment": "Scored",
    "description": "Handler mappings can be configured to give permissions to Read, Write, Script, or Execute depending on what the use is for - reading static content, uploading files, executing scripts, etc.  It is recommended to grant a handler either Execute/Script or Write permissions, but not both.",
    "rationale": "By allowing both Execute/Script and Write permissions, a handler can run malicious code on the target server.  Ensuring these two permissions are never together will help lower the risk of malicious code being executed on the server.",
    "audit": "Open the ApplicationHost.config file in %windir%\\system32\\inetsrv\\config.  Find the <handlers> section and verify that the accessPolicy attribute does not contain Write when Script or Execute are present.  The following is an acceptable example: <system.webserver> <handlers accessPolicy=\"Read, Script\"> </handlers> </system.webserver>",
    "remediation": "The accessPolicy attribute in the <handlers> section of either the ApplicationHost.config (server-wide) or web.config (site or application) must not have Write present when Script or Execute are present.  To resolve this issue for a Web server, the attribute in the <handlers> section of the ApplicationHost.config file for the server must manually be edited.  To edit the ApplicationHost.config file by using Notepad, perform the following steps: 1. Open Notepad as Administrator 2. Open the ApplicationHost.config file in %windir%\\system32\\inetsrv\\config 3. Edit the <handlers> section accessPolicy attribute so that Write is not present when Script or Execute are present 58 | P a g e Note: This configuration change cannot be made by using IIS Manager. References: 1. http://technet.microsoft.com/en-us/library/dd391910%28WS.10%29.aspx 2. http://blogs.iis.net/thomad/archive/2006/11/05/quo-vadis-accessflags.aspx",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://technet.microsoft.com/en-us/library/dd391910%28WS.10%29.aspx 2. http://blogs.iis.net/thomad/archive/2006/11/05/quo-vadis-accessflags.aspx",
    "function_names": [
      "iam_handler_no_write_and_execute",
      "iam_handler_permissions_restricted",
      "iam_handler_write_execute_separated",
      "iam_handler_secure_permission_mapping",
      "iam_handler_no_dual_write_execute"
    ]
  },
  {
    "id": "1.4.8",
    "title": "Ensure Configuration Attribute notListedIsapisAllowed set to false",
    "assessment": "Scored",
    "description": "The notListedIsapisAllowed attribute is a server-level setting that is located in the ApplicationHost.config file in the <isapiCgiRestriction> element of the <system.webServer> section under <security>.  This element ensures that malicious users cannot copy unauthorized ISAPI binaries to the Web server and then run them.  It is recommended that notListedIsapisAllowed be set to false.",
    "rationale": "Restricting this attribute to false will help prevent potentially malicious ISAPI extensions from being run.",
    "audit": "Open the applicationHost.config file in %windir%\\system32\\inetsrv\\config.  Verify that the notListedIsapisAllowed attribute in the <isapiCgiRestriction> element is set to false: <system.webServer> <security> <isapiCgiRestriction notListedIsapisAllowed=\"false\"> </isapiCgiRestriction> </security> </system.webServer>  59 | P a g e",
    "remediation": "To use IIS Manager to set the notListedIsapisAllowed attribute to false: 1. Open IIS Manager as Administrator 2. In the Connections pane on the left, select server to be configured 3. In Features View, select ISAPI and CGI Restrictions; in the Actions pane, select Open Feature 4. In the Actions pane, select Edit Feature Settings 5. In the Edit ISAPI and CGI Restrictions Settings dialog, clear the Allow unspecified ISAPI modules check box, if checked 6. Click OK References: 1. http://technet.microsoft.com/en-us/library/dd378846%28WS.10%29.aspx 2. http://www.iis.net/ConfigReference/system.webServer/security/isapiCgiRestrictio n",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://technet.microsoft.com/en-us/library/dd378846%28WS.10%29.aspx 2. http://www.iis.net/ConfigReference/system.webServer/security/isapiCgiRestrictio n",
    "function_names": [
      "iis_server_isapi_restriction_not_listed_allowed_disabled",
      "web_server_isapi_cgi_restriction_secure",
      "system_web_server_isapi_restriction_denied",
      "application_host_config_isapi_restriction_locked",
      "security_isapi_restriction_unauthorized_binaries_blocked"
    ]
  },
  {
    "id": "1.4.9",
    "title": "Ensure Configuration Attribute notListedCgisAllowed set to false",
    "assessment": "Not Scored",
    "description": "The notListedCgisAllowed attribute is a server-level setting that is located in the ApplicationHost.config file in the <isapiCgiRestriction> element of the <system.webServer> section under <security>.  This element ensures that malicious users cannot copy unauthorized CGI binaries to the Web server and then run them.  It is recommended that notListedCgisAllowed be set to false.",
    "rationale": "Restricting this attribute to false will help prevent unlisted CGI extensions, including potentially malicious CGI scripts from being run.  60 | P a g e",
    "audit": "Browse to and open the applicationHost.config file and verify that the notListedCgisAllowed attribute in the <isapiCgiRestriction> element is set to false: <system.webServer> <security> <isapiCgiRestriction notListedCgisAllowed=\"false\"> </isapiCgiRestriction> </security> </system.webServer>",
    "remediation": "To set the notListedCgisAllowed attribute to false using IIS Manager: 1. Open IIS Manager as Administrator 2. In the Connections pane on the left, select the server to configure 3. In Features View, select ISAPI and CGI Restrictions; in the Actions pane, select Open Feature 4. In the Actions pane, select Edit Feature Settings 5. In the Edit ISAPI and CGI Restrictions Settings dialog, clear the Allow unspecified CGI modules check box 6. Click OK References: 1. http://technet.microsoft.com/en-us/library/dd391919%28WS.10%29.aspx",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://technet.microsoft.com/en-us/library/dd391919%28WS.10%29.aspx",
    "function_names": [
      "web_server_isapi_cgi_restriction_not_listed_disallowed",
      "web_server_security_not_listed_cgis_disabled",
      "web_server_config_not_listed_cgis_blocked",
      "web_server_isapi_cgi_restriction_secure",
      "web_server_security_cgi_restriction_enabled"
    ]
  },
  {
    "id": "1.4.10",
    "title": "Disable HTTP Trace Method",
    "assessment": "Scored",
    "description": "The HTTP TRACE method returns the contents of client HTTP requests in the entity-body of the TRACE response.  Attackers could leverage this behavior to access sensitive information, such as authentication data or cookies, contained in the HTTP headers of the request.  One such way to mitigate this is by using the <verbs> element of the <requestFiltering> collection, which was introduced in IIS 7.0.  The <verbs> element 61 | P a g e replaces the [AllowVerbs] and [DenyVerbs] features in IIS 6.0 UrlScan.  It is recommended the HTTP TRACE method be denied.",
    "rationale": "Attackers may abuse HTTP TRACE functionality to gain access to information in HTTP headers such as cookies and authentication data.  This risk can be mitigated by not allowing the TRACE verb.",
    "audit": "IIS 8 will return an HTTP 404.6 error to the client when Request Filtering blocks an HTTP request because of a denied HTTP verb.  To manually verify the change, browse to the web.config file for which the change was made and verify the below configuration: <configuration> <system.webServer> <security> <requestFiltering> <verbs> <add verb=\"TRACE\" allowed=\"false\" /> </verbs> </requestFiltering> </security> </system.webServer> </configuration>",
    "remediation": "1. Open Internet Information Services (IIS) Manager 2. In the Connections pane, select the site, application, or directory to be configured 3. In the Home pane, double-click Request Filtering 4. In the Request Filtering pane, click the HTTP verbs tab, and then click Deny Verb... in the Actions pane 5. In the Deny Verb dialog box, enter the TRACE, and then click OK References: 1. http://www.kb.cert.org/vuls/id/867593 2. http://www.iis.net/ConfigReference/system.webServer/security/requestFiltering/ verbs    62 | P a g e",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://www.kb.cert.org/vuls/id/867593 2. http://www.iis.net/ConfigReference/system.webServer/security/requestFiltering/ verbs    62 | P a g e",
    "function_names": [
      "compute_web_server_trace_method_disabled",
      "iis_request_filtering_trace_denied",
      "web_server_http_trace_disabled",
      "iis_verbs_trace_method_blocked",
      "compute_http_trace_method_restricted",
      "web_server_request_filtering_trace_denied",
      "iis_http_trace_method_disabled",
      "compute_web_server_trace_request_blocked"
    ]
  },
  {
    "id": "1.4.11",
    "title": "Enable Dynamic IP Address Restrictions",
    "assessment": "Not Scored",
    "description": "IIS8 introduced the concept of Dynamic IP Address Restrictions which can be used to thwart DDos attacks. This is different than the IP Address Restrictions that can be manually maintained within IIS. The default action Deny action for restrictions is to return a Forbidden response to the client.",
    "rationale": "Dynamic IP address filtering allows administrators to configure the server to block access for IPs that exceed the specified number of requests. Ensure that you receive the Forbidden page once the block has been enforced.",
    "audit": "Access the web server enough times to trigger the IP restriction based on the settings entered.",
    "remediation": "1. Open IIS Manager. 2. Open the IP Address and Domain Restrictions feature. 3. Click Edit Dynamic Restrictions Settings.. 4. Check the Deny IP Address based on the number of concurrent requests and the Deny IP Address based on the number of requests over a period of time boxes. The values can be tweaked as needed for your specific environment. Default Value: By default Dynamic IP Restrictions are not enabled.   63 | P a g e References: 1. http://www.iis.net/learn/get-started/whats-new-in-iis-8/iis-80-dynamic-ip- address-restrictions  1.5 IIS Logging Recommendations This section contains recommendations regarding IIS logging that have not been covered in the Basic Configurations section.",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://www.iis.net/learn/get-started/whats-new-in-iis-8/iis-80-dynamic-ip- address-restrictions  1.5 IIS Logging Recommendations This section contains recommendations regarding IIS logging that have not been covered in the Basic Configurations section.",
    "function_names": [
      "iis_site_dynamic_ip_restrictions_enabled",
      "iis_site_dynamic_ip_restrictions_deny_action",
      "iis_site_ddos_protection_enabled",
      "iis_site_dynamic_ip_restrictions_default_deny",
      "iis_site_dynamic_ip_restrictions_forbidden_response",
      "iis_site_dynamic_ip_restrictions_configured",
      "iis_site_dynamic_ip_restrictions_active",
      "iis_site_dynamic_ip_restrictions_enforced"
    ]
  },
  {
    "id": "1.5.1",
    "title": "Move Default IIS Web Log Location",
    "assessment": "Scored",
    "description": "IIS will log relatively detailed information on every request.  These logs are usually the first item looked at in a security response, and can be the most valuable.  Malicious users are aware of this, and will often try to remove evidence of their activities.  It is therefore recommended that the default location for IIS log files be changed to a restricted, non- system drive.",
    "rationale": "Moving IIS logging to a restricted, non-system drive will help mitigate the risk of logs being maliciously altered, removed, or lost in the event of system drive failure(s).",
    "audit": "To verify web logs are being logged to the new location, open Windows Explorer and browse to the path that was defined.  Depending on how the logging was configured, there will be either: 1. A folder containing .log files or 2. .log files in the root of the specified directory  64 | P a g e",
    "remediation": "Moving the default log location can be easily accomplished using the Logging feature in the IIS Management UI or AppCmd.exe.  To change to D:\\LogFiles using AppCmd.exe: %windir%\\system32\\inetsrv\\appcmd set config -section:sites - siteDefaults.logfile.directory:\"D:\\LogFiles\" Moving log file stores to a non-system drive or partition separate from where web applications run and/or content is served is preferred.  Additionally, folder-level NTFS permissions should be set as restrictive as possible; Administrators and SYSTEM are typically the only principals requiring access. Note: While standard IIS logs can be moved and edited using IIS Manager, additional management tool add-ons are required in order to manage logs generated by other IIS features, such as Request Filtering and IIS Advanced Logging.  These add-ons can be obtained using the Web Platform Installer or from Microsoft's site. The HTTPErr logging location can be changed by adding a registry key References: 1. http://www.iis.net/learn/extensions/advanced-logging-module/advanced-logging- for-iis-custom-logging 2. http://support.microsoft.com/kb/820729#1",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://www.iis.net/learn/extensions/advanced-logging-module/advanced-logging- for-iis-custom-logging 2. http://support.microsoft.com/kb/820729#1",
    "function_names": [
      "compute_iis_logs_non_system_drive",
      "compute_iis_logs_restricted_location",
      "compute_iis_logs_custom_path",
      "compute_iis_logs_default_moved",
      "compute_iis_logs_secure_location"
    ]
  },
  {
    "id": "1.5.2",
    "title": "Enable Advanced IIS Logging",
    "assessment": "Scored",
    "description": "IIS Advanced Logging is a module which provides flexibility in logging requests and client data.  It provides controls that allow businesses to specify what fields are important, easily add additional fields, and provide policies pertaining to log file rollover and Request Filtering.  HTTP request/response headers, server variables, and client-side fields can be easily logged with minor configuration in the IIS management console.  It is recommended that Advanced Logging be enabled, and the fields which could be of value to the type of business or application in the event of a security incident, be identified and logged. 65 | P a g e",
    "rationale": "Many of the fields available in Advanced Logging many can provide extensive, real-time data and details not otherwise obtainable.  Developers and security professionals can use this information to identify and remediate application vulnerabilities/attack patterns.",
    "audit": "Browse to the location of the Advanced Logs and verify .log files are being generated.  Note that logs will be written to disk after a non-determined period of time.  They can be written into their specified directory immediately if, in the Log Definition, the Publish real-time events and Write to disk options are selected.",
    "remediation": "IIS Advanced Logging can be configured for servers, Web sites, and directories in IIS Manager.  To enable Advanced Logging using the UI: 1. Open Internet Information Services (IIS) Manager 2. Click the server in the Connections pane 3. Double-click the Advanced Logging icon on the Home page 4. Click Enable Advanced Logging in the Actions pane The fields that will be logged need to be configured using the Edit Logging Fields action. As with IIS's standard log files, their location should be changed. Note: There may be performance considerations depending on the extent of the configuration. References: 1. http://learn.iis.net/page.aspx/579/advanced-logging-for-iis-70---custom- logging#open 2. http://technet.microsoft.com/en-us/library/cc732826%28WS.10%29.aspx     66 | P a g e",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://learn.iis.net/page.aspx/579/advanced-logging-for-iis-70---custom- logging#open 2. http://technet.microsoft.com/en-us/library/cc732826%28WS.10%29.aspx     66 | P a g e",
    "function_names": [
      "iis_server_advanced_logging_enabled",
      "iis_server_logging_fields_configured",
      "iis_server_log_rollover_policy_enabled",
      "iis_server_request_filtering_enabled",
      "iis_server_http_headers_logged",
      "iis_server_server_variables_logged",
      "iis_server_client_fields_logged",
      "iis_server_logging_security_incident_ready"
    ]
  },
  {
    "id": "1.5.3",
    "title": "ETW Logging",
    "assessment": "Not Scored",
    "description": "IIS 8.5 introduces a new logging method. Administrators can now send logging information to Event Tracing for Windows (ETW)",
    "rationale": "IIS flushes log information to disk, therefore prior to IIS 8.5, administrators do not have access to real-time logging information. Text-based log files can also be difficult and time consuming to process. By enabling ETW, administrators have access to use standard query tools for viewing real-time logging information.",
    "audit": "Using Message Analyzer, configure the query for Microsoft-Windows-IIS-Logging. Verify you see live logging data by accessing the website.",
    "remediation": "To configure ETW logging: 1. Open IIS Manager 2. Select the server or site to enable ETW 3. Select Logging . 4. Ensure Log file format is W3C . 5. Select Both log file and ETW event 6. Save your settings. References: 1. http://www.iis.net/learn/get-started/whats-new-in-iis-85/logging-to-etw-in-iis-85 2. http://blogs.technet.com/b/erezs_iis_blog/archive/2013/07/15/hook-me-up.aspx   67 | P a g e 1.6 FTP Requests This section contains a crucial configuration setting for running file transfer protocol (FTP).",
    "profile_applicability": "  Level 1 - IIS 8.5",
    "references": "1. http://www.iis.net/learn/get-started/whats-new-in-iis-85/logging-to-etw-in-iis-85 2. http://blogs.technet.com/b/erezs_iis_blog/archive/2013/07/15/hook-me-up.aspx   67 | P a g e 1.6 FTP Requests This section contains a crucial configuration setting for running file transfer protocol (FTP).",
    "function_names": [
      "iis_server_etw_logging_enabled",
      "iis_server_logging_method_etw",
      "iis_server_event_tracing_enabled",
      "iis_server_logging_etw_configured",
      "iis_server_logging_etw_integration_active"
    ]
  },
  {
    "id": "1.6.1",
    "title": "Encrypt FTP Requests",
    "assessment": "Not Scored",
    "description": "The new FTP Publishing Service for IIS 7.0 supports adding an SSL certificate to an FTP site.  Using an SSL certificate with an FTP site is also known as FTP-S or FTP over Secure Socket Layers (SSL).  FTP-S is an RFC standard (RFC 4217) where an SSL certificate is added to an FTP site and thereby making it possible to perform secure file transfers.",
    "rationale": "By using SSL, the FTP transmission is encrypted and secured from point to point and all FTP traffic as well as credentials are thereby guarded against interception.",
    "audit": "The FTP site will now require the use of FTP-S; test this by attempting to use an FTP client which either does not support FTP-S or is not configured to use FTP-S.  If setup was successful, the request will fail.  Conversely, open a command prompt from the server and type ftp localhost.  After entering credentials, the server should return an Access is Denied message.",
    "remediation": "To secure an existing FTP site using a SSL Certificate, a certificate must first be installed on the system.  Production systems should always use a third party certificate from a trusted root, such as VeriSign.  Once that certificate is installed for use in IIS, follow the steps below to configure the FTP site for SSL: 1. Open IIS Manager, select the FTP server and choose FTP SSL Settings in the Features View pane 2. Under the SSL Certificate dropdown, choose the SSL certificate to be configured for use 68 | P a g e 3. In the SSL Policy section, click the radio button next to Require SSL connections; it is important to require SSL, because allow SSL still permits non-SSL FTP 4. Click Apply in the Actions pane References: 1. http://www.windowsnetworking.com/articles_tutorials/IIS-FTP-Publishing- Service-Part3.html 2. http://learn.iis.net/page.aspx/304/using-ftp-over-ssl/#03",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://www.windowsnetworking.com/articles_tutorials/IIS-FTP-Publishing- Service-Part3.html 2. http://learn.iis.net/page.aspx/304/using-ftp-over-ssl/#03",
    "function_names": [
      "ftp_site_ssl_certificate_enabled",
      "ftp_publishing_service_encryption_enabled",
      "iis_ftp_site_secure_transfer_required",
      "ftp_service_tls_encryption_enabled",
      "ftp_site_ssl_binding_configured",
      "iis_ftp_ssl_certificate_attached",
      "ftp_transfer_secure_socket_layer_enabled",
      "ftp_site_secure_channel_required"
    ]
  },
  {
    "id": "1.6.2",
    "title": "Enable FTP Logon Attempt Restrictions",
    "assessment": "Not Scored",
    "description": "IIS 8.0 introduced a built-in network security feature to automatically block brute force FTP attacks. This can be used to mitigate a malicious client from attempting a brute-force attack on a discovered account, such as the local administrator account.",
    "rationale": "Successful brute force FTP attacks can allow an otherwise unauthorized user to make changes to data that should not be made. This could allow the unauthorized user to modify website code by uploading malicious software or even changing functionality for items such as online payments.",
    "audit": "Access your FTP server using the administrator account and an invalid password. Verify after the maximum number of login attempts has been met that you receive a message 'Connection closed by remote host' when trying to access FTP.",
    "remediation": "1. Open IIS Manager 2. At the server level, open the FTP Logon Attempt Restrictions feature. 69 | P a g e 3. Check Enable FTP Logon Attempt Restrictions and enter the maximum number of failed attempts and the time period. Enable Deny IP addresses based on the number of failed login attempts. 4. Click Apply Default Value: By default, this feature is not enabled when FTP is installed. References: 1. http://www.iis.net/learn/get-started/whats-new-in-iis-8/iis-80-ftp-logon-attempt- restrictions  1.7 Transport Encryption This section contains recommendations for configuring IIS protocols and cipher suites.",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://www.iis.net/learn/get-started/whats-new-in-iis-8/iis-80-ftp-logon-attempt- restrictions  1.7 Transport Encryption This section contains recommendations for configuring IIS protocols and cipher suites.",
    "function_names": [
      "iis_ftp_logon_restrictions_enabled",
      "iis_ftp_brute_force_protection_enabled",
      "iis_ftp_automatic_blocking_enabled",
      "iis_ftp_security_restrictions_enabled",
      "iis_ftp_attack_mitigation_enabled"
    ]
  },
  {
    "id": "1.7.1",
    "title": "Disable PCT 1.0",
    "assessment": "Scored",
    "description": "This protocol is not considered cryptographically secure. Disabling it is recommended.",
    "rationale": "Disabling weak protocols will help ensure the confidentiality and integrity of in-transit data.",
    "audit": "Perform the following to verify PCT 1.0 is disabled: 1. Ensure the following key does not exist.  If the key does exist, ensure it is set to 0. 70 | P a g e HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\PCT 1.0\\Server\\Enabled 2. Ensure the following key does not exist.  If the key does exist, ensure it is set to 1. HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\PCT 1.0\\Server\\DisabledByDefault",
    "remediation": "Perform the following to disable PCT 1.0: 1. Set the following key to 0. HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\PCT 1.0\\Server\\Enabled 2. Set the following key to 1. HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\PCT 1.0\\Server\\DisabledByDefault Default Value: Disabled References: 1. http://technet.microsoft.com/en-us/library/dn786433.aspx 2. http://msdn.microsoft.com/en-us/library/aa374757%28v=vs.85%29.aspx 3. https://www.owasp.org/index.php/Testing_for_SSL-TLS_%28OWASP-CM-001%29 4. http://technet.microsoft.com/en-us/library/dn786419.aspx",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://technet.microsoft.com/en-us/library/dn786433.aspx 2. http://msdn.microsoft.com/en-us/library/aa374757%28v=vs.85%29.aspx 3. https://www.owasp.org/index.php/Testing_for_SSL-TLS_%28OWASP-CM-001%29 4. http://technet.microsoft.com/en-us/library/dn786419.aspx",
    "function_names": [
      "cloud_cdn_ssl_certificate_pct_disabled",
      "cloud_cdn_ssl_certificate_weak_protocol_disabled",
      "cloud_cdn_ssl_certificate_insecure_protocol_disabled",
      "cloud_cdn_ssl_certificate_legacy_protocol_disabled",
      "cloud_cdn_ssl_certificate_tls_weak_protocol_disabled"
    ]
  },
  {
    "id": "1.7.2",
    "title": "Disable SSLv2",
    "assessment": "Scored",
    "description": "This protocol is not considered cryptographically secure. Disabling it is recommended. This protocol is disabled by default if the registry key is not present. A reboot is required for these changes to be reflected. 71 | P a g e",
    "rationale": "Disabling weak protocols will help ensure the confidentiality and integrity of in-transit data.",
    "audit": "Perform the following to verify SSL 2.0 is disabled. 1. If the following key is not present, SSL 2.0 is disabled. HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 2.0 2. Ensure the following key is set to 1. HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 2.0\\Server\\DisabledByDefault 3. Ensure the following key is set to 0. HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 2.0\\Server\\Enabled",
    "remediation": "Perform the following to disable SSL 2.0: 1. If the following key is not present, SSL 2.0 is disabled. You can delete the key to disable the protocol. HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 2.0 2. Set the following key to 1. HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 2.0\\Server\\DisabledByDefault 3. Set the following key is to 0. HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 2.0\\Server\\Enabled Default Value: Enabled References: 1. http://technet.microsoft.com/en-us/library/dn786419.aspx 2. http://technet.microsoft.com/en-us/library/dn786433.aspx 3. http://msdn.microsoft.com/en-us/library/aa374757%28v=vs.85%29.aspx 4. https://www.owasp.org/index.php/Testing_for_SSL-TLS_%28OWASP-CM-001%29 72 | P a g e",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://technet.microsoft.com/en-us/library/dn786419.aspx 2. http://technet.microsoft.com/en-us/library/dn786433.aspx 3. http://msdn.microsoft.com/en-us/library/aa374757%28v=vs.85%29.aspx 4. https://www.owasp.org/index.php/Testing_for_SSL-TLS_%28OWASP-CM-001%29 72 | P a g e",
    "function_names": [
      "ssl_protocol_sslv2_disabled",
      "ssl_protocol_sslv2_disabled_registry",
      "ssl_protocol_sslv2_disabled_reboot_required",
      "ssl_protocol_sslv2_disabled_default",
      "ssl_protocol_sslv2_disabled_secure_config"
    ]
  },
  {
    "id": "1.7.3",
    "title": "Disable SSLv3",
    "assessment": "Scored",
    "description": "This protocol is not considered cryptographically secure. Disabling it is recommended.",
    "rationale": "Disabling weak protocols will help ensure the confidentiality and integrity of in-transit data.",
    "audit": "Perform the following to verify SSL 3.0 is disabled: 1. Ensure the following key is set to 1. HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 3.0\\Server\\DisabledByDefault 2. Ensure the following key is set to 0. HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 3.0\\Server\\Enabled",
    "remediation": "Perform the following to disable SSL 3.0: 1. Set the following key to 1. HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 3.0\\Server\\DisabledByDefault 2. Set the following keyto 0. HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 3.0\\Server\\Enabled Default Value: Enabled  73 | P a g e References: 1. https://www.openssl.org/~bodo/ssl-poodle.pdf 2. http://technet.microsoft.com/en-us/library/dn786419.aspx 3. https://www.owasp.org/index.php/Testing_for_SSL-TLS_%28OWASP-CM-001%29 4. http://technet.microsoft.com/en-us/library/dn786433.aspx 5. http://msdn.microsoft.com/en-us/library/aa374757%28v=vs.85%29.aspx",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. https://www.openssl.org/~bodo/ssl-poodle.pdf 2. http://technet.microsoft.com/en-us/library/dn786419.aspx 3. https://www.owasp.org/index.php/Testing_for_SSL-TLS_%28OWASP-CM-001%29 4. http://technet.microsoft.com/en-us/library/dn786433.aspx 5. http://msdn.microsoft.com/en-us/library/aa374757%28v=vs.85%29.aspx",
    "function_names": [
      "cloud_cdn_ssl_certificate_sslv3_disabled",
      "compute_load_balancer_sslv3_disabled",
      "compute_ssl_certificate_sslv3_disabled",
      "cloudfront_distribution_sslv3_disabled",
      "elastic_load_balancer_sslv3_disabled",
      "api_gateway_domain_sslv3_disabled",
      "cloud_cdn_endpoint_sslv3_disabled",
      "compute_instance_sslv3_disabled",
      "network_load_balancer_sslv3_disabled",
      "application_load_balancer_sslv3_disabled"
    ]
  },
  {
    "id": "1.7.4",
    "title": "Configure TLS 1.0",
    "assessment": "Not Scored",
    "description": "Enabling TLS 1.0 may be required for client compatibility. Enable or disable these protocols accordingly.",
    "rationale": "This item is Not Scored for the following reasons:  Enabling TLS 1.2 is recommended.  These protocols do suffer from known practical attacks.",
    "audit": "Review the following registry locations to verify that TLS 1.0 are configured as expected: HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.0\\Server\\Enabled HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.0\\Server\\DisabledByDefault",
    "remediation": "Set the following registry locations to configure TLS 1.0: HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.0\\Server\\Enabled HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.0\\Server\\DisabledByDefault 74 | P a g e References: 1. http://msdn.microsoft.com/en-us/library/aa374757%28v=vs.85%29.aspx 2. https://www.owasp.org/index.php/Testing_for_SSL-TLS_%28OWASP-CM-001%29 3. http://technet.microsoft.com/en-us/library/dn786419.aspx 4. http://technet.microsoft.com/en-us/library/dn786433.aspx",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://msdn.microsoft.com/en-us/library/aa374757%28v=vs.85%29.aspx 2. https://www.owasp.org/index.php/Testing_for_SSL-TLS_%28OWASP-CM-001%29 3. http://technet.microsoft.com/en-us/library/dn786419.aspx 4. http://technet.microsoft.com/en-us/library/dn786433.aspx",
    "function_names": [
      "cloud_cdn_ssl_certificate_tls_1_0_disabled",
      "cloud_cdn_ssl_certificate_tls_1_0_enabled",
      "cloud_cdn_ssl_certificate_min_tls_1_0",
      "cloud_cdn_ssl_certificate_protocol_compliance",
      "cloud_cdn_ssl_certificate_legacy_protocol_configured",
      "cloud_cdn_ssl_certificate_secure_protocol_enabled",
      "cloud_cdn_ssl_certificate_tls_version_restricted",
      "cloud_cdn_ssl_certificate_tls_1_0_client_compatibility"
    ]
  },
  {
    "id": "1.7.5",
    "title": "Configure TLS 1.1",
    "assessment": "Not Scored",
    "description": "Enabling TLS 1.1 may be required for client compatibility. Enable or disable these protocols accordingly.",
    "rationale": "This item is Not Scored for the following reasons:  Enabling TLS 1.2 is recommended.  This protocol does not suffer from known practical attacks.",
    "audit": "Review the following registry locations to verify that TLS 1.1 are configured as expected: HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.1\\Server\\Enabled HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.1\\Server\\DisabledByDefault",
    "remediation": "Set the following registry locations to configure TLS 1.1: HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.1\\Server\\Enabled HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.1\\Server\\DisabledByDefault  75 | P a g e References: 1. http://technet.microsoft.com/en-us/library/dn786433.aspx 2. https://www.owasp.org/index.php/Testing_for_SSL-TLS_%28OWASP-CM-001%29 3. http://technet.microsoft.com/en-us/library/dn786419.aspx 4. http://msdn.microsoft.com/en-us/library/aa374757%28v=vs.85%29.aspx",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://technet.microsoft.com/en-us/library/dn786433.aspx 2. https://www.owasp.org/index.php/Testing_for_SSL-TLS_%28OWASP-CM-001%29 3. http://technet.microsoft.com/en-us/library/dn786419.aspx 4. http://msdn.microsoft.com/en-us/library/aa374757%28v=vs.85%29.aspx",
    "function_names": [
      "cloud_cdn_ssl_certificate_tls_1_1_enabled",
      "cloud_cdn_ssl_certificate_tls_1_1_disabled",
      "compute_load_balancer_tls_1_1_enabled",
      "compute_load_balancer_tls_1_1_disabled",
      "cloudfront_distribution_tls_1_1_enabled",
      "cloudfront_distribution_tls_1_1_disabled",
      "api_gateway_domain_tls_1_1_enabled",
      "api_gateway_domain_tls_1_1_disabled"
    ]
  },
  {
    "id": "1.7.6",
    "title": "Enable TLS 1.2",
    "assessment": "Scored",
    "description": "TLS 1.2 is the most recent and mature protocol for protecting the confidentiality and integrity of HTTP traffic. Enabling TLS 1.2 is recommended. This protocol is enabled by default if the registry key is not present. As with any registry changes, a reboot is required for changes to take effect.",
    "rationale": "Enabling this protocol will help ensure the confidentiality and integrity of data in transit.",
    "audit": "Perform the following to verify TLS 1.2 has been enabled: 1. Ensure the following key is not present. If it is present, see steps 2 and 3. HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\ 2. Ensure the following key is set to 0xFFFFFFFF HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\Server\\Enabled 3. Ensure the following key is set to 0. HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\Server\\DisabledByDefault",
    "remediation": "Perform the following to enable TLS 1.2: 76 | P a g e 1. Check to see if the following key exists. If it doesn't, TLS 1.2 is enabled by default. If it does, you can delete it or follow steps 2 and 3. HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\ 2. If the key exists, set the following key to 0xFFFFFFFF HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\Server\\Enabled 3. If the key exists, set the following key to 0 HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\Server\\DisabledByDefault References: 1. http://msdn.microsoft.com/en-us/library/aa374757%28v=vs.85%29.aspx 2. https://www.owasp.org/index.php/Testing_for_SSL-TLS_%28OWASP-CM-001%29 3. http://technet.microsoft.com/en-us/library/dn786419.aspx 4. http://technet.microsoft.com/en-us/library/dn786433.aspx",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://msdn.microsoft.com/en-us/library/aa374757%28v=vs.85%29.aspx 2. https://www.owasp.org/index.php/Testing_for_SSL-TLS_%28OWASP-CM-001%29 3. http://technet.microsoft.com/en-us/library/dn786419.aspx 4. http://technet.microsoft.com/en-us/library/dn786433.aspx",
    "function_names": [
      "cloud_cdn_distribution_min_tls_1_2_enabled",
      "compute_load_balancer_min_tls_1_2_enabled",
      "cloudfront_distribution_min_tls_1_2_enabled",
      "api_gateway_domain_min_tls_1_2_enabled",
      "elastic_load_balancing_listener_min_tls_1_2_enabled",
      "cloud_storage_bucket_min_tls_1_2_enabled",
      "cloud_sql_instance_min_tls_1_2_enabled",
      "cloud_run_service_min_tls_1_2_enabled",
      "cloud_functions_function_min_tls_1_2_enabled",
      "cloud_redis_instance_min_tls_1_2_enabled"
    ]
  },
  {
    "id": "1.7.7",
    "title": "Disable NULL Cipher Suites",
    "assessment": "Scored",
    "description": "The NULL cipher does not provide data confidentiality or integrity. It is recommended that the NULL cipher be disabled.",
    "rationale": "By disabling the NULL cipher, there is a better chance of maintaining data confidentiality and integrity.",
    "audit": "To verify the NULL cipher has been disabled, ensure the following key does not exist or is set to 0: HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\NULL\\Enabled 77 | P a g e",
    "remediation": "To disable the NULL cipher, ensure the following key is absent.  If the key is present, ensure it is set to 0. HKLM System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\NULL\\Enabled References: 1. https://www.owasp.org/index.php/Testing_for_SSL-TLS_%28OWASP-CM-001%29 2. http://technet.microsoft.com/en-us/library/dn786419.aspx 3. http://technet.microsoft.com/en-us/library/dn786433.aspx 4. http://msdn.microsoft.com/en-us/library/aa374757%28v=vs.85%29.aspx",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. https://www.owasp.org/index.php/Testing_for_SSL-TLS_%28OWASP-CM-001%29 2. http://technet.microsoft.com/en-us/library/dn786419.aspx 3. http://technet.microsoft.com/en-us/library/dn786433.aspx 4. http://msdn.microsoft.com/en-us/library/aa374757%28v=vs.85%29.aspx",
    "function_names": [
      "cloud_cdn_ssl_certificate_null_cipher_disabled",
      "compute_load_balancer_null_cipher_disabled",
      "network_load_balancer_null_cipher_disabled",
      "application_load_balancer_null_cipher_disabled",
      "ssl_certificate_null_cipher_disabled",
      "tls_configuration_null_cipher_disabled",
      "api_gateway_null_cipher_disabled",
      "cloudfront_distribution_null_cipher_disabled"
    ]
  },
  {
    "id": "1.7.8",
    "title": "Disable DES Cipher Suites",
    "assessment": "Scored",
    "description": "DES is a weak symmetric-key cipher. It is recommended that it be disabled.",
    "rationale": "By disabling DES, there is a better chance of maintaining data confidentiality and integrity.",
    "audit": "To verify the DES 56/56 cipher has been disabled, ensure the following key does not exist or is set to 0: HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\DES 56/56",
    "remediation": "To disable DES 56/56, ensure the following key is absent.  If the key is present, ensure it is set to 0. HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\DES 56/56\\Enabled 78 | P a g e References: 1. https://www.owasp.org/index.php/Testing_for_SSL-TLS_%28OWASP-CM-001%29 2. http://technet.microsoft.com/en-us/library/dn786433.aspx 3. http://technet.microsoft.com/en-us/library/dn786419.aspx 4. http://msdn.microsoft.com/en-us/library/aa374757%28v=vs.85%29.aspx",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. https://www.owasp.org/index.php/Testing_for_SSL-TLS_%28OWASP-CM-001%29 2. http://technet.microsoft.com/en-us/library/dn786433.aspx 3. http://technet.microsoft.com/en-us/library/dn786419.aspx 4. http://msdn.microsoft.com/en-us/library/aa374757%28v=vs.85%29.aspx",
    "function_names": [
      "ssl_certificate_des_disabled",
      "ssl_certificate_weak_ciphers_disabled",
      "ssl_certificate_des_cipher_disabled",
      "ssl_certificate_insecure_ciphers_disabled",
      "ssl_certificate_legacy_ciphers_disabled"
    ]
  },
  {
    "id": "1.7.9",
    "title": "Disable RC2 Cipher Suites",
    "assessment": "Scored",
    "description": "RC2 is a weak symmetric-key block cipher. It is recommended that it be disabled.",
    "rationale": "By disabling RC2, there is a better chance of maintaining data confidentiality and integrity.",
    "audit": "To verify the RC2 40/128 cipher has been disabled, ensure the following key does not exist or is set to0: HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC2 40/128\\Enabled To verify the RC2 56/128 cipher has been disabled, ensure the following key does not exist or is set to0: HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC2 56/128\\Enabled",
    "remediation": "To disable RC2 40/128, ensure the following key is absent.  If the key is present, ensure it is set to 0. HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC2 40/128\\Enabled 79 | P a g e To disable RC2 56/128, ensure the following key is absent. If the key is present, ensure it is set to 0. HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC2 56/128\\Enabled References: 1. http://technet.microsoft.com/en-us/library/dn786419.aspx 2. http://technet.microsoft.com/en-us/library/dn786433.aspx 3. http://msdn.microsoft.com/en-us/library/aa374757%28v=vs.85%29.aspx 4. https://www.owasp.org/index.php/Testing_for_SSL-TLS_%28OWASP-CM-001%29",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://technet.microsoft.com/en-us/library/dn786419.aspx 2. http://technet.microsoft.com/en-us/library/dn786433.aspx 3. http://msdn.microsoft.com/en-us/library/aa374757%28v=vs.85%29.aspx 4. https://www.owasp.org/index.php/Testing_for_SSL-TLS_%28OWASP-CM-001%29",
    "function_names": [
      "ssl_certificate_rc2_disabled",
      "cloud_cdn_rc2_cipher_disabled",
      "load_balancer_rc2_cipher_disabled",
      "compute_instance_rc2_cipher_disabled",
      "network_interface_rc2_cipher_disabled",
      "api_gateway_rc2_cipher_disabled",
      "cloudfront_distribution_rc2_disabled",
      "elastic_load_balancer_rc2_disabled",
      "application_load_balancer_rc2_disabled",
      "network_load_balancer_rc2_disabled"
    ]
  },
  {
    "id": "1.7.10",
    "title": "Disable RC4 Cipher Suites",
    "assessment": "Scored",
    "description": "RC4 is a stream cipher that has known practical attacks. It is recommended that RC4 be disabled. The only RC4 cipher enabled by default on Server 2012 and 2012 R2 is RC4 128/128.",
    "rationale": "The use of RC4 may increase an adversaries ability to read sensitive information sent over SSL/TLS.",
    "audit": "To verify the RC4 40/128 cipher has been disabled, ensure the following key does not exist or is set to 0: HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 40/128\\Enabled To verify the RC4 56/128 cipher has been disabled, ensure the following key does not exist or is set to 0: HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 56/128\\Enabled 80 | P a g e To verify the RC4 64/128 cipher has been disabled, ensure the following key does not exist or is set to 0: HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 64/128\\Enabled To verify the RC4 128/128 cipher has been disabled, ensure the following key is set to 0: HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 128/128\\Enabled",
    "remediation": "To disable RC4 40/128, ensure the following key is absent.  If the key is present, ensure it is set to 0. HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 40/128\\Enabled To disable RC4 56/128, ensure the following key is absent. If the key is present, ensure it is set to 0. HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 56/128\\Enabled To disable RC4 64/128, ensure the following key is absent. If the key is present, ensure it is set to 0. HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 64/128\\Enabled To disable RC4 128/128, ensure the following key is set to 0. HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 128/128\\Enabled References: 1. http://msdn.microsoft.com/en-us/library/aa374757%28v=vs.85%29.aspx 2. http://technet.microsoft.com/en-us/library/dn786433.aspx 3. http://technet.microsoft.com/en-us/library/dn786419.aspx 4. https://www.owasp.org/index.php/Testing_for_SSL-TLS_%28OWASP-CM-001%29",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5",
    "references": "1. http://msdn.microsoft.com/en-us/library/aa374757%28v=vs.85%29.aspx 2. http://technet.microsoft.com/en-us/library/dn786433.aspx 3. http://technet.microsoft.com/en-us/library/dn786419.aspx 4. https://www.owasp.org/index.php/Testing_for_SSL-TLS_%28OWASP-CM-001%29",
    "function_names": [
      "compute_instance_rc4_cipher_disabled",
      "compute_instance_weak_cipher_disabled",
      "compute_instance_legacy_cipher_disabled",
      "compute_instance_insecure_cipher_disabled",
      "compute_instance_rc4_128_disabled",
      "compute_instance_weak_encryption_disabled",
      "compute_instance_rc4_protocol_disabled",
      "compute_instance_cipher_suite_restricted"
    ]
  },
  {
    "id": "1.7.11",
    "title": "Configure Triple DES Cipher Suite",
    "assessment": "Not Scored",
    "description": "Enabling Triple DES Cipher Suites may be required for client compatibility. Enable or disable this cipher suite accordingly.",
    "rationale": "This item is Not Scored for the following reasons:  Enabling AES 256/256 is recommended.  This cipher does not suffer from known practical attacks.",
    "audit": "To verify the Triple DES 168/168 cipher has been enabled, ensure the following key either does not exist on is set to 0xFFFFFFFF: HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\Triple DES 168/168\\Enabled",
    "remediation": "To enable Triple DES 168/168, ensure the following key is not present or is set to 0xFFFFFFFF. HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\Triple DES 168/168\\Enabled References: 1. https://www.owasp.org/index.php/Testing_for_SSL-TLS_%28OWASP-CM-001%29 2. http://technet.microsoft.com/en-us/library/dn786419.aspx 3. http://technet.microsoft.com/en-us/library/dn786433.aspx 4. http://msdn.microsoft.com/en-us/library/aa374757%28v=vs.85%29.aspx",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5  81 | P a g e",
    "references": "1. https://www.owasp.org/index.php/Testing_for_SSL-TLS_%28OWASP-CM-001%29 2. http://technet.microsoft.com/en-us/library/dn786419.aspx 3. http://technet.microsoft.com/en-us/library/dn786433.aspx 4. http://msdn.microsoft.com/en-us/library/aa374757%28v=vs.85%29.aspx",
    "function_names": [
      "cloud_cdn_ssl_certificate_triple_des_enabled",
      "cloud_cdn_ssl_certificate_triple_des_disabled",
      "cloud_cdn_load_balancer_triple_des_enabled",
      "cloud_cdn_load_balancer_triple_des_disabled",
      "compute_load_balancer_triple_des_enabled",
      "compute_load_balancer_triple_des_disabled",
      "compute_ssl_certificate_triple_des_enabled",
      "compute_ssl_certificate_triple_des_disabled"
    ]
  },
  {
    "id": "1.7.12",
    "title": "Configure AES 128/128 Cipher Suite",
    "assessment": "Not Scored",
    "description": "Enabling AES 128/128 may be required for client compatibility. Enable or disable this cipher suite accordingly.",
    "rationale": "This item is Not Scored for the following reasons:  Enabling AES 256/256 is recommended.  This cipher does not suffer from known practical attacks.",
    "audit": "To verify the AES 128/128 cipher has been enabled, ensure the following key is set to 0xFFFFFFF: HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\AES 128/128\\Enabled",
    "remediation": "To enable the AES 128/128 cipher, ensure the following key is set to 0xFFFFFFFF: HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\AES 128/128\\Enabled References: 1. http://technet.microsoft.com/en-us/library/dn786419.aspx 2. http://msdn.microsoft.com/en-us/library/aa374757%28v=vs.85%29.aspx 3. https://www.owasp.org/index.php/Testing_for_SSL-TLS_%28OWASP-CM-001%29 4. http://technet.microsoft.com/en-us/library/dn786433.aspx",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5  82 | P a g e",
    "references": "1. http://technet.microsoft.com/en-us/library/dn786419.aspx 2. http://msdn.microsoft.com/en-us/library/aa374757%28v=vs.85%29.aspx 3. https://www.owasp.org/index.php/Testing_for_SSL-TLS_%28OWASP-CM-001%29 4. http://technet.microsoft.com/en-us/library/dn786433.aspx",
    "function_names": [
      "cloud_cdn_distribution_aes_128_cipher_enabled",
      "cloud_cdn_distribution_aes_128_cipher_disabled",
      "cloud_cdn_distribution_aes_128_cipher_required",
      "cloud_cdn_distribution_aes_128_cipher_compliant",
      "cloud_cdn_distribution_aes_128_cipher_configured"
    ]
  },
  {
    "id": "1.7.13",
    "title": "Enable AES 256/256 Cipher Suite",
    "assessment": "Scored",
    "description": "AES 256/256 is the most recent and mature cipher suite for protecting the confidentiality and integrity of HTTP traffic. Enabling AES 256/256 is recommended. This is enabled by default on Server 2012 and 2012 R2.",
    "rationale": "Enabling this cipher will help ensure the confidentiality and integrity of data in transit.",
    "audit": "To verify the AES 256/256 cipher has been enabled: 1. Ensure that the following key does not exist. If it does exist, you can either delete the key or proceed to step 2. HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\AES 256/256\\ 2. If the following key exists, ensure the following is set to 0xFFFFFFFF: HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\AES 256/256\\Enabled",
    "remediation": "To enable the AES 256/256 cipher: 1. Ensure that the following key does not exist. If it does exist, you can either delete the key or proceed to step 2. HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\AES 256/256\\ 2. If the key exists, ensure the following is set to 0xFFFFFFFF. HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\AES 256/256\\Enabled References: 1. http://technet.microsoft.com/en-us/library/dn786419.aspx 2. http://msdn.microsoft.com/en-us/library/aa374757%28v=vs.85%29.aspx 3. https://www.owasp.org/index.php/Testing_for_SSL-TLS_%28OWASP-CM-001%29 4. http://technet.microsoft.com/en-us/library/dn786433.aspx   84 | P a g e",
    "profile_applicability": "  Level 1 - IIS 8.0   Level 1 - IIS 8.5  83 | P a g e",
    "references": "1. http://technet.microsoft.com/en-us/library/dn786419.aspx 2. http://msdn.microsoft.com/en-us/library/aa374757%28v=vs.85%29.aspx 3. https://www.owasp.org/index.php/Testing_for_SSL-TLS_%28OWASP-CM-001%29 4. http://technet.microsoft.com/en-us/library/dn786433.aspx   84 | P a g e",
    "function_names": [
      "cloud_cdn_distribution_aes_256_256_enabled",
      "compute_load_balancer_aes_256_256_enabled",
      "cloudfront_distribution_aes_256_256_enabled",
      "ssl_certificate_aes_256_256_enabled",
      "network_load_balancer_aes_256_256_enabled",
      "application_load_balancer_aes_256_256_enabled",
      "cloud_cdn_ssl_policy_aes_256_256_enabled",
      "compute_ssl_policy_aes_256_256_enabled"
    ]
  },
  {
    "id": "1.7.14",
    "title": "TLS Cipher Suite Ordering",
    "assessment": "Scored",
    "description": "Cipher suites are a named combination of authentication, encryption, message authentication code, and key exchange algorithms used for the security settings of a network connection using TLS protocol. Clients send a cipher list and a list of ciphers that it supports in order of preference to a server. The server then replies with the cipher suite that it selects from the client cipher suite list.",
    "rationale": "Cipher suites should be ordered from strongest to weakest in order to ensure that the more secure configuration is used for encryption between the server and client.",
    "audit": "To verify the cipher suite order is set correctly, ensure the following key is set to: TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384_P384 TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256_P256 TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384_P256 TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256_P256 TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA_P256 TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA_P256 TLS_RSA_WITH_AES_256_GCM_SHA384 TLS_RSA_WITH_AES_128_GCM_SHA256 TLS_RSA_WITH_AES_256_CBC_SHA256 TLS_RSA_WITH_AES_128_CBC_SHA256 TLS_RSA_WITH_AES_256_CBC_SHA 85 | P a g e TLS_RSA_WITH_AES_128_CBC_SHA TLS_RSA_WITH_3DES_EDE_CBC_SHA HKLM\\System\\CurrentControlSet\\Control\\Cryptography\\Configuration\\Local\\SSL\\00010002\\Fu nctions",
    "remediation": "To order the cipher suites correctly, ensure the following key is set to: TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384_P384 TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256_P256 TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384_P256 TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256_P256 TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA_P256 TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA_P256 TLS_RSA_WITH_AES_256_GCM_SHA384 TLS_RSA_WITH_AES_128_GCM_SHA256 TLS_RSA_WITH_AES_256_CBC_SHA256 TLS_RSA_WITH_AES_128_CBC_SHA256 TLS_RSA_WITH_AES_256_CBC_SHA TLS_RSA_WITH_AES_128_CBC_SHA TLS_RSA_WITH_3DES_EDE_CBC_SHA HKLM\\System\\CurrentControlSet\\Control\\Cryptography\\Configuration\\Local\\SSL\\00010002\\Fu nctions Impact: Cipher ordering is important to ensure that the most secure ciphers are listed first and will be applied over weaker ciphers when possible.   86 | P a g e Control Set Correctly Yes No 1 Recommendations 1.1 Basic Configurations 1.1.1 Ensure Web Content Is on Non-System Partition (Scored)   1.1.2 Require Host Headers on all Sites (Scored)   1.1.3 Disable Directory Browsing (Scored)   1.1.4 Configure all Application Pools to use Application Pool Identity (Scored)   1.1.5 Ensure Unique Application Pools for Sites (Scored)   1.1.6 Configure Anonymous User Identity to Use Application Pool Identity (Scored)   1.2 Configure Authentication 1.2.1 Configure Global Authorization Rule to Restrict Access (Not Scored)   1.2.2 Ensure Access to Sensitive Site Features Is Restricted To Authenticated Principals Only (Not Scored)   1.2.3 Require SSL in Forms Authentication (Scored)   1.2.4 Configure Forms Authentication to Use Cookies (Scored)   1.2.5 Configure Cookie Protection Mode for Forms Authentication (Scored)   1.2.6 Lock down Encryption Providers (Scored)   1.2.7 Configure SSL for Basic Authentication (Not Scored)   1.2.8 Ensure passwordFormat Credentials Element Not Set To Clear (Scored)   1.2.9 Ensure credentials are not stored in configuration files (Scored)   1.3 ASP.NET Configuration Recommendations 1.3.1 Set Deployment Method to Retail (Scored)   1.3.2 Turn Debug Off (Scored)   1.3.3 Ensure Custom Error Messages are not Off (Scored)   1.3.4 ASP.NET stack tracing is Not Enabled (Scored)   1.3.5 Configure Use Cookies Mode for Session State (Scored)   1.3.6 Ensure Cookies Are Set With HttpOnly Attribute (Scored)   1.3.7 Configure MachineKey Validation Method - .Net 3.5 (Scored)   1.3.8 Configure MachineKey Validation Method - .Net 4.5 (Scored)   1.3.9 Configure Global .NET Trust Level (Not Scored)   1.3.10 Hide IIS HTTP Detailed Errors from Displaying Remotely (Scored)   1.4 Request Filtering and Other Restriction Modules 1.4.1 Configure maxAllowedContentLength Request Filter (Not Scored)   1.4.2 Configure maxURL Request Filter (Scored)   1.4.3 Configure MaxQueryString Request Filter (Scored)   1.4.4 Disallow non-ASCII Characters in URLs (Scored)   87 | P a g e 1.4.5 Ensure Double-Encoded Requests will be Rejected (Scored)   1.4.6 Disallow Unlisted File Extensions (Scored)   1.4.7 Ensure Handler is not granted Write and Script/Execute (Scored)   1.4.8 Ensure Configuration Attribute notListedIsapisAllowed set to false (Scored)   1.4.9 Ensure Configuration Attribute notListedCgisAllowed set to false (Not Scored)   1.4.10 Disable HTTP Trace Method (Scored)   1.4.11 Enable Dynamic IP Address Restrictions (Not Scored)   1.5 IIS Logging Recommendations 1.5.1 Move Default IIS Web Log Location (Scored)   1.5.2 Enable Advanced IIS Logging (Scored)   1.5.3 ETW Logging (Not Scored)   1.6 FTP Requests 1.6.1 Encrypt FTP Requests (Not Scored)   1.6.2 Enable FTP Logon Attempt Restrictions (Not Scored)   1.7 Transport Encryption 1.7.1 Disable PCT 1.0 (Scored)   1.7.2 Disable SSLv2 (Scored)   1.7.3 Disable SSLv3 (Scored)   1.7.4 Configure TLS 1.0 (Not Scored)   1.7.5 Configure TLS 1.1 (Not Scored)   1.7.6 Enable TLS 1.2 (Scored)   1.7.7 Disable NULL Cipher Suites (Scored)   1.7.8 Disable DES Cipher Suites (Scored)   1.7.9 Disable RC2 Cipher Suites (Scored)   1.7.10 Disable RC4 Cipher Suites (Scored)   1.7.11 Configure Triple DES Cipher Suite (Not Scored)   1.7.12 Configure AES 128/128 Cipher Suite (Not Scored)   1.7.13 Enable AES 256/256 Cipher Suite (Scored)   1.7.14 TLS Cipher Suite Ordering (Scored)    88 | P a g e  Appendix: Change History Date Version Changes for this version 09-07-2014 1.1.0 Updated 1.4.7 per Ticket #82 09-07-2014 1.1.0 Updated profiles per Ticket #80 09-07-2014 1.1.0 Updated 1.4.7 Ensure Handler is not granted Write and Script/Execute per Ticket #84 09-07-2014 1.1.0 Updated 1.4.10 Disable HTTP Trace Method per Ticket #91 09-07-2014 1.1.0 Updated 1.1.2 Require Host Headers on all Sites per Ticket #89 10-31-2014 1.2.0 Disable SSL 3.0 per Ticket #100 10-31-2014 1.2.0 Update profile descriptions per Ticket #94 10-31-2014 1.2.0 Fix references to “SP2” per Ticket #94 10-31-2014 1.2.0 Break out cipher/protocol recommendation into individual recommendations per Tickets #96 and #97 03-02-2015 1.3.0 Updated audit/remediation procedures in 1.7.1 per Ticket #113 03-02-2015 1.3.0 Updated 1.7.2 to denote that SSLv2 is disabled by default per Ticket #108 03-02-2015 1.3.0 Update 1.7.6 to denote that TSL 1.2 is enabled by default per Ticket #109 03-02-2015 1.3.0 Update 1.7.13 to denote that AES 256/256 is enabled by default per Ticket #110 03-02-2015 1.3.0 Fixed typo in remediation procedure of 1.7.13 per Ticket #112 89 | P a g e 05-12-2015 1.4.0 1.3.4 ASP.NET stack tracing is Not Enabled' per Ticket #107 05-14-2015 1.4.0 1.1.7 Enable Dynamic IP Address Restrictions - move to different section? Per Ticket #120 05-27-2015 1.4.0 Add recommendations related to cipher/protocol ordering to iis7/8 benchmarks per Ticket #104 06-05-2015 1.4.0 Moved Dynamic IP Restrictions and FTP Logon Restrictions to section 1.4 per Ticket #126 06-25-2015 1.4.0  1.2.6 Ensure passwordFormat Credentials Element Not Set To Clear - Consider Revising per Ticket #106 07-08-2015 1.4.0 1.3.7 Configure MachineKey Validation Method – SHA256 per Ticket #119 07-28-2015 1.4.0 AppPoolIdentity best practice/combining 1.1.5, 1.1.6, 1.1.8 and 1.1.9 per Ticket #115",
    "profile_applicability": "  Level 2 - IIS 8.0   Level 2 - IIS 8.5",
    "impact": "Cipher ordering is important to ensure that the most secure ciphers are listed first and will be applied over weaker ciphers when possible.   86 | P a g e Control Set Correctly Yes No 1 Recommendations 1.1 Basic Configurations 1.1.1 Ensure Web Content Is on Non-System Partition (Scored)   1.1.2 Require Host Headers on all Sites (Scored)   1.1.3 Disable Directory Browsing (Scored)   1.1.4 Configure all Application Pools to use Application Pool Identity (Scored)   1.1.5 Ensure Unique Application Pools for Sites (Scored)   1.1.6 Configure Anonymous User Identity to Use Application Pool Identity (Scored)   1.2 Configure Authentication 1.2.1 Configure Global Authorization Rule to Restrict Access (Not Scored)   1.2.2 Ensure Access to Sensitive Site Features Is Restricted To Authenticated Principals Only (Not Scored)   1.2.3 Require SSL in Forms Authentication (Scored)   1.2.4 Configure Forms Authentication to Use Cookies (Scored)   1.2.5 Configure Cookie Protection Mode for Forms Authentication (Scored)   1.2.6 Lock down Encryption Providers (Scored)   1.2.7 Configure SSL for Basic Authentication (Not Scored)   1.2.8 Ensure passwordFormat Credentials Element Not Set To Clear (Scored)   1.2.9 Ensure credentials are not stored in configuration files (Scored)   1.3 ASP.NET Configuration Recommendations 1.3.1 Set Deployment Method to Retail (Scored)   1.3.2 Turn Debug Off (Scored)   1.3.3 Ensure Custom Error Messages are not Off (Scored)   1.3.4 ASP.NET stack tracing is Not Enabled (Scored)   1.3.5 Configure Use Cookies Mode for Session State (Scored)   1.3.6 Ensure Cookies Are Set With HttpOnly Attribute (Scored)   1.3.7 Configure MachineKey Validation Method - .Net 3.5 (Scored)   1.3.8 Configure MachineKey Validation Method - .Net 4.5 (Scored)   1.3.9 Configure Global .NET Trust Level (Not Scored)   1.3.10 Hide IIS HTTP Detailed Errors from Displaying Remotely (Scored)   1.4 Request Filtering and Other Restriction Modules 1.4.1 Configure maxAllowedContentLength Request Filter (Not Scored)   1.4.2 Configure maxURL Request Filter (Scored)   1.4.3 Configure MaxQueryString Request Filter (Scored)   1.4.4 Disallow non-ASCII Characters in URLs (Scored)   87 | P a g e 1.4.5 Ensure Double-Encoded Requests will be Rejected (Scored)   1.4.6 Disallow Unlisted File Extensions (Scored)   1.4.7 Ensure Handler is not granted Write and Script/Execute (Scored)   1.4.8 Ensure Configuration Attribute notListedIsapisAllowed set to false (Scored)   1.4.9 Ensure Configuration Attribute notListedCgisAllowed set to false (Not Scored)   1.4.10 Disable HTTP Trace Method (Scored)   1.4.11 Enable Dynamic IP Address Restrictions (Not Scored)   1.5 IIS Logging Recommendations 1.5.1 Move Default IIS Web Log Location (Scored)   1.5.2 Enable Advanced IIS Logging (Scored)   1.5.3 ETW Logging (Not Scored)   1.6 FTP Requests 1.6.1 Encrypt FTP Requests (Not Scored)   1.6.2 Enable FTP Logon Attempt Restrictions (Not Scored)   1.7 Transport Encryption 1.7.1 Disable PCT 1.0 (Scored)   1.7.2 Disable SSLv2 (Scored)   1.7.3 Disable SSLv3 (Scored)   1.7.4 Configure TLS 1.0 (Not Scored)   1.7.5 Configure TLS 1.1 (Not Scored)   1.7.6 Enable TLS 1.2 (Scored)   1.7.7 Disable NULL Cipher Suites (Scored)   1.7.8 Disable DES Cipher Suites (Scored)   1.7.9 Disable RC2 Cipher Suites (Scored)   1.7.10 Disable RC4 Cipher Suites (Scored)   1.7.11 Configure Triple DES Cipher Suite (Not Scored)   1.7.12 Configure AES 128/128 Cipher Suite (Not Scored)   1.7.13 Enable AES 256/256 Cipher Suite (Scored)   1.7.14 TLS Cipher Suite Ordering (Scored)    88 | P a g e  Appendix: Change History Date Version Changes for this version 09-07-2014 1.1.0 Updated 1.4.7 per Ticket #82 09-07-2014 1.1.0 Updated profiles per Ticket #80 09-07-2014 1.1.0 Updated 1.4.7 Ensure Handler is not granted Write and Script/Execute per Ticket #84 09-07-2014 1.1.0 Updated 1.4.10 Disable HTTP Trace Method per Ticket #91 09-07-2014 1.1.0 Updated 1.1.2 Require Host Headers on all Sites per Ticket #89 10-31-2014 1.2.0 Disable SSL 3.0 per Ticket #100 10-31-2014 1.2.0 Update profile descriptions per Ticket #94 10-31-2014 1.2.0 Fix references to “SP2” per Ticket #94 10-31-2014 1.2.0 Break out cipher/protocol recommendation into individual recommendations per Tickets #96 and #97 03-02-2015 1.3.0 Updated audit/remediation procedures in 1.7.1 per Ticket #113 03-02-2015 1.3.0 Updated 1.7.2 to denote that SSLv2 is disabled by default per Ticket #108 03-02-2015 1.3.0 Update 1.7.6 to denote that TSL 1.2 is enabled by default per Ticket #109 03-02-2015 1.3.0 Update 1.7.13 to denote that AES 256/256 is enabled by default per Ticket #110 03-02-2015 1.3.0 Fixed typo in remediation procedure of 1.7.13 per Ticket #112 89 | P a g e 05-12-2015 1.4.0 1.3.4 ASP.NET stack tracing is Not Enabled' per Ticket #107 05-14-2015 1.4.0 1.1.7 Enable Dynamic IP Address Restrictions - move to different section? Per Ticket #120 05-27-2015 1.4.0 Add recommendations related to cipher/protocol ordering to iis7/8 benchmarks per Ticket #104 06-05-2015 1.4.0 Moved Dynamic IP Restrictions and FTP Logon Restrictions to section 1.4 per Ticket #126 06-25-2015 1.4.0  1.2.6 Ensure passwordFormat Credentials Element Not Set To Clear - Consider Revising per Ticket #106 07-08-2015 1.4.0 1.3.7 Configure MachineKey Validation Method – SHA256 per Ticket #119 07-28-2015 1.4.0 AppPoolIdentity best practice/combining 1.1.5, 1.1.6, 1.1.8 and 1.1.9 per Ticket #115",
    "function_names": [
      "cloud_cdn_load_balancer_tls_cipher_suite_ordered",
      "cloud_cdn_load_balancer_tls_secure_cipher_priority",
      "cloud_cdn_load_balancer_tls_strong_cipher_first",
      "compute_load_balancer_tls_cipher_suite_ordered",
      "compute_load_balancer_tls_secure_cipher_priority",
      "compute_load_balancer_tls_strong_cipher_first",
      "cloud_cdn_ssl_certificate_tls_cipher_suite_ordered",
      "cloud_cdn_ssl_certificate_tls_secure_cipher_priority",
      "cloud_cdn_ssl_certificate_tls_strong_cipher_first",
      "compute_ssl_certificate_tls_cipher_suite_ordered",
      "compute_ssl_certificate_tls_secure_cipher_priority",
      "compute_ssl_certificate_tls_strong_cipher_first"
    ]
  }
]
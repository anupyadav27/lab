[
  {
    "id": "1.1.1.1",
    "title": "Ensure mounting of squashfs filesystems is disabled",
    "assessment": "Automated",
    "description": "The squashfs filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems (similar to cramfs ). A squashfs image can be used without having to first decompress the image.",
    "rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it. Impact: Disabling squashfs will prevent the use of snap. Snap is a package manager for Linux for installing Snap packages. \"Snap\" application packages of software are self-contained and work across a range of Linux distributions. This is unlike traditional Linux package management approaches, like APT or RPM, which require specifically adapted packages per Linux distribution on an application update and delay therefore application deployment from developers to their software's end-user. Snaps themselves have no dependency on any external store (\"App store\"), can be obtained from any source and can be therefore used for upstream software deployment. When snaps are deployed on versions of Linux, the Ubuntu app store is used as default back-end, but other stores can be enabled as well.",
    "audit": "Run the following commands and verify the output is as indicated: # modprobe -n -v squashfs | grep -E '(squashfs|install)' install /bin/true # lsmod | grep squashfs <No output>   19 | P a g e",
    "remediation": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf Example: vi /etc/modprobe.d/squashfs.conf and add the following line: install squashfs /bin/true Run the following command to unload the squashfs module: # modprobe -r squashfs",
    "impact": "Disabling squashfs will prevent the use of snap. Snap is a package manager for Linux for installing Snap packages. \"Snap\" application packages of software are self-contained and work across a range of Linux distributions. This is unlike traditional Linux package management approaches, like APT or RPM, which require specifically adapted packages per Linux distribution on an application update and delay therefore application deployment from developers to their software's end-user. Snaps themselves have no dependency on any external store (\"App store\"), can be obtained from any source and can be therefore used for upstream software deployment. When snaps are deployed on versions of Linux, the Ubuntu app store is used as default back-end, but other stores can be enabled as well.",
    "function_names": [
      "filesystem_squashfs_mount_disabled",
      "filesystem_squashfs_mount_restricted",
      "filesystem_squashfs_usage_prohibited",
      "filesystem_squashfs_mount_blocked",
      "filesystem_squashfs_access_disabled"
    ]
  },
  {
    "id": "1.1.1.2",
    "title": "Ensure mounting of udf filesystems is disabled",
    "assessment": "Automated",
    "description": "The udf filesystem type is the universal disk format used to implement ISO/IEC 13346 and ECMA-167 specifications. This is an open vendor filesystem type for data storage on a broad range of media. This filesystem type is necessary to support writing DVDs and newer optical disc formats.",
    "rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.",
    "audit": "Run the following commands and verify the output is as indicated: # modprobe -n -v udf | grep -E '(udf|install)' install /bin/true # lsmod | grep udf <No output>",
    "remediation": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf Example: vi /etc/modprobe.d/udf.conf and add the following line: install udf /bin/true Run the following command to unload the udf module: # modprobe -r udf   21 | P a g e",
    "function_names": [
      "filesystem_udf_mount_disabled",
      "filesystem_udf_mount_restricted",
      "filesystem_udf_mount_prohibited",
      "filesystem_udf_mount_blocked",
      "filesystem_udf_mount_prevented"
    ]
  },
  {
    "id": "1.1.1.3",
    "title": "Ensure mounting of FAT filesystems is limited",
    "assessment": "Automated",
    "description": "The FAT filesystem format is primarily used on older windows systems and portable USB drives or flash modules. It comes in three types FAT12 , FAT16 , and FAT32 all of which are supported by the vfat kernel module.",
    "rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it. Impact: The FAT filesystem format is used by UEFI systems for the EFI boot partition. Disabling the vfat module can prevent boot on UEFI systems. FAT filesystems are often used on portable USB sticks and other flash media which are commonly used to transfer files between workstations, removing VFAT support may prevent the ability to transfer files in this way.  23 | P a g e",
    "audit": "If utilizing UEFI the FAT filesystem format is required. If this case, ensure that the FAT filesystem is only used where appropriate Run the following command grep -E -i '\\svfat\\s' /etc/fstab And review that any output is appropriate for your environment If not utilizing UEFI Run the following commands and verify the output is as indicated: # modprobe -n -v fat | grep -E '(fat|install)' install /bin/true # lsmod | grep fat <No output> # modprobe -n -v vfat | grep -E '(vfat|install)' install /bin/true # lsmod | grep vfat <No output> # modprobe -n -v msdos | grep -E '(msdos|install)' install /bin/true # lsmod | grep msdos <No output>   24 | P a g e",
    "remediation": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf and add the following lines: Example: vim /etc/modprobe.d/fat.conf install fat /bin/true install vfat /bin/true install msdos /bin/true Run the following commands to unload the msdos, vfat, and fat modules: # modprobe -r msdos # modprobe -r vfat # modprobe -r fat",
    "impact": "The FAT filesystem format is used by UEFI systems for the EFI boot partition. Disabling the vfat module can prevent boot on UEFI systems. FAT filesystems are often used on portable USB sticks and other flash media which are commonly used to transfer files between workstations, removing VFAT support may prevent the ability to transfer files in this way.  23 | P a g e",
    "function_names": [
      "compute_filesystem_fat_mounting_limited",
      "compute_filesystem_vfat_module_disabled",
      "compute_filesystem_fat_mounting_restricted",
      "compute_filesystem_fat_mounting_blocked",
      "compute_filesystem_fat_mounting_prohibited"
    ]
  },
  {
    "id": "1.1.2",
    "title": "Ensure /tmp is configured",
    "assessment": "Automated",
    "description": "The /tmp directory is a world-writable directory used for temporary storage by all users and some applications. Notes: • If an entry for /tmp exists in /etc/fstab it will take precedence over entries in the tmp.mount file. • tmpfs can be resized using the size={size} parameter in /etc/fstab or on the Options line in the tmp.mount file. If we don't specify the size, it will be half the RAM. Resize tmpfs examples: • /etc/fstab tmpfs   /tmp         tmpfs   rw,noexec,nodev,nosuid,size=2G          0  0 • tmp.mount [Mount] What=tmpfs Where=/tmp Type=tmpfs Options=mode=1777,strictatime,size=2G,noexec,nodev,nosuid",
    "rationale": "Making /tmp its own file system allows an administrator to set the noexec option on the mount, making /tmp useless for an attacker to install executable code. It would also prevent an attacker from establishing a hardlink to a system setuid program and wait for it to be updated. Once the program was updated, the hardlink would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw. This can be accomplished by either mounting tmpfs to /tmp, or creating a separate partition for /tmp.  26 | P a g e Impact: Since the /tmp directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to a separate partition. Running out of /tmp space is a problem regardless of what kind of filesystem lies under it, but in a default installation a disk-based /tmp will essentially have the whole disk available, as it only creates a single / partition. On the other hand, a RAM-based /tmp as with tmpfs will almost certainly be much smaller, which can lead to applications filling up the filesystem much more easily.",
    "audit": "Run the following command and verify output shows /tmp is mounted: # mount | grep -E '\\s/tmp\\s' tmpfs on /tmp type tmpfs (rw,nosuid,nodev,noexec,relatime) If /etc/fstab is used: • Run the following command and verify that tmpfs has been mounted to, or a system partition has been created for /tmp # grep -E '\\s/tmp\\s' /etc/fstab | grep -E -v '^\\s*#' tmpfs   /tmp    tmpfs   defaults,noexec,nosuid,nodev 0   0 OR If systemd tmp.mount file is used: • Run the following command and verify that tmp.mount is enabled: # systemctl is-enabled tmp.mount enabled   27 | P a g e",
    "remediation": "Create or update an entry for /tmp in either /etc/fstab OR in a systemd tmp.mount file: If /etc/fstab is used: • Configure /etc/fstab as appropriate. Example: tmpfs /tmp tmpfs     defaults,rw,nosuid,nodev,noexec,relatime  0 0 • Run the following command to remount /tmp # mount -o remount,noexec,nodev,nosuid /tmp OR If an explicit systemd target is used to mount /tmp: • Run the following command to create the file /etc/systemd/system/tmp.mount if it doesn't exist: # [ ! -f /etc/systemd/system/tmp.mount ] && cp -v /usr/share/systemd/tmp.mount /etc/systemd/system/ • Edit the file /etc/systemd/system/tmp.mount: Example tmp.mount file: #  This file is part of systemd. # [Unit] Description=Temporary Directory (/tmp) Documentation=man:hier(7) Documentation=https://www.freedesktop.org/wiki/Software/systemd/APIFileSystem s ConditionPathIsSymbolicLink=!/tmp DefaultDependencies=no Conflicts=umount.target Before=local-fs.target umount.target After=swap.target [Mount] What=tmpfs Where=/tmp Type=tmpfs Options=mode=1777,strictatime,nosuid,nodev,nosuid [Install] WantedBy=local-fs.target  28 | P a g e • Run the following command to reload the systemd daemon: # systemctl daemon-reload • Run the following command to unmask tmp.mount: # systemctl unmask tmp.mount • Run the following command to enable and start tmp.mount: # systemctl enable --now tmp.mount References: 1. AJ Lewis, \"LVM HOWTO\", http://tldp.org/HOWTO/LVM-HOWTO/ 2. https://www.freedesktop.org/wiki/Software/systemd/APIFileSystems/",
    "impact": "Since the /tmp directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to a separate partition. Running out of /tmp space is a problem regardless of what kind of filesystem lies under it, but in a default installation a disk-based /tmp will essentially have the whole disk available, as it only creates a single / partition. On the other hand, a RAM-based /tmp as with tmpfs will almost certainly be much smaller, which can lead to applications filling up the filesystem much more easily.",
    "references": "1. AJ Lewis, \"LVM HOWTO\", http://tldp.org/HOWTO/LVM-HOWTO/ 2. https://www.freedesktop.org/wiki/Software/systemd/APIFileSystems/",
    "function_names": [
      "system_tmp_noexec_enabled",
      "system_tmp_nodev_enabled",
      "system_tmp_nosuid_enabled",
      "system_tmp_strictatime_enabled",
      "system_tmp_size_configured",
      "system_tmp_fstab_configured",
      "system_tmp_mount_configured",
      "system_tmp_world_writable_restricted",
      "system_tmp_tmpfs_resized",
      "system_tmp_ram_size_limited"
    ]
  },
  {
    "id": "1.1.3",
    "title": "Ensure noexec option set on /tmp partition",
    "assessment": "Automated",
    "description": "The noexec mount option specifies that the filesystem cannot contain executable binaries.",
    "rationale": "Since the /tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from /tmp .",
    "audit": "Verify that the noexec option is set if a /tmp partition exists Run the following command and verify that nothing is returned: # mount | grep -E '\\s/tmp\\s' | grep -v noexec   30 | P a g e",
    "remediation": "Edit the /etc/fstab file OR the /etc/systemd/system/local- fs.target.wants/tmp.mount file: IF /etc/fstab is used to mount /tmp Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /tmp partition. See the fstab(5) manual page for more information. Run the following command to remount /tmp : # mount -o remount,noexec /tmp OR If an explicit systemd target is used to mount /tmp: Edit /etc/systemd/system/local-fs.target.wants/tmp.mount to add noexec to the /tmp mount options: [Mount] Options=mode=1777,strictatime,noexec,nodev,nosuid Run the following command to restart the systemd daemon: #  systemctl daemon-reload Run the following command to restart tmp.mount # systemctl restart tmp.mount Additional Information: These remediation steps are based on following the remediation guidance in item 1.1.2. If a different file name was used that name should replace tmp.mount in the path /etc/systemd/system/local-fs.target.wants/tmp.mount The contents of /etc/systemd/system/local-fs.target.wants should exist as a symlink to the file created in /etc/systemd/system. If the path /etc/systemd/system/local-fs.target.wants/tmp.mount does not exist this could indicate that the remediation steps from 1.1.2 were not completed successfully.  31 | P a g e",
    "function_names": [
      "compute_tmp_partition_noexec_enabled",
      "filesystem_tmp_noexec_enabled",
      "linux_tmp_mount_noexec_enabled",
      "os_tmp_partition_noexec_enabled",
      "storage_tmp_noexec_enabled"
    ]
  },
  {
    "id": "1.1.4",
    "title": "Ensure nodev option set on /tmp partition",
    "assessment": "Automated",
    "description": "The nodev mount option specifies that the filesystem cannot contain special devices.",
    "rationale": "Since the /tmp filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create block or character special devices in /tmp .",
    "audit": "Verify that the nodev option is set if a /tmp partition exists Run the following command and verify that nothing is returned: # mount | grep -E '\\s/tmp\\s' | grep -v nodev   33 | P a g e",
    "remediation": "Edit the /etc/fstab file OR the /etc/systemd/system/local- fs.target.wants/tmp.mount file: IF /etc/fstab is used to mount /tmp: Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /tmp partition. See the fstab(5) manual page for more information. Run the following command to remount /tmp : # mount -o remount,nodev /tmp OR If an explicit systemd target is used to mount /tmp: Edit /etc/systemd/system/local-fs.target.wants/tmp.mount to add nodev to the /tmp mount options: [Mount] Options=mode=1777,strictatime,noexec,nodev,nosuid Run the following command to restart the systemd daemon: #  systemctl daemon-reload Run the following command to restart tmp.mount # systemctl restart tmp.mount Additional Information: These remediation steps are based on following the remediation guidance in item 1.1.2. If a different file name was used that name should replace tmp.mount in the path /etc/systemd/system/local-fs.target.wants/tmp.mount The contents of /etc/systemd/system/local-fs.target.wants should exist as a symlink to the file created in /etc/systemd/system. If the path /etc/systemd/system/local-fs.target.wants/tmp.mount does not exist this could indicate that the remediation steps from 1.1.2 were not completed successfully.  34 | P a g e",
    "function_names": [
      "filesystem_tmp_nodev_enabled",
      "filesystem_tmp_partition_nodev_set",
      "filesystem_tmp_mount_nodev_required",
      "filesystem_tmp_nodev_option_configured",
      "filesystem_tmp_nodev_restriction_enabled"
    ]
  },
  {
    "id": "1.1.5",
    "title": "Ensure nosuid option set on /tmp partition",
    "assessment": "Automated",
    "description": "The nosuid mount option specifies that the filesystem cannot contain setuid files.",
    "rationale": "Since the /tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot create setuid files in /tmp.",
    "audit": "Verify that the nosuid option is set if a /tmp partition exists Run the following command and verify that nothing is returned: # mount | grep -E '\\s/tmp\\s' | grep -v nosuid   36 | P a g e",
    "remediation": "IF /etc/fstab is used to mount /tmp Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /tmp partition. See the fstab(5) manual page for more information. Run the following command to remount /tmp : # mount -o remount,nosuid /tmp OR If an explicit systemd target is used to mount /tmp: Edit /etc/systemd/system/local-fs.target.wants/tmp.mount to add nosuid to the /tmp mount options: [Mount] Options=mode=1777,strictatime,noexec,nodev,nosuid Run the following command to restart the systemd daemon: #  systemctl daemon-reload Run the following command to restart tmp.mount: # systemctl restart tmp.mount Additional Information: These remediation steps are based on following the remediation guidance in item 1.1.2. If a different file name was used that name should replace tmp.mount in the path /etc/systemd/system/local-fs.target.wants/tmp.mount The contents of /etc/systemd/system/local-fs.target.wants should exist as a symlink to the file created in /etc/systemd/system. If the path /etc/systemd/system/local-fs.target.wants/tmp.mount does not exist this could indicate that the remediation steps from 1.1.2 were not completed successfully.  37 | P a g e",
    "function_names": [
      "compute_tmp_partition_nosuid_enabled",
      "filesystem_tmp_nosuid_set",
      "linux_tmp_mount_nosuid_configured",
      "os_tmp_partition_nosuid_required",
      "storage_tmp_nosuid_option_enabled"
    ]
  },
  {
    "id": "1.1.6",
    "title": "Ensure /dev/shm is configured",
    "assessment": "Automated",
    "description": "/dev/shm is a traditional shared memory concept. One program will create a memory portion, which other processes (if permitted) can access. If /dev/shm is not configured, tmpfs will be mounted to /dev/shm by systemd. Notes: • An entry for /dev/shm in /etc/fstab will take precedence. • tmpfs can be resized using the size={size} parameter in /etc/fstab. If we don't specify the size, it will be half the RAM. Resize tmpfs example: tmpfs   /dev/shm    tmpfs   defaults,noexec,nodev,nosuid,size=2G  0   0",
    "rationale": "Any user can upload and execute files inside the /dev/shm similar to the /tmp partition. Configuring /dev/shm allows an administrator to set the noexec option on the mount, making /dev/shm useless for an attacker to install executable code. It would also prevent an attacker from establishing a hardlink to a system setuid program and wait for it to be updated. Once the program was updated, the hardlink would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.",
    "audit": "Run the following command and verify output shows /dev/shm is mounted: # mount | grep -E '\\s/dev/shm\\s' tmpfs on /dev/shm type tmpfs (rw,nosuid,nodev,noexec) Run the following command and verify an entry for /dev/shm exists in /etc/fstab: # grep -E '\\s/dev/shm\\s' /etc/fstab tmpfs /dev/shm tmpfs defaults,noexec,nodev,nosuid 0 0   39 | P a g e",
    "remediation": "Edit /etc/fstab and add or edit the following line: tmpfs      /dev/shm    tmpfs   defaults,noexec,nodev,nosuid   0 0 Run the following command to remount /dev/shm: # mount -o remount,noexec,nodev,nosuid /dev/shm",
    "function_names": [
      "system_dev_shm_configured",
      "system_dev_shm_tmpfs_mounted",
      "system_dev_shm_fstab_entry_present",
      "system_dev_shm_noexec_enabled",
      "system_dev_shm_nodev_enabled",
      "system_dev_shm_nosuid_enabled",
      "system_dev_shm_size_configured",
      "system_dev_shm_size_limited",
      "system_dev_shm_systemd_override_disabled"
    ]
  },
  {
    "id": "1.1.7",
    "title": "Ensure noexec option set on /dev/shm partition",
    "assessment": "Automated",
    "description": "The noexec mount option specifies that the filesystem cannot contain executable binaries. Note: /dev/shm is mounted automatically by systemd. /dev/shm needs to be added to /etc/fstab to add mount options even though it is already being mounted on boot.",
    "rationale": "Setting this option on a file system prevents users from executing programs from shared memory. This deters users from introducing potentially malicious software on the system.",
    "audit": "Run the following command to verify that the noexec option is set: # mount | grep -E '\\s/dev/shm\\s' | grep -v noexec Nothing should be returned",
    "remediation": "Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information. Run the following command to remount /dev/shm: # mount -o remount,noexec,nodev,nosuid /dev/shm",
    "function_names": [
      "compute_dev_shm_noexec_enabled",
      "compute_dev_shm_noexec_fstab_configured",
      "compute_dev_shm_noexec_mount_option_set",
      "compute_dev_shm_noexec_systemd_configured",
      "compute_dev_shm_noexec_boot_persistent"
    ]
  },
  {
    "id": "1.1.8",
    "title": "Ensure nodev option set on /dev/shm partition",
    "assessment": "Automated",
    "description": "The nodev mount option specifies that the filesystem cannot contain special devices. Note: /dev/shm is mounted automatically by systemd. /dev/shm needs to be added to /etc/fstab to add mount options even though it is already being mounted on boot.",
    "rationale": "Since the /dev/shm filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create special devices in /dev/shm partitions.",
    "audit": "Run the following command to verify that the nodev option is set: # mount | grep -E '\\s/dev/shm\\s' | grep -v nodev Nothing should be returned",
    "remediation": "Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information. Run the following command to remount /dev/shm: # mount -o remount,noexec,nodev,nosuid /dev/shm",
    "function_names": [
      "filesystem_shm_nodev_enabled",
      "filesystem_shm_mount_option_nodev",
      "filesystem_shm_fstab_nodev_configured",
      "filesystem_shm_partition_nodev_set",
      "filesystem_shm_systemd_nodev_configured"
    ]
  },
  {
    "id": "1.1.9",
    "title": "Ensure nosuid option set on /dev/shm partition",
    "assessment": "Automated",
    "description": "The nosuid mount option specifies that the filesystem cannot contain setuid files. Note: /dev/shm is mounted automatically by systemd. /dev/shm needs to be added to /etc/fstab to add mount options even though it is already being mounted on boot.",
    "rationale": "Setting this option on a file system prevents users from introducing privileged programs onto the system and allowing non-root users to execute them.",
    "audit": "Run the following command to verify that the nosuid option is set: # mount | grep -E '\\s/dev/shm\\s' | grep -v nosuid",
    "remediation": "Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information. Run the following command to remount /dev/shm: # mount -o remount,noexec,nodev,nosuid /dev/shm",
    "function_names": [
      "system_filesystem_nosuid_enabled",
      "system_shm_partition_nosuid_set",
      "system_fstab_shm_nosuid_configured",
      "system_mount_nosuid_option_enabled",
      "system_dev_shm_nosuid_enforced"
    ]
  },
  {
    "id": "1.1.10",
    "title": "Ensure separate partition exists for /var",
    "assessment": "Automated",
    "description": "The /var directory is used by daemons and other system services to temporarily store dynamic data. Some directories created by these processes may be world-writable. Note: When modifying /var it is advisable to bring the system to emergency mode (so auditd is not running), rename the existing directory, mount the new file system, and migrate the data over before returning to multiuser mode.",
    "rationale": "Since the /var directory may contain world-writable files and directories, there is a risk of resource exhaustion if it is not bound to a separate partition. Impact: Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.",
    "audit": "Run the following command and verify output shows /var is mounted: # mount | grep -E '\\s/var\\s' /dev/xvdg1 on /var type ext4 (rw,relatime,data=ordered)",
    "remediation": "For new installations, during installation create a custom partition setup and specify a separate partition for /var . For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate. References: 1. AJ Lewis, \"LVM HOWTO\", http://tldp.org/HOWTO/LVM-HOWTO/  44 | P a g e",
    "impact": "Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.",
    "references": "1. AJ Lewis, \"LVM HOWTO\", http://tldp.org/HOWTO/LVM-HOWTO/  44 | P a g e",
    "function_names": [
      "compute_volume_var_partition_exists",
      "compute_volume_var_separate_partition",
      "compute_volume_var_dedicated_partition",
      "compute_volume_var_mount_point_configured",
      "compute_volume_var_filesystem_isolated",
      "compute_volume_var_storage_segregated",
      "compute_volume_var_directory_partitioned",
      "compute_volume_var_mount_config_valid"
    ]
  },
  {
    "id": "1.1.11",
    "title": "Ensure separate partition exists for /var/tmp",
    "assessment": "Automated",
    "description": "The /var/tmp directory is a world-writable directory used for temporary storage by all users and some applications and is intended for temporary files that are preserved across reboots. Note: tmpfs should not be used for /var/tmp/. tmpfs is a temporary filesystem that resides in memory and/or swap partition(s). Files in tmpfs are automatically cleared at each bootup.",
    "rationale": "Since the /var/tmp directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to a separate partition. In addition, making /var/tmp its own file system allows an administrator to set the noexec option on the mount, making /var/tmp useless for an attacker to install executable code. It would also prevent an attacker from establishing a hardlink to a system setuid program and wait for it to be updated. Once the program was updated, the hardlink would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw. Impact: Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.",
    "audit": "Run the following command and verify output shows /var/tmp is mounted: # mount | grep /var/tmp <device> on /var/tmp type ext4 (rw,nosuid,nodev,noexec,relatime)   46 | P a g e",
    "remediation": "For new installations, during installation create a custom partition setup and specify a separate partition for /var/tmp . For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.",
    "impact": "Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.",
    "function_names": [
      "compute_volume_var_tmp_separate_partition",
      "compute_volume_var_tmp_no_tmpfs",
      "compute_volume_var_tmp_persistent_storage",
      "compute_volume_var_tmp_reboot_persistent",
      "compute_volume_var_tmp_world_writable_secure"
    ]
  },
  {
    "id": "1.1.12",
    "title": "Ensure noexec option set on /var/tmp partition",
    "assessment": "Automated",
    "description": "The noexec mount option specifies that the filesystem cannot contain executable binaries.",
    "rationale": "Since the /var/tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from /var/tmp .",
    "audit": "If a /var/tmp partition exists: Run the following command to verify that the noexec option is set: # mount | grep -E '\\s/var/tmp\\s' | grep -v noexec Nothing should be returned",
    "remediation": "Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/tmp partition. See the fstab(5) manual page for more information. Run the following command to remount /var/tmp : # mount -o remount,noexec /var/tmp",
    "function_names": [
      "compute_filesystem_noexec_enabled",
      "compute_var_tmp_partition_noexec_enabled",
      "filesystem_mount_noexec_enabled",
      "filesystem_var_tmp_noexec_enabled",
      "linux_filesystem_noexec_var_tmp",
      "linux_partition_noexec_var_tmp",
      "os_filesystem_noexec_var_tmp",
      "os_mount_noexec_var_tmp"
    ]
  },
  {
    "id": "1.1.13",
    "title": "Ensure nodev option set on /var/tmp partition",
    "assessment": "Automated",
    "description": "The nodev mount option specifies that the filesystem cannot contain special devices.",
    "rationale": "Since the /var/tmp filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create block or character special devices in /var/tmp .",
    "audit": "If a /var/tmp partition exists: Run the following command to verify that the nodev option is set: # mount | grep -E '\\s/var/tmp\\s' | grep -v nodev Nothing should be returned",
    "remediation": "Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/tmp partition. See the fstab(5) manual page for more information. Run the following command to remount /var/tmp : # mount -o remount,nodev /var/tmp",
    "function_names": [
      "compute_filesystem_nodev_enabled",
      "compute_var_tmp_nodev_enabled",
      "filesystem_mount_nodev_enabled",
      "filesystem_var_tmp_nodev_enabled",
      "linux_filesystem_nodev_enabled",
      "linux_var_tmp_nodev_enabled",
      "os_filesystem_nodev_enabled",
      "os_var_tmp_nodev_enabled"
    ]
  },
  {
    "id": "1.1.14",
    "title": "Ensure nosuid option set on /var/tmp partition",
    "assessment": "Automated",
    "description": "The nosuid mount option specifies that the filesystem cannot contain setuid files.",
    "rationale": "Since the /var/tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot create setuid files in /var/tmp .",
    "audit": "If a /var/tmp partition exists: Run the following command to verify that that the nosuid option is set: # mount | grep -E '\\s/var/tmp\\s' | grep -v nosuid Nothing should be returned",
    "remediation": "Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/tmp partition. See the fstab(5) manual page for more information. Run the following command to remount /var/tmp : # mount -o remount,nosuid /var/tmp",
    "function_names": [
      "filesystem_var_tmp_nosuid_enabled",
      "filesystem_var_tmp_nosuid_set",
      "filesystem_var_tmp_nosuid_configured",
      "filesystem_var_tmp_nosuid_mount_option",
      "filesystem_var_tmp_nosuid_enforced"
    ]
  },
  {
    "id": "1.1.15",
    "title": "Ensure separate partition exists for /var/log",
    "assessment": "Automated",
    "description": "The /var/log directory is used by system services to store log data.",
    "rationale": "There are two important reasons to ensure that system logs are stored on a separate partition: protection against resource exhaustion (since logs can grow quite large) and protection of audit data. Note: When modifying /var/log it is advisable to bring the system to emergency mode (so auditd is not running), rename the existing directory, mount the new file system, and migrate the data over before returning to multiuser mode. Impact: Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.",
    "audit": "Run the following command and verify output shows /var/log is mounted: # mount | grep -E '\\s/var/log\\s' <device> on /var/log type ext4 (rw,nosuid,nodev,noexec,relatime)",
    "remediation": "For new installations, during installation create a custom partition setup and specify a separate partition for /var/log . For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate. References: 1. AJ Lewis, \"LVM HOWTO\", http://tldp.org/HOWTO/LVM-HOWTO/  51 | P a g e",
    "impact": "Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.",
    "references": "1. AJ Lewis, \"LVM HOWTO\", http://tldp.org/HOWTO/LVM-HOWTO/  51 | P a g e",
    "function_names": [
      "compute_volume_var_log_separate_partition",
      "compute_volume_var_log_dedicated_partition",
      "compute_volume_var_log_isolated_partition",
      "compute_volume_var_log_independent_partition",
      "compute_volume_var_log_standalone_partition"
    ]
  },
  {
    "id": "1.1.16",
    "title": "Ensure separate partition exists for /var/log/audit",
    "assessment": "Automated",
    "description": "The auditing daemon, auditd , stores log data in the /var/log/audit directory. Note: When modifying /var/log/audit it is advisable to bring the system to emergency mode (so auditd is not running), rename the existing directory, mount the new file system, and migrate the data over before returning to multiuser mode.",
    "rationale": "There are two important reasons to ensure that data gathered by auditd is stored on a separate partition: protection against resource exhaustion (since the audit.log file can grow quite large) and protection of audit data. The audit daemon calculates how much free space is left and performs actions based on the results. If other processes (such as syslog ) consume space in the same partition as auditd , it may not perform as desired. Impact: Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.",
    "audit": "Run the following command and verify output shows /var/log/audit is mounted: # mount | grep /var/log/audit /dev/xvdi1 on /var/log/audit type ext4 (rw,relatime,data=ordered)",
    "remediation": "For new installations, during installation create a custom partition setup and specify a separate partition for /var/log/audit . For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.  53 | P a g e References: 1. AJ Lewis, \"LVM HOWTO\", http://tldp.org/HOWTO/LVM-HOWTO/",
    "impact": "Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.",
    "references": "1. AJ Lewis, \"LVM HOWTO\", http://tldp.org/HOWTO/LVM-HOWTO/",
    "function_names": [
      "audit_log_partition_exists",
      "audit_log_separate_partition",
      "auditd_log_partition_configured",
      "var_log_audit_partition_exists",
      "audit_log_directory_partitioned",
      "auditd_log_storage_separate_partition",
      "audit_log_volume_isolated",
      "var_log_audit_mount_point_exists"
    ]
  },
  {
    "id": "1.1.17",
    "title": "Ensure separate partition exists for /home",
    "assessment": "Automated",
    "description": "The /home directory is used to support disk storage needs of local users.",
    "rationale": "If the system is intended to support local users, create a separate partition for the /home directory to protect against resource exhaustion and restrict the type of files that can be stored under /home . Impact: Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.",
    "audit": "Run the following command and verify output shows /home is mounted: # mount | grep /home /dev/xvdf1 on /home type ext4 (rw,nodev,relatime,data=ordered)",
    "remediation": "For new installations, during installation create a custom partition setup and specify a separate partition for /home . For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate. References: 1. AJ Lewis, \"LVM HOWTO\", http://tldp.org/HOWTO/LVM-HOWTO/   55 | P a g e",
    "impact": "Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.",
    "references": "1. AJ Lewis, \"LVM HOWTO\", http://tldp.org/HOWTO/LVM-HOWTO/   55 | P a g e",
    "function_names": [
      "compute_volume_home_partition_exists",
      "compute_volume_home_separate_partition",
      "compute_volume_home_dedicated_partition",
      "compute_volume_home_partition_configured",
      "compute_volume_home_partition_isolated",
      "compute_volume_home_partition_mounted",
      "compute_volume_home_partition_present",
      "compute_volume_home_partition_required"
    ]
  },
  {
    "id": "1.1.18",
    "title": "Ensure nodev option set on /home partition",
    "assessment": "Automated",
    "description": "The nodev mount option specifies that the filesystem cannot contain special devices. Note: The actions in this recommendation refer to the /home partition, which is the default user partition. If you have created other user partitions, it is recommended that the Remediation and Audit steps be applied to these partitions as well.",
    "rationale": "Since the user partitions are not intended to support devices, set this option to ensure that users cannot attempt to create block or character special devices.",
    "audit": "If a /home partition exists: Run the following command to verify that that the nodev option is set: # mount | grep -E '\\s/home\\s' | grep -v nodev Nothing should be returned",
    "remediation": "Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /home partition. See the fstab(5) manual page for more information. Run the following command to remount /home/ with the nodev mount option: # mount -o remount,nodev /home   57 | P a g e",
    "function_names": [
      "filesystem_home_partition_nodev_enabled",
      "filesystem_home_partition_nodev_set",
      "filesystem_user_partition_nodev_enabled",
      "filesystem_user_partition_nodev_set"
    ]
  },
  {
    "id": "1.1.19",
    "title": "Ensure noexec option set on removable media partitions",
    "assessment": "Manual",
    "description": "The noexec mount option specifies that the filesystem cannot contain executable binaries.",
    "rationale": "Setting this option on a file system prevents users from executing programs from the removable media. This deters users from being able to introduce potentially malicious software on the system.",
    "audit": "Run the following command and verify that the noexec option is set on all removable media partitions. # mount",
    "remediation": "Edit the /etc/fstab file and add noexec to the fourth field (mounting options) of all removable media partitions. Look for entries that have mount points that contain words such as floppy or cdrom. See the fstab(5) manual page for more information.",
    "function_names": [
      "compute_removable_media_noexec_enabled",
      "storage_removable_partition_noexec_enabled",
      "filesystem_removable_media_noexec_set",
      "os_removable_media_noexec_enforced",
      "mount_removable_partition_noexec_required"
    ]
  },
  {
    "id": "1.1.20",
    "title": "Ensure nodev option set on removable media partitions",
    "assessment": "Manual",
    "description": "The nodev mount option specifies that the filesystem cannot contain special devices.",
    "rationale": "Removable media containing character and block special devices could be used to circumvent security controls by allowing non-root users to access sensitive device files such as /dev/kmem or the raw disk partitions.",
    "audit": "Run the following command and verify that the nodev option is set on all removable media partitions. # mount",
    "remediation": "Edit the /etc/fstab file and add nodev to the fourth field (mounting options) of all removable media partitions. Look for entries that have mount points that contain words such as floppy or cdrom. See the fstab(5) manual page for more information.",
    "function_names": [
      "compute_removable_media_nodev_enabled",
      "filesystem_removable_partition_nodev_enabled",
      "storage_removable_media_nodev_set",
      "mount_removable_partition_nodev_enabled",
      "linux_removable_media_nodev_enabled"
    ]
  },
  {
    "id": "1.1.21",
    "title": "Ensure nosuid option set on removable media partitions",
    "assessment": "Manual",
    "description": "The nosuid mount option specifies that the filesystem cannot contain setuid files.",
    "rationale": "Setting this option on a file system prevents users from introducing privileged programs onto the system and allowing non-root users to execute them.",
    "audit": "Run the following command and verify that the nosuid option is set on all removable media partitions. # mount",
    "remediation": "Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) of all removable media partitions. Look for entries that have mount points that contain words such as floppy or cdrom. See the fstab(5) manual page for more information.",
    "function_names": [
      "filesystem_removable_media_nosuid_enabled",
      "filesystem_partition_nosuid_set",
      "mount_removable_media_nosuid_enabled",
      "storage_removable_media_nosuid_enabled",
      "partition_removable_nosuid_set"
    ]
  },
  {
    "id": "1.1.22",
    "title": "Ensure sticky bit is set on all world-writable directories",
    "assessment": "Automated",
    "description": "Setting the sticky bit on world writable directories prevents users from deleting or renaming files in that directory that are not owned by them.",
    "rationale": "This feature prevents the ability to delete or rename files in world writable directories (such as /tmp ) that are owned by another user.",
    "audit": "Run the following command to verify no world writable directories exist without the sticky bit set: # df --local -P 2> /dev/null | awk '{if (NR!=1) print $6}' | xargs -I '{}' find '{}' -xdev -type d \\( -perm -0002 -a ! -perm -1000 \\) 2>/dev/null No output should be returned.",
    "remediation": "Run the following command to set the sticky bit on all world writable directories: # df --local -P | awk '{if (NR!=1) print $6}' | xargs -I '{}' find '{}' -xdev -type d \\( -perm -0002 -a ! -perm -1000 \\) 2>/dev/null | xargs -I '{}' chmod a+t '{}'   62 | P a g e",
    "function_names": [
      "filesystem_directory_sticky_bit_set",
      "filesystem_world_writable_directory_sticky_bit_set",
      "filesystem_directory_world_writable_sticky_bit_set",
      "filesystem_directory_sticky_bit_set_all",
      "filesystem_world_writable_directory_sticky_bit_enabled"
    ]
  },
  {
    "id": "1.1.23",
    "title": "Disable Automounting",
    "assessment": "Automated",
    "description": "autofs allows automatic mounting of devices, typically including CD/DVDs and USB drives. Notes: • Additional methods of disabling a service exist. Consult your distribution documentation for appropriate methods. • This control should align with the tolerance of the use of portable drives and optical media in the organization. o On a server requiring an admin to manually mount media can be part of defense-in-depth to reduce the risk of unapproved software or information being introduced or proprietary software or information being exfiltrated. o If admins commonly use flash drives and Server access has sufficient physical controls, requiring manual mounting may not increase security.",
    "rationale": "With automounting enabled anyone with physical access could attach a USB drive or disc and have its contents available in system even if they lacked permissions to mount it themselves. Impact: The use of portable hard drives is very common for workstation users. If your organization allows the use of portable storage or media on workstations and physical access controls to workstations is considered adequate there is little value add in turning off automounting.",
    "audit": "Run the following command to verify autofs is not enabled: # systemctl is-enabled autofs Verify result is not enabled.",
    "remediation": "Run the following command to mask autofs: # systemctl --now mask autofs  64 | P a g e",
    "impact": "The use of portable hard drives is very common for workstation users. If your organization allows the use of portable storage or media on workstations and physical access controls to workstations is considered adequate there is little value add in turning off automounting.",
    "function_names": [
      "compute_instance_automount_disabled",
      "compute_vm_autofs_disabled",
      "compute_automount_service_disabled",
      "compute_autofs_service_disabled",
      "compute_automount_disabled_all_instances",
      "compute_autofs_disabled_all_vms",
      "compute_automount_disabled_defense_in_depth",
      "compute_autofs_disabled_physical_controls"
    ]
  },
  {
    "id": "1.2.1",
    "title": "Ensure GPG keys are configured",
    "assessment": "Manual",
    "description": "Most packages managers implement GPG key signing to verify package integrity during installation.",
    "rationale": "It is important to ensure that updates are obtained from a valid source to protect against spoofing that could lead to the inadvertent installation of malware on the system.",
    "audit": "Verify GPG keys are configured correctly for your package manager. The following command may provide the needed information: # rpm -q gpg-pubkey --qf '%{name}-%{version}-%{release} --> %{summary}\\n'",
    "remediation": "Update your package manager GPG keys in accordance with site policy.",
    "function_names": [
      "package_manager_gpg_keys_configured",
      "package_manager_repository_gpg_keys_configured",
      "package_manager_package_signature_verified",
      "package_manager_integrity_verification_enabled",
      "package_manager_trusted_keys_configured"
    ]
  },
  {
    "id": "1.2.2",
    "title": "Ensure package manager repositories are configured",
    "assessment": "Manual",
    "description": "Systems need to have package manager repositories configured to ensure they receive the latest patches and updates.",
    "rationale": "If a system's package repositories are misconfigured important patches may not be identified or a rogue repository could introduce compromised software.",
    "audit": "Run the following command to verify repositories are configured correctly: # zypper repos",
    "remediation": "Configure your package manager repositories according to site policy.",
    "function_names": [
      "compute_instance_repositories_configured",
      "compute_image_repositories_configured",
      "compute_template_repositories_configured",
      "compute_vm_repositories_configured",
      "os_package_manager_repositories_configured",
      "os_repositories_configured",
      "os_repositories_up_to_date",
      "os_repositories_secure_sources",
      "os_repositories_signed_packages",
      "os_repositories_https_enabled"
    ]
  },
  {
    "id": "1.2.3",
    "title": "Ensure gpgcheck is globally activated",
    "assessment": "Automated",
    "description": "The gpgcheck option, found in the main section of the /etc/zypp/zypp.conf and individual /etc/zypp/repos.d/*.repo files determines if an RPM package's signature is checked prior to its installation.",
    "rationale": "It is important to ensure that an RPM's package signature is always checked prior to installation to ensure that the software is obtained from a trusted source.",
    "audit": "Run the following command and verify gpgcheck is set to 1: # grep ^\\s*gpgcheck /etc/zypp/zypp.conf gpgcheck=1 Run the following command and verify that all instances of gpgcheck returned are set to 1: # awk -v 'RS=[' -F '\\n' '/\\n\\s*enabled\\s*=\\s*1(\\W.*)?$/ && ! /\\n\\s*gpgcheck\\s*=\\s*1(\\W.*)?$/ { t=substr($1, 1, index($1, \"]\")-1); print t, \"does not have gpgcheck enabled.\" }' /etc/zypp/repos.d/*.repo",
    "remediation": "Edit /etc/zypp/zypp.conf and set 'gpgcheck=1' in the [main] section. Edit any failing files in /etc/zypp/repos.d/*.repo and set all instances of gpgcheck to 1.  69 | P a g e",
    "function_names": [
      "zypp_config_gpgcheck_enabled",
      "zypp_repo_gpgcheck_enabled_all",
      "zypp_main_section_gpgcheck_activated",
      "zypp_repo_files_gpgcheck_activated",
      "zypp_global_gpgcheck_enabled"
    ]
  },
  {
    "id": "1.3.1",
    "title": "Ensure sudo is installed",
    "assessment": "Automated",
    "description": "sudo allows a permitted user to execute a command as the superuser or another user, as specified by the security policy. The invoking user's real (not effective) user ID is used to determine the user name with which to query the security policy.",
    "rationale": "sudo supports a plugin architecture for security policies and input/output logging. Third parties can develop and distribute their own policy and I/O logging plugins to work seamlessly with the sudo front end. The default security policy is sudoers, which is configured via the file /etc/sudoers. The security policy determines what privileges, if any, a user has to run sudo. The policy may require that users authenticate themselves with a password or another authentication mechanism. If authentication is required, sudo will exit if the user's password is not entered within a configurable time limit. This limit is policy-specific.",
    "audit": "Run the following command to verify that sudo is installed: # rpm -q sudo sudo-<VERSION>",
    "remediation": "Run the following command to install sudo. # zypper install sudo References: 1. SUDO(8)   72 | P a g e",
    "references": "1. SUDO(8)   72 | P a g e",
    "function_names": [
      "system_sudo_installed",
      "system_sudo_package_present",
      "system_sudo_version_current",
      "system_sudo_config_valid",
      "system_sudo_privileges_restricted"
    ]
  },
  {
    "id": "1.3.2",
    "title": "Ensure sudo commands use pty",
    "assessment": "Automated",
    "description": "sudo can be configured to run only from a pseudo-pty Note: visudo edits the sudoers file in a safe fashion, analogous to vipw(8). visudo locks the sudoers file against multiple simultaneous edits, provides basic sanity checks, and checks for parse errors. If the sudoers file is currently being edited you will receive a message to try again later. The -f option allows you to tell visudo which file to edit.",
    "rationale": "Attackers can run a malicious program using sudo, which would again fork a background process that remains even when the main program has finished executing. This can be mitigated by configuring sudo to run other commands only from a pseudo-pty, whether I/O logging is turned on or not.",
    "audit": "Run the following command to verify that sudo can only run other commands from a pseudo-pty: # grep -Ei '^\\s*Defaults\\s+([^#]\\S+,\\s*)?use_pty\\b' /etc/sudoers /etc/sudoers.d/* Defaults use_pty",
    "remediation": "Edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo or visudo -f <PATH TO FILE> and add the following line: Defaults use_pty References: 1. SUDO(8)   74 | P a g e",
    "references": "1. SUDO(8)   74 | P a g e",
    "function_names": [
      "sudo_command_pty_enabled",
      "sudoers_file_pty_required",
      "sudo_visudo_pty_enforced",
      "sudo_session_pty_restricted",
      "sudoers_config_pty_mandatory"
    ]
  },
  {
    "id": "1.3.3",
    "title": "Ensure sudo log file exists",
    "assessment": "Automated",
    "description": "sudo can use a custom log file Note: visudo edits the sudoers file in a safe fashion, analogous to vipw(8). visudo locks the sudoers file against multiple simultaneous edits, provides basic sanity checks, and checks for parse errors. If the sudoers file is currently being edited you will receive a message to try again later. The -f option allows you to tell visudo which file to edit.",
    "rationale": "A sudo log file simplifies auditing of sudo commands Impact: Editing the sudo configuration incorrectly can cause sudo to stop functioning",
    "audit": "Verify that sudo has a custom log file configured Run the following command: # grep -Ei '^\\s*Defaults\\s+([^#;]+,\\s*)?logfile\\s*=\\s*(\")?[^#;]+(\")?' /etc/sudoers /etc/sudoers.d/* Defaults logfile=\"/var/log/sudo.log\"",
    "remediation": "Edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo or visudo -f <PATH TO FILE> and add the following line: Defaults  logfile=\"<PATH TO CUSTOM LOG FILE>\" Example Defaults  logfile=\"/var/log/sudo.log\"   76 | P a g e References: 1. SUDO(8) 2. VISUDO(8)",
    "impact": "Editing the sudo configuration incorrectly can cause sudo to stop functioning",
    "references": "1. SUDO(8) 2. VISUDO(8)",
    "function_names": [
      "sudo_sudoers_log_file_exists",
      "sudo_sudoers_log_file_configured",
      "sudo_sudoers_log_file_valid",
      "sudo_sudoers_log_file_writable",
      "sudo_sudoers_log_file_owned_by_root",
      "sudo_sudoers_log_file_permissions_secure",
      "sudo_sudoers_log_file_rotation_enabled",
      "sudo_sudoers_log_file_retention_configured",
      "sudo_sudoers_log_file_audit_enabled",
      "sudo_sudoers_log_file_integrity_verified"
    ]
  },
  {
    "id": "1.4.1",
    "title": "Ensure AIDE is installed",
    "assessment": "Automated",
    "description": "AIDE takes a snapshot of filesystem state including modification times, permissions, and file hashes which can then be used to compare against the current state of the filesystem to detect modifications to the system. Note: The prelinking feature can interfere with AIDE because it alters binaries to speed up their start up times. Run prelink -ua to restore the binaries to their prelinked state, thus avoiding false positives from AIDE.",
    "rationale": "By monitoring the filesystem state compromised files can be detected to prevent or limit the exposure of accidental or malicious misconfigurations or modified binaries.",
    "audit": "Run the following command and verify aide is installed: # rpm -q aide aide-<version>",
    "remediation": "Configure AIDE as appropriate for your environment. Consult the AIDE documentation for options. Run the following command to install AIDE: # zypper install aide Run the following commands to initialize AIDE: # aide --init # mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db   79 | P a g e",
    "function_names": [
      "system_aide_installed",
      "system_aide_snapshot_enabled",
      "system_aide_prelink_disabled",
      "system_aide_integrity_monitoring_enabled",
      "system_aide_config_secure",
      "system_aide_database_initialized",
      "system_aide_cron_job_configured",
      "system_aide_email_alerts_enabled",
      "system_aide_logging_enabled",
      "system_aide_binary_verification_enabled"
    ]
  },
  {
    "id": "1.4.2",
    "title": "Ensure filesystem integrity is regularly checked",
    "assessment": "Automated",
    "description": "Periodic checking of the filesystem integrity is needed to detect changes to the filesystem. Note: The checking in this recommendation occurs every day at 5am. Alter the frequency and time of the checks in compliance with site policy.",
    "rationale": "Periodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion.",
    "audit": "Run the following commands to determine if there is a cron job scheduled to run the aide check. # crontab -u root -l | grep aide # grep -r aide /etc/cron.* /etc/crontab Ensure a cron job in compliance with site policy is returned. OR Run the following commands to verify that aidecheck.service and aidecheck.timer are enabled and aidecheck.timer is running # systemctl is-enabled aidecheck.service # systemctl is-enabled aidecheck.timer # systemctl status aidecheck.timer   81 | P a g e",
    "remediation": "If cron will be used to schedule and run aide check Run the following command: # crontab -u root -e Add the following line to the crontab: 0 5 * * * /usr/bin/aide --check OR If aidecheck.service and aidecheck.timer will be used to schedule and run aide check: Create or edit the file /etc/systemd/system/aidecheck.service and add the following lines: [Unit] Description=Aide Check [Service] Type=simple ExecStart=/usr/bin/aide --check [Install] WantedBy=multi-user.target Create or edit the file /etc/systemd/system/aidecheck.timer and add the following lines: [Unit] Description=Aide check every day at 5AM [Timer] OnCalendar=*-*-* 05:00:00 Unit=aidecheck.service [Install] WantedBy=multi-user.target Run the following commands: # chown root:root /etc/systemd/system/aidecheck.* # chmod 0644 /etc/systemd/system/aidecheck.* # systemctl daemon-reload # systemctl enable aidecheck.service # systemctl --now enable aidecheck.timer   82 | P a g e References: 1. https://github.com/konstruktoid/hardening/blob/master/config/aidecheck.servic e 2. https://github.com/konstruktoid/hardening/blob/master/config/aidecheck.timer",
    "references": "1. https://github.com/konstruktoid/hardening/blob/master/config/aidecheck.servic e 2. https://github.com/konstruktoid/hardening/blob/master/config/aidecheck.timer",
    "function_names": [
      "compute_filesystem_integrity_checked_daily",
      "compute_filesystem_integrity_checked_at_5am",
      "compute_filesystem_integrity_checked_periodically",
      "compute_filesystem_integrity_monitoring_enabled",
      "compute_filesystem_integrity_checks_scheduled",
      "compute_filesystem_integrity_checks_frequency_compliant",
      "compute_filesystem_integrity_checks_time_compliant",
      "compute_filesystem_integrity_checks_policy_compliant"
    ]
  },
  {
    "id": "1.5.1",
    "title": "Ensure bootloader password is set",
    "assessment": "Automated",
    "description": "Setting the boot loader password will require that anyone rebooting the system must enter a password before being able to set command line boot parameters Notes: • This recommendation is designed around the grub2 bootloader, if LILO or another bootloader is in use in your environment enact equivalent settings. Replace `/boot/grub2/grub.cfg with the appropriate grub configuration file for your environment • The information can be placed in any /etc/grub.d file as long as that file is incorporated into grub.cfg o The superuser/user information and password should not be contained in the /etc/grub.d/00_header file. o A custom file, such as /etc/grub.d/40_custom should be used so it is not overwritten should the Grub package be updated.",
    "rationale": "Requiring a boot password upon execution of the boot loader will prevent an unauthorized user from entering boot parameters or changing the boot partition. This prevents users from weakening security (e.g. turning off AppArmor at boot time). Impact: • If password protection is enabled, only the designated superuser can edit a Grub 2 menu item by pressing \"e\" or access the GRUB 2 command line by pressing \"c\" • If GRUB 2 is set up to boot automatically to a password-protected menu entry the user has no option to back out of the password prompt to select another menu entry. Holding the SHIFT key will not display the menu in this case. The user must enter the correct username and password. If unable, the configuration files will have to be edited via the LiveCD or other means to fix the problem • You can add --unrestricted to the menu entries to allow the system to boot without entering a password. Password will still be required to edit menu items.   85 | P a g e",
    "audit": "Run the following commands: # grep \"^\\s*set superusers\" /boot/grub2/grub.cfg set superusers=\"<username>\" # grep \"^\\s*password\" /boot/grub2/grub.cfg password_pbkdf2 <username> <encrypted-password>",
    "remediation": "create an encrypted password with grub2-mkpasswd-pbkdf2: # grub2-mkpasswd-pbkdf2 Enter password: <password> Reenter password: <password> Your PBKDF2 is <encrypted-password> Add the following into /etc/grub.d/40_custom set superusers=\"<username>\" password_pbkdf2 <username> <encrypted-password> Run the following command to update the grub2 configuration: # grub2-mkconfig -o /boot/grub2/grub.cfg References: 1. https://documentation.suse.com/sles/12-SP5/html/SLES-all/cha-grub2.html",
    "impact": "• If password protection is enabled, only the designated superuser can edit a Grub 2 menu item by pressing \"e\" or access the GRUB 2 command line by pressing \"c\" • If GRUB 2 is set up to boot automatically to a password-protected menu entry the user has no option to back out of the password prompt to select another menu entry. Holding the SHIFT key will not display the menu in this case. The user must enter the correct username and password. If unable, the configuration files will have to be edited via the LiveCD or other means to fix the problem • You can add --unrestricted to the menu entries to allow the system to boot without entering a password. Password will still be required to edit menu items.   85 | P a g e",
    "references": "1. https://documentation.suse.com/sles/12-SP5/html/SLES-all/cha-grub2.html",
    "function_names": [
      "bootloader_password_set",
      "grub2_password_protected",
      "grub_cfg_password_configured",
      "grub_user_authentication_enabled",
      "bootloader_secure_boot_enabled",
      "grub_custom_file_password_set",
      "bootloader_superuser_password_required",
      "grub2_boot_password_enforced",
      "bootloader_credentials_configured",
      "grub_cfg_custom_password_set"
    ]
  },
  {
    "id": "1.5.2",
    "title": "Ensure permissions on bootloader config are configured",
    "assessment": "Automated",
    "description": "The grub configuration file contains information on boot settings and passwords for unlocking boot options. The grub2 configuration is usually grub.cfg stored in /boot/grub2/. Notes: • This recommendation is designed around the grub2 bootloader. • If LILO or another bootloader is in use in your environment: o Enact equivalent settings o Replace /boot/grub2/grub.cfg and /boot/grub2/user.cfg with the appropriate boot configuration files for your environment",
    "rationale": "Setting the permissions to read and write for root only prevents non-root users from seeing the boot parameters or changing them. Non-root users who read the boot parameters may be able to identify weaknesses in security upon boot and be able to exploit them.",
    "audit": "Run the following command and verify Uid and Gid are 0/root and Access does not grant permissions to group or other : # stat /boot/grub2/grub.cfg Access: (0600/-rw-------)  Uid: (    0/    root)   Gid: (    0/    root)",
    "remediation": "Run the following commands to set ownership and permissions on your grub configuration: # chown root:root /boot/grub2/grub.cfg # chmod og-rwx /boot/grub2/grub.cfg   87 | P a g e",
    "function_names": [
      "bootloader_grub_cfg_permissions_configured",
      "bootloader_user_cfg_permissions_configured",
      "bootloader_config_file_ownership_correct",
      "bootloader_config_file_group_ownership_correct",
      "bootloader_config_file_world_readable_disabled",
      "bootloader_config_file_world_writable_disabled",
      "bootloader_config_file_world_executable_disabled",
      "bootloader_config_file_restrictive_permissions",
      "bootloader_config_file_no_unauthorized_access",
      "bootloader_config_file_secure_ownership"
    ]
  },
  {
    "id": "1.5.3",
    "title": "Ensure authentication required for single user mode",
    "assessment": "Automated",
    "description": "Single user mode (rescue mode) is used for recovery when the system detects an issue during boot or by manual selection from the bootloader.",
    "rationale": "Requiring authentication in single user mode (rescue mode) prevents an unauthorized user from rebooting the system into single user to gain root privileges without credentials.",
    "audit": "Run the following commands and verify that /sbin/sulogin or /usr/sbin/sulogin is used as shown: # grep sulogin /usr/lib/systemd/system/rescue.service ExecStart=-/bin/sh -c \"/usr/sbin/sulogin; echo 'Starting default target'; /usr/bin/systemctl --job-mode=fail --no-block default\" # grep sulogin /usr/lib/systemd/system/emergency.service ExecStart=-/bin/sh -c \"/usr/sbin/sulogin; echo 'Starting default target'; /usr/bin/systemctl --job-mode=fail --no-block default\"",
    "remediation": "Edit /usr/lib/systemd/system/rescue.service and add/modify the following line: ExecStart=-/bin/sh -c \"/usr/sbin/sulogin; echo 'Starting default target'; /usr/bin/systemctl --job-mode=fail --no-block default\" Edit /usr/lib/systemd/system/emergency.service and add/modify the following line: ExecStart=-/bin/sh -c \"/usr/sbin/sulogin; echo 'Starting default target'; /usr/bin/systemctl --job-mode=fail --no-block default\"   89 | P a g e",
    "function_names": [
      "system_authentication_single_user_mode_required",
      "system_recovery_mode_authentication_enabled",
      "bootloader_single_user_authentication_enforced",
      "rescue_mode_password_protection_required",
      "system_boot_single_user_authentication_enabled"
    ]
  },
  {
    "id": "1.6.1",
    "title": "Ensure core dumps are restricted",
    "assessment": "Automated",
    "description": "A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file. The system provides the ability to set a soft limit for core dumps, but this can be overridden by the user.",
    "rationale": "Setting a hard limit on core dumps prevents users from overriding the soft variable. If core dumps are required, consider setting limits for user groups (see limits.conf(5) ). In addition, setting the fs.suid_dumpable variable to 0 will prevent setuid programs from dumping core.",
    "audit": "Run the following commands and verify output matches: # grep -E \"^\\s*\\*\\s+hard\\s+core\" /etc/security/limits.conf /etc/security/limits.d/* * hard core 0 # sysctl fs.suid_dumpable fs.suid_dumpable = 0 # grep \"fs\\.suid_dumpable\" /etc/sysctl.conf /etc/sysctl.d/* fs.suid_dumpable = 0 Run the following command to check if systemd-coredump is installed: # systemctl is-enabled coredump.service if enabled or disabled is returned systemd-coredump is installed  92 | P a g e",
    "remediation": "Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file: * hard core 0 Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file: fs.suid_dumpable = 0 Run the following command to set the active kernel parameter: # sysctl -w fs.suid_dumpable=0 If systemd-coredump is installed: edit /etc/systemd/coredump.conf and add/modify the following lines: Storage=none ProcessSizeMax=0 Run the command: systemctl daemon-reload",
    "function_names": [
      "system_core_dump_restricted",
      "system_core_dump_soft_limit_set",
      "system_core_dump_hard_limit_set",
      "system_core_dump_user_override_disabled",
      "system_core_dump_storage_disabled",
      "system_core_dump_pattern_restricted",
      "system_core_dump_size_zero",
      "system_core_dump_process_limits_enforced"
    ]
  },
  {
    "id": "1.6.2",
    "title": "Ensure XD/NX support is enabled",
    "assessment": "Automated",
    "description": "Recent processors in the x86 family support the ability to prevent code execution on a per memory page basis. Generically and on AMD processors, this ability is called No Execute (NX), while on Intel processors it is called Execute Disable (XD). This ability can help prevent exploitation of buffer overflow vulnerabilities and should be activated whenever possible. Extra steps must be taken to ensure that this protection is enabled, particularly on 32-bit x86 systems. Other processors, such as Itanium and POWER, have included such support since inception and the standard kernel for those platforms supports the feature.",
    "rationale": "Enabling any feature that can protect against buffer overflow attacks enhances the security of the system. Note: Ensure your system supports the XD or NX bit and has PAE support before implementing this recommendation as this may prevent it from booting if these are not supported by your hardware.",
    "audit": "Run the following command and verify your kernel has identified and activated NX/XD protection. # journalctl | grep 'protection: active' kernel: NX (Execute Disable) protection: active OR On systems without journalctl: # [[ -n $(grep noexec[0-9]*=off /proc/cmdline) || -z $(grep -E -i ' (pae|nx) ' /proc/cpuinfo) || -n $(grep '\\sNX\\s.*\\sprotection:\\s' /var/log/dmesg | grep -v active) ]] && echo \"NX Protection is not active\" Nothing should be returned   94 | P a g e",
    "remediation": "On 32 bit systems install a kernel with PAE support, no installation is required on 64 bit systems: If necessary configure your bootloader to load the new kernel and reboot the system. You may need to enable NX or XD support in your bios.",
    "function_names": [
      "compute_system_xd_nx_support_enabled",
      "compute_system_no_execute_enabled",
      "compute_system_execute_disable_enabled",
      "compute_processor_nx_support_enabled",
      "compute_processor_xd_support_enabled",
      "compute_memory_page_execution_disabled",
      "compute_buffer_overflow_protection_enabled",
      "compute_32bit_system_xd_nx_enabled",
      "compute_kernel_execution_protection_enabled"
    ]
  },
  {
    "id": "1.6.3",
    "title": "Ensure address space layout randomization (ASLR) is enabled",
    "assessment": "Automated",
    "description": "Address space layout randomization (ASLR) is an exploit mitigation technique which randomly arranges the address space of key data areas of a process.",
    "rationale": "Randomly placing virtual memory regions will make it difficult to write memory page exploits as the memory placement will be consistently shifting.",
    "audit": "Run the following commands and verify output matches: # sysctl kernel.randomize_va_space kernel.randomize_va_space = 2 # grep -s -- \"kernel\\.randomize_va_space\" /run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf kernel.randomize_va_space = 2",
    "remediation": "Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file: Example: echo \" kernel.randomize_va_space = 2 \" >> /etc/sysctl.d/50-kernel_sysctl.conf Run the following command to set the active kernel parameter: # sysctl -w kernel.randomize_va_space=2   96 | P a g e",
    "function_names": [
      "compute_instance_aslr_enabled",
      "compute_vm_aslr_enabled",
      "compute_workload_aslr_enabled",
      "compute_process_aslr_enabled",
      "compute_kernel_aslr_enabled",
      "compute_system_aslr_enabled",
      "compute_os_aslr_enabled",
      "compute_memory_aslr_enabled",
      "compute_security_aslr_enabled",
      "compute_exploit_mitigation_aslr_enabled"
    ]
  },
  {
    "id": "1.6.4",
    "title": "Ensure prelink is disabled",
    "assessment": "Automated",
    "description": "prelink is a program that modifies ELF shared libraries and ELF dynamically linked binaries in such a way that the time needed for the dynamic linker to perform relocations at startup significantly decreases.",
    "rationale": "The prelinking feature can interfere with the operation of AIDE, because it changes binaries. Prelinking can also increase the vulnerability of the system if a malicious user is able to compromise a common library such as libc.",
    "audit": "Run the following command to verify that 1prelink` is not installed: # rpm -q prelink package prelink is not installed",
    "remediation": "Run the following command to restore binaries to normal: # prelink -ua Run the following command to uninstall prelink: # zypper remove prelink   98 | P a g e",
    "function_names": [
      "system_prelink_disabled",
      "system_binary_prelink_disabled",
      "system_library_prelink_disabled",
      "system_elf_prelink_disabled",
      "system_executable_prelink_disabled",
      "system_shared_library_prelink_disabled",
      "system_dynamic_linker_prelink_disabled",
      "system_optimization_prelink_disabled"
    ]
  },
  {
    "id": "1.7.1.1",
    "title": "Ensure AppArmor is installed",
    "assessment": "Automated",
    "description": "AppArmor provides Mandatory Access Controls.",
    "rationale": "Without a Mandatory Access Control system installed only the default Discretionary Access Control system will be available.",
    "audit": "Run the following command to verify that the AppArmor packages are installed: # rpm -q apparmor-docs apparmor-parser apparmor-profiles apparmor-utils libapparmor1 apparmor-docs-<version> apparmor-parser-<version> apparmor-profiles-<version> apparmor-utils-<version> libapparmor1-<version>",
    "remediation": "Run the following command to install AppArmor: # zypper install -t pattern apparmor",
    "function_names": [
      "security_app_armor_installed",
      "security_app_armor_enabled",
      "security_app_armor_enforced",
      "security_app_armor_profiles_loaded",
      "security_app_armor_no_unconfined_processes"
    ]
  },
  {
    "id": "1.7.1.2",
    "title": "Ensure AppArmor is enabled in the bootloader configuration",
    "assessment": "Automated",
    "description": "Configure AppArmor to be enabled at boot time and verify that it has not been overwritten by the bootloader boot parameters. Note: This recommendation is designed around the grub2 bootloader, if LILO or another bootloader is in use in your environment enact equivalent settings.",
    "rationale": "AppArmor must be enabled at boot time in your bootloader configuration to ensure that the controls it provides are not overridden.",
    "audit": "Run the following commands to verify that all linux lines have the apparmor=1 and security=apparmor parameters set: # grep \"^\\s*linux\" /boot/grub2/grub.cfg | grep -v \"apparmor=1\" Nothing should be returned # grep \"^\\s*linux\" /boot/grub2/grub.cfg | grep -v \"security=apparmor\" Nothing should be returned",
    "remediation": "Edit /etc/default/grub and add the apparmor=1 and security=apparmor parameters to the GRUB_CMDLINE_LINUX= line GRUB_CMDLINE_LINUX=\"apparmor=1 security=apparmor\" Run the following command to update the grub2 configuration: # grub2-mkconfig -o /boot/grub2/grub.cfg   103 | P a g e",
    "function_names": [
      "bootloader_config_app_armor_enabled",
      "bootloader_config_app_armor_not_overwritten",
      "bootloader_grub2_app_armor_enabled",
      "bootloader_grub2_app_armor_boot_param_secure",
      "bootloader_lilo_app_armor_enabled",
      "bootloader_app_armor_boot_time_enabled"
    ]
  },
  {
    "id": "1.7.1.3",
    "title": "Ensure all AppArmor Profiles are in enforce or complain mode",
    "assessment": "Automated",
    "description": "AppArmor profiles define what resources applications are able to access.",
    "rationale": "Security configuration requirements vary from site to site. Some sites may mandate a policy that is stricter than the default policy, which is perfectly acceptable. This item is intended to ensure that any policies that exist on the system are activated.",
    "audit": "Run the following command and verify that profiles are loaded, profiles are in enforce or complain mode, and no processes are unconfined: # apparmor_status | grep profiles Review output and ensure that profiles are loaded, and in either enforce or complain mode 37 profiles are loaded. 35 profiles are in enforce mode. 2 profiles are in complain mode. 4 processes have profiles defined. Run the following command and verify that no processes are unconfined: # apparmor_status | grep processes Review the output and ensure no processes are unconfined 4 processes have profiles defined. 4 processes are in enforce mode. 0 processes are in complain mode. 0 processes are unconfined but have a profile defined.   105 | P a g e",
    "remediation": "Run one of the following commands to set all profiles to either enforce OR complain mode • Run the following command to set all profiles to enforce mode: # aa-enforce /etc/apparmor.d/* • Run the following command to set all profiles to complain mode: # aa-complain /etc/apparmor.d/* Run the following command to list unconfined processes: # aa-unconfined Any unconfined processes may need to have a profile created or activated for them and then be restarted.",
    "function_names": [
      "apparmor_profile_enforce_mode",
      "apparmor_profile_complain_mode",
      "apparmor_profile_not_unconfined",
      "apparmor_profile_restrictive_mode_enabled"
    ]
  },
  {
    "id": "1.7.1.4",
    "title": "Ensure all AppArmor Profiles are enforcing",
    "assessment": "Automated",
    "description": "AppArmor profiles define what resources applications are able to access.",
    "rationale": "Security configuration requirements vary from site to site. Some sites may mandate a policy that is stricter than the default policy, which is perfectly acceptable. This item is intended to ensure that any policies that exist on the system are activated.",
    "audit": "Run the following command and verify that profiles are loaded, no profiles are in complain mode, and no processes are unconfined: # apparmor_status | grep profiles Review output and ensure that profiles are loaded, and in enforce mode 37 profiles are loaded. 35 profiles are in enforce mode. 2 profiles are in complain mode. 4 processes have profiles defined. Run the following command to verify no processes are unconfined: # apparmor_status | grep processes Review the output and ensure no processes are unconfined: 4 processes have profiles defined. 4 processes are in enforce mode. 0 processes are in complain mode. 0 processes are unconfined but have a profile defined.   107 | P a g e",
    "remediation": "Run the following command to set all profiles to enforce mode: # aa-enforce /etc/apparmor.d/* Run the following command to list unconfined processes: # aa-unconfined Any unconfined processes may need to have a profile created or activated for them and then be restarted.",
    "function_names": [
      "apparmor_profile_enforcing",
      "apparmor_profile_enforcing_all",
      "apparmor_profile_enforcing_active",
      "apparmor_profile_enforcing_compliance",
      "apparmor_profile_enforcing_status"
    ]
  },
  {
    "id": "1.8.1.1",
    "title": "Ensure message of the day is configured properly",
    "assessment": "Automated",
    "description": "The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users. Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \\m - machine architecture \\r - operating system release \\s - operating system name \\v - operating system version",
    "rationale": "Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the \" uname -a \" command once they have logged in.",
    "audit": "Run the following command and verify that the contents match site policy: # cat /etc/motd Run the following command and verify no results are returned: # grep -E -i \"(\\\\\\v|\\\\\\r|\\\\\\m|\\\\\\s|$(grep '^ID=' /etc/os-release | cut -d= - f2 | sed -e 's/\"//g'))\" /etc/motd   111 | P a g e",
    "remediation": "Edit the /etc/motd file with the appropriate contents according to your site policy, remove any instances of \\m , \\r , \\s , \\v or references to the OS platform OR If the motd is not used, this file can be removed. Run the following command to remove the motd file: # rm /etc/motd",
    "function_names": [
      "compute_motd_configured_properly",
      "compute_motd_no_sensitive_info",
      "compute_motd_no_os_details",
      "compute_motd_custom_content",
      "compute_motd_no_default_content"
    ]
  },
  {
    "id": "1.8.1.2",
    "title": "Ensure local login warning banner is configured properly",
    "assessment": "Automated",
    "description": "The contents of the /etc/issue file are displayed to users prior to login for local terminals. Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \\m - machine architecture \\r - operating system release \\s - operating system name \\v - operating system version - or the operating system's name",
    "rationale": "Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the \" uname -a \" command once they have logged in.",
    "audit": "Run the following command and verify that the contents match site policy: # cat /etc/issue Run the following command and verify no results are returned: # grep -E -i \"(\\\\\\v|\\\\\\r|\\\\\\m|\\\\\\s|$(grep '^ID=' /etc/os-release | cut -d= - f2 | sed -e 's/\"//g'))\" /etc/issue",
    "remediation": "Edit the /etc/issue file with the appropriate contents according to your site policy, remove any instances of \\m , \\r , \\s , \\v or references to the OS platform # echo \"Authorized uses only. All activity may be monitored and reported.\" > /etc/issue   113 | P a g e",
    "function_names": [
      "compute_instance_login_banner_configured",
      "compute_instance_issue_file_configured",
      "compute_instance_local_login_banner_configured",
      "compute_instance_os_info_disclosure_disabled",
      "compute_instance_pre_login_banner_configured",
      "compute_instance_warning_banner_configured",
      "compute_instance_issue_file_no_os_details",
      "compute_instance_login_banner_no_os_info"
    ]
  },
  {
    "id": "1.8.1.3",
    "title": "Ensure remote login warning banner is configured properly",
    "assessment": "Automated",
    "description": "The contents of the /etc/issue.net file are displayed to users prior to login for remote connections from configured services. Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \\m - machine architecture \\r - operating system release \\s - operating system name \\v - operating system version",
    "rationale": "Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the \" uname -a \" command once they have logged in.",
    "audit": "Run the following command and verify that the contents match site policy: # cat /etc/issue.net Run the following command and verify no results are returned: # grep -E -i \"(\\\\\\v|\\\\\\r|\\\\\\m|\\\\\\s|$(grep '^ID=' /etc/os-release | cut -d= - f2 | sed -e 's/\"//g'))\" /etc/issue.net",
    "remediation": "Edit the /etc/issue.net file with the appropriate contents according to your site policy, remove any instances of \\m , \\r , \\s , \\v or references to the OS platform # echo \"Authorized uses only. All activity may be monitored and reported.\" > /etc/issue.net  115 | P a g e",
    "function_names": [
      "compute_instance_login_banner_configured",
      "compute_instance_issue_net_banner_configured",
      "compute_instance_remote_login_warning_enabled",
      "compute_instance_os_info_disclosure_disabled",
      "compute_instance_banner_content_compliant",
      "compute_instance_mingetty_options_restricted",
      "compute_instance_os_details_hidden",
      "compute_instance_pre_login_banner_configured"
    ]
  },
  {
    "id": "1.8.1.4",
    "title": "Ensure permissions on /etc/motd are configured",
    "assessment": "Automated",
    "description": "The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users.",
    "rationale": "If the /etc/motd file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information.",
    "audit": "Run the following command and verify Uid and Gid are both 0/root and Access is 644: # stat /etc/motd Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)",
    "remediation": "Run the following commands to set permissions on /etc/motd : # chown root:root /etc/motd # chmod u-x,go-wx /etc/motd",
    "function_names": [
      "compute_file_motd_permissions_configured",
      "compute_file_motd_secure_permissions",
      "compute_file_motd_restricted_access",
      "compute_file_motd_ownership_correct",
      "compute_file_motd_group_ownership_correct",
      "compute_file_motd_read_only",
      "compute_file_motd_no_world_writable",
      "compute_file_motd_no_world_executable"
    ]
  },
  {
    "id": "1.8.1.5",
    "title": "Ensure permissions on /etc/issue are configured",
    "assessment": "Automated",
    "description": "The contents of the /etc/issue file are displayed to users prior to login for local terminals.",
    "rationale": "If the /etc/issue file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information.",
    "audit": "Run the following command and verify Uid and Gid are both 0/root and Access is 644: # stat /etc/issue Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)",
    "remediation": "Run the following commands to set permissions on /etc/issue: # chown root:root /etc/issue # chmod u-x,go-wx /etc/issue",
    "function_names": [
      "system_file_issue_permissions_configured",
      "system_file_issue_read_only",
      "system_file_issue_owner_root",
      "system_file_issue_group_root",
      "system_file_issue_mode_644"
    ]
  },
  {
    "id": "1.8.1.6",
    "title": "Ensure permissions on /etc/issue.net are configured",
    "assessment": "Automated",
    "description": "The contents of the /etc/issue.net file are displayed to users prior to login for remote connections from configured services.",
    "rationale": "If the /etc/issue.net file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information.",
    "audit": "Run the following command and verify Uid and Gid are both 0/root and Access is 644: # stat /etc/issue.net Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)",
    "remediation": "Run the following commands to set permissions on /etc/issue.net: # chown root:root /etc/issue.net # chmod u-x,go-wx /etc/issue.net",
    "function_names": [
      "system_file_issue_net_permissions_configured",
      "system_file_issue_net_secure_permissions",
      "system_file_issue_net_restricted_access",
      "system_file_issue_net_owner_root",
      "system_file_issue_net_group_root",
      "system_file_issue_net_mode_644",
      "system_file_issue_net_no_world_writable",
      "system_file_issue_net_no_unauthorized_access"
    ]
  },
  {
    "id": "1.9",
    "title": "Ensure updates, patches, and additional security software are installed",
    "assessment": "Manual",
    "description": "Periodically patches are released for included software either due to security flaws or to include additional functionality. Note: Site policy may mandate a testing period before install onto production systems for available updates.",
    "rationale": "Newer patches may contain security enhancements that would not be available through the latest full update. As a result, it is recommended that the latest software patches be used to take advantage of the latest functionality. As with any software installation, organizations need to determine if a given update meets their requirements and verify the compatibility and supportability of any additional software against the update revision that is selected.",
    "audit": "Run the following command and verify there are no updates or patches to install: # zypper list-updates",
    "remediation": "Use your package manager to update all packages on the system according to site policy. The following command will install all available updates: # zypper update   120 | P a g e",
    "function_names": [
      "compute_instance_updates_installed",
      "compute_instance_patches_installed",
      "compute_instance_security_software_installed",
      "compute_instance_auto_updates_enabled",
      "compute_instance_patch_compliance",
      "compute_instance_security_updates_installed_over_30d",
      "compute_instance_os_updates_installed",
      "compute_instance_third_party_updates_installed",
      "compute_instance_critical_patches_installed",
      "compute_instance_security_software_up_to_date"
    ]
  },
  {
    "id": "1.10",
    "title": "Ensure GDM is removed or login is configured",
    "assessment": "Automated",
    "description": "The GNOME Display Manager (GDM) handles graphical login for GNOME based systems. Configuration of the GNOME desktop is managed with dconf. It is a hierarchically structured database or registry that allows users to modify their personal settings, and system administrators to set default or mandatory values for all users. Global dconf configuration parameters can be set in the /etc/dconf/db/ directory. This includes the configuration for GDM or locking certain configuration options for users.",
    "rationale": "If a graphical login is not required, it should be removed to reduce the attack surface of the system. If a graphical login is required, last logged in user display should be disabled, and a warning banner should be configured. Displaying the last logged in user eliminates half of the Userid/Password equation that an unauthorized person would need to log on. Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Notes: • This recommendation is based on the gdm profile. If a different profile name is used on the system, update the gdm and gdm.d to <profilee_name> and <profile_name>.d • Additional options and sections may appear in the /etc/dconf/db/gdm.d/01-banner- message and/or /etc/dconf/db/gdm.d/00-login-screen file. • If a different GUI login service is in use and required on the system, consult your documentation to disable displaying the last logged on user and apply an equivalent banner.   122 | P a g e",
    "audit": "Run the following command to verify the GDM is not installed on the system: # rpm -q gdm package gdm is not installed OR If GDM is required: Verify that /etc/dconf/profile/gdm exists and includes the following: user-db:user system-db:gdm file-db:/usr/share/gdm/greeter-dconf-defaults Verify that a file exists in /etc/dconf/db/gdm.d/ and includes the following: (This is typically /etc/dconf/db/gdm.d/01-banner-message) [org/gnome/login-screen] banner-message-enable=true banner-message-text='<banner message>' Verify that a file exists in /etc/dconf/db/gdm.d/ and includes the following: (This is typically /etc/dconf/db/gdm.d/00-login-screen) [org/gnome/login-screen] disable-user-list=true   123 | P a g e",
    "remediation": "Run the following command to remove GDM # zypper remove gdm OR If GDM is required: Edit or create the gdm profile which contains the following lines: (This is typically /etc/dconf/profile/gdm) user-db:user system-db:gdm file-db:/usr/share/gdm/greeter-dconf-defaults Run the following Run to display a login banner: Note: the directory /etc/dconf/db/gdm.d/ may need to be created Edit or create a gdm keyfile for machine-wide settings: (This is typically /etc/dconf/db/gdm.d/01-banner-message) [org/gnome/login-screen] banner-message-enable=true banner-message-text='<banner message>' Example Banner Text: 'Authorized uses only. All activity may be monitored and reported.' Run the following to disable the user list: Edit or create a gdm keyfile for machine-wide settings in the directory /etc/dconf/db/gdm.d/ and add the following: (This is typically /etc/dconf/db/gdm.d/00- login-screen) [org/gnome/login-screen] # Do not show the user list disable-user-list=true Run the following command to update the system databases: # dconf update References: 1. https://documentation.suse.com/en-us/sles/12-SP5/html/SLES-all/cha-x11.html 2. https://help.gnome.org/admin/system-admin-guide/stable  124 | P a g e",
    "references": "1. https://documentation.suse.com/en-us/sles/12-SP5/html/SLES-all/cha-x11.html 2. https://help.gnome.org/admin/system-admin-guide/stable  124 | P a g e",
    "function_names": [
      "gdm_login_configured",
      "gdm_removed",
      "dconf_gdm_settings_configured",
      "gdm_automatic_login_disabled",
      "gdm_xdmcp_disabled",
      "gdm_wayland_enabled",
      "dconf_user_settings_locked",
      "gdm_banner_message_configured",
      "gdm_screen_lock_enabled",
      "gdm_session_idle_delay_configured"
    ]
  },
  {
    "id": "2.1.1",
    "title": "Ensure xinetd is not installed",
    "assessment": "Automated",
    "description": "The eXtended InterNET Daemon ( xinetd ) is an open source super daemon that replaced the original inetd daemon. The xinetd daemon listens for well known services and dispatches the appropriate daemon to properly respond to service requests.",
    "rationale": "If there are no xinetd services required, it is recommended that the package be removed to reduce the attack surface are of the system. Note: If an xinetd service or services are required, ensure that any xinetd service not required is stopped and disabled",
    "audit": "Run the following command to verify xinetd is not installed: # rpm -q xinetd package xinetd is not installed",
    "remediation": "Run the following command to remove xinetd: # zypper remove xinetd   128 | P a g e",
    "function_names": [
      "system_package_xinetd_not_installed",
      "system_service_xinetd_disabled",
      "system_daemon_xinetd_removed",
      "system_software_xinetd_uninstalled",
      "system_process_xinetd_absent"
    ]
  },
  {
    "id": "2.2.1.1",
    "title": "Ensure time synchronization is in use",
    "assessment": "Automated",
    "description": "System time should be synchronized between all systems in an environment. This is typically done by establishing an authoritative time server or set of servers and having all systems synchronize their clocks to them. Notes: • On systems where host based time synchronization is not available, verify that ntp or chrony is installed or systemd-timesyncd is enabled. • On systems where host based time synchronization is available consult your documentation and verify that host based synchronization is in use. • If another method for time synchronization is being used, this section may be skipped.",
    "rationale": "Time synchronization is important to support time sensitive security mechanisms like Kerberos and also ensures log files have consistent time records across the enterprise, which aids in forensic investigations.  132 | P a g e",
    "audit": "On systems where host based time synchronization is not available, verify ntp or chrony is installed OR systemd-timesyncd is enabled: Note: Only one time synchronization package should be installed and/or enabled Run the following command to verify that ntp is installed: # rpm -q ntp ntp-<version> OR Run the following command to verify that chrony is installed: # rpm -q chrony chrony-<version> OR Run the following command to verify that systemd-timesyncd is enabled: # systemctl is-enabled systemd-timesyncd",
    "remediation": "On systems where host based time synchronization is not available, install ntp or chrony OR enable systemd-timesyncd: Run the following command to install ntp: # zypper install ntp OR Run the following command to install chrony: # zypper install chrony OR Run the following command to enable systemd-timesyncd # systemctl enable systemd-timesyncd Note: On systems where host based time synchronization is available consult your virtualization software documentation and setup host based synchronization.  133 | P a g e",
    "function_names": [
      "compute_instance_time_sync_enabled",
      "compute_instance_ntp_installed",
      "compute_instance_chrony_installed",
      "compute_instance_systemd_timesyncd_enabled",
      "compute_instance_host_time_sync_enabled"
    ]
  },
  {
    "id": "2.2.1.2",
    "title": "Ensure systemd-timesyncd is configured",
    "assessment": "Manual",
    "description": "systemd-timesyncd is a daemon that has been added for synchronizing the system clock across the network. The systemd-timesyncd daemon: • Implements an SNTP client. • Only implements a client side o Does not bother with the full NTP complexity o Only on querys time from one remote server, synchronizing the local clock to it • runs with minimal privileges • saves the current clock to disk every time a new NTP sync has been acquired o Uses this to correct the system clock early at bootup o to make sure that time monotonically progresses on these systems, even if it is not always correct • Requires a new system user and group \"systemd-timesync\" to be created on installation of systemd • Hooked up with networkd to only operate when network connectivity is available Notes: • The systemd-timesyncd service specifically implements only SNTP. This minimalistic service will set the system clock for large offsets or slowly adjust it for smaller deltas. More complex use cases are not covered by systemd-timesyncd. • If chrony or ntp are used, systemd-timesyncd should be removed and this section skipped • This recommendation only applies if timesyncd is in use on the system • Only one time synchronization method should be in use on the system",
    "rationale": "Proper configuration is vital to ensuring time synchronization is working properly.  135 | P a g e",
    "audit": "Ensure that timesyncd is enabled and started Run the following command to verify that systemd-timesyncd is enabled: # systemctl is-enabled systemd-timesyncd.service enabled Review /etc/systemd/timesyncd.conf and ensure that the NTP servers, NTP FallbackNTP servers, and RootDistanceMaxSec listed are in accordance with local policy Run the following command # timedatectl status This should return something similar to: Local time: Tue 2019-06-04 15:40:45 EDT Universal time: Tue 2019-06-04 19:40:45 UTC RTC time: Tue 2019-06-04 19:40:45 Time zone: America/New_York (EDT, -0400) NTP enabled: yes NTP synchronized: yes RTC in local TZ: no DST active: yes Last DST change: DST began at Sun 2019-03-10 01:59:59 EST Sun 2019-03-10 03:00:00 EDT Next DST change: DST ends (the clock jumps one hour backwards) at Sun 2019-11-03 01:59:59 EDT Sun 2019-11-03 01:00:00 EST",
    "remediation": "Edit the file /etc/systemd/timesyncd.conf and add/modify the following lines: NTP=0.suse.pool.ntp.org 1.suse.pool.ntp.org #Servers listed should be In Accordance With Local Policy FallbackNTP=2.suse.pool.ntp.org 3.suse.pool.ntp.org #Servers listed should be In Accordance With Local Policy RootDistanceMax=1 #should be In Accordance With Local Policy Run the following commands to enable and start systemd-timesyncd: # systemctl --now enable systemd-timesyncd.service # timedatectl set-ntp true   136 | P a g e",
    "function_names": [
      "systemd_timesyncd_configured",
      "systemd_timesyncd_sntp_client_enabled",
      "systemd_timesyncd_minimal_privileges",
      "systemd_timesyncd_clock_persistence_enabled",
      "systemd_timesyncd_network_dependency_configured",
      "systemd_timesyncd_user_group_created",
      "systemd_timesyncd_single_time_sync_method"
    ]
  },
  {
    "id": "2.2.1.3",
    "title": "Ensure chrony is configured",
    "assessment": "Automated",
    "description": "chrony is a daemon which implements the Network Time Protocol (NTP) and is designed to synchronize system clocks across a variety of systems and use a source that is highly accurate. More information on chrony can be found at: http://chrony.tuxfamily.org/. chrony can be configured to be a client and/or a server.",
    "rationale": "If chrony is in use on the system proper configuration is vital to ensuring time synchronization is working properly. Notes: • If ntp or systemd-timesyncd are used, chrony should be removed and this section skipped • This recommendation only applies if chrony is in use on the system • Only one time synchronization method should be in use on the system",
    "audit": "Run the following command and verify remote server is configured properly: # grep -E \"^(server|pool)\" /etc/chrony.conf server <remote-server> Multiple servers may be configured Run the following command and verify OPTIONS includes '-u chrony': # grep ^OPTIONS /etc/sysconfig/chronyd OPTIONS=\"-u chrony\" Additional options may be present.  138 | P a g e",
    "remediation": "Add or edit server or pool lines to /etc/chrony.conf as appropriate: server <remote-server> Add or edit the OPTIONS in /etc/sysconfig/chronyd to include '-u chrony': OPTIONS=\"-u chrony\"",
    "function_names": [
      "time_sync_chrony_configured",
      "time_sync_chrony_client_enabled",
      "time_sync_chrony_server_enabled",
      "time_sync_chrony_ntp_sources_configured",
      "time_sync_chrony_high_accuracy_source",
      "time_sync_chrony_daemon_running",
      "time_sync_chrony_service_enabled",
      "time_sync_chrony_config_file_present"
    ]
  },
  {
    "id": "2.2.1.4",
    "title": "Ensure ntp is configured",
    "assessment": "Automated",
    "description": "ntp is a daemon which implements the Network Time Protocol (NTP). It is designed to synchronize system clocks across a variety of systems and use a source that is highly accurate. More information on NTP can be found at http://www.ntp.org. ntp can be configured to be a client and/or a server. Notes: • If chrony or systemd-timesyncd are used, ntp should be removed and this section skipped • This recommendation only applies if ntp is in use on the system • Only one time synchronization method should be in use on the system",
    "rationale": "If ntp is in use on the system proper configuration is vital to ensuring time synchronization is working properly.  140 | P a g e",
    "audit": "Run the following command and verify output matches: # grep \"^restrict\" /etc/ntp.conf restrict -4 default kod limited nomodify notrap nopeer noquery restrict -6 default kod limited nomodify notrap nopeer noquery The -4 in the first line is optional and options after default can appear in any order. Additional restriction lines may exist Run the following command and verify remote server is configured properly: # grep -E \"^(server|pool)\" /etc/ntp.conf server <remote-server> Multiple servers may be configured. Run the following command and verify that '-u ntp:ntp' is included in NTPD_OPTIONS : # grep \"^NTPD_OPTIONS\" /etc/sysconfig/ntp NTPD_OPTIONS=\"-u ntp:ntp\" Additional options may be present.",
    "remediation": "Add or edit restrict lines in /etc/ntp.conf to match the following: restrict -4 default kod limited nomodify notrap nopeer noquery restrict -6 default kod limited nomodify notrap nopeer noquery Add or edit server or pool lines to /etc/ntp.conf as appropriate: server <remote-server> Add or edit the NTPD_OPTIONS in /etc/sysconfig/ntp to include '-u ntp:ntp': NTPD_OPTIONS=\"-u ntp:ntp\"   141 | P a g e",
    "function_names": [
      "compute_ntp_configured",
      "compute_ntp_server_enabled",
      "compute_ntp_client_enabled",
      "compute_ntp_chrony_removed",
      "compute_ntp_systemd_timesyncd_removed",
      "compute_ntp_single_sync_method",
      "compute_ntp_high_accuracy_source",
      "compute_ntp_daemon_running"
    ]
  },
  {
    "id": "2.2.2",
    "title": "Ensure X11 Server components are not installed",
    "assessment": "Automated",
    "description": "The X Window System provides a Graphical User Interface (GUI) where users can have multiple windows in which to run programs and various add on. The X Windows system is typically used on workstations where users login, but not on servers where users typically do not login.",
    "rationale": "Unless your organization specifically requires graphical login access via X Windows, remove it to reduce the potential attack surface. Impact: Many Linux systems run applications which require a Java runtime. Some Linux Java packages have a dependency on specific X Windows xorg-x11-fonts. One workaround to avoid this dependency is to use the \"headless\" Java packages for your specific Java runtime.",
    "audit": "Run the following command to Verify X Windows Server is not installed. # rpm -qa xorg-x11-server*",
    "remediation": "Run the following command to remove the X Windows Server packages: # zypper remove xorg-x11-server*",
    "impact": "Many Linux systems run applications which require a Java runtime. Some Linux Java packages have a dependency on specific X Windows xorg-x11-fonts. One workaround to avoid this dependency is to use the \"headless\" Java packages for your specific Java runtime.",
    "function_names": [
      "compute_instance_x11_components_not_installed",
      "compute_server_x11_software_removed",
      "compute_system_x11_packages_uninstalled",
      "compute_vm_x11_server_disabled",
      "compute_os_x11_components_absent"
    ]
  },
  {
    "id": "2.2.3",
    "title": "Ensure Avahi Server is not installed",
    "assessment": "Automated",
    "description": "Avahi is a free zeroconf implementation, including a system for multicast DNS/DNS-SD service discovery. Avahi allows programs to publish and discover services and hosts running on a local network with no specific configuration. For example, a user can plug a computer into a network and Avahi automatically finds printers to print to, files to look at and people to talk to, as well as network services running on the machine.",
    "rationale": "Automatic discovery of network services is not normally required for system functionality. It is recommended to remove this package to reduce the potential attack surface.",
    "audit": "Run one of the following command to verify avahi-autoipd and avahi are not installed: # rpm -q avahi-autoipd avahi package avahi-autoipd is not installed package avahi is not installed",
    "remediation": "Run the following commands to stop, mask and remove avahi-autoipd and avahi: # systemctl stop avahi-daemon.socket avahi-daemon.service # zypper remove avahi-autoipd avahi",
    "function_names": [
      "system_package_avahi_not_installed",
      "network_service_avahi_disabled",
      "zeroconf_service_discovery_disabled",
      "multicast_dns_service_not_installed",
      "local_network_service_discovery_disabled"
    ]
  },
  {
    "id": "2.2.4",
    "title": "Ensure CUPS is not installed",
    "assessment": "Automated",
    "description": "The Common Unix Print System (CUPS) provides the ability to print to both local and network printers. A system running CUPS can also accept print jobs from remote systems and print them to local printers. It also provides a web based remote administration capability.",
    "rationale": "If the system does not need to print jobs or accept print jobs from other systems, it is recommended that CUPS be removed to reduce the potential attack surface. Note: Removing CUPS will prevent printing from the system Impact: Disabling CUPS will prevent printing from the system, a common task for workstation systems.",
    "audit": "Run the following command to verify cups is not installed: # rpm -q cups package cups is not installed",
    "remediation": "Run the following command to remove cups: # zypper remove cups References: 1. More detailed documentation on CUPS is available at the project homepage at http://www.cups.org.   145 | P a g e",
    "impact": "Disabling CUPS will prevent printing from the system, a common task for workstation systems.",
    "references": "1. More detailed documentation on CUPS is available at the project homepage at http://www.cups.org.   145 | P a g e",
    "function_names": [
      "system_package_cups_not_installed",
      "system_print_service_disabled",
      "system_unix_print_software_removed",
      "system_network_printing_disabled",
      "system_remote_print_admin_disabled"
    ]
  },
  {
    "id": "2.2.5",
    "title": "Ensure DHCP Server is not installed",
    "assessment": "Automated",
    "description": "The Dynamic Host Configuration Protocol (DHCP) is a service that allows machines to be dynamically assigned IP addresses.",
    "rationale": "Unless a system is specifically set up to act as a DHCP server, it is recommended that the dhcp package be removed to reduce the potential attack surface.",
    "audit": "Run the following command to verify dhcp is not installed: # rpm -q dhcp package dhcp is not installed",
    "remediation": "Run the following command to remove dhcp: # zypper remove dhcp References: 1. dhcpd(8)",
    "references": "1. dhcpd(8)",
    "function_names": [
      "compute_instance_dhcp_server_not_installed",
      "network_interface_dhcp_disabled",
      "dhcp_service_disabled",
      "instance_dhcp_client_disabled",
      "os_dhcp_package_not_installed"
    ]
  },
  {
    "id": "2.2.6",
    "title": "Ensure LDAP server is not installed",
    "assessment": "Automated",
    "description": "The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for NIS/YP. It is a service that provides a method for looking up information from a central database.",
    "rationale": "If the system will not need to act as an LDAP server, it is recommended that the software be removed to reduce the potential attack surface.",
    "audit": "Run the following command to verify openldap-servers is not installed: # rpm -q openldap2 package openldap2 is not installed",
    "remediation": "Run the following command to remove openldap-servers: # zypper remove openldap2 References: 1. For more detailed documentation on OpenLDAP, go to the project homepage at http://www.openldap.org.",
    "references": "1. For more detailed documentation on OpenLDAP, go to the project homepage at http://www.openldap.org.",
    "function_names": [
      "compute_instance_ldap_server_not_installed",
      "compute_server_ldap_service_disabled",
      "compute_system_ldap_package_removed",
      "compute_os_ldap_daemon_not_running"
    ]
  },
  {
    "id": "2.2.7",
    "title": "Ensure nfs-utils is not installed or the nfs-server service is masked",
    "assessment": "Automated",
    "description": "The Network File System (NFS) is one of the first and most widely distributed file systems in the UNIX environment. It provides the ability for systems to mount file systems of other servers through the network.",
    "rationale": "If the system does not require network shares, it is recommended that the nfs-utils and nfs-kernel-server packages be removed to reduce the attack surface of the system. Note: many of the libvirt packages used by Enterprise Linux virtualization are dependent on the nfs-utils package. If the nfs-utils or nfs-kernel-server packages are required as a dependency, the nfs-server service should be disabled and masked to reduce the attack surface of the system",
    "audit": "Run the following command to verify nfs-utils and nfs-kernel-server are not installed: # rpm -q nfs-utils nfs-kernel-server package nfs-utils is not installed package nfs-kernel-server is not installed OR If the nfs-utils or nfs-kernel-server packages are required as a dependency Run the following command to verify that the nfs-server service is masked: # systemctl is-enabled nfs-server masked   149 | P a g e",
    "remediation": "Run the following commands to remove nfs-utils and nfs-kernel-server: # zypper remove nfs-utils # zypper remove nfs-kernel-server OR If the nfs-utils or nfs-kernel-server packages are required as a dependency Run the following command to stop and mask the nfs-server service: # systemctl --now mask nfs-server",
    "function_names": [
      "compute_nfs_utils_not_installed",
      "compute_nfs_server_service_masked",
      "compute_nfs_utils_removed",
      "compute_nfs_server_disabled",
      "compute_nfs_service_inactive"
    ]
  },
  {
    "id": "2.2.8",
    "title": "Ensure rpcbind is not installed or the rpcbind services are masked",
    "assessment": "Automated",
    "description": "The rpcbind utility maps RPC services to the ports on which they listen. RPC processes notify rpcbind when they start, registering the ports they are listening on and the RPC program numbers they expect to serve. The client system then contacts rpcbind on the server with a particular RPC program number. The rpcbind service redirects the client to the proper port number so it can communicate with the requested service. Portmapper is an RPC service, which always listens on tcp and udp 111, and is used to map other RPC services (such as nfs, nlockmgr, quotad, mountd, etc.) to their corresponding port number on the server. When a remote host makes an RPC call to that server, it first consults with portmap to determine where the RPC server is listening.",
    "rationale": "A small request (~82 bytes via UDP) sent to the Portmapper generates a large response (7x to 28x amplification), which makes it a suitable tool for DDoS attacks. If rpcbind is not required, it is recommended that the rpcbind package be removed to reduce the attack surface of the system. Note: Many of the libvirt packages used by Enterprise Linux virtualization and the nfs-utils package used for The Network File System (NFS) are dependent on the rpcbind package. If the rpcbind package is required as a dependency for these or other installed packages, the rpcbind.service and rpcbind.socket should be stopped and masked to reduce the attack surface of the system.  151 | P a g e",
    "audit": "Run the following command to verify rpcbind is not installed: # rpm -q rpcbind package rpcbind is not installed OR If the rpcbind packege is required as a dependency Run the following commands to verify that the rpcbind is masked: # systemctl is-enabled rpcbind masked Run the following command to verify that the rpcbind.socket is masked: # systemctl is-enabled rpcbind.socket masked",
    "remediation": "Run the following command to remove nfs-utils: # zypper remove rpcbind OR If the rpcbind package is required as a dependency Run the following commands to stop and mask the rpcbind and rpcbind.socket services: # systemctl --now mask rpcbind # systemctl --now mask rpcbind.socket   152 | P a g e",
    "function_names": [
      "compute_rpcbind_not_installed",
      "compute_rpcbind_service_masked",
      "compute_rpcbind_disabled",
      "compute_rpcbind_port_closed",
      "compute_rpcbind_ports_blocked",
      "compute_rpcbind_service_inactive",
      "compute_rpcbind_ports_unreachable",
      "compute_rpcbind_removed",
      "compute_rpcbind_services_stopped",
      "compute_rpcbind_network_restricted"
    ]
  },
  {
    "id": "2.2.9",
    "title": "Ensure DNS Server is not installed",
    "assessment": "Automated",
    "description": "The Domain Name System (DNS) is a hierarchical naming system that maps names to IP addresses for computers, services and other resources connected to a network.",
    "rationale": "Unless a system is specifically designated to act as a DNS server, it is recommended that the package be removed to reduce the potential attack surface.",
    "audit": "Run one of the following commands to verify bind is not installed: # rpm -q bind package bind is not installed",
    "remediation": "Run the following command to remove bind: # zypper remove bind",
    "function_names": [
      "compute_instance_dns_server_not_installed",
      "compute_vm_dns_server_not_installed",
      "compute_host_dns_server_not_installed",
      "network_dns_server_not_installed",
      "system_dns_service_disabled",
      "os_dns_package_not_installed",
      "server_dns_software_not_present"
    ]
  },
  {
    "id": "2.2.10",
    "title": "Ensure FTP Server is not installed",
    "assessment": "Automated",
    "description": "FTP (File Transfer Protocol) is a traditional and widely used standard tool for transferring files between a server and clients over a network, especially where no authentication is necessary (permits anonymous users to connect to a server).",
    "rationale": "FTP does not protect the confidentiality of data or authentication credentials. It is recommended SFTP be used if file transfer is required. Unless there is a need to run the system as a FTP server (for example, to allow anonymous downloads), it is recommended that the package be removed to reduce the potential attack surface. Note: Additional FTP servers also exist and should be removed if not required.",
    "audit": "Run the following command to verify vsftpd is not installed: # rpm -q vsftpd package vsftpd is not installed",
    "remediation": "Run the following command to remove vsftpd: # zypper remove vsftpd",
    "function_names": [
      "compute_server_ftp_not_installed",
      "compute_instance_ftp_removed",
      "network_service_ftp_disabled",
      "system_package_ftp_uninstalled",
      "os_service_ftp_not_present"
    ]
  },
  {
    "id": "2.2.11",
    "title": "Ensure HTTP server is not installed",
    "assessment": "Automated",
    "description": "HTTP or web servers provide the ability to host web site content.",
    "rationale": "Unless there is a need to run the system as a web server, it is recommended that the package be removed to reduce the potential attack surface. Notes: • Several http servers exist. apache, apache2, lighttpd, and nginx are example packages that provide an HTTP server • These and other packages should also be audited, and removed if not required",
    "audit": "Run the following command to verify apache2 is not installed: # rpm -q apache2 package httpd is not installed",
    "remediation": "Run the following command to remove apache2: # zypper remove apache2",
    "function_names": [
      "compute_instance_http_server_not_installed",
      "compute_vm_http_server_not_installed",
      "compute_server_http_service_disabled",
      "compute_host_http_package_removed",
      "compute_system_http_daemon_uninstalled",
      "compute_os_http_server_absent",
      "compute_machine_http_service_not_running",
      "compute_instance_http_software_uninstalled"
    ]
  },
  {
    "id": "2.2.12",
    "title": "Ensure IMAP and POP3 server is not installed",
    "assessment": "Automated",
    "description": "dovecot is an open source IMAP and POP3 server for Linux based systems.",
    "rationale": "Unless POP3 and/or IMAP servers are to be provided by this system, it is recommended that the package be removed to reduce the potential attack surface. Notes: • Several IMAP/POP3 servers exist and can use other service names. courier-imap and cyrus-imap are example services that provide a mail server. • These and other services should also be audited and the packages removed if not required.",
    "audit": "Run the following command to verify dovecot is not installed: # rpm -q dovecot package dovecot is not installed",
    "remediation": "Run the following command to remove dovecot: # zypper remove dovecot",
    "function_names": [
      "compute_instance_dovecot_not_installed",
      "compute_server_imap_pop3_disabled",
      "compute_system_unwanted_mail_services_removed",
      "compute_instance_unused_mail_services_absent",
      "compute_server_dovecot_package_uninstalled"
    ]
  },
  {
    "id": "2.2.13",
    "title": "Ensure Samba is not installed",
    "assessment": "Automated",
    "description": "The Samba daemon allows system administrators to configure their Linux systems to share file systems and directories with Windows desktops. Samba will advertise the file systems and directories via the Server Message Block (SMB) protocol. Windows desktop users will be able to mount these directories and file systems as letter drives on their systems.",
    "rationale": "If there is no need to mount directories and file systems to Windows systems, then this package can be removed to reduce the potential attack surface.",
    "audit": "Run the following command to verify samba is not installed: # rpm -q samba package samba is not installed",
    "remediation": "Run the following command to remove samba: # zypper remove samba",
    "function_names": [
      "compute_samba_not_installed",
      "compute_package_samba_removed",
      "compute_service_smb_disabled",
      "compute_software_samba_uninstalled",
      "compute_system_samba_absent"
    ]
  },
  {
    "id": "2.2.14",
    "title": "Ensure HTTP Proxy Server is not installed",
    "assessment": "Automated",
    "description": "Squid is a standard proxy server used in many distributions and environments.",
    "rationale": "Unless a system is specifically set up to act as a proxy server, it is recommended that the squid package be removed to reduce the potential attack surface. Note: Several HTTP proxy servers exist. These should be checked and removed unless required.",
    "audit": "Run the following command to verify squid is not installed: # rpm -q squid package squid is not installed",
    "remediation": "Run the following command to remove the squid package: # zypper remove squid",
    "function_names": [
      "compute_instance_squid_not_installed",
      "compute_server_proxy_disabled",
      "compute_system_http_proxy_removed",
      "compute_software_squid_uninstalled",
      "compute_package_proxy_server_absent"
    ]
  },
  {
    "id": "2.2.15",
    "title": "Ensure net-snmp is not installed",
    "assessment": "Automated",
    "description": "Simple Network Management Protocol (SNMP) is a widely used protocol for monitoring the health and welfare of network equipment, computer equipment and devices like UPSs. • Net-SNMP is a suite of applications used to implement SNMPv1 (RFC 1157), SNMPv2 (RFCs 1901-1908), and SNMPv3 (RFCs 3411-3418) using both IPv4 and IPv6. • Support for SNMPv2 classic (a.k.a. \"SNMPv2 historic\" - RFCs 1441-1452) was dropped with the 4.0 release of the UCD-snmp package. • The Simple Network Management Protocol (SNMP) server is used to listen for SNMP commands from an SNMP management system, execute the commands or collect the information and then send results back to the requesting system.",
    "rationale": "The SNMP server can communicate using SNMPv1, which transmits data in the clear and does not require authentication to execute commands. SNMPv3 replaces the simple/clear text password sharing used in SNMPv2 with more securely encoded parameters. If the the SNMP service is not required, the net-snmp package should be removed to reduce the attack surface of the system. Note: If SNMP is required: • The server should be configured for SNMP v3 only. User Authentication and Message Encryption should be configured. • If SNMP v2 is absolutely necessary, modify the community strings' values.",
    "audit": "Run the following command to verify net-snmp is not installed: # rpm -q net-snmp package net-snmp is not installed",
    "remediation": "Run the following command to remove net-snmpd: # zypper remove net-snmp  160 | P a g e",
    "function_names": [
      "system_package_net_snmp_not_installed",
      "system_package_net_snmp_removed",
      "system_service_net_snmp_disabled",
      "system_service_net_snmp_uninstalled",
      "system_protocol_snmp_disabled",
      "system_protocol_snmp_not_installed",
      "system_software_net_snmp_not_present",
      "system_software_net_snmp_absent"
    ]
  },
  {
    "id": "2.2.16",
    "title": "Ensure mail transfer agent is configured for local-only mode",
    "assessment": "Automated",
    "description": "Mail Transfer Agents (MTA), such as sendmail and Postfix, are used to listen for incoming mail and transfer the messages to the appropriate user or mail server. If the system is not intended to be a mail server, it is recommended that the MTA be configured to only process local mail.",
    "rationale": "The software for all Mail Transfer Agents is complex and most have a long history of security issues. While it is important to ensure that the system can process local mail messages, it is not necessary to have the MTA's daemon listening on a port unless the server is intended to be a mail server that receives and processes mail from other systems. Notes: • This recommendation is designed around the postfix mail server. • Depending on your environment you may have an alternative MTA installed such as sendmail. If this is the case consult the documentation for your installed MTA to configure the recommended state.",
    "audit": "Run the following command to verify that the MTA is not listening on any non-loopback address ( 127.0.0.1 or ::1 ) #  ss -lntu | grep -E ':25\\s' | grep -E -v '\\s(127.0.0.1|\\[?::1\\]?):25\\s' Nothing should be returned",
    "remediation": "Edit /etc/postfix/main.cf and add the following line to the RECEIVING MAIL section. If the line already exists, change it to look like the line below: inet_interfaces = loopback-only Run the following command to restart postfix: # systemctl restart postfix  162 | P a g e",
    "function_names": [
      "mail_transfer_agent_local_only_mode",
      "mail_transfer_agent_no_remote_access",
      "mail_transfer_agent_restricted_to_localhost",
      "mail_transfer_agent_no_external_listening",
      "mail_transfer_agent_local_processing_enabled",
      "mail_transfer_agent_remote_connections_disabled",
      "mail_transfer_agent_localhost_only_config",
      "mail_transfer_agent_no_inbound_remote_mail"
    ]
  },
  {
    "id": "2.2.17",
    "title": "Ensure rsync is not installed or the rsyncd service is masked",
    "assessment": "Automated",
    "description": "The rsyncd service can be used to synchronize files between systems over network links.",
    "rationale": "Unless required, the rsync package should be removed to reduce the attack surface area of the system. The rsyncd service presents a security risk as it uses unencrypted protocols for communication. Note: If a required dependency exists for the rsync package, but the rsyncd service is not required, the service should be masked. Impact: There are packages that are dependent on the rsync package. If the rsync package is removed, these packages will be removed as well. Before removing the rsync package, review any dependent packages to determine if they are required on the system. If a dependent package is required, mask the rsyncd service and leave the rsync package installed.",
    "audit": "Run the following command to verify that rsync is not installed: # rpm -q rsync package rsync is not installed OR Run the following command to verify the rsyncd service is masked: # systemctl is-enabled rsyncd masked   164 | P a g e",
    "remediation": "Run the following command to remove the rsync package: # zypper remove rsync OR Run the following command to mask the rsyncd service: # systemctl --now mask rsyncd",
    "impact": "There are packages that are dependent on the rsync package. If the rsync package is removed, these packages will be removed as well. Before removing the rsync package, review any dependent packages to determine if they are required on the system. If a dependent package is required, mask the rsyncd service and leave the rsync package installed.",
    "function_names": [
      "package_rsync_not_installed",
      "service_rsyncd_masked",
      "service_rsyncd_disabled",
      "package_rsync_removed",
      "service_rsyncd_inactive"
    ]
  },
  {
    "id": "2.2.18",
    "title": "Ensure NIS server is not installed",
    "assessment": "Automated",
    "description": "The ypserv package provides the Network Information Service (NIS). This service, formally known as Yellow Pages, is a client-server directory service protocol for distributing system configuration files. The NIS server is a collection of programs that allow for the distribution of configuration files.",
    "rationale": "The NIS service is inherently an insecure system that has been vulnerable to DOS attacks, buffer overflows and has poor authentication for querying NIS maps. NIS generally has been replaced by such protocols as Lightweight Directory Access Protocol (LDAP). It is recommended that the ypserv package be removed, and if required a more secure services be used.",
    "audit": "Run the following command to verify ypserv is not installed: # rpm -q ypserv package ypserv is not installed",
    "remediation": "Run the following command to remove ypserv: # zypper remove ypserv   166 | P a g e",
    "function_names": [
      "compute_nis_server_not_installed",
      "compute_ypserv_package_removed",
      "compute_nis_service_disabled",
      "compute_ypserv_process_absent",
      "compute_nis_config_files_removed"
    ]
  },
  {
    "id": "2.2.19",
    "title": "Ensure telnet-server is not installed",
    "assessment": "Automated",
    "description": "The telnet-server package contains the telnet daemon, which accepts connections from users from other systems via the telnet protocol.",
    "rationale": "The telnet protocol is insecure and unencrypted. The use of an unencrypted transmission medium could allow a user with access to sniff network traffic the ability to steal credentials. The ssh package provides an encrypted session and stronger security.",
    "audit": "Run the following command to verify the telnet package is not installed: rpm -q telnet-server package telnet-server is not installed",
    "remediation": "Run the following command to remove the telnet-server package: # zypper remove telnet-server",
    "function_names": [
      "compute_instance_telnet_server_not_installed",
      "compute_system_telnet_daemon_disabled",
      "compute_package_telnet_server_uninstalled",
      "compute_service_telnet_protocol_disabled",
      "compute_software_telnet_package_removed"
    ]
  },
  {
    "id": "2.3.1",
    "title": "Ensure NIS Client is not installed",
    "assessment": "Automated",
    "description": "The Network Information Service (NIS), formerly known as Yellow Pages, is a client-server directory service protocol used to distribute system configuration files. The NIS client ( ypbind ) was used to bind a machine to an NIS server and receive the distributed configuration files.",
    "rationale": "The NIS service is inherently an insecure system that has been vulnerable to DOS attacks, buffer overflows and has poor authentication for querying NIS maps. NIS generally has been replaced by such protocols as Lightweight Directory Access Protocol (LDAP). It is recommended that the service be removed. Impact: Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.",
    "audit": "Run the following command to verify that the ypbind package is not installed: # rpm -q ypbind package ypbind is not installed",
    "remediation": "Run the following command to remove the ypbind package: # zypper remove ypbind   170 | P a g e",
    "impact": "Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.",
    "function_names": [
      "compute_nis_client_not_installed",
      "compute_ypbind_service_disabled",
      "compute_nis_client_removed",
      "compute_nis_package_uninstalled",
      "compute_nis_client_absent"
    ]
  },
  {
    "id": "2.3.2",
    "title": "Ensure rsh client is not installed",
    "assessment": "Automated",
    "description": "The rsh package contains the client commands for the rsh services.",
    "rationale": "These legacy clients contain numerous security exposures and have been replaced with the more secure SSH package. Even if the server is removed, it is best to ensure the clients are also removed to prevent users from inadvertently attempting to use these commands and therefore exposing their credentials. Note that removing the rsh package removes the clients for rsh , rcp and rlogin. Impact: Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.",
    "audit": "Run the following command to verify that the rsh package is not installed: # rpm -q rsh package rsh is not installed",
    "remediation": "Run the following command to remove the rsh package: # zypper remove rsh   172 | P a g e",
    "impact": "Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.",
    "function_names": [
      "compute_rsh_client_not_installed",
      "compute_rsh_client_removed",
      "compute_rsh_client_disabled",
      "compute_rsh_client_unavailable",
      "compute_rsh_client_absent"
    ]
  },
  {
    "id": "2.3.3",
    "title": "Ensure talk client is not installed",
    "assessment": "Automated",
    "description": "The talk software makes it possible for users to send and receive messages across systems through a terminal session. The talk client, which allows initialization of talk sessions, is installed by default.",
    "rationale": "The software presents a security risk as it uses unencrypted protocols for communication. Impact: Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.",
    "audit": "Run the following command to verify that the talk package is not installed: # rpm -q talk package talk is not installed",
    "remediation": "Run the following command to remove the talk package: # zypper remove talk",
    "impact": "Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.",
    "function_names": [
      "compute_instance_talk_client_not_installed",
      "system_package_talk_client_removed",
      "os_configuration_talk_client_disabled",
      "software_inventory_talk_client_absent",
      "security_hardening_talk_client_uninstalled"
    ]
  },
  {
    "id": "2.3.4",
    "title": "Ensure telnet client is not installed",
    "assessment": "Automated",
    "description": "The telnet package contains the telnet client, which allows users to start connections to other systems via the telnet protocol.",
    "rationale": "The telnet protocol is insecure and unencrypted. The use of an unencrypted transmission medium could allow an unauthorized user to steal credentials. The ssh package provides an encrypted session and stronger security and is included in most Linux distributions. Impact: Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.",
    "audit": "Run the following command to verify that the telnet package is not installed: # rpm -q telnet package telnet is not installed",
    "remediation": "Run the following command to remove the telnet package: # zypper remove telnet   175 | P a g e",
    "impact": "Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.",
    "function_names": [
      "compute_instance_telnet_client_not_installed",
      "compute_system_telnet_package_removed",
      "compute_os_telnet_client_disabled",
      "compute_software_telnet_protocol_blocked",
      "compute_package_manager_telnet_uninstalled"
    ]
  },
  {
    "id": "2.3.5",
    "title": "Ensure LDAP client is not installed",
    "assessment": "Automated",
    "description": "The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for NIS/YP. It is a service that provides a method for looking up information from a central database.",
    "rationale": "If the system will not need to act as an LDAP client, it is recommended that the software be removed to reduce the potential attack surface. Impact: Removing the LDAP client will prevent or inhibit using LDAP for authentication in your environment.",
    "audit": "Run the following command to verify that the openldap-clients package is not installed: # rpm -q openldap2-clients package openldap2-clients is not installed",
    "remediation": "Run the following command to remove the openldap-clients package: # zypper remove openldap2-clients",
    "impact": "Removing the LDAP client will prevent or inhibit using LDAP for authentication in your environment.",
    "function_names": [
      "compute_instance_ldap_client_not_installed",
      "compute_vm_ldap_client_removed",
      "os_package_ldap_client_disabled",
      "system_software_ldap_client_uninstalled",
      "server_configuration_ldap_client_absent"
    ]
  },
  {
    "id": "2.4",
    "title": "Ensure nonessential services are removed or masked",
    "assessment": "Manual",
    "description": "A network port is identified by its number, the associated IP address, and the type of the communication protocol such as TCP or UDP. A listening port is a network port on which an application or process listens on, acting as a communication endpoint. Each listening port can be open or closed (filtered) using a firewall. In general terms, an open port is a network port that accepts incoming packets from remote locations.",
    "rationale": "Services listening on the system pose a potential risk as an attack vector. These services should be reviewed, and if not required, the service should be stopped, and the package containing the service should be removed. If required packages have a dependency, the service should be stopped and masked to reduce the attack surface of the system.",
    "audit": "Run the following command: # lsof -i -P -n | grep -v \"(ESTABLISHED)\" Review the output to ensure that all services listed are required on the system. If a listed service is not required, remove the package containing the service. If the package containing the service is required, stop and mask the service",
    "remediation": "Run the following command to remove the package containing the service: # zypper remove <package_name> Or If required packages have a dependency: Run the following command to stop and mask the service: # systemctl --now mask <service_name>   178 | P a g e",
    "function_names": [
      "systemd_service_nonessential_removed",
      "systemd_service_nonessential_masked",
      "network_port_nonessential_closed",
      "network_port_nonessential_filtered",
      "firewall_rule_nonessential_blocked",
      "process_listening_port_nonessential_disabled",
      "system_service_nonessential_inactive",
      "system_socket_nonessential_unbound"
    ]
  },
  {
    "id": "3.1.1",
    "title": "Disable IPv6",
    "assessment": "Automated",
    "description": "Although IPv6 has many advantages over IPv4, not all organizations have IPv6 or dual stack configurations implemented.",
    "rationale": "If IPv6 or dual stack is not to be used, it is recommended that IPv6 be disabled to reduce the attack surface of the system. Impact: IF IPv6 is disabled through sysctl config, SSH X11forwarding may no longer function as expected. We recommend that SSH X11forwarding be disabled, but if required, the following will allow for SSH X11forwarding with IPv6 disabled through sysctl config: Add the following line the /etc/ssh/sshd_config file: AddressFamily inet Run the following command to re-start the openSSH server: # systemctl restart sshd   182 | P a g e",
    "audit": "Run the following commands to verify that one of the following methods has been used to disable IPv6: IF IPv6 is disabled through the GRUB2 config: Run the following command and verify no lines should be returned. #  grep \"^\\s*linux\" /boot/grub2/grub.cfg | grep -v ipv6.disable=1 OR IF IPv6 is disabled through sysctl settings: Run the following commands: # sysctl net.ipv6.conf.all.disable_ipv6 net.ipv6.conf.all.disable_ipv6 = 1 # sysctl net.ipv6.conf.default.disable_ipv6 net.ipv6.conf.default.disable_ipv6 = 1 # grep -E '^\\s*net\\.ipv6\\.conf\\.(all|default)\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$' /etc/sysctl.conf /etc/sysctl.d/*.conf | cut -d: -f2 net.ipv6.conf.all.disable_ipv6 = 1 net.ipv6.conf.default.disable_ipv6 = 1   183 | P a g e",
    "remediation": "Use one of the two following methods to disable IPv6 on the system: To disable IPv6 through the GRUB2 config: Edit /etc/default/grub and add ipv6.disable=1 to the GRUB_CMDLINE_LINUX parameters: GRUB_CMDLINE_LINUX=\"ipv6.disable=1\" Run the following command to update the grub2 configuration: # grub2-mkconfig –o /boot/grub2/grub.cfg OR To disable IPv6 through sysctl settings: Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv6.conf.all.disable_ipv6 = 1 net.ipv6.conf.default.disable_ipv6 = 1 Run the following commands to set the active kernel parameters: # sysctl -w net.ipv6.conf.all.disable_ipv6=1 # sysctl -w net.ipv6.conf.default.disable_ipv6=1 # sysctl -w net.ipv6.route.flush=1",
    "impact": "IF IPv6 is disabled through sysctl config, SSH X11forwarding may no longer function as expected. We recommend that SSH X11forwarding be disabled, but if required, the following will allow for SSH X11forwarding with IPv6 disabled through sysctl config: Add the following line the /etc/ssh/sshd_config file: AddressFamily inet Run the following command to re-start the openSSH server: # systemctl restart sshd   182 | P a g e",
    "function_names": [
      "network_interface_ipv6_disabled",
      "vpc_ipv6_disabled",
      "subnet_ipv6_disabled",
      "ec2_ipv6_disabled",
      "network_acl_ipv6_disabled",
      "security_group_ipv6_disabled",
      "route_table_ipv6_disabled",
      "elastic_network_interface_ipv6_disabled"
    ]
  },
  {
    "id": "3.1.2",
    "title": "Ensure wireless interfaces are disabled",
    "assessment": "Manual",
    "description": "Wireless networking is used when wired networks are unavailable.",
    "rationale": "If wireless is not to be used, wireless devices should be disabled to reduce the potential attack surface. Impact: Many if not all laptop workstations and some desktop workstations will connect via wireless requiring these interfaces be enabled.",
    "audit": "Run the following command to determine wireless interfaces on the system: # iw list Run the following command and verify wireless interfaces are active: # ip link show up",
    "remediation": "Run the following command to disable any wireless interfaces: # ip link set <interface> down Disable any wireless interfaces in your network configuration.  185 | P a g e",
    "impact": "Many if not all laptop workstations and some desktop workstations will connect via wireless requiring these interfaces be enabled.",
    "function_names": [
      "compute_instance_wireless_disabled",
      "compute_network_wireless_disabled",
      "compute_interface_wireless_disabled",
      "compute_system_wireless_disabled",
      "compute_device_wireless_disabled"
    ]
  },
  {
    "id": "3.2.1",
    "title": "Ensure IP forwarding is disabled",
    "assessment": "Automated",
    "description": "The net.ipv4.ip_forward and net.ipv6.conf.all.forwarding flags are used to tell the system whether it can forward packets or not.",
    "rationale": "Setting the flags to 0 ensures that a system with multiple interfaces (for example, a hard proxy), will never be able to forward packets, and therefore, never serve as a router.  188 | P a g e",
    "audit": "Run the following commands and verify output matches: # sysctl net.ipv4.ip_forward net.ipv4.ip_forward = 0 # grep -s -- \"^\\s*net\\.ipv4\\.ip_forward\\s*=\\s*1\" /run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf No value should be returned IF IPv6 is enabled: Run the following commands and verify output matches: # sysctl net.ipv6.conf.all.forwarding net.ipv6.conf.all.forwarding = 0 # grep -s -- \"^\\s*net\\.ipv6\\.conf\\.all\\.forwarding\\s*=\\s*1\" /run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf No value should be returned OR Verify that IPv6 is disabled:  189 | P a g e Run the following script. Output will confirm if IPv6 is disabled on the system. #!/usr/bin/env bash ipv6_chk() { passing=\"\" grubfile=\"$(find /boot -type f \\( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \\) \\ -exec grep -Pl -- '^\\h*(kernelopts=|linux|kernel)' {} \\;)\" ! grep -P -- \"^\\h*(kernelopts=|linux|kernel)\" \"$grubfile\" | grep -vq -- ipv6.disable=1 && passing=\"true\" grep -Pq -- \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\h*(#.*)?$\" \\ /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf && \\ grep -Pq -- \"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\h*(#.*)?$\" \\ /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf && \\ sysctl net.ipv6.conf.all.disable_ipv6 | \\ grep -Pq -- \"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\h*(#.*)?$\" && \\ sysctl net.ipv6.conf.default.disable_ipv6 | \\ grep -Pq -- \"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\h*(#.*)?$\" && passing=\"true\" if [ \"$passing\" = true ] ; then echo -e \"\\nIPv6 is disabled on the system\\n\" else echo -e \"\\nIPv6 is enabled on the system\\n\" fi } ipv6_chk",
    "remediation": "Run the following commands to restore the default parameters and set the active kernel parameters: # grep -Els \"^\\s*net\\.ipv4\\.ip_forward\\s*=\\s*1\" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri \"s/^\\s*(net\\.ipv4\\.ip_forward\\s*)(=)(\\s*\\S+\\b).*$/# *REMOVED* \\1/\" $filename; done; sysctl -w net.ipv4.ip_forward=0; sysctl -w net.ipv4.route.flush=1 # grep -Els \"^\\s*net\\.ipv6\\.conf\\.all\\.forwarding\\s*=\\s*1\" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri \"s/^\\s*(net\\.ipv6\\.conf\\.all\\.forwarding\\s*)(=)(\\s*\\S+\\b).*$/# *REMOVED* \\1/\" $filename; done; sysctl -w net.ipv6.conf.all.forwarding=0; sysctl -w net.ipv6.route.flush=1   190 | P a g e",
    "function_names": [
      "compute_instance_ip_forwarding_disabled",
      "network_interface_ip_forwarding_disabled",
      "linux_system_ipv4_forwarding_disabled",
      "linux_system_ipv6_forwarding_disabled",
      "virtual_machine_ip_forwarding_disabled",
      "os_network_ip_forwarding_disabled",
      "cloud_instance_ip_forwarding_disabled",
      "kernel_network_ip_forwarding_disabled"
    ]
  },
  {
    "id": "3.2.2",
    "title": "Ensure packet redirect sending is disabled",
    "assessment": "Automated",
    "description": "ICMP Redirects are used to send routing information to other hosts. As a host itself does not act as a router (in a host only configuration), there is no need to send redirects.",
    "rationale": "An attacker could use a compromised host to send invalid ICMP redirects to other router devices in an attempt to corrupt routing and have users access a system set up by the attacker as opposed to a valid system.",
    "audit": "Run the following commands and verify output matches: # sysctl net.ipv4.conf.all.send_redirects net.ipv4.conf.all.send_redirects = 0 # sysctl net.ipv4.conf.default.send_redirects net.ipv4.conf.default.send_redirects = 0 # grep -s -- \"net\\.ipv4\\.conf\\.all\\.send_redirects\" /run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf net.ipv4.conf.all.send_redirects = 0 # grep -s -- \"net\\.ipv4\\.conf\\.default\\.send_redirects\" /run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf net.ipv4.conf.default.send_redirects= 0   192 | P a g e",
    "remediation": "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.conf.all.send_redirects = 0 net.ipv4.conf.default.send_redirects = 0 Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.conf.all.send_redirects=0 # sysctl -w net.ipv4.conf.default.send_redirects=0 # sysctl -w net.ipv4.route.flush=1",
    "function_names": [
      "compute_instance_icmp_redirects_disabled",
      "network_interface_icmp_redirects_disabled",
      "vpc_icmp_redirects_disabled",
      "subnet_icmp_redirects_disabled",
      "firewall_icmp_redirects_disabled",
      "network_acl_icmp_redirects_disabled",
      "security_group_icmp_redirects_disabled",
      "os_network_icmp_redirects_disabled"
    ]
  },
  {
    "id": "3.3.1",
    "title": "Ensure source routed packets are not accepted",
    "assessment": "Automated",
    "description": "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.",
    "rationale": "Setting net.ipv4.conf.all.accept_source_route, net.ipv4.conf.default.accept_source_route, net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing.  195 | P a g e",
    "audit": "Run the following commands and verify output matches: # sysctl net.ipv4.conf.all.accept_source_route net.ipv4.conf.all.accept_source_route = 0 # sysctl net.ipv4.conf.default.accept_source_route net.ipv4.conf.default.accept_source_route = 0 # grep -s -- \"net\\.ipv4\\.conf\\.all\\.accept_source_route\" /run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf net.ipv4.conf.all.accept_source_route= 0 # grep -s -- \"net\\.ipv4\\.conf\\.default\\.accept_source_route\" /run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf net.ipv4.conf.default.accept_source_route= 0 IF IPv6 is enabled: Run the following commands and verify output matches: # sysctl net.ipv6.conf.all.accept_source_route net.ipv6.conf.all.accept_source_route = 0 # sysctl net.ipv6.conf.default.accept_source_route net.ipv6.conf.default.accept_source_route = 0 # grep -s -- \"net\\.ipv6\\.conf\\.all\\.accept_source_route\" /run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf net.ipv4.conf.all.accept_source_route= 0 # grep -s -- \"net\\.ipv6\\.conf\\.default\\.accept_source_route\" /run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf net.ipv6.conf.default.accept_source_route= 0 OR Verify that IPv6 is disabled:  196 | P a g e Run the following script. Output will confirm if IPv6 is disabled on the system. #!/usr/bin/env bash ipv6_chk() { passing=\"\" grubfile=\"$(find /boot -type f \\( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \\) \\ -exec grep -Pl -- '^\\h*(kernelopts=|linux|kernel)' {} \\;)\" ! grep -P -- \"^\\h*(kernelopts=|linux|kernel)\" \"$grubfile\" | grep -vq -- ipv6.disable=1 && passing=\"true\" grep -Pq -- \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\h*(#.*)?$\" \\ /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf && \\ grep -Pq -- \"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\h*(#.*)?$\" \\ /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf && \\ sysctl net.ipv6.conf.all.disable_ipv6 | \\ grep -Pq -- \"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\h*(#.*)?$\" && \\ sysctl net.ipv6.conf.default.disable_ipv6 | \\ grep -Pq -- \"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\h*(#.*)?$\" && passing=\"true\" if [ \"$passing\" = true ] ; then echo -e \"\\nIPv6 is disabled on the system\\n\" else echo -e \"\\nIPv6 is enabled on the system\\n\" fi } ipv6_chk   197 | P a g e",
    "remediation": "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.conf.all.accept_source_route = 0 net.ipv4.conf.default.accept_source_route = 0 Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.conf.all.accept_source_route=0 # sysctl -w net.ipv4.conf.default.accept_source_route=0 # sysctl -w net.ipv4.route.flush=1 IF IPv6 is not disabled: Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv6.conf.all.accept_source_route = 0 net.ipv6.conf.default.accept_source_route = 0 Run the following commands to set the active kernel parameters: # sysctl -w net.ipv6.conf.all.accept_source_route=0 # sysctl -w net.ipv6.conf.default.accept_source_route=0 # sysctl -w net.ipv6.route.flush=1",
    "function_names": [
      "network_interface_source_routing_disabled",
      "ec2_instance_source_routing_disabled",
      "vpc_network_source_routing_disabled",
      "subnet_source_routing_disabled",
      "network_acl_source_routing_disabled",
      "security_group_source_routing_disabled",
      "firewall_source_routing_disabled",
      "route_table_source_routing_disabled"
    ]
  },
  {
    "id": "3.3.2",
    "title": "Ensure ICMP redirects are not accepted",
    "assessment": "Automated",
    "description": "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects and net.ipv6.conf.all.accept_redirects to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.",
    "rationale": "Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured.  199 | P a g e",
    "audit": "Run the following commands and verify output matches: # sysctl net.ipv4.conf.all.accept_redirects net.ipv4.conf.all.accept_redirects = 0 # sysctl net.ipv4.conf.default.accept_redirects net.ipv4.conf.default.accept_redirects = 0 # grep -s -- \"net\\.ipv4\\.conf\\.all\\.accept_redirects\" /run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf net.ipv4.conf.all.accept_redirects= 0 # grep -s -- \"net\\.ipv4\\.conf\\.default\\.accept_redirects\" /run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf net.ipv4.conf.default.accept_redirects= 0 IF IPv6 is not disabled: Run the following commands and verify output matches: # sysctl net.ipv6.conf.all.accept_redirects net.ipv6.conf.all.accept_redirects = 0 # sysctl net.ipv6.conf.default.accept_redirects net.ipv6.conf.default.accept_redirects = 0 # grep -s -- \"net\\.ipv6\\.conf\\.all\\.accept_redirects\" /run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf net.ipv6.conf.all.accept_redirects= 0 # grep -s -- \"net\\.ipv6\\.conf\\.default\\.accept_redirects\" /run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf net.ipv6.conf.default.accept_redirects= 0 OR verify IPv6 is disabled:  200 | P a g e Run the following script. Output will confirm if IPv6 is disabled on the system. #!/bin/bash [ -n \"$passing\" ] && passing=\"\" [ -z \"$(grep \"^\\s*linux\" /boot/grub2/grub.cfg | grep -v ipv6.disabled=1)\" ] && passing=\"true\" grep -Eq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" /etc/sysctl.conf \\ /etc/sysctl.d/*.conf && grep -Eq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" \\ /etc/sysctl.conf /etc/sysctl.d/*.conf && sysctl net.ipv6.conf.all.disable_ipv6 | \\ grep -Eq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" && \\ sysctl net.ipv6.conf.default.disable_ipv6 | \\ grep -Eq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" && passing=\"true\" if [ \"$passing\" = true ] ; then echo \"IPv6 is disabled on the system\" else echo \"IPv6 is enabled on the system\" fi",
    "remediation": "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.conf.all.accept_redirects = 0 net.ipv4.conf.default.accept_redirects = 0 Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.conf.all.accept_redirects=0 # sysctl -w net.ipv4.conf.default.accept_redirects=0 # sysctl -w net.ipv4.route.flush=1 IF IPv6 is not disabled: Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv6.conf.all.accept_redirects = 0 net.ipv6.conf.default.accept_redirects = 0 Run the following commands to set the active kernel parameters: # sysctl -w net.ipv6.conf.all.accept_redirects=0 # sysctl -w net.ipv6.conf.default.accept_redirects=0 # sysctl -w net.ipv6.route.flush=1   201 | P a g e",
    "function_names": [
      "network_ipv4_icmp_redirects_disabled",
      "network_ipv4_icmp_redirects_disabled_all_interfaces",
      "network_ipv6_icmp_redirects_disabled",
      "network_ipv6_icmp_redirects_disabled_all_interfaces",
      "network_icmp_redirects_disabled_all_protocols",
      "network_icmp_redirects_disabled_all_interfaces",
      "network_ipv4_accept_redirects_disabled",
      "network_ipv6_accept_redirects_disabled"
    ]
  },
  {
    "id": "3.3.3",
    "title": "Ensure secure ICMP redirects are not accepted",
    "assessment": "Automated",
    "description": "Secure ICMP redirects are the same as ICMP redirects, except they come from gateways listed on the default gateway list. It is assumed that these gateways are known to your system, and that they are likely to be secure.",
    "rationale": "It is still possible for even known gateways to be compromised. Setting net.ipv4.conf.all.secure_redirects to 0 protects the system from routing table updates by possibly compromised known gateways.",
    "audit": "Run the following commands and verify output matches: # sysctl net.ipv4.conf.all.secure_redirects net.ipv4.conf.all.secure_redirects = 0 # sysctl net.ipv4.conf.default.secure_redirects net.ipv4.conf.default.secure_redirects = 0 # grep -s -- \"net\\.ipv4\\.conf\\.all\\.secure_redirects\" /run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf net.ipv4.conf.all.secure_redirects= 0 # grep -s -- \"net\\.ipv4\\.conf\\.default\\.secure_redirects\" /run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf net.ipv4.conf.default.secure_redirects= 0   203 | P a g e",
    "remediation": "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.conf.all.secure_redirects = 0 net.ipv4.conf.default.secure_redirects = 0 Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.conf.all.secure_redirects=0 # sysctl -w net.ipv4.conf.default.secure_redirects=0 # sysctl -w net.ipv4.route.flush=1",
    "function_names": [
      "network_security_icmp_redirects_disabled",
      "network_security_icmp_redirects_secure_only",
      "network_security_icmp_redirects_untrusted_blocked",
      "network_security_icmp_redirects_gateway_restricted",
      "network_security_icmp_redirects_default_gateway_only"
    ]
  },
  {
    "id": "3.3.4",
    "title": "Ensure suspicious packets are logged",
    "assessment": "Automated",
    "description": "When enabled, this feature logs packets with un-routable source addresses to the kernel log.",
    "rationale": "Enabling this feature and logging these packets allows an administrator to investigate the possibility that an attacker is sending spoofed packets to their system.",
    "audit": "Run the following commands and verify output matches: # sysctl net.ipv4.conf.all.log_martians net.ipv4.conf.all.log_martians = 1 # sysctl net.ipv4.conf.default.log_martians net.ipv4.conf.default.log_martians = 1 # grep -s -- \"net\\.ipv4\\.conf\\.all\\.log_martians\" /run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf net.ipv4.conf.all.log_martians = 1 # grep -s -- \"net\\.ipv4\\.conf\\.default\\.log_martians\" /run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf net.ipv4.conf.default.log_martians = 1   205 | P a g e",
    "remediation": "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.conf.all.log_martians = 1 net.ipv4.conf.default.log_martians = 1 Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.conf.all.log_martians=1 # sysctl -w net.ipv4.conf.default.log_martians=1 # sysctl -w net.ipv4.route.flush=1",
    "function_names": [
      "network_interface_suspicious_packets_logging_enabled",
      "vpc_flow_log_suspicious_packets_logging_enabled",
      "network_acl_suspicious_packets_logging_enabled",
      "security_group_suspicious_packets_logging_enabled",
      "firewall_suspicious_packets_logging_enabled",
      "cloud_network_suspicious_packets_logging_enabled",
      "kernel_log_suspicious_packets_logging_enabled",
      "network_monitoring_suspicious_packets_logging_enabled"
    ]
  },
  {
    "id": "3.3.5",
    "title": "Ensure broadcast ICMP requests are ignored",
    "assessment": "Automated",
    "description": "Setting net.ipv4.icmp_echo_ignore_broadcasts to 1 will cause the system to ignore all ICMP echo and timestamp requests to broadcast and multicast addresses.",
    "rationale": "Accepting ICMP echo and timestamp requests with broadcast or multicast destinations for your network could be used to trick your host into starting (or participating) in a Smurf attack. A Smurf attack relies on an attacker sending large amounts of ICMP broadcast messages with a spoofed source address. All hosts receiving this message and responding would send echo-reply messages back to the spoofed address, which is probably not routable. If many hosts respond to the packets, the amount of traffic on the network could be significantly multiplied.",
    "audit": "Run the following commands and verify output matches: # sysctl net.ipv4.icmp_echo_ignore_broadcasts net.ipv4.icmp_echo_ignore_broadcasts = 1 # grep -s -- \"net\\.ipv4\\.icmp_echo_ignore_broadcasts\" /run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf net.ipv4.icmp_echo_ignore_broadcasts = 1",
    "remediation": "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.icmp_echo_ignore_broadcasts = 1 Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1 # sysctl -w net.ipv4.route.flush=1   207 | P a g e",
    "function_names": [
      "compute_network_icmp_broadcast_ignored",
      "compute_network_icmp_echo_ignored",
      "compute_network_broadcast_requests_ignored",
      "compute_network_icmp_timestamp_ignored",
      "compute_network_icmp_multicast_ignored"
    ]
  },
  {
    "id": "3.3.6",
    "title": "Ensure bogus ICMP responses are ignored",
    "assessment": "Automated",
    "description": "Setting icmp_ignore_bogus_error_responses to 1 prevents the kernel from logging bogus responses (RFC-1122 non-compliant) from broadcast reframes, keeping file systems from filling up with useless log messages.",
    "rationale": "Some routers (and some attackers) will send responses that violate RFC-1122 and attempt to fill up a log file system with many useless error messages.",
    "audit": "Run the following commands and verify output matches: # sysctl net.ipv4.icmp_ignore_bogus_error_responses net.ipv4.icmp_ignore_bogus_error_responses = 1 # grep -s -- \"net.ipv4.icmp_ignore_bogus_error_responses\" /run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf net.ipv4.icmp_ignore_bogus_error_responses = 1",
    "remediation": "Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.icmp_ignore_bogus_error_responses = 1 Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1 # sysctl -w net.ipv4.route.flush=1   209 | P a g e",
    "function_names": [
      "sysctl_icmp_ignore_bogus_error_responses_enabled",
      "kernel_network_icmp_bogus_responses_ignored",
      "linux_sysctl_icmp_error_responses_disabled",
      "network_icmp_bogus_responses_filtered",
      "os_icmp_ignore_bogus_error_responses_set"
    ]
  },
  {
    "id": "3.3.7",
    "title": "Ensure Reverse Path Filtering is enabled",
    "assessment": "Automated",
    "description": "Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 forces the Linux kernel to utilize reverse path filtering on a received packet to determine if the packet was valid. Essentially, with reverse path filtering, if the return packet does not go out the same interface that the corresponding source packet came from, the packet is dropped (and logged if log_martians is set).",
    "rationale": "Setting these flags is a good way to deter attackers from sending your system bogus packets that cannot be responded to. One instance where this feature breaks down is if asymmetrical routing is employed. This would occur when using dynamic routing protocols (bgp, ospf, etc) on your system. If you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing.",
    "audit": "Run the following commands and verify output matches: # sysctl net.ipv4.conf.all.rp_filter net.ipv4.conf.all.rp_filter = 1 # sysctl net.ipv4.conf.default.rp_filter net.ipv4.conf.default.rp_filter = 1 # grep -s -- \"net\\.ipv4\\.conf\\.all\\.rp_filter\" /run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf net.ipv4.conf.all.rp_filter = 1 # grep -s -- \"net\\.ipv4\\.conf\\.default\\.rp_filter\" /run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf net.ipv4.conf.default.rp_filter = 1   211 | P a g e",
    "remediation": "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.conf.all.rp_filter = 1 net.ipv4.conf.default.rp_filter = 1 Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.conf.all.rp_filter=1 # sysctl -w net.ipv4.conf.default.rp_filter=1 # sysctl -w net.ipv4.route.flush=1",
    "function_names": [
      "compute_network_reverse_path_filtering_enabled",
      "compute_network_rp_filter_all_enabled",
      "compute_network_rp_filter_default_enabled",
      "compute_network_martian_logging_enabled",
      "compute_network_invalid_packet_dropped"
    ]
  },
  {
    "id": "3.3.8",
    "title": "Ensure TCP SYN Cookies is enabled",
    "assessment": "Automated",
    "description": "When tcp_syncookies is set, the kernel will handle TCP SYN packets normally until the half-open connection queue is full, at which time, the SYN cookie functionality kicks in. SYN cookies work by not using the SYN queue at all. Instead, the kernel simply replies to the SYN with a SYN|ACK, but will include a specially crafted TCP sequence number that encodes the source and destination IP address and port number and the time the packet was sent. A legitimate connection would send the ACK packet of the three way handshake with the specially crafted sequence number. This allows the system to verify that it has received a valid response to a SYN cookie and allow the connection, even though there is no corresponding SYN in the queue.",
    "rationale": "Attackers use SYN flood attacks to perform a denial of service attacked on a system by sending many SYN packets without completing the three way handshake. This will quickly use up slots in the kernel's half-open connection queue and prevent legitimate connections from succeeding. SYN cookies allow the system to keep accepting valid connections, even if under a denial of service attack.",
    "audit": "Run the following commands and verify output matches: # sysctl net.ipv4.tcp_syncookies net.ipv4.tcp_syncookies = 1 # grep -s -- \"net\\.ipv4\\.tcp_syncookies\" /run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf net.ipv4.tcp_syncookies = 1   213 | P a g e",
    "remediation": "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.tcp_syncookies = 1 Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.tcp_syncookies=1 # sysctl -w net.ipv4.route.flush=1",
    "function_names": [
      "compute_kernel_tcp_syncookies_enabled",
      "compute_kernel_tcp_syncookies_configured",
      "compute_kernel_tcp_syncookies_active",
      "compute_kernel_tcp_syncookies_protected",
      "compute_kernel_tcp_syncookies_verified"
    ]
  },
  {
    "id": "3.3.9",
    "title": "Ensure IPv6 router advertisements are not accepted",
    "assessment": "Automated",
    "description": "This setting disables the system's ability to accept IPv6 router advertisements.",
    "rationale": "It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes.",
    "audit": "Run the following commands and verify output matches: # sysctl net.ipv6.conf.all.accept_ra net.ipv6.conf.all.accept_ra = 0 # sysctl net.ipv6.conf.default.accept_ra net.ipv6.conf.default.accept_ra = 0 # grep -s -- \"net\\.ipv6\\.conf\\.all\\.accept_ra\" /run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf net.ipv6.conf.all.accept_ra = 0 # grep -s -- \"net\\.ipv6\\.conf\\.default\\.accept_ra\" /run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf net.ipv6.conf.default.accept_ra = 0 OR Verify IPv6 is disabled:  215 | P a g e Run the following script. Output will confirm if IPv6 is disabled on the system. #!/usr/bin/env bash ipv6_chk() { passing=\"\" grubfile=\"$(find /boot -type f \\( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \\) \\ -exec grep -Pl -- '^\\h*(kernelopts=|linux|kernel)' {} \\;)\" ! grep -P -- \"^\\h*(kernelopts=|linux|kernel)\" \"$grubfile\" | grep -vq -- ipv6.disable=1 && passing=\"true\" grep -Pq -- \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\h*(#.*)?$\" \\ /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf && \\ grep -Pq -- \"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\h*(#.*)?$\" \\ /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf && \\ sysctl net.ipv6.conf.all.disable_ipv6 | \\ grep -Pq -- \"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\h*(#.*)?$\" && \\ sysctl net.ipv6.conf.default.disable_ipv6 | \\ grep -Pq -- \"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\h*(#.*)?$\" && passing=\"true\" if [ \"$passing\" = true ] ; then echo -e \"\\nIPv6 is disabled on the system\\n\" else echo -e \"\\nIPv6 is enabled on the system\\n\" fi } ipv6_chk",
    "remediation": "IF IPv6 is enabled: Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv6.conf.all.accept_ra = 0 net.ipv6.conf.default.accept_ra = 0 Run the following commands to set the active kernel parameters: # sysctl -w net.ipv6.conf.all.accept_ra=0 # sysctl -w net.ipv6.conf.default.accept_ra=0 # sysctl -w net.ipv6.route.flush=1   216 | P a g e",
    "function_names": [
      "network_interface_ipv6_router_advertisements_disabled",
      "vpc_ipv6_router_advertisements_blocked",
      "instance_ipv6_router_advertisements_rejected",
      "subnet_ipv6_router_advertisements_denied",
      "network_security_ipv6_router_advertisements_disabled"
    ]
  },
  {
    "id": "3.4.1",
    "title": "Ensure DCCP is disabled",
    "assessment": "Automated",
    "description": "The Datagram Congestion Control Protocol (DCCP) is a transport layer protocol that supports streaming media and telephony. DCCP provides a way to gain access to congestion control, without having to do it at the application layer, but does not provide in- sequence delivery.",
    "rationale": "If the protocol is not required, it is recommended that the drivers not be installed to reduce the potential attack surface.",
    "audit": "Run the following commands and verify the output is as indicated: # modprobe -n -v dccp install /bin/true # lsmod | grep dccp <No output>",
    "remediation": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf Example: vim /etc/modprobe.d/dccp.conf and add the following line: install dccp /bin/true   219 | P a g e",
    "function_names": [
      "network_protocol_dccp_disabled",
      "transport_layer_dccp_protocol_disabled",
      "firewall_dccp_traffic_blocked",
      "security_group_dccp_denied",
      "network_acl_dccp_restricted",
      "os_network_dccp_module_disabled",
      "vpc_dccp_protocol_rejected",
      "load_balancer_dccp_protocol_disabled",
      "compute_instance_dccp_disabled",
      "cloud_cdn_dccp_protocol_blocked"
    ]
  },
  {
    "id": "3.4.2",
    "title": "Ensure SCTP is disabled",
    "assessment": "Automated",
    "description": "The Stream Control Transmission Protocol (SCTP) is a transport layer protocol used to support message oriented communication, with several streams of messages in one connection. It serves a similar function as TCP and UDP, incorporating features of both. It is message-oriented like UDP, and ensures reliable in-sequence transport of messages with congestion control like TCP.",
    "rationale": "If the protocol is not being used, it is recommended that kernel module not be loaded, disabling the service to reduce the potential attack surface.",
    "audit": "Run the following commands and verify the output is as indicated: # modprobe -n -v sctp install /bin/true # lsmod | grep sctp <No output>",
    "remediation": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf Example: vim /etc/modprobe.d/sctp.conf and add the following line: install sctp /bin/true   221 | P a g e",
    "function_names": [
      "network_security_protocol_sctp_disabled",
      "transport_layer_protocol_sctp_disabled",
      "network_protocol_sctp_disabled",
      "transport_protocol_sctp_disabled",
      "network_connection_sctp_disabled",
      "transport_service_sctp_disabled",
      "network_stack_sctp_disabled",
      "transport_layer_sctp_disabled"
    ]
  },
  {
    "id": "3.5.1.1",
    "title": "Ensure iptables package is installed",
    "assessment": "Automated",
    "description": "iptables is a utility program that allows a system administrator to configure the tables provided by the Linux kernel firewall, implemented as different Netfilter modules, and the chains and rules it stores. Different kernel modules and programs are used for different protocols; iptables applies to IPv4, ip6tables to IPv6, arptables to ARP, and ebtables to Ethernet frames.",
    "rationale": "A method of configuring and maintaining firewall rules is necessary to configure a Host Based Firewall.",
    "audit": "Run the following command to verify that iptables is installed: rpm -q iptables iptables-<version>",
    "remediation": "Run the following command to install iptables # zypper install iptables Default Value: Installed",
    "function_names": [
      "compute_firewall_iptables_installed",
      "compute_firewall_ip6tables_installed",
      "compute_firewall_arptables_installed",
      "compute_firewall_ebtables_installed",
      "compute_firewall_netfilter_enabled",
      "compute_firewall_kernel_module_loaded",
      "compute_firewall_package_installed",
      "compute_firewall_rule_engine_available"
    ]
  },
  {
    "id": "3.5.2.1",
    "title": "Ensure loopback traffic is configured",
    "assessment": "Automated",
    "description": "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8).",
    "rationale": "Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure. Note: Changing firewall settings while connected over network can result in being locked out of the system.",
    "audit": "Run the following commands and verify output includes the listed rules in order (packet and byte counts may differ): # iptables -L INPUT -v -n Chain INPUT (policy DROP 0 packets, 0 bytes) pkts bytes target     prot opt in     out     source destination 0     0 ACCEPT     all  --  lo     *       0.0.0.0/0            0.0.0.0/0 0     0 DROP       all  --  *      *       127.0.0.0/8          0.0.0.0/0 # iptables -L OUTPUT -v -n Chain OUTPUT (policy DROP 0 packets, 0 bytes) pkts bytes target     prot opt in     out     source destination 0     0 ACCEPT     all  --  *      lo      0.0.0.0/0            0.0.0.0/0",
    "remediation": "Run the following commands to implement the loopback rules: # iptables -A INPUT -i lo -j ACCEPT # iptables -A OUTPUT -o lo -j ACCEPT # iptables -A INPUT -s 127.0.0.0/8 -j DROP   228 | P a g e",
    "function_names": [
      "network_interface_loopback_configured",
      "network_interface_loopback_traffic_allowed",
      "network_interface_loopback_deny_other_interfaces",
      "network_interface_loopback_network_protected",
      "network_interface_loopback_127_0_0_0_8_denied"
    ]
  },
  {
    "id": "3.5.2.2",
    "title": "Ensure outbound and established connections are configured",
    "assessment": "Manual",
    "description": "Configure the firewall rules for new outbound, and established connections.",
    "rationale": "If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage. Note: Changing firewall settings while connected over network can result in being locked out of the system.",
    "audit": "Run the following command and verify all rules for new outbound, and established connections match site policy: # iptables -L -v -n",
    "remediation": "Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections: # iptables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT # iptables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT # iptables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT # iptables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT # iptables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT # iptables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT   230 | P a g e",
    "function_names": [
      "compute_firewall_outbound_configured",
      "compute_firewall_established_connections_configured",
      "network_firewall_outbound_allowed",
      "network_firewall_established_allowed",
      "vpc_firewall_outbound_enabled",
      "vpc_firewall_established_enabled",
      "security_group_outbound_configured",
      "security_group_established_configured",
      "network_acl_outbound_allowed",
      "network_acl_established_allowed"
    ]
  },
  {
    "id": "3.5.2.3",
    "title": "Ensure firewall rules exist for all open ports",
    "assessment": "Automated",
    "description": "Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.",
    "rationale": "Without a firewall rule configured for open ports default firewall policy will drop all packets to these ports. Notes: • Changing firewall settings while connected over network can result in being locked out of the system. • The remediation command opens up the port to traffic from all sources. Consult iptables documentation and set any restrictions in compliance with site policy.   232 | P a g e",
    "audit": "Run the following command to determine open ports: # ss -4tuln Netid  State      Recv-Q Send-Q    Local Address:Port                   Peer Address:Port udp    UNCONN     0      0                     *:68 *:* udp    UNCONN     0      0                     *:123 *:* tcp    LISTEN     0      128                   *:22 *:* Run the following command to determine firewall rules: # iptables -L INPUT -v -n Chain INPUT (policy DROP 0 packets, 0 bytes) pkts bytes target     prot opt in     out     source destination 0     0 ACCEPT     all  --  lo     *       0.0.0.0/0            0.0.0.0/0 0     0 DROP       all  --  *      *       127.0.0.0/8          0.0.0.0/0 0     0 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0 tcp dpt:22 state NEW Verify all open ports listening on non-localhost addresses have at least one firewall rule. The last line identified by the \"tcp dpt:22 state NEW\" identifies it as a firewall rule for new connections on tcp port 22.",
    "remediation": "For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections: # iptables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT   233 | P a g e",
    "function_names": [
      "compute_firewall_rules_open_ports",
      "compute_firewall_rules_all_ports",
      "network_firewall_rules_open_ports",
      "network_firewall_rules_all_ports",
      "compute_instance_firewall_rules_open_ports",
      "network_security_group_rules_open_ports",
      "compute_security_group_rules_open_ports",
      "network_firewall_rules_non_loopback_ports",
      "compute_firewall_rules_non_loopback_ports",
      "network_security_group_rules_non_loopback_ports"
    ]
  },
  {
    "id": "3.5.2.4",
    "title": "Ensure default deny firewall policy",
    "assessment": "Automated",
    "description": "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.",
    "rationale": "With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage. Note: Changing firewall settings while connected over network can result in being locked out of the system.",
    "audit": "Run the following command and verify that the policy for the INPUT , OUTPUT , and FORWARD chains is DROP or REJECT : # iptables -L Chain INPUT (policy DROP) Chain FORWARD (policy DROP) Chain OUTPUT (policy DROP)",
    "remediation": "Run the following commands to implement a default DROP policy: # iptables -P INPUT DROP # iptables -P OUTPUT DROP # iptables -P FORWARD DROP",
    "function_names": [
      "compute_firewall_default_deny_all",
      "network_firewall_default_deny_all",
      "vpc_firewall_default_deny_all",
      "cloud_firewall_default_deny_all",
      "security_group_default_deny_all",
      "network_acl_default_deny_all",
      "firewall_policy_default_deny_all",
      "cloud_armor_default_deny_all",
      "network_security_default_deny_all",
      "cloud_network_default_deny_all"
    ]
  },
  {
    "id": "3.5.3.1",
    "title": "Ensure IPv6 loopback traffic is configured",
    "assessment": "Automated",
    "description": "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (::1).",
    "rationale": "Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (::1) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure. Note: Changing firewall settings while connected over network can result in being locked out of the system.  238 | P a g e",
    "audit": "Run the following commands and verify output includes the listed rules in order (packet and byte counts may differ): # ip6tables -L INPUT -v -n Chain INPUT (policy DROP 0 packets, 0 bytes) pkts bytes target     prot opt in     out     source destination 0     0 ACCEPT     all      lo     *       ::/0                 ::/0 0     0 DROP       all      *      *       ::1                  ::/0 # ip6tables -L OUTPUT -v -n Chain OUTPUT (policy DROP 0 packets, 0 bytes) pkts bytes target     prot opt in     out     source destination 0     0 ACCEPT     all      *      lo      ::/0                 ::/0 OR Verify IPv6 is disabled: Run the following script. Output will confirm if IPv6 is disabled on the system. #!/bin/bash [ -n \"$passing\" ] && passing=\"\" [ -z \"$(grep \"^\\s*linux\" /boot/grub2/grub.cfg | grep -v ipv6.disable=1)\" ] && passing=\"true\" grep -Eq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" /etc/sysctl.conf \\ /etc/sysctl.d/*.conf && grep -Eq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" \\ /etc/sysctl.conf /etc/sysctl.d/*.conf && sysctl net.ipv6.conf.all.disable_ipv6 | \\ grep -Eq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" && \\ sysctl net.ipv6.conf.default.disable_ipv6 | \\ grep -Eq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" && passing=\"true\" if [ \"$passing\" = true ] ; then echo \"IPv6 is disabled on the system\" else echo \"IPv6 is enabled on the system\" fi   239 | P a g e",
    "remediation": "Run the following commands to implement the loopback rules: # ip6tables -A INPUT -i lo -j ACCEPT # ip6tables -A OUTPUT -o lo -j ACCEPT # ip6tables -A INPUT -s ::1 -j DROP",
    "function_names": [
      "network_interface_loopback_ipv6_configured",
      "network_interface_loopback_traffic_allowed",
      "network_interface_non_loopback_ipv6_denied",
      "network_interface_loopback_network_protected",
      "network_interface_ipv6_loopback_restricted"
    ]
  },
  {
    "id": "3.5.3.2",
    "title": "Ensure IPv6 outbound and established connections are configured",
    "assessment": "Manual",
    "description": "Configure the firewall rules for new outbound, and established IPv6 connections.",
    "rationale": "If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage. Note: Changing firewall settings while connected over network can result in being locked out of the system.  241 | P a g e",
    "audit": "Run the following command and verify all rules for new outbound, and established connections match site policy: # ip6tables -L -v -n OR Verify IPv6 is disabled: Run the following script. Output will confirm if IPv6 is disabled on the system. #!/bin/bash [ -n \"$passing\" ] && passing=\"\" [ -z \"$(grep \"^\\s*linux\" /boot/grub2/grub.cfg | grep -v ipv6.disable=1)\" ] && passing=\"true\" grep -Eq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" /etc/sysctl.conf \\ /etc/sysctl.d/*.conf && grep -Eq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" \\ /etc/sysctl.conf /etc/sysctl.d/*.conf && sysctl net.ipv6.conf.all.disable_ipv6 | \\ grep -Eq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" && \\ sysctl net.ipv6.conf.default.disable_ipv6 | \\ grep -Eq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" && passing=\"true\" if [ \"$passing\" = true ] ; then echo \"IPv6 is disabled on the system\" else echo \"IPv6 is enabled on the system\" fi",
    "remediation": "Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections: # ip6tables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT # ip6tables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT # ip6tables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT # ip6tables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT # ip6tables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT # ip6tables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT   242 | P a g e",
    "function_names": [
      "firewall_rule_ipv6_outbound_configured",
      "firewall_rule_ipv6_established_configured",
      "network_firewall_ipv6_connections_allowed",
      "vpc_firewall_ipv6_outbound_enabled",
      "security_group_ipv6_outbound_configured",
      "nacl_ipv6_outbound_configured",
      "nacl_ipv6_established_configured",
      "network_acl_ipv6_connections_allowed"
    ]
  },
  {
    "id": "3.5.3.3",
    "title": "Ensure IPv6 firewall rules exist for all open ports",
    "assessment": "Automated",
    "description": "Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.",
    "rationale": "Without a firewall rule configured for open ports default firewall policy will drop all packets to these ports. Notes: • Changing firewall settings while connected over network can result in being locked out of the system. • The remediation command opens up the port to traffic from all sources. Consult iptables documentation and set any restrictions in compliance with site policy.   244 | P a g e",
    "audit": "Run the following command to determine open ports: # ss -6tuln Netid  State      Recv-Q Send-Q    Local Address:Port                   Peer Address:Port udp    UNCONN     0      0                   ::1:123 :::* udp    UNCONN     0      0                    :::123 :::* tcp    LISTEN     0      128                  :::22 :::* tcp    LISTEN     0      20                  ::1:25 :::* Run the following command to determine firewall rules: # ip6tables -L INPUT -v -n Chain INPUT (policy DROP 0 packets, 0 bytes) pkts bytes target     prot opt in     out     source destination 0     0 ACCEPT     all      lo     *       ::/0                 ::/0 0     0 DROP       all      *      *       ::1                  ::/0 0     0 ACCEPT     tcp      *      *       ::/0                 ::/0 tcp dpt:22 state NEW Verify all open ports listening on non-localhost addresses have at least one firewall rule. The last line identified by the \"tcp dpt:22 state NEW\" identifies it as a firewall rule for new connections on tcp port 22. OR Verify IPv6 is disabled:  245 | P a g e Run the following script. Output will confirm if IPv6 is disabled on the system. #!/bin/bash [ -n \"$passing\" ] && passing=\"\" [ -z \"$(grep \"^\\s*linux\" /boot/grub2/grub.cfg | grep -v ipv6.disable=1)\" ] && passing=\"true\" grep -Eq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" /etc/sysctl.conf \\ /etc/sysctl.d/*.conf && grep -Eq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" \\ /etc/sysctl.conf /etc/sysctl.d/*.conf && sysctl net.ipv6.conf.all.disable_ipv6 | \\ grep -Eq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" && \\ sysctl net.ipv6.conf.default.disable_ipv6 | \\ grep -Eq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" && passing=\"true\" if [ \"$passing\" = true ] ; then echo \"IPv6 is disabled on the system\" else echo \"IPv6 is enabled on the system\" fi",
    "remediation": "For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections: # ip6tables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT",
    "function_names": [
      "compute_firewall_ipv6_rules_exist",
      "compute_firewall_open_ports_ipv6_protected",
      "compute_firewall_all_ports_ipv6_rules_configured",
      "network_firewall_ipv6_rules_all_open_ports",
      "network_firewall_open_ports_ipv6_restricted"
    ]
  },
  {
    "id": "3.5.3.4",
    "title": "Ensure IPv6 default deny firewall policy",
    "assessment": "Automated",
    "description": "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.",
    "rationale": "With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage. Note: Changing firewall settings while connected over network can result in being locked out of the system.  247 | P a g e",
    "audit": "Run the following command and verify that the policy for the INPUT, OUTPUT, and FORWARD chains is DROP or REJECT: # ip6tables -L Chain INPUT (policy DROP) Chain FORWARD (policy DROP) Chain OUTPUT (policy DROP) OR Verify IPv6 is disabled: Run the following script. Output will confirm if IPv6 is disabled on the system. #!/bin/bash [ -n \"$passing\" ] && passing=\"\" [ -z \"$(grep \"^\\s*linux\" /boot/grub2/grub.cfg | grep -v ipv6.disable=1)\" ] && passing=\"true\" grep -Eq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" /etc/sysctl.conf \\ /etc/sysctl.d/*.conf && grep -Eq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" \\ /etc/sysctl.conf /etc/sysctl.d/*.conf && sysctl net.ipv6.conf.all.disable_ipv6 | \\ grep -Eq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" && \\ sysctl net.ipv6.conf.default.disable_ipv6 | \\ grep -Eq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$\" && passing=\"true\" if [ \"$passing\" = true ] ; then echo \"IPv6 is disabled on the system\" else echo \"IPv6 is enabled on the system\" fi",
    "remediation": "Run the following commands to implement a default DROP policy: # ip6tables -P INPUT DROP # ip6tables -P OUTPUT DROP # ip6tables -P FORWARD DROP   248 | P a g e",
    "function_names": [
      "network_firewall_ipv6_default_deny",
      "firewall_policy_ipv6_deny_all",
      "vpc_firewall_ipv6_traffic_denied",
      "network_acl_ipv6_default_deny",
      "security_group_ipv6_deny_all",
      "firewall_rule_ipv6_default_deny",
      "network_security_ipv6_deny_policy",
      "vpc_network_ipv6_deny_all",
      "firewall_ipv6_default_deny_rule",
      "network_policy_ipv6_deny_all_traffic"
    ]
  },
  {
    "id": "4.1.1.1",
    "title": "Ensure auditd is installed",
    "assessment": "Automated",
    "description": "auditd is the userspace component to the Linux Auditing System. It's responsible for writing audit records to the disk",
    "rationale": "The capturing of system events provides system administrators with information to allow them to determine if unauthorized access to their system is occurring.",
    "audit": "Run the following command and verify auditd is installed: # rpm -q audit audit-<version>",
    "remediation": "Run the following command to Install auditd # zypper install audit",
    "function_names": [
      "linux_auditd_installed",
      "linux_auditd_service_enabled",
      "linux_auditd_config_immutable",
      "linux_auditd_logs_encrypted",
      "linux_auditd_logs_retention_over_90d",
      "linux_auditd_rules_configured",
      "linux_auditd_logs_remote_backup_enabled",
      "linux_auditd_logs_integrity_monitored"
    ]
  },
  {
    "id": "4.1.1.2",
    "title": "Ensure auditd service is enabled and running",
    "assessment": "Automated",
    "description": "Turn on the auditd daemon to record system events.",
    "rationale": "The capturing of system events provides system administrators with information to allow them to determine if unauthorized access to their system is occurring.",
    "audit": "Run the following command to verify auditd is enabled: # systemctl is-enabled auditd enabled Run the following command to verify that auditd is running: # systemctl status auditd | grep 'Active: active (running) ' Active: active (running) since <time and date>",
    "remediation": "Run the following command to enable and start auditd: # systemctl --now enable auditd",
    "function_names": [
      "auditd_service_enabled",
      "auditd_service_running",
      "auditd_logging_enabled",
      "auditd_daemon_active",
      "auditd_system_events_recorded"
    ]
  },
  {
    "id": "4.1.1.3",
    "title": "Ensure auditing for processes that start prior to auditd is enabled",
    "assessment": "Automated",
    "description": "Configure grub so that processes that are capable of being audited can be audited even if they start up prior to auditd startup.",
    "rationale": "Audit events need to be captured on processes that start up prior to auditd , so that potential malicious activity cannot go undetected. Note: This recommendation is designed around the grub2 bootloader, if LILO or another bootloader is in use in your environment enact equivalent settings.",
    "audit": "Run the following command and verify that each linux line has the audit=1 parameter set: # grep \"^\\s*linux\" /boot/grub2/grub.cfg | grep -v \"audit=1\" Nothing should be returned",
    "remediation": "Edit /etc/default/grub and add audit=1 to GRUB_CMDLINE_LINUX: GRUB_CMDLINE_LINUX=\"audit=1\" Run the following command to update the grub2 configuration: # grub2-mkconfig -o /boot/grub2/grub.cfg   255 | P a g e",
    "function_names": [
      "grub_auditd_process_auditing_enabled",
      "grub_auditd_early_process_auditing_enabled",
      "grub_auditd_pre_start_auditing_enabled",
      "grub_auditd_boot_process_auditing_enabled",
      "grub_auditd_persistent_auditing_enabled"
    ]
  },
  {
    "id": "4.1.2.1",
    "title": "Ensure audit log storage size is configured",
    "assessment": "Automated",
    "description": "Configure the maximum size of the audit log file. Once the log reaches the maximum size, it will be rotated and a new log file will be started. Notes: • The max_log_file parameter is measured in megabytes. • Other methods of log rotation may be appropriate based on site policy. One example is time-based rotation strategies which don't have native support in auditd configurations. Manual audit of custom configurations should be evaluated for effectiveness and completeness.",
    "rationale": "It is important that an appropriate size is determined for log files so that they do not impact the system and audit data is not lost.",
    "audit": "Run the following command and ensure output is in compliance with site policy: # grep max_log_file /etc/audit/auditd.conf max_log_file = <MB>",
    "remediation": "Set the following parameter in /etc/audit/auditd.conf in accordance with site policy: max_log_file = <MB>",
    "function_names": [
      "auditd_log_max_size_configured",
      "auditd_log_rotation_enabled",
      "auditd_log_file_size_limited",
      "auditd_log_rotation_strategy_configured",
      "auditd_log_storage_managed"
    ]
  },
  {
    "id": "4.1.2.2",
    "title": "Ensure audit logs are not automatically deleted",
    "assessment": "Automated",
    "description": "The max_log_file_action setting determines how to handle the audit log file reaching the max file size. A value of keep_logs will rotate the logs but never delete old logs.",
    "rationale": "In high security contexts, the benefits of maintaining a long audit history exceed the cost of storing the audit history.",
    "audit": "Run the following command and verify output matches: # grep max_log_file_action /etc/audit/auditd.conf max_log_file_action = keep_logs",
    "remediation": "Set the following parameter in /etc/audit/auditd.conf: max_log_file_action = keep_logs",
    "function_names": [
      "audit_logs_max_log_file_action_keep_logs",
      "audit_logs_rotation_retain_all",
      "audit_logs_auto_delete_disabled",
      "audit_logs_retention_indefinite",
      "audit_logs_preservation_enabled"
    ]
  },
  {
    "id": "4.1.2.3",
    "title": "Ensure system is disabled when audit logs are full",
    "assessment": "Automated",
    "description": "The auditd daemon can be configured to halt the system when the audit logs are full.",
    "rationale": "In high security contexts, the risk of detecting unauthorized access or nonrepudiation exceeds the benefit of the system's availability.",
    "audit": "Run the following commands and verify output matches: # grep space_left_action /etc/audit/auditd.conf space_left_action = email # grep action_mail_acct /etc/audit/auditd.conf action_mail_acct = root # grep admin_space_left_action /etc/audit/auditd.conf admin_space_left_action = halt",
    "remediation": "Set the following parameters in /etc/audit/auditd.conf: space_left_action = email action_mail_acct = root admin_space_left_action = halt   260 | P a g e",
    "function_names": [
      "auditd_system_audit_logs_full_disabled",
      "auditd_daemon_audit_logs_full_halt_enabled",
      "auditd_config_audit_logs_full_system_stop",
      "auditd_logs_full_system_halt_enabled",
      "auditd_audit_logs_full_action_halt"
    ]
  },
  {
    "id": "4.1.2.4",
    "title": "Ensure audit_backlog_limit is sufficient",
    "assessment": "Automated",
    "description": "The backlog limit has a default setting of 64",
    "rationale": "During boot if audit=1, then the backlog will hold 64 records. If more that 64 records are created during boot, auditd records will be lost and potential malicious activity could go undetected.",
    "audit": "Run the following commands and verify the audit_backlog_limit= parameter is set to an appropriate size for your organization # grep \"^\\s*linux\" /boot/grub2/grub.cfg | grep -v \"audit_backlog_limit=\" Nothing should be returned # grep \"audit_backlog_limit=\" /boot/grub2/grub.cfg Ensure the returned value complies with local site policy Recommended that this value be 8192 or larger.",
    "remediation": "Edit /etc/default/grub and add audit_backlog_limit=<BACKLOG SIZE> to GRUB_CMDLINE_LINUX: Example: GRUB_CMDLINE_LINUX=\"audit_backlog_limit=8192\" Run the following command to update the grub2 configuration: # grub2-mkconfig -o /boot/grub2/grub.cfg   262 | P a g e",
    "function_names": [
      "auditd_backlog_limit_sufficient",
      "auditd_backlog_limit_min_64",
      "auditd_backlog_limit_configured",
      "auditd_backlog_limit_not_default",
      "auditd_backlog_limit_above_default"
    ]
  },
  {
    "id": "4.1.3",
    "title": "Ensure events that modify date and time information are collected",
    "assessment": "Automated",
    "description": "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier \"time-change\" Note: Reloading the auditd config to set active settings requires the auditd service to be restarted, and may require a system reboot.",
    "rationale": "Unexpected changes in system date and/or time could be a sign of malicious activity on the system.  264 | P a g e",
    "audit": "On a 32 bit system run the following commands: # grep time-change /etc/audit/rules.d/*.rules # auditctl -l | grep time-change Verify output of both matches: -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time- change -a always,exit -F arch=b32 -S clock_settime -k time-change -w /etc/localtime -p wa -k time-change On a 64 bit system run the following commands: Run the following command and verify rules are in a .rules file: # grep time-change /etc/audit/rules.d/*.rules Verify output matches: /etc/audit/rules.d/time_change.rules:-a always,exit -F arch=b64 -S adjtimex - S settimeofday -k time-change /etc/audit/rules.d/time_change.rules:-a always,exit -F arch=b32 -S adjtimex - S settimeofday -S stime -k time-change /etc/audit/rules.d/time_change.rules:-a always,exit -F arch=b64 -S clock_settime -k time-change /etc/audit/rules.d/time_change.rules:-a always,exit -F arch=b32 -S clock_settime -k time-change /etc/audit/rules.d/time_change.rules:-w /etc/localtime -p wa -k time-change Run the following command and verify the rules are in the running auditd config: # auditctl -l | grep time-change Verify output matches: -a always,exit -F arch=b64 -S adjtimex,settimeofday -F key=time-change -a always,exit -F arch=b32 -S stime,settimeofday,adjtimex -F key=time-change -a always,exit -F arch=b64 -S clock_settime -F key=time-change -a always,exit -F arch=b32 -S clock_settime -F key=time-change -w /etc/localtime -p wa -k time-change   265 | P a g e",
    "remediation": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules Example: vi /etc/audit/rules.d/time_change.rules and add the following lines: -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time- change -a always,exit -F arch=b32 -S clock_settime -k time-change -w /etc/localtime -p wa -k time-change For 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules Example: vi /etc/audit/rules.d/time_change.rules and add the following lines: -a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time- change -a always,exit -F arch=b64 -S clock_settime -k time-change -a always,exit -F arch=b32 -S clock_settime -k time-change -w /etc/localtime -p wa -k time-change",
    "function_names": [
      "auditd_system_call_time_change_logging_enabled",
      "auditd_system_call_adjtimex_logging_enabled",
      "auditd_system_call_settimeofday_logging_enabled",
      "auditd_system_call_stime_logging_enabled",
      "auditd_system_call_clock_settime_logging_enabled",
      "auditd_time_change_events_tagged",
      "auditd_config_reload_required",
      "auditd_service_restart_required",
      "auditd_system_reboot_required"
    ]
  },
  {
    "id": "4.1.4",
    "title": "Ensure events that modify user/group information are collected",
    "assessment": "Automated",
    "description": "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or /etc/security/opasswd (old passwords, based on remember parameter in the PAM configuration) files. The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier \"identity\" in the audit log file. Note: Reloading the auditd config to set active settings may require a system reboot.",
    "rationale": "Unexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts.",
    "audit": "Run the following command and verify rules are in a .rules file: # grep identity /etc/audit/rules.d/*.rules Verify the output matches: /etc/audit/rules.d/identity.rules:-w /etc/group -p wa -k identity /etc/audit/rules.d/identity.rules:-w /etc/passwd -p wa -k identity /etc/audit/rules.d/identity.rules:-w /etc/shadow -p wa -k identity /etc/audit/rules.d/identity.rules:-w /etc/security/opasswd -p wa -k identity Run the following command and verify the rules are in the running auditd config: # auditctl -l | grep identity Verify the output matches: -w /etc/group -p wa -k identity -w /etc/passwd -p wa -k identity -w /etc/shadow -p wa -k identity -w /etc/security/opasswd -p wa -k identity   267 | P a g e",
    "remediation": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules Example: vi /etc/audit/rules.d/identity.rules and add the following lines: -w /etc/group -p wa -k identity -w /etc/passwd -p wa -k identity -w /etc/shadow -p wa -k identity -w /etc/security/opasswd -p wa -k identity",
    "function_names": [
      "auditd_file_group_write_monitored",
      "auditd_file_passwd_write_monitored",
      "auditd_file_shadow_write_monitored",
      "auditd_file_gshadow_write_monitored",
      "auditd_file_opasswd_write_monitored",
      "auditd_file_identity_tagging_enabled",
      "auditd_config_reload_required",
      "auditd_file_permission_changes_monitored"
    ]
  },
  {
    "id": "4.1.5",
    "title": "Ensure events that modify the system's network environment are collected",
    "assessment": "Automated",
    "description": "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre- login), /etc/hosts (file containing host names and associated IP addresses) and /etc/sysconfig/network (directory containing network interface scripts and configurations) files. Note: Reloading the auditd config to set active settings requires the auditd service to be restarted, and may require a system reboot.",
    "rationale": "Monitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/sysconfig/network is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier \"system-locale.\"  269 | P a g e",
    "audit": "_If /etc/issue is not a symlink to /run/issue and the issue generator is not being used to create a volatile banner file: On a 32 bit system run the following commands: # grep system-locale /etc/audit/rules.d/*.rules # auditctl -l | grep system-locale Verify output of both matches: -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale -w /etc/issue -p wa -k system-locale -w /etc/issue.net -p wa -k system-locale -w /etc/hosts -p wa -k system-locale -w /etc/sysconfig/network -p wa -k system-locale On a 64 bit system run the following commands: Run the following command and verify rules are in a .rules file: # grep system-locale /etc/audit/rules.d/*.rules Verify output matches: /etc/audit/rules.d/system-locale.rules:-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale /etc/audit/rules.d/system-locale.rules:-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale /etc/audit/rules.d/system-locale.rules:-w /etc/issue -p wa -k system-locale /etc/audit/rules.d/system-locale.rules:-w /etc/issue.net -p wa -k system- locale /etc/audit/rules.d/system-locale.rules:-w /etc/hosts -p wa -k system-locale /etc/audit/rules.d/system-locale.rules:-w /etc/sysconfig/network -p wa -k system-locale Run the following command and verify the rules are in the running 'auditd' config: # auditctl -l | grep system-locale   270 | P a g e Verify output matches: -a always,exit -F arch=b64 -S sethostname,setdomainname -F key=system-locale -a always,exit -F arch=b32 -S sethostname,setdomainname -F key=system-locale -w /etc/issue -p wa -k system-locale -w /etc/issue.net -p wa -k system-locale -w /etc/hosts -p wa -k system-locale -w /etc/sysconfig/network -p wa -k system-locale If the issue generator service is enabled then /etc/issue is a symlink and /run/issue should be verified instead: On a 32 bit system run the following commands: # grep system-locale /etc/audit/rules.d/*.rules # auditctl -l | grep system-locale Verify output of both matches: -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale -w /run/issue -p wa -k system-locale -w /etc/issue.net -p wa -k system-locale -w /etc/hosts -p wa -k system-locale -w /etc/sysconfig/network -p wa -k system-locale On a 64 bit system run the following commands: Run the following command and verify rules are in a .rules file: # grep system-locale /etc/audit/rules.d/*.rules Verify output matches: /etc/audit/rules.d/system-locale.rules:-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale /etc/audit/rules.d/system-locale.rules:-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale /etc/audit/rules.d/system-locale.rules:-w /run/issue -p wa -k system-locale /etc/audit/rules.d/system-locale.rules:-w /etc/issue.net -p wa -k system- locale /etc/audit/rules.d/system-locale.rules:-w /etc/hosts -p wa -k system-locale /etc/audit/rules.d/system-locale.rules:-w /etc/sysconfig/network -p wa -k system-locale Run the following command and verify the rules are in the running 'auditd' config: # auditctl -l | grep system-locale   271 | P a g e Verify output matches: -a always,exit -F arch=b64 -S sethostname,setdomainname -F key=system-locale -a always,exit -F arch=b32 -S sethostname,setdomainname -F key=system-locale -w /run/issue -p wa -k system-locale -w /etc/issue.net -p wa -k system-locale -w /etc/hosts -p wa -k system-locale -w /etc/sysconfig/network -p wa -k system-locale   272 | P a g e",
    "remediation": "If /etc/issue is not a symlink to /run/issue and the issue generator is not being used to create a volatile banner file: For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules Example: vi /etc/audit/rules.d/system_locale.rules and add the following lines: -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale -w /etc/issue -p wa -k system-locale -w /etc/issue.net -p wa -k system-locale -w /etc/hosts -p wa -k system-locale -w /etc/sysconfig/network -p wa -k system-locale For 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules Example: vi /etc/audit/rules.d/system_locale.rules and add the following lines: -a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale -w /etc/issue -p wa -k system-locale -w /etc/issue.net -p wa -k system-locale -w /etc/hosts -p wa -k system-locale -w /etc/sysconfig/network -p wa -k system-locale If the issue generator service is enabled then /etc/issue is a symlink and /run/issue should be monitored instead: For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules Example: vi /etc/audit/rules.d/system_locale.rules and add the following lines: -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale -w /run/issue -p wa -k system-locale -w /etc/issue.net -p wa -k system-locale -w /etc/hosts -p wa -k system-locale -w /etc/sysconfig/network -p wa -k system-locale   273 | P a g e For 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules Example: vi /etc/audit/rules.d/system_locale.rules and add the following lines: -a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale -w /run/issue -p wa -k system-locale -w /etc/issue.net -p wa -k system-locale -w /etc/hosts -p wa -k system-locale -w /etc/sysconfig/network -p wa -k system-locale",
    "function_names": [
      "auditd_system_network_modification_events_collected",
      "auditd_sethostname_call_logging_enabled",
      "auditd_setdomainname_call_logging_enabled",
      "auditd_issue_file_modification_logging_enabled",
      "auditd_issue_net_file_modification_logging_enabled",
      "auditd_hosts_file_modification_logging_enabled",
      "auditd_sysconfig_network_modification_logging_enabled",
      "auditd_network_config_reload_required",
      "auditd_service_restart_required",
      "auditd_system_reboot_required"
    ]
  },
  {
    "id": "4.1.6",
    "title": "Ensure events that modify the system's Mandatory Access Controls are collected",
    "assessment": "Automated",
    "description": "Monitor AppArmor mandatory access controls. The parameters below monitor any write access (potential additional, deletion or modification of files in the directory) or attribute changes to the /etc/apparmor and /usr/share/apparmor.d directories. Notes: • If a different Mandatory Access Control method is used, changes to the corresponding directories should be audited. • Reloading the auditd config to set active settings requires the auditd service to be restarted, and may require a system reboot.",
    "rationale": "Changes to files in the /etc/apparmor and /usr/share/apparmor.d directories could indicate that an unauthorized user is attempting to modify access controls and change security contexts, leading to a compromise of the system.",
    "audit": "Run the following command and verify rules are in a .rules file: # grep MAC-policy /etc/audit/rules.d/*.rules Verify output matches: /etc/audit/rules.d/MAC_policy.rules:-w /etc/apparmor/ -p wa -k MAC-policy /etc/audit/rules.d/MAC_policy.rules:-w /etc/apparmor.d/ -p wa -k MAC-policy Run the following command and verify the rules are in the running auditd config: # auditctl -l | grep MAC-policy Verify output matches: -w /etc/apparmor/ -p wa -k MAC-policy -w /etc/apparmor.d/ -p wa -k MAC-policy   275 | P a g e",
    "remediation": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules Example: vi /etc/audit/rules.d/MAC_policy.rules and add the following lines: -w /etc/apparmor/ -p wa -k MAC-policy -w /etc/apparmor.d/ -p wa -k MAC-policy",
    "function_names": [
      "auditd_mandatory_access_controls_modification_events_collected",
      "auditd_apparmor_config_changes_monitored",
      "auditd_apparmor_directory_write_access_audited",
      "auditd_apparmor_attribute_changes_audited",
      "auditd_mac_directory_changes_audited",
      "auditd_config_reload_required_for_active_settings"
    ]
  },
  {
    "id": "4.1.7",
    "title": "Ensure login and logout events are collected",
    "assessment": "Automated",
    "description": "Monitor login and logout events. The parameters below track changes to files associated with login/logout events. • The file /var/log/faillog tracks failed events from login. • The file /var/log/lastlog maintain records of the last time a user successfully logged in. • The file /var/log/tallylog maintains records of failures via the pam_tally2 module Note: Reloading the auditd config to set active settings requires the auditd service to be restarted, and may require a system reboot.",
    "rationale": "Monitoring login/logout events could provide a system administrator with information associated with brute force attacks against user logins.",
    "audit": "Run the following command and verify rules are in a .rules file: # grep logins /etc/audit/rules.d/*.rules Verify output matches: /etc/audit/rules.d/logins.rules:-w /var/log/faillog -p wa -k logins /etc/audit/rules.d/logins.rules:-w /var/log/lastlog -p wa -k logins /etc/audit/rules.d/logins.rules:-w /var/log/tallylog -p wa -k logins Run the following command and verify the rules are in the running auditd config: # auditctl -l | grep logins Verify output matches: -w /var/log/faillog -p wa -k logins -w /var/log/lastlog -p wa -k logins -w /var/log/tallylog -p wa -k logins   277 | P a g e",
    "remediation": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules Example: vi /etc/audit/rules.d/logins.rules and add the following lines: -w /var/log/faillog -p wa -k logins -w /var/log/lastlog -p wa -k logins -w /var/log/tallylog -p wa -k logins",
    "function_names": [
      "auditd_login_logout_events_collected",
      "auditd_faillog_monitoring_enabled",
      "auditd_lastlog_monitoring_enabled",
      "auditd_tallylog_monitoring_enabled",
      "auditd_login_events_logging_enabled",
      "auditd_logout_events_logging_enabled",
      "auditd_faillog_tracking_enabled",
      "auditd_lastlog_tracking_enabled",
      "auditd_tallylog_tracking_enabled",
      "auditd_login_logout_config_reloaded"
    ]
  },
  {
    "id": "4.1.8",
    "title": "Ensure session initiation information is collected",
    "assessment": "Automated",
    "description": "Monitor session initiation events. The parameters in this section track changes to the files associated with session events. The file /var/run/utmp tracks all currently logged in users. All audit records will be tagged with the identifier \"session.\" The /var/log/wtmp file tracks logins, logouts, shutdown, and reboot events. The file /var/log/btmp keeps track of failed login attempts and can be read by entering the command /usr/bin/last -f /var/log/btmp . All audit records will be tagged with the identifier \"logins.\" Notes: • The last command can be used to read /var/log/wtmp (last with no parameters) and /var/run/utmp (last -f /var/run/utmp) • Reloading the auditd config to set active settings requires the auditd service to be restarted, and may require a system reboot.",
    "rationale": "Monitoring these files for changes could alert a system administrator to logins occurring at unusual hours, which could indicate intruder activity (i.e. a user logging in at a time when they do not normally log in).  279 | P a g e",
    "audit": "Run the following command and verify rules are in a .rules file: # grep -E '(session|logins)' /etc/audit/rules.d/*.rules Verify output includes: /etc/audit/rules.d/session.rules:-w /var/run/utmp -p wa -k session /etc/audit/rules.d/session.rules:-w /var/log/wtmp -p wa -k logins /etc/audit/rules.d/session.rules:-w /var/log/btmp -p wa -k logins Run the following command and verify the rules are in the running auditd config: # auditctl -l | grep -E '(session|logins)' Verify output includes: -w /var/run/utmp -p wa -k session -w /var/log/wtmp -p wa -k logins -w /var/log/btmp -p wa -k logins",
    "remediation": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules Example: vi /etc/audit/rules.d/session.rules and add the following lines: -w /var/run/utmp -p wa -k session -w /var/log/wtmp -p wa -k logins -w /var/log/btmp -p wa -k logins",
    "function_names": [
      "linux_auditd_session_events_collected",
      "linux_auditd_utmp_logging_enabled",
      "linux_auditd_wtmp_logging_enabled",
      "linux_auditd_btmp_logging_enabled",
      "linux_auditd_logins_tagging_enabled",
      "linux_auditd_session_tagging_enabled",
      "linux_auditd_failed_logins_monitored",
      "linux_auditd_login_events_tracked",
      "linux_auditd_reboot_events_tracked",
      "linux_auditd_shutdown_events_tracked"
    ]
  },
  {
    "id": "4.1.9",
    "title": "Ensure discretionary access control permission modification events are collected",
    "assessment": "Automated",
    "description": "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\" Notes: • Systems may have been customized to change the default UID_MIN. To confirm the UID_MIN for your system, run the following command: • awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs • If your systems' UID_MIN is not 1000, replace audit>=1000 with audit>=<UID_MIN for your system> in the Audit and Remediation procedures. • Reloading the auditd config to set active settings may require a system reboot.",
    "rationale": "Monitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation.  281 | P a g e",
    "audit": "On a 32 bit system run the following commands: Run the following command and verify rules are in a .rules file: # grep perm_mod /etc/audit/rules.d/*.rules Verify output matches: -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod Run the following command and verify the rules are in the running auditd config: # auditctl -l | grep perm_mod Verify output matches: -a always,exit -F arch=b32 -S chmod,fchmod,fchmodat -F auid>=1000 -F auid!=-1 -F key=perm_mod -a always,exit -F arch=b32 -S lchown,fchown,chown,fchownat -F auid>=1000 -F auid!=-1 -F key=perm_mod -a always,exit -F arch=b32 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid>=1000 -F auid!=-1 -F key=perm_mod On a 64 bit system run the following commands: Run the following command and verify rules are in a .rules file: # grep perm_mod /etc/audit/rules.d/*.rules   282 | P a g e Verify output matches: /etc/audit/rules.d/perm_mod.rules:-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod /etc/audit/rules.d/perm_mod.rules:-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod /etc/audit/rules.d/perm_mod.rules:-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod /etc/audit/rules.d/perm_mod.rules:-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod /etc/audit/rules.d/perm_mod.rules:-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod /etc/audit/rules.d/perm_mod.rules:-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod Run the following command and verify the rules are in the running auditd config: # auditctl -l | grep perm_mod Verify output matches: -a always,exit -F arch=b64 -S chmod,fchmod,fchmodat -F auid>=1000 -F auid!=-1 -F key=perm_mod -a always,exit -F arch=b32 -S chmod,fchmod,fchmodat -F auid>=1000 -F auid!=-1 -F key=perm_mod -a always,exit -F arch=b64 -S chown,fchown,lchown,fchownat -F auid>=1000 -F auid!=-1 -F key=perm_mod -a always,exit -F arch=b32 -S lchown,fchown,chown,fchownat -F auid>=1000 -F auid!=-1 -F key=perm_mod -a always,exit -F arch=b64 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid>=1000 -F auid!=-1 -F key=perm_mod -a always,exit -F arch=b32 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid>=1000 -F auid!=-1 -F key=perm_mod   283 | P a g e",
    "remediation": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules Example: vi /etc/audit/rules.d/perm_mod.rules and add the following lines: -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod For 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules Example: vi /etc/audit/rules.d/perm_mod.rules and add the following lines: -a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod -a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod -a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod",
    "function_names": [
      "auditd_file_permission_changes_collected",
      "auditd_file_attribute_changes_collected",
      "auditd_file_ownership_changes_collected",
      "auditd_chmod_events_collected",
      "auditd_fchmod_events_collected",
      "auditd_fchmodat_events_collected",
      "auditd_chown_events_collected",
      "auditd_fchown_events_collected",
      "auditd_fchownat_events_collected",
      "auditd_lchown_events_collected",
      "auditd_setxattr_events_collected",
      "auditd_lsetxattr_events_collected",
      "auditd_fsetxattr_events_collected",
      "auditd_removexattr_events_collected",
      "auditd_lremovexattr_events_collected",
      "auditd_fremovexattr_events_collected",
      "auditd_non_system_user_events_collected",
      "auditd_daemon_events_ignored",
      "auditd_perm_mod_events_tagged",
      "auditd_uid_min_customized"
    ]
  },
  {
    "id": "4.1.10",
    "title": "Ensure unsuccessful unauthorized file access attempts are collected",
    "assessment": "Automated",
    "description": "Monitor for unsuccessful attempts to access files. The parameters below are associated with system calls that control creation ( creat ), opening ( open , openat ) and truncation ( truncate , ftruncate ) of files. An audit log record will only be written if the user is a non- privileged user (auid > = 1000), is not a Daemon event (auid=4294967295) and if the system call returned EACCES (permission denied to the file) or EPERM (some other permanent error associated with the specific system call). All audit records will be tagged with the identifier \"access.\" Notes: • Systems may have been customized to change the default UID_MIN. To confirm the UID_MIN for your system, run the following command: • # awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs • If your systems' UID_MIN is not 1000, replace audit>=1000 with audit>=<UID_MIN for your system> in the Audit and Remediation procedures. • Reloading the auditd config to set active settings may require a system reboot.",
    "rationale": "Failed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system.  285 | P a g e",
    "audit": "On a 32 bit system run the following commands: Run the following command and verify rules are in a .rules file: # grep access /etc/audit/rules.d/*.rules Verify output matches: -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access Run the following command and verify the rules are in the running auditd config: # auditctl -l | grep access Verify output matches: -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=-1 -k access -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=-1 -k access On a 64 bit system run the following commands: Run the following command and verify rules are in a .rules file: # grep access /etc/audit/rules.d/*.rules Verify output matches: /etc/audit/rules.d/access.rules:-a always,exit -F arch=b64 -S creat -S open - S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access /etc/audit/rules.d/access.rules:-a always,exit -F arch=b32 -S creat -S open - S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access /etc/audit/rules.d/access.rules:-a always,exit -F arch=b64 -S creat -S open - S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access /etc/audit/rules.d/access.rules:-a always,exit -F arch=b32 -S creat -S open - S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access Run the following command and verify the rules are in the running auditd config: # auditctl -l | grep access   286 | P a g e Verify output matches: -a always,exit -F arch=b64 -S open,truncate,ftruncate,creat,openat -F exit=- EACCES -F auid>=1000 -F auid!=-1 -F key=access -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat -F exit=- EACCES -F auid>=1000 -F auid!=-1 -F key=access -a always,exit -F arch=b64 -S open,truncate,ftruncate,creat,openat -F exit=- EPERM -F auid>=1000 -F auid!=-1 -F key=access -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat -F exit=- EPERM -F auid>=1000 -F auid!=-1 -F key=access",
    "remediation": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules Example: vi /etc/audit/rules.d/access.rules and add the following lines: -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access For 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules Example: vi /etc/audit/rules.d/access.rules and add the following lines: -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access",
    "function_names": [
      "auditd_file_access_unauthorized_attempts_collected",
      "auditd_file_creation_open_truncate_monitored",
      "auditd_non_privileged_user_file_access_logged",
      "auditd_file_access_denied_errors_tagged",
      "auditd_file_access_audit_uid_min_configured",
      "auditd_file_access_audit_reload_required",
      "auditd_file_access_system_call_permissions_logged",
      "auditd_file_access_privilege_escalation_detected"
    ]
  },
  {
    "id": "4.1.11",
    "title": "Ensure use of privileged commands is collected",
    "assessment": "Automated",
    "description": "Monitor privileged programs (those that have the setuid and/or setgid bit set on execution) to determine if unprivileged users are running these commands. Notes: • Systems may have been customized to change the default UID_MIN. To confirm the UID_MIN for your system, run the following command: # awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs • If your systems' UID_MIN is not 1000, replace audit>=1000 with audit>=<UID_MIN for your system> in the Audit and Remediation procedures. • Reloading the auditd config to set active settings may require a system reboot.",
    "rationale": "Execution of privileged commands by non-privileged users could be an indication of someone trying to gain unauthorized access to the system.",
    "audit": "Run the following command replacing <partition> with a list of partitions where programs can be executed from on your system: # find <partition> -xdev \\( -perm -4000 -o -perm -2000 \\) -type f | awk '{print \"-a always,exit -F path=\" $1 \" -F perm=x -F auid>='\"$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\"' -F auid!=4294967295 -k privileged\" }' Verify all resulting lines are a .rules file in /etc/audit/rules.d/ and the output of auditctl -l. Note: The .rules file output will be auid!=-1 not auid!=4294967295  288 | P a g e",
    "remediation": "To remediate this issue, the system administrator will have to execute a find command to locate all the privileged programs and then add an audit line for each one of them. The audit parameters associated with this are as follows: • -F path=\" $1 \" - will populate each file name found through the find command and processed by awk. • -F perm=x - will write an audit record if the file is executed. • -F auid>=1000 - will write a record if the user executing the command is not a privileged user. • -F auid!= 4294967295 - will ignore Daemon events All audit records should be tagged with the identifier \"privileged\". Run the following command replacing with a list of partitions where programs can be executed from on your system: # find <partition> -xdev \\( -perm -4000 -o -perm -2000 \\) -type f | awk '{print \"-a always,exit -F path=\" $1 \" -F perm=x -F auid>='\"$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\"' -F auid!=4294967295 -k privileged\" }' Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules and add all resulting lines to the file. Example: # find / -xdev \\( -perm -4000 -o -perm -2000 \\) -type f | awk '{print \"-a always,exit -F path=\" $1 \" -F perm=x -F auid>='\"$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\"' -F auid!=4294967295 -k privileged\" }' >> /etc/audit/rules.d/privileged.rules",
    "function_names": [
      "auditd_privileged_commands_collected",
      "auditd_setuid_setgid_monitoring_enabled",
      "auditd_uid_min_compliance_configured",
      "auditd_privileged_user_audit_enabled",
      "auditd_unprivileged_user_privilege_escalation_monitored",
      "auditd_system_reboot_required_for_config_reload",
      "auditd_privileged_program_execution_logged",
      "auditd_uid_min_threshold_enforced"
    ]
  },
  {
    "id": "4.1.12",
    "title": "Ensure successful file system mounts are collected",
    "assessment": "Automated",
    "description": "Monitor the use of the mount system call. The mount (and umount ) system call controls the mounting and unmounting of file systems. The parameters below configure the system to create an audit record when the mount system call is used by a non-privileged user Notes: • Systems may have been customized to change the default UID_MIN. To confirm the UID_MIN for your system, run the following command: • # awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs • If your systems' UID_MIN is not 1000, replace audit>=1000 with audit>=<UID_MIN for your system> in the Audit and Remediation procedures. • This tracks successful and unsuccessful mount commands. • File system mounts do not have to come from external media and this action still does not verify write (e.g. CD ROMS). • Reloading the auditd config to set active settings may require a system reboot.",
    "rationale": "It is highly unusual for a non privileged user to mount file systems to the system. While tracking mount commands gives the system administrator evidence that external media may have been mounted (based on a review of the source of the mount and confirming it's an external media type), it does not conclusively indicate that data was exported to the media. System administrators who wish to determine if data were exported, would also have to track successful open , creat and truncate system calls requiring write access to a file under the mount point of the external media file system. This could give a fair indication that a write occurred. The only way to truly prove it, would be to track successful writes to the external media. Tracking write system calls could quickly fill up the audit log and is not recommended. Recommendations on configuration options to track data export to media is beyond the scope of this document.  290 | P a g e",
    "audit": "On a 32 bit system run the following commands: Run the following command and verify rules are in a .rules file: # grep mounts /etc/audit/rules.d/*.rules Verify output matches: -a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts Run the following command and verify the rules are in the running auditd config: # auditctl -l | grep mounts Verify output matches: -a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=-1 -k mounts On a 64 bit system run the following commands: Run the following command and verify rules are in a .rules file: # grep mounts /etc/audit/rules.d/*.rules Verify output matches: /etc/audit/rules.d/mounts.rules:-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts /etc/audit/rules.d/mounts.rules:-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts Run the following command and verify the rules are in the running auditd config: # auditctl -l | grep mounts Verify output matches: -a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=-1 -F key=mounts -a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=-1 -F key=mounts   291 | P a g e",
    "remediation": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules Example: vi /etc/audit/rules.d/mounts.rules and add the following lines: -a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts For 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules Example: vi /etc/audit/rules.d/mounts.rules and add the following lines: -a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts -a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts",
    "function_names": [
      "auditd_mount_system_call_monitoring_enabled",
      "auditd_file_system_mounts_logging_enabled",
      "auditd_non_privileged_mount_audit_enabled",
      "auditd_mount_umount_events_collected",
      "auditd_uid_min_mount_audit_configured",
      "auditd_mount_system_call_success_logging_enabled",
      "auditd_mount_system_call_failure_logging_enabled",
      "auditd_mount_audit_rules_persistent",
      "auditd_mount_audit_reload_required",
      "auditd_mount_audit_uid_min_customized"
    ]
  },
  {
    "id": "4.1.13",
    "title": "Ensure file deletion events by users are collected",
    "assessment": "Automated",
    "description": "Monitor the use of system calls associated with the deletion or renaming of files and file attributes. This configuration statement sets up monitoring for following system calls and tags them with the identifier \"delete\": • unlink - remove a file • unlinkat - remove a file attribute • rename - rename a file • renameat - rename a file attribute Notes: • Systems may have been customized to change the default UID_MIN. To confirm the UID_MIN for your system, run the following command: • # awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs • If your systems' UID_MIN is not 1000, replace audit>=1000 with audit>=<UID_MIN for your system> in the Audit and Remediation procedures. • At a minimum, configure the audit system to collect file deletion events for all users and root. • Reloading the auditd config to set active settings may require a system reboot.",
    "rationale": "Monitoring these calls from non-privileged users could provide a system administrator with evidence that inappropriate removal of files and file attributes associated with protected files is occurring. While this audit option will look at all events, system administrators will want to look for specific privileged files that are being deleted or altered.  293 | P a g e",
    "audit": "On a 32 bit system run the following commands: Run the following command and verify rules are in a .rules file: # grep delete /etc/audit/rules.d/*.rules Verify output matches: -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete Run the following command and verify the rules are in the running auditd config: # auditctl -l | grep delete Verify output matches: -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete On a 64 bit system run the following commands: Run the following command and verify rules are in a .rules file: # grep delete /etc/audit/rules.d/*.rules Verify output matches: /etc/audit/rules.d/deletion.rules:-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete /etc/audit/rules.d/deletion.rules:-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete Run the following command and verify the rules are in the running auditd config: # auditctl -l | grep delete Verify output matches: -a always,exit -F arch=b64 -S rename,unlink,unlinkat,renameat -F auid>=1000 - F auid!=-1 -F key=delete -a always,exit -F arch=b32 -S unlink,rename,unlinkat,renameat -F auid>=1000 - F auid!=-1 -F key=delete   294 | P a g e",
    "remediation": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules Example: vi /etc/audit/rules.d/deletion.rules and add the following lines: -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete For 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules Example: vi /etc/audit/rules.d/deletion.rules and add the following lines: -a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete",
    "function_names": [
      "auditd_file_deletion_events_collected",
      "auditd_unlink_syscall_monitored",
      "auditd_unlinkat_syscall_monitored",
      "auditd_rename_syscall_monitored",
      "auditd_renameat_syscall_monitored",
      "auditd_uid_min_compliance_configured",
      "auditd_user_file_deletion_logging_enabled",
      "auditd_root_file_deletion_logging_enabled",
      "auditd_config_reload_required"
    ]
  },
  {
    "id": "4.1.14",
    "title": "Ensure changes to system administration scope (sudoers) is collected",
    "assessment": "Automated",
    "description": "Monitor scope changes for system administrators. If the system has been properly configured to force system administrators to log in as themselves first and then use the sudo command to execute privileged commands, it is possible to monitor changes in scope. The file /etc/sudoers or a file in the /etc/sudoers.d directory will be written to when the file or its attributes have changed. Notes: Reloading the auditd config to set active settings may require a system reboot.",
    "rationale": "Changes in the /etc/sudoers file, or a file in the /etc/sudoers.d/ directory can indicate that an unauthorized change has been made to scope of system administrator activity.",
    "audit": "Run the following command and verify rules are in a .rules file: # grep scope /etc/audit/rules.d/*.rules Verify output matches: /etc/audit/rules.d/scope.rules:-w /etc/sudoers -p wa -k scope /etc/audit/rules.d/scope.rules:-w /etc/sudoers.d/ -p wa -k scope Run the following command and verify the rules are in the running auditd config: # auditctl -l | grep scope Verify output matches: -w /etc/sudoers -p wa -k scope -w /etc/sudoers.d -p wa -k scope   296 | P a g e",
    "remediation": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules Example: vi /etc/audit/rules.d/scope.rules and add the following lines: -w /etc/sudoers -p wa -k scope -w /etc/sudoers.d/ -p wa -k scope",
    "function_names": [
      "auditd_sudoers_file_changes_monitored",
      "auditd_sudoers_directory_changes_monitored",
      "auditd_sudoers_scope_changes_collected",
      "auditd_sudoers_config_reload_required",
      "auditd_sudoers_attributes_changes_tracked"
    ]
  },
  {
    "id": "4.1.15",
    "title": "Ensure system administrator actions (sudolog) are collected",
    "assessment": "Automated",
    "description": "Monitor the sudo log file. The sudo log file is configured in /etc/sudoers or a file in /etc/sudoers.d. If the system has been properly configured to disable the use of the su command and force all administrators to have to log in first and then use sudo to execute privileged commands, then all administrator commands will be logged to to the sudo log file. Any time a command is executed, an audit event will be triggered as the sudo log file will be opened for write and the executed administration command will be written to the log. Notes: • The system must be configured with su disabled (See Item 5.6 Ensure access to the su command is restricted) to force all command execution through sudo. This will not be effective on the console, as administrators can log in as root. • Reloading the auditd config to set active settings may require a system reboot.",
    "rationale": "Changes in /var/log/sudo.log indicate that an administrator has executed a command or the log file itself has been tampered with. Administrators will want to correlate the events written to the audit trail with the records written to /var/log/sudo.log to verify if unauthorized commands have been executed.  298 | P a g e",
    "audit": "Run the following commands: # grep -E \"^\\s*-w\\s+$(grep -r logfile /etc/sudoers* | sed -e 's/.*logfile=//;s/,? .*//')\\s+-p\\s+wa\\s+-k\\s+actions\" /etc/audit/rules.d/*.rules # auditctl -l | grep actions Verify output of both matches the output of the following command, and the the output includes a file path echo \"-w $(grep -r logfile /etc/sudoers* | sed -e 's/.*logfile=//;s/,? .*//') -p wa -k actions\" Example Output -w /var/log/sudo.log -p wa -k actions",
    "remediation": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules and add the following line: -w <Path to sudo logfile> -p wa -k actions Example: vi /etc/audit/rules.d/actions.rules and add the following line: -w /var/log/sudo.log -p wa -k actions",
    "function_names": [
      "auditd_sudolog_collected",
      "sudoers_sudolog_configured",
      "sudoers_su_disabled",
      "auditd_sudolog_monitoring_enabled",
      "sudoers_admin_actions_logged",
      "auditd_sudolog_write_events_captured",
      "sudoers_privileged_commands_tracked",
      "auditd_sudolog_file_configured",
      "sudoers_root_login_restricted",
      "auditd_sudolog_reload_required"
    ]
  },
  {
    "id": "4.1.16",
    "title": "Ensure kernel module loading and unloading is collected",
    "assessment": "Automated",
    "description": "Monitor the loading and unloading of kernel modules. The programs insmod (install a kernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated program to load and unload modules, as well as some other features) control loading and unloading of modules. The init_module (load a module) and delete_module (delete a module) system calls control loading and unloading of modules. Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of \"modules\". Note: Reloading the auditd config to set active settings requires the auditd service to be restarted, and may require a system reboot.",
    "rationale": "Monitoring the use of insmod , rmmod and modprobe could provide system administrators with evidence that an unauthorized user loaded or unloaded a kernel module, possibly compromising the security of the system. Monitoring of the init_module and delete_module system calls would reflect an unauthorized user attempting to use a different program to load and unload modules.  300 | P a g e",
    "audit": "On a 32 bit system run the following commands: Run the following command and verify rules are in a .rules file: # grep modules /etc/audit/rules.d/*.rules Verify output matches: -w /sbin/insmod -p x -k modules -w /sbin/rmmod -p x -k modules -w /sbin/modprobe -p x -k modules -a always,exit -F arch=b32 -S init_module -S delete_module -k modules Run the following command and verify the rules are in the running auditd config: # auditctl -l | grep modules Verify output matches: -w /sbin/insmod -p x -k modules -w /sbin/rmmod -p x -k modules -w /sbin/modprobe -p x -k modules -a always,exit -F arch=b32 -S init_module,delete_module -F key=modules On a 64 bit system run the following commands: Run the following command and verify rules are in a .rules file: # grep modules /etc/audit/rules.d/*.rules Verify output matches: /etc/audit/rules.d/modules.rules:-w /sbin/insmod -p x -k modules /etc/audit/rules.d/modules.rules:-w /sbin/rmmod -p x -k modules /etc/audit/rules.d/modules.rules:-w /sbin/modprobe -p x -k modules /etc/audit/rules.d/modules.rules:-a always,exit -F arch=b64 -S init_module -S delete_module -k modules Run the following command and verify the rules are in the running auditd config: # auditctl -l | grep modules Verify output matches: -w /sbin/insmod -p x -k modules -w /sbin/rmmod -p x -k modules -w /sbin/modprobe -p x -k modules -a always,exit -F arch=b64 -S init_module,delete_module -F key=modules  301 | P a g e",
    "remediation": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules Example: vi /etc/audit/rules.d/modules.rules and add the following lines: -w /sbin/insmod -p x -k modules -w /sbin/rmmod -p x -k modules -w /sbin/modprobe -p x -k modules -a always,exit -F arch=b32 -S init_module -S delete_module -k modules For 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules Example: vi /etc/audit/rules.d/modules.rules and add the following lines: -w /sbin/insmod -p x -k modules -w /sbin/rmmod -p x -k modules -w /sbin/modprobe -p x -k modules -a always,exit -F arch=b64 -S init_module -S delete_module -k modules",
    "function_names": [
      "auditd_kernel_module_loading_collected",
      "auditd_kernel_module_unloading_collected",
      "auditd_init_module_call_audited",
      "auditd_delete_module_call_audited",
      "auditd_modprobe_execution_audited",
      "auditd_insmod_execution_audited",
      "auditd_rmmod_execution_audited",
      "auditd_modules_event_audit_enabled"
    ]
  },
  {
    "id": "4.1.17",
    "title": "Ensure the audit configuration is immutable",
    "assessment": "Automated",
    "description": "Set system audit so that audit rules cannot be modified with auditctl . Setting the flag \"-e 2\" forces audit to be put in immutable mode. Audit changes can only be made on system reboot. Note: This setting will require the system to be rebooted to update the active auditd configuration settings.",
    "rationale": "In immutable mode, unauthorized users cannot execute changes to the audit system to potentially hide malicious activity and then put the audit rules back. Users would most likely notice a system reboot and that could alert administrators of an attempt to make unauthorized audit changes.",
    "audit": "Run the following command and verify output matches: # grep \"^\\s*[^#]\" /etc/audit/rules.d/*.rules | tail -1 -e 2",
    "remediation": "Edit or create the file /etc/audit/rules.d/99-finalize.rules and add the following line at the end of the file: -e 2   303 | P a g e",
    "function_names": [
      "auditd_config_immutable",
      "auditd_rules_unmodifiable",
      "auditd_immutable_mode_enabled",
      "auditd_config_locked",
      "auditd_immutable_flag_set",
      "auditd_reboot_required_changes",
      "auditd_config_persistence_enabled",
      "auditd_rules_protected",
      "auditd_immutable_auditctl_disabled",
      "auditd_config_write_protected"
    ]
  },
  {
    "id": "4.2.1.1",
    "title": "Ensure rsyslog is installed",
    "assessment": "Automated",
    "description": "The rsyslog software is a recommended replacement to the original syslogd daemon. rsyslog provides improvements over syslogd, including: • connection-oriented (i.e. TCP) transmission of logs • The option to log to database formats • Encryption of log data en route to a central logging server",
    "rationale": "The security enhancements of rsyslog such as connection-oriented (i.e. TCP) transmission of logs, the option to log to database formats, and the encryption of log data en route to a central logging server) justify installing and configuring the package.",
    "audit": "Run the following command to Verify rsyslog is installed: # rpm -q rsyslog rsyslog-<version>",
    "remediation": "Run the following command to install rsyslog: # zypper install rsyslog",
    "function_names": [
      "logging_rsyslog_installed",
      "logging_rsyslog_enabled",
      "logging_rsyslog_tcp_transmission_enabled",
      "logging_rsyslog_database_logging_enabled",
      "logging_rsyslog_encryption_enabled"
    ]
  },
  {
    "id": "4.2.1.2",
    "title": "Ensure rsyslog Service is enabled and running",
    "assessment": "Automated",
    "description": "rsyslog needs to be enabled and running to perform logging",
    "rationale": "If the rsyslog service is not activated the system may default to the syslogd service or lack logging instead.",
    "audit": "Run one of the following commands to verify rsyslog is enabled: # systemctl is-enabled rsyslog enabled Run the following command to verify that rsyslog is running: # systemctl status rsyslog | grep 'active (running) ' Active: active (running) since <Day date time>",
    "remediation": "Run the following command to enable and start rsyslog: # systemctl --now enable rsyslog",
    "function_names": [
      "logging_rsyslog_service_enabled",
      "logging_rsyslog_service_running",
      "logging_rsyslog_enabled_and_running"
    ]
  },
  {
    "id": "4.2.1.3",
    "title": "Ensure rsyslog default file permissions configured",
    "assessment": "Automated",
    "description": "rsyslog will create logfiles that do not already exist on the system. This setting controls what permissions will be applied to these newly created files. The $FileCreateMode parameter specifies the file creation mode with which rsyslogd creates new files. If not specified, the value 0644 is used. Notes: • The value given must always be a 4-digit octal number, with the initial digit being zero. • This setting can be overridden by a less restrictive setting in any file ending in .conf in the /etc/rsyslog.d/ directory",
    "rationale": "It is important to ensure that log files have the correct permissions to ensure that sensitive data is archived and protected.",
    "audit": "Run the following command and verify that $FileCreateMode is 0640 or more restrictive: # grep ^\\$FileCreateMode /etc/rsyslog.conf /etc/rsyslog.d/*.conf $FileCreateMode 0640 Verify that no results return with a less restrictive file mode",
    "remediation": "Edit the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files and set $FileCreateMode to 0640 or more restrictive: $FileCreateMode 0640 References: 1. See the rsyslog.conf(5) man page for more information.   309 | P a g e",
    "references": "1. See the rsyslog.conf(5) man page for more information.   309 | P a g e",
    "function_names": [
      "rsyslog_file_create_mode_restricted",
      "rsyslog_default_file_permissions_secure",
      "rsyslog_file_creation_mode_compliant",
      "rsyslog_logfile_permissions_enforced",
      "rsyslog_file_create_mode_octal_valid",
      "rsyslog_new_file_permissions_configured",
      "rsyslog_default_logfile_mode_secure",
      "rsyslog_file_permissions_not_overridden"
    ]
  },
  {
    "id": "4.2.1.4",
    "title": "Ensure logging is configured",
    "assessment": "Manual",
    "description": "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.",
    "rationale": "A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.).",
    "audit": "Review the contents of the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files to ensure appropriate logging is set. In addition, run the following command and verify that the log files are logging information: # ls -l /var/log/",
    "remediation": "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment: *.emerg                                  :omusrmsg:* auth,authpriv.*                          /var/log/secure mail.*                                  -/var/log/mail mail.info                               -/var/log/mail.info mail.warning                            -/var/log/mail.warn mail.err                                 /var/log/mail.err news.crit                               -/var/log/news/news.crit news.err                                -/var/log/news/news.err news.notice                             -/var/log/news/news.notice *.=warning;*.=err                       -/var/log/warn *.crit                                   /var/log/warn *.*;mail.none;news.none                 -/var/log/messages local0,local1.*                         -/var/log/localmessages local2,local3.*                         -/var/log/localmessages local4,local5.*                         -/var/log/localmessages local6,local7.*                         -/var/log/localmessages Run the following command to reload the rsyslogd configuration: # systemctl restart rsyslog  311 | P a g e References: 1. See the rsyslog.conf(5) man page for more information.",
    "references": "1. See the rsyslog.conf(5) man page for more information.",
    "function_names": [
      "logging_rsyslog_config_logging_enabled",
      "logging_rsyslog_file_logging_enabled",
      "logging_rsyslog_message_class_logging_enabled",
      "logging_rsyslog_conf_logging_enabled",
      "logging_rsyslog_d_conf_logging_enabled"
    ]
  },
  {
    "id": "4.2.1.5",
    "title": "Ensure rsyslog is configured to send logs to a remote log host",
    "assessment": "Automated",
    "description": "The rsyslog utility supports the ability to send logs it gathers to a remote log host running syslogd(8) or to receive messages from remote hosts, reducing administrative overhead. Note: The double \"at\" sign (@@) directs rsyslog to use TCP to send log messages to the server, which is a more reliable transport mechanism than the default UDP protocol",
    "rationale": "Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system",
    "audit": "Review the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files and verify that logs are sent to a central host (where loghost.example.com is the name of your central log host): # grep \"^*.*[^I][^I]*@\" /etc/rsyslog.conf /etc/rsyslog.d/*.conf *.* @@loghost.example.com",
    "remediation": "Edit the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files and add the following line (where loghost.example.com is the name of your central log host). *.* @@loghost.example.com Run the following command to reload the rsyslogd configuration: # systemctl restart rsyslog References: 1. See the rsyslog.conf(5) man page for more information.   313 | P a g e",
    "references": "1. See the rsyslog.conf(5) man page for more information.   313 | P a g e",
    "function_names": [
      "logging_rsyslog_remote_host_enabled",
      "logging_rsyslog_tcp_protocol_enabled",
      "logging_rsyslog_remote_logging_configured",
      "logging_rsyslog_secure_transport_enabled",
      "logging_rsyslog_centralized_logging_enabled"
    ]
  },
  {
    "id": "4.2.1.6",
    "title": "Ensure remote rsyslog messages are only accepted on designated log hosts.",
    "assessment": "Manual",
    "description": "By default, rsyslog does not listen for log messages coming in from remote systems. The ModLoad tells rsyslog to load the imtcp.so module so it can listen over a network via TCP. The InputTCPServerRun option instructs rsyslogd to listen on the specified TCP port. Note: The $ModLoad imtcp line can have the .so extension added to the end of the module, or use the full path to the module.",
    "rationale": "The guidance in the section ensures that remote log hosts are configured to only accept rsyslog data from hosts within the specified domain and that those systems that are not designed to be log hosts do not accept any remote rsyslog messages. This provides protection from spoofed log data and ensures that system administrators are reviewing reasonably complete syslog data in a central location.",
    "audit": "Run the following commands and verify the resulting lines are uncommitted on designated log hosts and commented or removed on all others: # grep '$ModLoad imtcp' /etc/rsyslog.conf /etc/rsyslog.d/*.conf $ModLoad imtcp # grep '$InputTCPServerRun' /etc/rsyslog.conf /etc/rsyslog.d/*.conf $InputTCPServerRun 514   315 | P a g e",
    "remediation": "For hosts that are designated as log hosts, edit the /etc/rsyslog.conf file and un- comment or add the following lines: $ModLoad imtcp $InputTCPServerRun 514 For hosts that are not designated as log hosts, edit the /etc/rsyslog.conf file and comment or remove the following lines: # $ModLoad imtcp # $InputTCPServerRun 514 Run the following command to reload the rsyslogd configuration: # systemctl restart rsyslog References: 1. See the rsyslog(8) man page for more information.",
    "references": "1. See the rsyslog(8) man page for more information.",
    "function_names": [
      "rsyslog_remote_messages_designated_hosts_only",
      "rsyslog_imtcp_module_restricted",
      "rsyslog_tcp_server_run_restricted",
      "rsyslog_network_listening_restricted",
      "rsyslog_remote_logging_hosts_only"
    ]
  },
  {
    "id": "4.2.2.1",
    "title": "Ensure journald is configured to send logs to rsyslog",
    "assessment": "Automated",
    "description": "Data from journald may be stored in volatile memory or persisted locally on the server. Utilities exist to accept remote export of journald logs, however, use of the rsyslog service provides a consistent means of log collection and export. Notes: • This recommendation assumes that recommendation 4.2.1.5, \"Ensure rsyslog is configured to send logs to a remote log host\" has been implemented. • The main configuration file /etc/systemd/journald.conf is read before any of the custom *.conf files. If there are custom configs present, they override the main configuration parameters • As noted in the journald man pages: journald logs may be exported to rsyslog either through the process mentioned here, or through a facility like systemd- journald.service. There are trade-offs involved in each implementation, where ForwardToSyslog will immediately capture all events (and forward to an external log server, if properly configured), but may not capture all boot-up activities. Mechanisms such as systemd-journald.service, on the other hand, will record bootup events, but may delay sending the information to rsyslog, leading to the potential for log manipulation prior to export. Be aware of the limitations of all tools employed to secure a system.",
    "rationale": "Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system.",
    "audit": "Review /etc/systemd/journald.conf and verify that logs are forwarded to syslog # grep -E ^\\s*ForwardToSyslog /etc/systemd/journald.conf ForwardToSyslog=yes The default value for ForwardToSyslog is yes therefore verify that this setting is not uncommented and configured to a value of no or false.  318 | P a g e",
    "remediation": "Edit the /etc/systemd/journald.conf file and add the following line: ForwardToSyslog=yes Default Value: ForwardToSyslog=yes References: 1. https://github.com/konstruktoid/hardening/blob/master/systemd.adoc#etcsyste mdjournaldconf",
    "references": "1. https://github.com/konstruktoid/hardening/blob/master/systemd.adoc#etcsyste mdjournaldconf",
    "function_names": [
      "systemd_journald_rsyslog_forwarding_enabled",
      "systemd_journald_remote_log_export_configured",
      "systemd_journald_boot_log_capture_enabled",
      "systemd_journald_log_persistence_configured",
      "systemd_journald_volatile_memory_logging_disabled",
      "systemd_journald_log_export_consistency_verified",
      "systemd_journald_override_config_checked",
      "systemd_journald_early_boot_logging_enabled"
    ]
  },
  {
    "id": "4.2.2.2",
    "title": "Ensure journald is configured to compress large log files",
    "assessment": "Automated",
    "description": "The journald system includes the capability of compressing overly large files to avoid filling up the system with logs or making the log's size unmanageable. Note: The main configuration file /etc/systemd/journald.conf is read before any of the custom *.conf files. If there are custom configs present, they override the main configuration parameters",
    "rationale": "Uncompressed large files may unexpectedly fill a filesystem leading to resource unavailability. Compressing logs prior to write can prevent sudden, unexpected filesystem impacts.",
    "audit": "Review /etc/systemd/journald.conf and verify that large files will be compressed: # grep -E ^\\s*Compress /etc/systemd/journald.conf Compress=yes The default value for Compress is yes therefore verify that this setting is not uncommented and configured to a value of no or false.",
    "remediation": "Edit the /etc/systemd/journald.conf file and add the following line: Compress=yes Default Value: Compress=yes References: 1. https://github.com/konstruktoid/hardening/blob/master/systemd.adoc#etcsyste mdjournaldconf  320 | P a g e",
    "references": "1. https://github.com/konstruktoid/hardening/blob/master/systemd.adoc#etcsyste mdjournaldconf  320 | P a g e",
    "function_names": [
      "journald_log_file_compression_enabled",
      "journald_large_log_compression_enabled",
      "journald_log_compression_config_valid",
      "journald_log_size_compression_enabled",
      "journald_log_compression_settings_configured"
    ]
  },
  {
    "id": "4.2.2.3",
    "title": "Ensure journald is configured to write logfiles to persistent disk",
    "assessment": "Automated",
    "description": "Data from journald may be stored in volatile memory or persisted locally on the server. Logs in memory will be lost upon a system reboot. By persisting logs to local disk on the server they are protected from loss. Note: The main configuration file /etc/systemd/journald.conf is read before any of the custom *.conf files. If there are custom configs present, they override the main configuration parameters",
    "rationale": "Writing log data to disk will provide the ability to forensically reconstruct events which may have impacted the operations or security of a system even after a system crash or reboot.",
    "audit": "Review /etc/systemd/journald.conf and verify that logs are persisted to disk: # grep -E ^\\s*Storage /etc/systemd/journald.conf Storage=persistent",
    "remediation": "Edit the /etc/systemd/journald.conf file and add the following line: Storage=persistent References: 1. https://github.com/konstruktoid/hardening/blob/master/systemd.adoc#etcsyste mdjournaldconf   322 | P a g e",
    "references": "1. https://github.com/konstruktoid/hardening/blob/master/systemd.adoc#etcsyste mdjournaldconf   322 | P a g e",
    "function_names": [
      "systemd_journald_persistent_logs_enabled",
      "systemd_journald_logs_to_disk_enabled",
      "systemd_journald_volatile_memory_disabled",
      "systemd_journald_storage_persistent",
      "systemd_journald_config_file_override_secure"
    ]
  },
  {
    "id": "4.2.3",
    "title": "Ensure permissions on all logfiles are configured",
    "assessment": "Automated",
    "description": "Log files stored in /var/log/ contain logged information from many services on the system, or on log hosts others as well.",
    "rationale": "It is important to ensure that log files have the correct permissions to ensure that sensitive data is archived and protected. Other/world should not have the ability to view this information. Group should not have the ability to modify this information.",
    "audit": "Run the following command and verify that other has no permissions on any files and group does not have write or execute permissions on any files: #  find /var/log/ -type f -perm /g+wx,o+rwx  -exec ls -l \"{}\" + Nothing should be returned",
    "remediation": "Run the following commands to set permissions on all existing log files: # find /var/log/ -type f -perm /g+wx,o+rwx -exec chmod g-wx,o-rwx \"{}\" + Note: The configuration for your logging software or services may need to also be modified for any logs that had incorrect permissions, otherwise, the permissions may be reverted to the incorrect permissions",
    "function_names": [
      "compute_logfile_permissions_configured",
      "compute_logfile_permissions_restricted",
      "compute_logfile_access_controlled",
      "compute_logfile_ownership_correct",
      "compute_logfile_group_ownership_correct",
      "compute_logfile_world_writable_disabled",
      "compute_logfile_strict_permissions",
      "compute_logfile_secure_ownership",
      "compute_logfile_no_world_readable",
      "compute_logfile_no_world_executable"
    ]
  },
  {
    "id": "4.2.4",
    "title": "Ensure logrotate is configured",
    "assessment": "Manual",
    "description": "The system includes the capability of rotating log files regularly to avoid filling up the system with logs or making the log's size unmanageable. The file /etc/logrotate.d/syslog is the configuration file used to rotate log files created by syslog or rsyslog. Note: If no maxage setting is set for logrotate a situation can occur where logrotate is interrupted and fails to delete rotated logfiles. It is recommended to set this to a value greater than the longest any log file should exist on your system to ensure that any such logfile is removed but standard rotation settings are not overridden.",
    "rationale": "By keeping the log files smaller and more manageable, a system administrator can easily archive these files to another system and spend less time looking through inordinately large log files.",
    "audit": "Review /etc/logrotate.conf and /etc/logrotate.d/* and verify logs are rotated according to site policy.",
    "remediation": "Edit /etc/logrotate.conf and /etc/logrotate.d/* to ensure logs are rotated according to site policy.",
    "function_names": [
      "logrotate_config_maxage_set",
      "logrotate_syslog_rotation_enabled",
      "logrotate_config_interrupt_protected",
      "logrotate_logfile_retention_configured",
      "logrotate_maxage_override_prevented",
      "logrotate_rotation_frequency_configured",
      "logrotate_logfile_size_managed",
      "logrotate_config_file_present",
      "logrotate_rsyslog_integration_configured",
      "logrotate_retention_policy_enforced"
    ]
  },
  {
    "id": "5.1.1",
    "title": "Ensure cron daemon is enabled and running",
    "assessment": "Automated",
    "description": "The cron daemon is used to execute batch jobs on the system.",
    "rationale": "While there may not be user jobs that need to be run on the system, the system does have maintenance jobs that may include security monitoring that have to run. If another method for scheduling tasks is not being used, cron is used to execute them, and needs to be enabled and running.",
    "audit": "If cron is installed: Run the following commands to verify cron is enabled and running: # systemctl is-enabled cron enabled # systemctl status cron | grep 'Active: active (running) ' Active: active (running) since <Day Date Time>",
    "remediation": "Run the following command to enable and start cron: # systemctl --now enable cron",
    "function_names": [
      "cron_daemon_enabled",
      "cron_daemon_running",
      "cron_service_enabled",
      "cron_service_running",
      "system_cron_enabled",
      "system_cron_running",
      "cron_process_active",
      "cron_daemon_active"
    ]
  },
  {
    "id": "5.1.2",
    "title": "Ensure permissions on /etc/crontab are configured",
    "assessment": "Automated",
    "description": "The /etc/crontab file is used by cron to control its own jobs. The commands in this item make sure that root is the user and group owner of the file and that only the owner can access the file.",
    "rationale": "This file contains information on what system jobs are run by cron. Write access to these files could provide unprivileged users with the ability to elevate their privileges. Read access to these files could provide users with the ability to gain insight on system jobs that run on the system and could provide them a way to gain unauthorized privileged access.",
    "audit": "If cron is installed: Run the following command and verify Uid and Gid are both 0/root and Access does not grant permissions to group or other: # stat /etc/crontab Access: (0600/-rw-------)  Uid: (    0/    root)   Gid: (    0/    root)",
    "remediation": "Run the following commands to set ownership and permissions on /etc/crontab: # chown root:root /etc/crontab # chmod u-x,og-rwx /etc/crontab OR Run the following command to remove cron: # zypper remove cronie   329 | P a g e",
    "function_names": [
      "compute_crontab_file_owner_root",
      "compute_crontab_file_group_owner_root",
      "compute_crontab_file_permissions_restricted",
      "compute_crontab_file_no_world_writable",
      "compute_crontab_file_no_group_writable",
      "compute_crontab_file_no_other_readable"
    ]
  },
  {
    "id": "5.1.3",
    "title": "Ensure permissions on /etc/cron.hourly are configured",
    "assessment": "Automated",
    "description": "This directory contains system cron jobs that need to run on an hourly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.",
    "rationale": "Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.",
    "audit": "If cron is installed: Run the following command and verify Uid and Gid are both 0/root and Access does not grant permissions to group or other : # stat /etc/cron.hourly/ Access: (0700/drwx------)  Uid: (    0/    root)   Gid: (    0/    root)",
    "remediation": "Run the following commands to set ownership and permissions on the /etc/cron.hourly/ directory: # chown root:root /etc/cron.hourly/ # chmod og-rwx /etc/cron.hourly/ OR Run the following command to remove cron # zypper remove cronie  331 | P a g e",
    "function_names": [
      "cron_directory_hourly_permissions_restricted",
      "cron_directory_hourly_root_only_access",
      "cron_directory_hourly_secure_permissions",
      "cron_directory_hourly_non_world_writable",
      "cron_directory_hourly_non_world_readable",
      "cron_directory_hourly_non_world_executable",
      "cron_directory_hourly_owner_root",
      "cron_directory_hourly_group_root",
      "cron_directory_hourly_mode_700"
    ]
  },
  {
    "id": "5.1.4",
    "title": "Ensure permissions on /etc/cron.daily are configured",
    "assessment": "Automated",
    "description": "The /etc/cron.daily directory contains system cron jobs that need to run on a daily basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.",
    "rationale": "Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.",
    "audit": "If cron is installed: Run the following command and verify Uid and Gid are both 0/root and Access does not grant permissions to group or other : # stat /etc/cron.daily/ Access: (0700/drwx------)  Uid: (    0/    root)   Gid: (    0/    root)",
    "remediation": "Run the following commands to set ownership and permissions on /etc/cron.daily directory: # chown root:root /etc/cron.daily # chmod og-rwx /etc/cron.daily OR Run the following command to remove cron: # zypper remove cronie   333 | P a g e",
    "function_names": [
      "cron_daily_directory_permissions_restricted",
      "cron_daily_directory_root_ownership",
      "cron_daily_directory_no_world_writable",
      "cron_daily_directory_no_group_writable",
      "cron_daily_directory_no_other_writable",
      "cron_daily_directory_permissions_750_or_stricter",
      "cron_daily_directory_no_unauthorized_access",
      "cron_daily_directory_secure_permissions"
    ]
  },
  {
    "id": "5.1.5",
    "title": "Ensure permissions on /etc/cron.weekly are configured",
    "assessment": "Automated",
    "description": "The /etc/cron.weekly directory contains system cron jobs that need to run on a weekly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.",
    "rationale": "Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.",
    "audit": "If cron is installed Run the following command and verify Uid and Gid are both 0/root and Access does not grant permissions to group or other : # stat /etc/cron.weekly Access: (0700/drwx------)  Uid: (    0/    root)   Gid: (    0/    root)",
    "remediation": "Run the following commands to set ownership and permissions on /etc/cron.weekly/ directory: # chown root:root /etc/cron.weekly/ # chmod og-rwx /etc/cron.weekly/ OR Run the following command to remove cron: # zypper remove cronie  335 | P a g e",
    "function_names": [
      "cron_directory_weekly_permissions_restricted",
      "cron_directory_weekly_secure_ownership",
      "cron_directory_weekly_root_access_only",
      "cron_directory_weekly_no_world_writable",
      "cron_directory_weekly_no_group_writable",
      "cron_directory_weekly_no_other_writable",
      "cron_directory_weekly_permissions_700",
      "cron_directory_weekly_secure_configuration"
    ]
  },
  {
    "id": "5.1.6",
    "title": "Ensure permissions on /etc/cron.monthly are configured",
    "assessment": "Automated",
    "description": "The /etc/cron.monthly directory contains system cron jobs that need to run on a monthly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.",
    "rationale": "Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.",
    "audit": "If cron is installed: Run the following command and verify Uid and Gid are both 0/root and Access does not grant permissions to group or other: # stat /etc/cron.monthly/ Access: (0700/drwx------)  Uid: (    0/    root)   Gid: (    0/    root)",
    "remediation": "Run the following commands to set ownership and permissions on /etc/cron.monthly directory: # chown root:root /etc/cron.monthly # chmod og-rwx /etc/cron.monthly OR Run the following command to remove cron: # zypper remove cronie  337 | P a g e",
    "function_names": [
      "cron_directory_permissions_configured",
      "cron_monthly_directory_restricted_access",
      "cron_monthly_directory_root_only_permissions",
      "cron_system_directory_secure_permissions",
      "cron_monthly_directory_no_world_writable",
      "cron_monthly_directory_no_group_writable",
      "cron_monthly_directory_no_other_writable",
      "cron_monthly_directory_permissions_750_or_stricter"
    ]
  },
  {
    "id": "5.1.7",
    "title": "Ensure permissions on /etc/cron.d are configured",
    "assessment": "Automated",
    "description": "The /etc/cron.d/ directory contains system cron jobs that need to run in a similar manner to the hourly, daily weekly and monthly jobs from /etc/crontab , but require more granular control as to when they run. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.",
    "rationale": "Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.",
    "audit": "If cron is installed: Run the following command and verify Uid and Gid are both 0/root and Access does not grant permissions to group or other : # stat /etc/cron.d Access: (0700/drwx------)  Uid: (    0/    root)   Gid: (    0/    root)",
    "remediation": "Run the following commands to set ownership and permissions on /etc/cron.d directory: # chown root:root /etc/cron.d # chmod og-rwx /etc/cron.d OR Run the following command to remove cron: # zypper remove cronie   339 | P a g e",
    "function_names": [
      "cron_directory_permissions_restricted",
      "cron_directory_root_ownership",
      "cron_directory_no_world_writable",
      "cron_directory_no_group_writable",
      "cron_directory_no_other_writable",
      "cron_directory_permissions_750_or_stricter",
      "cron_directory_no_unauthorized_access",
      "cron_directory_secure_permissions",
      "cron_directory_no_user_modifiable",
      "cron_directory_root_only_access"
    ]
  },
  {
    "id": "5.1.8",
    "title": "Ensure cron is restricted to authorized users",
    "assessment": "Automated",
    "description": "If cron is installed in the system, configure /etc/cron.allow to allow specific users to use these services. If /etc/cron.allow does not exist, then /etc/cron.deny is checked. Any user not specifically defined in those files is allowed to use cron. By removing the file, only users in /etc/cron.allow are allowed to use cron. Note: Even though a given user is not listed in cron.allow, cron jobs can still be run as that user. The cron.allow file only controls administrative access to the crontab command for scheduling and modifying cron jobs.",
    "rationale": "On many systems, only the system administrator is authorized to schedule cron jobs. Using the cron.allow file to control who can run cron jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files.",
    "audit": "If cron is installed: Run the following command and verify /etc/cron.deny does not exist: # stat /etc/cron.deny stat: cannot stat `/etc/cron.deny': No such file or directory Run the following command and verify Uid and Gid are both 0/root and Access does not grant permissions to group or other for /etc/cron.allow: # stat /etc/cron.allow Access: (0600/-rw-------)  Uid: (    0/    root)   Gid: (    0/    root)   341 | P a g e",
    "remediation": "Run the following command to remove /etc/cron.deny: # rm /etc/cron.deny Run the following command to create /etc/cron.allow # touch /etc/cron.allow Run the following commands to set the owner and permissions on /etc/cron.allow: # chown root:root /etc/cron.allow # chmod u-x,og-rwx /etc/cron.allow OR Run the following command to remove cron # zypper remove cronie",
    "function_names": [
      "cron_service_allow_file_exists",
      "cron_service_deny_file_removed",
      "cron_service_authorized_users_restricted",
      "cron_service_unauthorized_users_denied",
      "cron_service_allow_file_protected",
      "cron_service_deny_file_protected",
      "cron_service_user_access_controlled",
      "cron_service_admin_access_restricted"
    ]
  },
  {
    "id": "5.1.9",
    "title": "Ensure at is restricted to authorized users",
    "assessment": "Automated",
    "description": "If at is installed in the system, configure /etc/at.allow to allow specific users to use these services. If /etc/at.allow does not exist, then /etc/at.deny is checked. Any user not specifically defined in those files is allowed to use at. By removing the file, only users in /etc/at.allow are allowed to use at. Note: Even though a given user is not listed in at.allow, at jobs can still be run as that user. The at.allow file only controls administrative access to the at command for scheduling and modifying at jobs.",
    "rationale": "On many systems, only the system administrator is authorized to schedule at jobs. Using the at.allow file to control who can run at jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files.",
    "audit": "If at is installed: Run the following command and verify /etc/at.deny does not exist: # stat /etc/at.deny stat: cannot stat `/etc/at.deny': No such file or directory Run the following command and verify Uid and Gid are both 0/root and Access does not grant permissions to group or other for /etc/at.allow: # stat /etc/at.allow Access: (0600/-rw-------)  Uid: (    0/    root)   Gid: (    0/    root)   343 | P a g e",
    "remediation": "Run the following command to remove /etc/at.deny: # rm /etc/at.deny Run the following command to create /etc/at.allow # touch /etc/at.allow Run the following commands to set the owner and permissions on /etc/at.allow: # chown root:root /etc/at.allow # chmod u-x,og-rwx /etc/at.allow OR Run the following command to remove at: # zypper remove at",
    "function_names": [
      "system_at_authorized_users_restricted",
      "system_at_allow_file_configured",
      "system_at_deny_file_removed",
      "system_at_admin_access_controlled"
    ]
  },
  {
    "id": "5.2.1",
    "title": "Ensure permissions on /etc/ssh/sshd_config are configured",
    "assessment": "Automated",
    "description": "The /etc/ssh/sshd_config file contains configuration specifications for sshd. The command below sets the owner and group of the file to root.",
    "rationale": "The /etc/ssh/sshd_config file needs to be protected from unauthorized changes by non- privileged users.",
    "audit": "Run the following command and verify Uid and Gid are both 0/root and Access does not grant permissions to group or other: # stat /etc/ssh/sshd_config Access: (0600/-rw-------)  Uid: (    0/    root)   Gid: (    0/    root)",
    "remediation": "Run the following commands to set ownership and permissions on /etc/ssh/sshd_config: # chown root:root /etc/ssh/sshd_config # chmod og-rwx /etc/ssh/sshd_config",
    "function_names": [
      "compute_sshd_config_owner_root",
      "compute_sshd_config_group_root",
      "compute_sshd_config_permissions_configured",
      "compute_sshd_config_file_secure",
      "compute_sshd_config_restrictive_permissions"
    ]
  },
  {
    "id": "5.2.2",
    "title": "Ensure permissions on SSH private host key files are configured",
    "assessment": "Automated",
    "description": "An SSH private key is one of two files used in SSH public key authentication. In this authentication method, The possession of the private key is proof of identity. Only a private key that corresponds to a public key will be able to authenticate successfully. The private keys need to be stored and handled carefully, and no copies of the private key should be distributed.",
    "rationale": "If an unauthorized user obtains the private SSH host key file, the host could be impersonated  347 | P a g e",
    "audit": "NOTE: Either mode 0640 with owner root and group ssh_keys OR mode 0600 with owner root and group root is acceptable Run the following command and verify either: Uid is 0/root and Gid is /ssh_keys and permissions 0640 or more restrictive: OR Uid is 0/root and Gid is 0/root and permissions are 0600 or more restrictive: # find /etc/ssh -xdev -type f -name 'ssh_host_*_key' -exec stat {} \\; Example Output: File: ‘/etc/ssh/ssh_host_rsa_key’ Size: 1679            Blocks: 8          IO Block: 4096   regular file Device: ca01h/51713d    Inode: 8628138     Links: 1 Access: (0640/-rw-r-----)  Uid: (    0/    root)   Gid: (  993/ssh_keys) Access: 2018-10-22 18:24:56.861750616 +0000 Modify: 2018-10-22 18:24:56.861750616 +0000 Change: 2018-10-22 18:24:56.873750616 +0000 Birth: - File: ‘/etc/ssh/ssh_host_ecdsa_key’ Size: 227             Blocks: 8          IO Block: 4096   regular file Device: ca01h/51713d    Inode: 8631760     Links: 1 Access: (0640/-rw-r-----)  Uid: (    0/    root)   Gid: (  993/ssh_keys) Access: 2018-10-22 18:24:56.897750616 +0000 Modify: 2018-10-22 18:24:56.897750616 +0000 Change: 2018-10-22 18:24:56.905750616 +0000 Birth: - File: ‘/etc/ssh/ssh_host_ed25519_key’ Size: 387             Blocks: 8          IO Block: 4096   regular file Device: ca01h/51713d    Inode: 8631762     Links: 1 Access: (0640/-rw-r-----)  Uid: (    0/    root)   Gid: ( 993/ssh_keys) Access: 2018-10-22 18:24:56.945750616 +0000 Modify: 2018-10-22 18:24:56.945750616 +0000 Change: 2018-10-22 18:24:56.957750616 +0000 Birth: -",
    "remediation": "Run the following commands to set permissions, ownership, and group on the private SSH host key files: # find /etc/ssh -xdev -type f -name 'ssh_host_*_key' -exec chmod u-x,g-wx,o- rwx {} \\; # find /etc/ssh -xdev -type f -name 'ssh_host_*_key' -exec chown root:ssh_keys {} \\;   348 | P a g e",
    "function_names": [
      "compute_ssh_key_permissions_restricted",
      "compute_ssh_key_file_mode_secure",
      "compute_ssh_private_key_ownership_correct",
      "compute_ssh_key_access_controlled",
      "compute_ssh_key_file_permissions_configured"
    ]
  },
  {
    "id": "5.2.3",
    "title": "Ensure permissions on SSH public host key files are configured",
    "assessment": "Automated",
    "description": "An SSH public key is one of two files used in SSH public key authentication. In this authentication method, a public key is a key that can be used for verifying digital signatures generated using a corresponding private key. Only a public key that corresponds to a private key will be able to authenticate successfully.",
    "rationale": "If a public host key file is modified by an unauthorized user, the SSH service may be compromised.  350 | P a g e",
    "audit": "Run the following command and verify Access does not grant write or execute permissions to group or other for all returned files: # find /etc/ssh -xdev -type f -name 'ssh_host_*_key.pub' -exec stat {} \\; Example Output: File: ‘/etc/ssh/ssh_host_rsa_key.pub’ Size: 382             Blocks: 8          IO Block: 4096   regular file Device: ca01h/51713d    Inode: 8631758     Links: 1 Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root) Access: 2018-10-22 18:24:56.861750616 +0000 Modify: 2018-10-22 18:24:56.861750616 +0000 Change: 2018-10-22 18:24:56.881750616 +0000 Birth: - File: ‘/etc/ssh/ssh_host_ecdsa_key.pub’ Size: 162             Blocks: 8          IO Block: 4096   regular file Device: ca01h/51713d    Inode: 8631761     Links: 1 Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root) Access: 2018-10-22 18:24:56.897750616 +0000 Modify: 2018-10-22 18:24:56.897750616 +0000 Change: 2018-10-22 18:24:56.917750616 +0000 Birth: - File: ‘/etc/ssh/ssh_host_ed25519_key.pub’ Size: 82              Blocks: 8          IO Block: 4096   regular file Device: ca01h/51713d    Inode: 8631763     Links: 1 Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root) Access: 2018-10-22 18:24:56.945750616 +0000 Modify: 2018-10-22 18:24:56.945750616 +0000 Change: 2018-10-22 18:24:56.961750616 +0000 Birth: -",
    "remediation": "Run the following commands to set permissions and ownership on the SSH host public key files # find /etc/ssh -xdev -type f -name 'ssh_host_*_key.pub' -exec chmod u-x,go- wx {} \\; #find /etc/ssh -xdev -type f -name 'ssh_host_*_key.pub' -exec chown root:root {} \\;   351 | P a g e",
    "function_names": [
      "compute_ssh_public_key_file_permissions_configured",
      "compute_ssh_host_key_file_permissions_restricted",
      "compute_ssh_key_file_permissions_cis_compliant",
      "compute_ssh_public_key_file_secure_permissions",
      "compute_ssh_host_key_file_access_restricted"
    ]
  },
  {
    "id": "5.2.4",
    "title": "Ensure SSH access is limited",
    "assessment": "Automated",
    "description": "There are several options available to limit which users and group can access the system via SSH. It is recommended that at least one of the following options be leveraged: • AllowUsers: o The AllowUsers variable gives the system administrator the option of allowing specific users to ssh into the system. The list consists of space separated user names. Numeric user IDs are not recognized with this variable. If a system administrator wants to restrict user access further by only allowing the allowed users to log in from a particular host, the entry can be specified in the form of user@host. • AllowGroups: o The AllowGroups variable gives the system administrator the option of allowing specific groups of users to ssh into the system. The list consists of space separated group names. Numeric group IDs are not recognized with this variable. • DenyUsers: o The DenyUsers variable gives the system administrator the option of denying specific users to ssh into the system. The list consists of space separated user names. Numeric user IDs are not recognized with this variable. If a system administrator wants to restrict user access further by specifically denying a user's access from a particular host, the entry can be specified in the form of user@host. • DenyGroups: o The DenyGroups variable gives the system administrator the option of denying specific groups of users to ssh into the system. The list consists of space separated group names. Numeric group IDs are not recognized with this variable.",
    "rationale": "Restricting which users can remotely access the system via SSH will help ensure that only authorized users access the system.  353 | P a g e",
    "audit": "Run the following command: sshd -T | grep -E '^\\s*(allow|deny)(users|groups)\\s+\\S+' Verify that the output matches at least one of the following lines: allowusers <userlist> allowgroups <grouplist> denyusers <userlist> denygroups <grouplist>",
    "remediation": "Edit the /etc/ssh/sshd_config file to set one or more of the parameter as follows: AllowUsers <userlist> OR AllowGroups <grouplist> OR DenyUsers <userlist> OR DenyGroups <grouplist>",
    "function_names": [
      "ssh_config_allow_users_restricted",
      "ssh_config_allow_groups_restricted",
      "ssh_config_deny_users_restricted",
      "ssh_config_deny_groups_restricted",
      "ssh_config_access_limited",
      "ssh_config_user_access_restricted",
      "ssh_config_group_access_restricted",
      "ssh_config_host_based_access_restricted"
    ]
  },
  {
    "id": "5.2.5",
    "title": "Ensure SSH LogLevel is appropriate",
    "assessment": "Automated",
    "description": "INFO level is the basic level that only records login activity of SSH users. In many situations, such as Incident Response, it is important to determine when a particular user was active on a system. The logout record can eliminate those users who disconnected, which helps narrow the field. VERBOSE level specifies that login and logout activity as well as the key fingerprint for any SSH key used for login will be logged. This information is important for SSH key management, especially in legacy environments.",
    "rationale": "SSH provides several logging levels with varying amounts of verbosity. DEBUG is specifically not recommended other than strictly for debugging SSH communications since it provides so much data that it is difficult to identify important security information.",
    "audit": "Run the following command and verify that output matches: # sshd -T | grep loglevel loglevel VERBOSE OR loglevel INFO",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: LogLevel VERBOSE OR LogLevel INFO Default Value: LogLevel INFO  355 | P a g e References: 1. https://www.ssh.com/ssh/sshd_config/",
    "references": "1. https://www.ssh.com/ssh/sshd_config/",
    "function_names": [
      "compute_ssh_loglevel_info",
      "compute_ssh_loglevel_verbose",
      "compute_ssh_loglevel_appropriate",
      "compute_ssh_loglevel_login_activity",
      "compute_ssh_loglevel_logout_activity",
      "compute_ssh_loglevel_key_fingerprint",
      "compute_ssh_loglevel_incident_response",
      "compute_ssh_loglevel_user_activity"
    ]
  },
  {
    "id": "5.2.6",
    "title": "Ensure SSH X11 forwarding is disabled",
    "assessment": "Automated",
    "description": "The X11Forwarding parameter provides the ability to tunnel X11 traffic through the connection to enable remote graphic connections.",
    "rationale": "Disable X11 forwarding unless there is an operational requirement to use X11 applications directly. There is a small risk that the remote X11 servers of users who are logged in via SSH with X11 forwarding could be compromised by other users on the X11 server. Note that even if X11 forwarding is disabled, users can always install their own forwarders.",
    "audit": "Run the following command and verify that output matches: # sshd -T | grep -i x11forwarding x11forwarding no",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: X11Forwarding no",
    "function_names": [
      "compute_instance_x11_forwarding_disabled",
      "ssh_config_x11_forwarding_disabled",
      "linux_ssh_x11_forwarding_disabled",
      "os_ssh_x11_forwarding_disabled",
      "vm_ssh_x11_forwarding_disabled"
    ]
  },
  {
    "id": "5.2.7",
    "title": "Ensure SSH MaxAuthTries is set to 4 or less",
    "assessment": "Automated",
    "description": "The MaxAuthTries parameter specifies the maximum number of authentication attempts permitted per connection. When the login failure count reaches half the number, error messages will be written to the syslog file detailing the login failure.",
    "rationale": "Setting the MaxAuthTries parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. While the recommended setting is 4, set the number based on site policy.",
    "audit": "Run the following command and verify that output MaxAuthTries is 4 or less: # sshd -T | grep maxauthtries maxauthtries 4",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: MaxAuthTries 4 Default Value: MaxAuthTries 6",
    "function_names": [
      "compute_ssh_max_auth_tries_less_than_or_equal_4",
      "compute_ssh_auth_attempts_limited",
      "compute_ssh_auth_tries_restricted",
      "compute_ssh_max_auth_tries_compliant",
      "compute_ssh_auth_attempts_threshold_enforced"
    ]
  },
  {
    "id": "5.2.8",
    "title": "Ensure SSH IgnoreRhosts is enabled",
    "assessment": "Automated",
    "description": "The IgnoreRhosts parameter specifies that .rhosts and .shosts files will not be used in RhostsRSAAuthentication or HostbasedAuthentication.",
    "rationale": "Setting this parameter forces users to enter a password when authenticating with ssh.",
    "audit": "Run the following command and verify that output matches: # sshd -T | grep ignorerhosts ignorerhosts yes",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: IgnoreRhosts yes Default Value: IgnoreRhosts yes",
    "function_names": [
      "compute_ssh_ignorerhosts_enabled",
      "compute_ssh_rhosts_auth_disabled",
      "compute_ssh_hostbased_auth_disabled",
      "compute_ssh_rhosts_files_ignored",
      "compute_ssh_secure_rhosts_config"
    ]
  },
  {
    "id": "5.2.9",
    "title": "Ensure SSH HostbasedAuthentication is disabled",
    "assessment": "Automated",
    "description": "The HostbasedAuthentication parameter specifies if authentication is allowed through trusted hosts via the user of .rhosts, or /etc/hosts.equiv, along with successful public key client host authentication. This option only applies to SSH Protocol Version 2.",
    "rationale": "Even though the .rhosts files are ineffective if support is disabled in /etc/pam.conf, disabling the ability to use .rhosts files in SSH provides an additional layer of protection.",
    "audit": "Run the following command and verify that output matches: # sshd -T | grep hostbasedauthentication hostbasedauthentication no",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: HostbasedAuthentication no Default Value: HostbasedAuthentication no",
    "function_names": [
      "compute_instance_ssh_hostbased_authentication_disabled",
      "ssh_config_hostbased_authentication_disabled",
      "ssh_hostbased_authentication_disabled",
      "compute_ssh_hostbased_authentication_disabled",
      "ssh_hostbased_authentication_disabled_v2"
    ]
  },
  {
    "id": "5.2.10",
    "title": "Ensure SSH root login is disabled",
    "assessment": "Automated",
    "description": "The PermitRootLogin parameter specifies if the root user can log in using ssh. The default is no.",
    "rationale": "Disallowing root logins over SSH requires system admins to authenticate using their own individual account, then escalating to root via sudo or su. This in turn limits opportunity for non-repudiation and provides a clear audit trail in the event of a security incident",
    "audit": "Run the following command and verify that output matches: # sshd -T | grep permitrootlogin permitrootlogin no",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: PermitRootLogin no Default Value: PermitRootLogin without-password"
  },
  {
    "id": "5.2.11",
    "title": "Ensure SSH PermitEmptyPasswords is disabled",
    "assessment": "Automated",
    "description": "The PermitEmptyPasswords parameter specifies if the SSH server allows login to accounts with empty password strings.",
    "rationale": "Disallowing remote shell access to accounts that have an empty password reduces the probability of unauthorized access to the system",
    "audit": "Run the following command and verify that output matches: # sshd -T | grep permitemptypasswords permitemptypasswords no",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: PermitEmptyPasswords no Default Value: PermitEmptyPasswords no",
    "function_names": [
      "compute_ssh_permit_empty_passwords_disabled",
      "ssh_config_permit_empty_passwords_disabled",
      "linux_ssh_permit_empty_passwords_disabled",
      "instance_ssh_permit_empty_passwords_disabled",
      "vm_ssh_permit_empty_passwords_disabled"
    ]
  },
  {
    "id": "5.2.12",
    "title": "Ensure SSH PermitUserEnvironment is disabled",
    "assessment": "Automated",
    "description": "The PermitUserEnvironment option allows users to present environment options to the ssh daemon.",
    "rationale": "Permitting users the ability to set environment variables through the SSH daemon could potentially allow users to bypass security controls (e.g. setting an execution path that has ssh executing a Trojan’s programs)",
    "audit": "Run the following command and verify that output matches: # sshd -T | grep permituserenvironment permituserenvironment no",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: PermitUserEnvironment no Default Value: PermitUserEnvironment no",
    "function_names": [
      "compute_ssh_permit_user_environment_disabled",
      "ssh_config_permit_user_environment_disabled",
      "ssh_daemon_permit_user_environment_disabled",
      "linux_ssh_permit_user_environment_disabled",
      "os_ssh_permit_user_environment_disabled"
    ]
  },
  {
    "id": "5.2.13",
    "title": "Ensure only strong Ciphers are used",
    "assessment": "Automated",
    "description": "This variable limits the ciphers that SSH can use during communication. Notes: • Some organizations may have stricter requirements for approved ciphers. Ensure that ciphers used are in compliance with site policy • The only \"strong\" ciphers currently FIPS 140-2 compliant are: aes256-ctr,aes192- ctr,aes128-ctr • CVE-2013-4548 referenced bellow applies to OpenSSH versions 6.2 and 6.3. If running these versions of Open SSH, Please upgrade to version 6.4 or later to fix the vulnerability, or disable AES-GCM in the server configuration The Following are the supported ciphers in openSSH 7.9: 3des-cbc aes128-cbc aes192-cbc aes256-cbc aes128-ctr aes192-ctr aes256-ctr aes128-gcm@openssh.com aes256-gcm@openssh.com chacha20-poly1305@openssh.com   364 | P a g e",
    "rationale": "Weak ciphers that are used for authentication to the cryptographic module cannot be relied upon to provide confidentiality or integrity, and system data may be compromised. • The DES, Triple DES, and Blowfish ciphers, as used in SSH, have a birthday bound of approximately four billion blocks, which makes it easier for remote attackers to obtain cleartext data via a birthday attack against a long-duration encrypted session, aka a \"Sweet32\" attack • The RC4 algorithm, as used in the TLS protocol and SSL protocol, does not properly combine state data with key data during the initialization phase, which makes it easier for remote attackers to conduct plaintext-recovery attacks against the initial bytes of a stream by sniffing network traffic that occasionally relies on keys affected by the Invariance Weakness, and then using a brute-force approach involving LSB values, aka the \"Bar Mitzvah\" issue • The passwords used during an SSH session encrypted with RC4 can be recovered by an attacker who is able to capture and replay the session • Error handling in the SSH protocol; Client and Server, when using a block cipher algorithm in Cipher Block Chaining (CBC) mode, makes it easier for remote attackers to recover certain plaintext data from an arbitrary block of ciphertext in an SSH session via unknown vectors • The mm_newkeys_from_blob function in monitor_wrap.c, when an AES-GCM cipher is used, does not properly initialize memory for a MAC context data structure, which allows remote authenticated users to bypass intended ForceCommand and login- shell restrictions via packet data that provides a crafted callback address",
    "audit": "Run the following command and verify that output does not contain any of the listed weak ciphers # sshd -T | grep ciphers Weak Ciphers: 3des-cbc aes128-cbc aes192-cbc aes256-cbc",
    "remediation": "Edit the /etc/ssh/sshd_config file add/modify the Ciphers line to contain a comma separated list of the site approved ciphers Example: Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128- gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr  365 | P a g e Default Value: Ciphers chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128- gcm@openssh.com,aes256-gcm@openssh.com References: 1. https://nvd.nist.gov/vuln/detail/CVE-2016-2183 2. https://nvd.nist.gov/vuln/detail/CVE-2015-2808 3. https://www.kb.cert.org/vuls/id/565052 4. https://www.openssh.com/txt/cbc.adv 5. https://nvd.nist.gov/vuln/detail/CVE-2008-5161 6. https://nvd.nist.gov/vuln/detail/CVE-2013-4548 7. https://www.kb.cert.org/vuls/id/565052 8. https://www.openssh.com/txt/cbc.adv 9. SSHD_CONFIG(5)",
    "references": "1. https://nvd.nist.gov/vuln/detail/CVE-2016-2183 2. https://nvd.nist.gov/vuln/detail/CVE-2015-2808 3. https://www.kb.cert.org/vuls/id/565052 4. https://www.openssh.com/txt/cbc.adv 5. https://nvd.nist.gov/vuln/detail/CVE-2008-5161 6. https://nvd.nist.gov/vuln/detail/CVE-2013-4548 7. https://www.kb.cert.org/vuls/id/565052 8. https://www.openssh.com/txt/cbc.adv 9. SSHD_CONFIG(5)",
    "function_names": [
      "compute_ssh_strong_ciphers_enabled",
      "compute_ssh_ciphers_fips_compliant",
      "compute_ssh_weak_ciphers_disabled",
      "compute_ssh_ciphers_aes_ctr_only",
      "compute_ssh_ciphers_no_gcm",
      "compute_ssh_ciphers_no_cbc",
      "compute_ssh_ciphers_min_tls_1_2",
      "compute_ssh_ciphers_cve_2013_4548_patched"
    ]
  },
  {
    "id": "5.2.14",
    "title": "Ensure only strong MAC algorithms are used",
    "assessment": "Automated",
    "description": "This variable limits the types of MAC algorithms that SSH can use during communication. Notes: • Some organizations may have stricter requirements for approved MACs. Ensure that MACs used are in compliance with site policy • The only \"strong\" MACs currently FIPS 140-2 approved are hmac-sha2-256 and hmac- sha2-512 The Supported MACs are: hmac-md5 hmac-md5-96 hmac-sha1 hmac-sha1-96 hmac-sha2-256 hmac-sha2-512 umac-64@openssh.com umac-128@openssh.com hmac-md5-etm@openssh.com hmac-md5-96-etm@openssh.com hmac-sha1-etm@openssh.com hmac-sha1-96-etm@openssh.com hmac-sha2-256-etm@openssh.com hmac-sha2-512-etm@openssh.com umac-64-etm@openssh.com umac-128-etm@openssh.com  367 | P a g e",
    "rationale": "MD5 and 96-bit MAC algorithms are considered weak and have been shown to increase exploitability in SSH downgrade attacks. Weak algorithms continue to have a great deal of attention as a weak spot that can be exploited with expanded computing power. An attacker that breaks the algorithm could take advantage of a MiTM position to decrypt the SSH tunnel and capture credentials and information",
    "audit": "Run the following command and verify that output does not contain any of the listed weak MAC algorithms: # sshd -T | grep -i \"MACs\" Weak MAC algorithms: hmac-md5 hmac-md5-96 hmac-ripemd160 hmac-sha1 hmac-sha1-96 umac-64@openssh.com umac-128@openssh.com hmac-md5-etm@openssh.com hmac-md5-96-etm@openssh.com hmac-ripemd160-etm@openssh.com hmac-sha1-etm@openssh.com hmac-sha1-96-etm@openssh.com umac-64-etm@openssh.com umac-128-etm@openssh.com",
    "remediation": "Edit the /etc/ssh/sshd_config file and add/modify the MACs line to contain a comma separated list of the site approved MACs Example: MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2- 512,hmac-sha2-256 Default Value: MACs umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256- etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1- etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2- 256,hmac-sha2-512,hmac-sha1  368 | P a g e References: 1. More information on SSH downgrade attacks can be found here: http://www.mitls.org/pages/attacks/SLOTH 2. SSHD_CONFIG(5)",
    "references": "1. More information on SSH downgrade attacks can be found here: http://www.mitls.org/pages/attacks/SLOTH 2. SSHD_CONFIG(5)",
    "function_names": [
      "ssh_config_strong_mac_algorithms",
      "ssh_config_mac_algorithms_fips_compliant",
      "ssh_config_mac_algorithms_approved_only",
      "ssh_config_mac_algorithms_no_weak_ciphers",
      "ssh_config_mac_algorithms_hmac_sha2_only",
      "ssh_config_mac_algorithms_no_md5_sha1",
      "ssh_config_mac_algorithms_etm_disabled",
      "ssh_config_mac_algorithms_min_sha2_256"
    ]
  },
  {
    "id": "5.2.15",
    "title": "Ensure only strong Key Exchange algorithms are used",
    "assessment": "Automated",
    "description": "Key exchange is any method in cryptography by which cryptographic keys are exchanged between two parties, allowing use of a cryptographic algorithm. If the sender and receiver wish to exchange encrypted messages, each must be equipped to encrypt messages to be sent and decrypt messages received Notes: Kex algorithms have a higher preference the earlier they appear in the list • Some organizations may have stricter requirements for approved Key exchange algorithms. Ensure that Key exchange algorithms used are in compliance with site policy. • The only Key Exchange Algorithms currently FIPS 140-2 approved are: ecdh-sha2- nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange- sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie- hellman-group14-sha256   370 | P a g e The Key Exchange algorithms supported by OpenSSH 7.9 are: curve25519-sha256 curve25519-sha256@libssh.org diffie-hellman-group1-sha1 diffie-hellman-group14-sha1 diffie-hellman-group14-sha256 diffie-hellman-group16-sha512 diffie-hellman-group18-sha512 diffie-hellman-group-exchange-sha1 diffie-hellman-group-exchange-sha256 ecdh-sha2-nistp256 ecdh-sha2-nistp384 ecdh-sha2-nistp521",
    "rationale": "Key exchange methods that are considered weak should be removed. A key exchange method may be weak because too few bits are used, or the hashing algorithm is considered too weak. Using weak algorithms could expose connections to man-in-the-middle attacks",
    "audit": "Run the following command and verify that output does not contain any of the listed weak Key Exchange algorithms # sshd -T | grep kexalgorithms Weak Key Exchange Algorithms: diffie-hellman-group1-sha1 diffie-hellman-group14-sha1 diffie-hellman-group-exchange-sha1   371 | P a g e",
    "remediation": "Edit the /etc/ssh/sshd_config file add/modify the KexAlgorithms line to contain a comma separated list of the site approved key exchange algorithms Example KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,diffie-hellman- group14-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18- sha512,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie- hellman-group-exchange-sha256 Default Value: KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2- nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange- sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman- group14-sha256,diffie-hellman-group14-sha1",
    "function_names": [
      "ssh_key_exchange_strong_algorithms_only",
      "ssh_key_exchange_fips_approved_algorithms",
      "ssh_key_exchange_algorithm_preference_order",
      "ssh_key_exchange_weak_algorithms_disabled",
      "ssh_key_exchange_nist_compliant_algorithms",
      "ssh_key_exchange_algorithm_whitelist_enabled",
      "ssh_key_exchange_algorithm_blacklist_disabled",
      "ssh_key_exchange_algorithm_minimum_strength",
      "ssh_key_exchange_algorithm_compliance_policy",
      "ssh_key_exchange_algorithm_approved_list"
    ]
  },
  {
    "id": "5.2.16",
    "title": "Ensure SSH Idle Timeout Interval is configured",
    "assessment": "Automated",
    "description": "The two options ClientAliveInterval and ClientAliveCountMax control the timeout of ssh sessions. • ClientAliveInterval sets a timeout interval in seconds after which if no data has been received from the client, sshd will send a message through the encrypted channel to request a response from the client. The default is 0, indicating that these messages will not be sent to the client. • ClientAliveCountMax sets the number of client alive messages which may be sent without sshd receiving any messages back from the client. If this threshold is reached while client alive messages are being sent, sshd will disconnect the client, terminating the session. The default value is 3. o The client alive messages are sent through the encrypted channel o Setting ClientAliveCountMax to 0 disables connection termination Example: If the ClientAliveInterval is set to 15 seconds and the ClientAliveCountMax is set to 3, the client ssh session will be terminated after 45 seconds of idle time.",
    "rationale": "Having no timeout value associated with a connection could allow an unauthorized user access to another user's ssh session (e.g. user walks away from their computer and doesn't lock the screen). Setting a timeout value reduces this risk. • The recommended ClientAliveInterval setting is 300 seconds (5 minutes) • The recommended ClientAliveCountMax setting is 3 • The ssh session would send three keep alive messages at 5 minute intervals. If no response is received after the third keep alive message, the ssh session would be terminated after 15 minutes.   373 | P a g e",
    "audit": "Run the following commands and verify ClientAliveInterval is between 1 and 300: # sshd -T | grep clientaliveinterval clientaliveinterval 300 Run the following command and verify ClientAliveCountMax is between 1 and 3: # sshd -T | grep clientalivecountmax clientalivecountmax 3",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameters according to site policy. This should include ClientAliveInterval between 1 and 300 and ClientAliveCountMax of 3 or less: ClientAliveInterval 300 ClientAliveCountMax 3 Default Value: ClientAliveInterval 0 ClientAliveCountMax 3 References: 1. https://man.openbsd.org/sshd_config",
    "references": "1. https://man.openbsd.org/sshd_config",
    "function_names": [
      "ssh_session_client_alive_interval_configured",
      "ssh_session_client_alive_count_max_configured",
      "ssh_session_idle_timeout_enabled",
      "ssh_session_encryption_keepalive_enabled",
      "ssh_session_termination_threshold_set"
    ]
  },
  {
    "id": "5.2.17",
    "title": "Ensure SSH LoginGraceTime is set to one minute or less",
    "assessment": "Automated",
    "description": "The LoginGraceTime parameter specifies the time allowed for successful authentication to the SSH server. The longer the Grace period is the more open unauthenticated connections can exist. Like other session controls in this session the Grace Period should be limited to appropriate organizational limits to ensure the service is available for needed access.",
    "rationale": "Setting the LoginGraceTime parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. It will also limit the number of concurrent unauthenticated connections While the recommended setting is 60 seconds (1 Minute), set the number based on site policy.",
    "audit": "Run the following command and verify that output LoginGraceTime is between 1 and 60: # sshd -T | grep logingracetime logingracetime 60",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: LoginGraceTime 60 Default Value: LoginGraceTime 120  375 | P a g e",
    "function_names": [
      "compute_ssh_login_grace_time_one_minute_or_less",
      "compute_ssh_login_grace_time_within_limit",
      "compute_ssh_login_grace_time_restricted",
      "compute_ssh_login_grace_time_compliant",
      "compute_ssh_login_grace_time_secure"
    ]
  },
  {
    "id": "5.2.18",
    "title": "Ensure SSH warning banner is configured",
    "assessment": "Automated",
    "description": "The Banner parameter specifies a file whose contents must be sent to the remote user before authentication is permitted. By default, no banner is displayed.",
    "rationale": "Banners are used to warn connecting users of the particular site's policy regarding connection. Presenting a warning message prior to the normal user login may assist the prosecution of trespassers on the computer system.",
    "audit": "Run the following command and verify that output matches: # sshd -T | grep banner banner /etc/issue.net",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: Banner /etc/issue.net",
    "function_names": [
      "compute_instance_ssh_banner_configured",
      "compute_vm_ssh_banner_configured",
      "compute_ssh_banner_file_configured",
      "compute_ssh_banner_text_configured",
      "compute_ssh_banner_before_auth_enabled",
      "compute_ssh_banner_pre_login_enabled",
      "compute_ssh_banner_file_exists",
      "compute_ssh_banner_content_valid"
    ]
  },
  {
    "id": "5.2.19",
    "title": "Ensure SSH PAM is enabled",
    "assessment": "Automated",
    "description": "UsePAM Enables the Pluggable Authentication Module interface. If set to “yes” this will enable PAM authentication using ChallengeResponseAuthentication and PasswordAuthentication in addition to PAM account and session module processing for all authentication types",
    "rationale": "When usePAM is set to yes, PAM runs through account and session types properly. This is important if you want to restrict access to services based off of IP, time or other factors of the account. Additionally, you can make sure users inherit certain environment variables on login or disallow access to the server Impact: If UsePAM is enabled, you will not be able to run sshd(8) as a non-root user.",
    "audit": "Run the following command and verify that output matches: # sshd -T | grep -i usepam usepam yes",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: UsePAM yes Default Value: usePAM yes  378 | P a g e",
    "impact": "If UsePAM is enabled, you will not be able to run sshd(8) as a non-root user.",
    "function_names": [
      "compute_instance_ssh_pam_enabled",
      "compute_ssh_config_pam_auth_required",
      "sshd_use_pam_enabled",
      "sshd_pam_authentication_enabled",
      "compute_ssh_pam_module_enabled",
      "sshd_config_pam_enabled",
      "compute_instance_ssh_pam_auth_required",
      "sshd_pam_interface_enabled"
    ]
  },
  {
    "id": "5.2.20",
    "title": "Ensure SSH AllowTcpForwarding is disabled",
    "assessment": "Automated",
    "description": "SSH port forwarding is a mechanism in SSH for tunneling application ports from the client to the server, or servers to clients. It can be used for adding encryption to legacy applications, going through firewalls, and some system administrators and IT professionals use it for opening backdoors into the internal network from their home machines",
    "rationale": "Leaving port forwarding enabled can expose the organization to security risks and back- doors. SSH connections are protected with strong encryption. This makes their contents invisible to most deployed network monitoring and traffic filtering solutions. This invisibility carries considerable risk potential if it is used for malicious purposes such as data exfiltration. Cybercriminals or malware could exploit SSH to hide their unauthorized communications, or to exfiltrate stolen data from the target network Impact: SSH tunnels are widely used in many corporate environments that employ mainframe systems as their application backends. In those environments the applications themselves may have very limited native support for security. By utilizing tunneling, compliance with SOX, HIPAA, PCI-DSS, and other standards can be achieved without having to modify the applications.",
    "audit": "Run the following command and verify that output matches: # sshd -T | grep -i allowtcpforwarding allowtcpforwarding no",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: AllowTcpForwarding no Default Value: AllowTcpForwarding yes  380 | P a g e References: 1. https://www.ssh.com/ssh/tunneling/example",
    "impact": "SSH tunnels are widely used in many corporate environments that employ mainframe systems as their application backends. In those environments the applications themselves may have very limited native support for security. By utilizing tunneling, compliance with SOX, HIPAA, PCI-DSS, and other standards can be achieved without having to modify the applications.",
    "references": "1. https://www.ssh.com/ssh/tunneling/example",
    "function_names": [
      "compute_instance_ssh_tcp_forwarding_disabled",
      "compute_ssh_config_tcp_forwarding_disabled",
      "ssh_allow_tcp_forwarding_disabled",
      "ssh_server_tcp_forwarding_disabled",
      "instance_ssh_tcp_forwarding_disabled",
      "ssh_config_tcp_forwarding_disabled",
      "sshd_allow_tcp_forwarding_disabled",
      "compute_ssh_tcp_forwarding_disabled"
    ]
  },
  {
    "id": "5.2.21",
    "title": "Ensure SSH MaxStartups is configured",
    "assessment": "Automated",
    "description": "The MaxStartups parameter specifies the maximum number of concurrent unauthenticated connections to the SSH daemon.",
    "rationale": "To protect a system from denial of service due to a large number of pending authentication connection attempts, use the rate limiting function of MaxStartups to protect availability of sshd logins and prevent overwhelming the daemon.",
    "audit": "Run the following command and verify that output MaxStartups is 10:30:60 or matches site policy: # sshd -T | grep -i maxstartups maxstartups 10:30:60",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: maxstartups 10:30:60",
    "function_names": [
      "compute_ssh_maxstartups_configured",
      "compute_ssh_connection_limits_set",
      "compute_ssh_unauthenticated_connections_limited",
      "compute_ssh_daemon_startup_restricted",
      "compute_ssh_concurrency_control_enabled"
    ]
  },
  {
    "id": "5.2.22",
    "title": "Ensure SSH MaxSessions is limited",
    "assessment": "Automated",
    "description": "The MaxSessions parameter specifies the maximum number of open sessions permitted from a given connection.",
    "rationale": "To protect a system from denial of service due to a large number of concurrent sessions, use the rate limiting function of MaxSessions to protect availability of sshd logins and prevent overwhelming the daemon.",
    "audit": "Run the following command and verify that output MaxSessions is 10 or less, or matches site policy: # sshd -T | grep -i maxsessions maxsessions 10",
    "remediation": "Edit the /etc/ssh/sshd_config file to set the parameter as follows: MaxSessions 10 Default Value: MaxSessions 10",
    "function_names": [
      "compute_instance_ssh_max_sessions_limited",
      "compute_ssh_max_sessions_restricted",
      "ssh_config_max_sessions_limited",
      "instance_ssh_max_sessions_constrained",
      "ssh_max_sessions_threshold_enforced"
    ]
  },
  {
    "id": "5.3.1",
    "title": "Ensure password creation requirements are configured",
    "assessment": "Automated",
    "description": "The pam_cracklib.so module checks the strength of passwords. It performs checks including ensuring a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more. The following are definitions of the pam_cracklib.so options: • retry=3 - Allow 3 tries before sending back a failure. • minlen=14 - password must be 14 characters or more • dcredit=-1 - provide at least one digit • ucredit=-1 - provide at least one uppercase character • ocredit=-1 - provide at least one special character • lcredit=-1 - provide at least one lowercase character Additional module options may be set. This recommendation only covers: • minlen= • dcredit= • ucredit= • ocredit= • lcredit= NOTES: The settings shown above are one possible policy. If local site policy requires stricter settings, alter these values to conform to your organization's password policies.",
    "rationale": "Strong passwords and limited attempts before locking an account protect systems from being hacked through brute force methods.  385 | P a g e",
    "audit": "Verify password creation requirements conform to organization policy. Run the following command to verify the minimum password length is at least 14 characters minlen=14: # grep -P '^\\s*password\\s+(requisite|required)\\s+pam_cracklib.so\\s+([^#]+\\s+)*minlen=(1 [4-9]|[1-9][0-9]+)\\b' /etc/pam.d/common-password password        requisite       pam_cracklib.so retry=3 minlen=14 dcredit=-1 ucredit=-1 lcredit=-1 ocredit=-1 Run the following command to verify the required password complexity - dcredit=-1 ucredit=-1 ocredit=-1 lcredit=-1: # grep -P '^\\s*password\\s+(?:requisite|required)\\s+pam_cracklib\\.so\\s+(?:[^#]+\\s+)*(?:( ?!\\2|\\3|\\4))(dcredit=-[1-9]|ucredit=-[1-9]|ocredit=-[1-9]|lcredit=-[1- 9])\\s+(?:[^#]+\\s+)*(?:(?!\\1|\\3|\\4))(dcredit=-[1-9]|ucredit=-[1-9]|ocredit=- [1-9]|lcredit=-[1-9])\\s+(?:[^#]+\\s+)*(?:(?!\\1|\\2|\\4))(dcredit=-[1- 9]|ucredit=-[1-9]|ocredit=-[1-9]|lcredit=-[1- 9])\\s+(?:[^#]+\\s+)*(?!\\1|\\2|\\3)(dcredit=-[1-9]|ucredit=-[1-9]|ocredit=-[1- 9]|lcredit=-[1-9])' /etc/pam.d/common-password password        requisite       pam_cracklib.so retry=3 minlen=14 dcredit=-1 ucredit=-1 lcredit=-1 ocredit=-1",
    "remediation": "Run the following command: # pam-config -a --cracklib-minlen=14 --cracklib-retry=3 --cracklib-lcredit=-1 --cracklib-ucredit=-1 --cracklib-dcredit=-1 --cracklib-ocredit=-1 --cracklib OR Edit the /etc/pam.d/common-password file to include the appropriate options for pam_cracklib.so and to conform to site policy: password requisite pam_cracklib.so retry=3 minlen=14 dcredit=-1 ucredit=-1 ocredit=-1 lcredit=-1 References: 1. https://documentation.suse.com/en-us/sles/12-SP5/html/SLES-all/cha-pam.html   386 | P a g e",
    "references": "1. https://documentation.suse.com/en-us/sles/12-SP5/html/SLES-all/cha-pam.html   386 | P a g e",
    "function_names": [
      "pam_password_minlen_14",
      "pam_password_dcredit_minus_1",
      "pam_password_ucredit_minus_1",
      "pam_password_ocredit_minus_1",
      "pam_password_lcredit_minus_1",
      "pam_password_retry_3",
      "pam_password_strong_requirements_enabled"
    ]
  },
  {
    "id": "5.3.2",
    "title": "Ensure lockout for failed password attempts is configured",
    "assessment": "Automated",
    "description": "Lock out users after n unsuccessful consecutive login attempts. These settings are commonly configured with the pam_faillock.so module. Some environments may continue using the pam_tally2.so module, where this older method may simplify automation in mixed environments. Set the lockout number in deny= to the policy in effect at your site. unlock_time=_n_ is the number of seconds the account remains locked after the number of attempts configured in deny=_n_ has been met. Notes: • Additional module options may be set, recommendation only covers those listed here. • If you want to require the administrator to unlock accounts, leave off the unlock_time option • The default location for attempted accesses is recorded in /var/log/tallylog • Use of the \"audit\" keyword may log credentials in the case of user error during authentication. This risk should be evaluated in the context of the site policies of your organization. • You may also lock out root, this should be considered carefully due to the ability to have this setting lock all access to the system o As an option on the same line: o auth required pam_tally2.so deny=5 even_deny_root unlock_time=900 o To define a different lockout time for root: o auth required pam_tally2.so deny=5 root_unlock_time=120 unlock_time=900 • If a user has been locked out because they have reached the maximum consecutive failure count defined by deny= in the pam_tally2.so module, the user can be unlocked by issuing following command. This command sets the failed count to 0, effectively unlocking the user. • # pam_tally2 -u <username> --reset",
    "rationale": "Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute force password attacks against your systems.  388 | P a g e",
    "audit": "Verify password lockouts are configured. Ensure that the deny=_n_ follows local site policy. This should not exceed deny=5. Run the following commands: # grep -E '^\\s*auth\\s+\\S+\\s+pam_(tally2|unix)\\.so' /etc/pam.d/login Verify the output includes the following lines: auth        required      pam_tally2.so deny=5 onerr=fail unlock_time=900 auth        required      pam_unix.so try_first_pass # grep -E '^\\s*account\\s+required\\s+pam_tally2.so\\s*' /etc/pam.d/common- account Verify the output includes the following lines: account     required      pam_tally2.so",
    "remediation": "Modify the deny= and unlock_time= parameters to conform to local site policy, Not to be greater than deny=5: Edit the file /etc/pam.d/login and add the following line: auth        required      pam_tally2.so deny=5 onerr=fail unlock_time=900 Note: The ordering on the lines is important. The additional line needs to below the line auth required pam_env.so and above all password validation lines. Example: auth        required      pam_env.so auth        required      pam_tally2.so deny=5 onerr=fail unlock_time=900 auth        sufficient    pam_unix.so nullok try_first_pass auth        required      pam_deny.so Edit the /etc/pam.d/common-account file and add the following pam_tally2.so line: account     required      pam_tally2.so   389 | P a g e",
    "function_names": [
      "pam_faillock_configured",
      "pam_faillock_lockout_enabled",
      "pam_faillock_deny_attempts_set",
      "pam_faillock_unlock_time_set",
      "pam_tally2_configured",
      "pam_tally2_lockout_enabled",
      "pam_tally2_deny_attempts_set",
      "pam_tally2_unlock_time_set",
      "pam_tally2_root_lockout_configured",
      "pam_tally2_audit_logging_configured",
      "pam_tally2_lockout_reset_available"
    ]
  },
  {
    "id": "5.3.3",
    "title": "Ensure password reuse is limited",
    "assessment": "Automated",
    "description": "The /etc/security/opasswd file stores the users' old passwords and can be checked to ensure that users are not recycling recent passwords. Notes: • Additional module options may be set, recommendation only covers those listed here. • This setting only applies to local accounts. • This option is configured with the remember=n module option in /etc/pam.d/common- password",
    "rationale": "Forcing users not to reuse their past passwords make it less likely that an attacker will be able to guess the password.",
    "audit": "Run the following command to verify remembered password history follows local site policy, not to be less than 5: # grep -P '^\\s*password\\s+(requisite|required)\\s+pam_pwhistory\\.so\\s+([^#]+\\s+)*remembe r=([5-9]|[1-9][0-9]+)\\b' /etc/pam.d/common-password password    required      pam_pwhistory.so remember=5",
    "remediation": "Run the following command: # pam-config -a --pwhistory --pwhistory-remember=5 OR Edit the file /etc/pam.d/common-password to include the remember= option and conform to site policy as shown: password    required      pam_pwhistory.so remember=5   391 | P a g e",
    "function_names": [
      "pam_password_reuse_limited",
      "pam_opasswd_file_configured",
      "pam_common_password_remember_enabled",
      "local_account_password_history_enabled",
      "password_recycle_prevention_enabled"
    ]
  },
  {
    "id": "5.4.1.1",
    "title": "Ensure password hashing algorithm is SHA-512",
    "assessment": "Automated",
    "description": "Login passwords are hashed and stored in the /etc/shadow file. Note: These changes only apply to accounts configured on the local system.",
    "rationale": "The SHA-512 algorithm provides much stronger hashing than MD5, thus providing additional protection to the system by increasing the level of effort for an attacker to successfully determine passwords.",
    "audit": "Run the following command to verify the sha512 option is included: # grep -Ei '^\\s*^\\s*ENCRYPT_METHOD\\s+SHA512' /etc/login.defs ENCRYPT_METHOD SHA512",
    "remediation": "Edit the /etc/login.defs file and modify ENCRYPT_METHOD to SHA512: ENCRYPT_METHOD sha512 Notes: • Any system accounts that need to be expired should be carefully done separately by the system administrator to prevent any potential problems • If it is determined that the password algorithm being used is not SHA-512, once it is changed, it is recommended that all user ID's be immediately expired and forced to change their passwords on next login, In accordance with local site policies • To accomplish this, the following command can be used # awk -F: '( $3<'\"$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\"' && $1 != \"nfsnobody\" ) { print $1 }' /etc/passwd | xargs -n 1 chage -d 0   395 | P a g e Default Value: ENCRYPT_METHOD sha512",
    "function_names": [
      "linux_password_hashing_sha512",
      "linux_shadow_file_sha512_enabled",
      "linux_auth_password_sha512",
      "linux_local_account_sha512_hashing",
      "linux_shadow_password_sha512",
      "linux_system_password_sha512",
      "linux_account_password_sha512_enabled"
    ]
  },
  {
    "id": "5.4.1.2",
    "title": "Ensure password expiration is 365 days or less",
    "assessment": "Automated",
    "description": "The PASS_MAX_DAYS parameter in /etc/login.defs allows an administrator to force passwords to expire once they reach a defined age. It is recommended that the PASS_MAX_DAYS parameter be set to less than or equal to 365 days. Notes: • A value of -1 will disable password expiration. • The password expiration must be greater than the minimum days between password changes or users will be unable to change their password.",
    "rationale": "The window of opportunity for an attacker to leverage compromised credentials via a brute force attack, using already compromised credentials, or gaining the credentials by other means, can be limited by the age of the password. Therefore, reducing the maximum age of a password can also reduce an attacker's window of opportunity. Requiring passwords to be changed helps to mitigate the risk posed by the poor security practice of passwords being used for multiple accounts, and poorly implemented off- boarding and change of responsibility policies. This should not be considered a replacement for proper implementation of these policies and practices. Note: If it is believed that a user's password may have been compromised, the user's account should be locked immediately. Local policy should be followed to ensure the secure update of their password.  397 | P a g e",
    "audit": "Run the following command and verify PASS_MAX_DAYS conforms to site policy (no more than 365 days): # grep ^\\s*PASS_MAX_DAYS /etc/login.defs PASS_MAX_DAYS 365 Run the following command and Review list of users and PASS_MAX_DAYS to verify that all users' PASS_MAX_DAYS conforms to site policy (no more than 365 days): # grep -E '^[^:]+:[^!*]' /etc/shadow | cut -d: -f1,5 <user>:<PASS_MAX_DAYS>",
    "remediation": "Set the PASS_MAX_DAYS parameter to conform to site policy in /etc/login.defs : PASS_MAX_DAYS 365 Modify user parameters for all users with a password set to match: # chage --maxdays 365 <user>",
    "function_names": [
      "linux_login_defs_password_expiration_max_365d",
      "linux_password_policy_max_age_365d_or_less",
      "linux_auth_password_expiry_within_365d",
      "linux_security_password_max_days_365d",
      "linux_accounts_password_expiration_365d_limit"
    ]
  },
  {
    "id": "5.4.1.3",
    "title": "Ensure minimum days between password changes is configured",
    "assessment": "Automated",
    "description": "The PASS_MIN_DAYS parameter in /etc/login.defs allows an administrator to prevent users from changing their password until a minimum number of days have passed since the last time the user changed their password. It is recommended that PASS_MIN_DAYS parameter be set to 1 or more days.",
    "rationale": "By restricting the frequency of password changes, an administrator can prevent users from repeatedly changing their password in an attempt to circumvent password reuse controls.",
    "audit": "Run the following command and verify PASS_MIN_DAYS conforms to site policy (no less than 1 day): # grep ^\\s*PASS_MIN_DAYS /etc/login.defs PASS_MIN_DAYS 1 Run the following command and Review list of users and PAS_MIN_DAYS to Verify that all users' PAS_MIN_DAYS conforms to site policy (no less than 1 day): # grep -E ^[^:]+:[^\\!*] /etc/shadow | cut -d: -f1,4 <user>:<PASS_MIN_DAYS>",
    "remediation": "Set the PASS_MIN_DAYS parameter to 1 in /etc/login.defs : PASS_MIN_DAYS 1 Modify user parameters for all users with a password set to match: # chage --mindays 1 <user>   399 | P a g e",
    "function_names": [
      "linux_password_min_days_configured",
      "login_defs_pass_min_days_set",
      "password_policy_min_days_enabled",
      "auth_password_min_age_configured",
      "system_auth_min_pass_change_days_set"
    ]
  },
  {
    "id": "5.4.1.4",
    "title": "Ensure password expiration warning days is 7 or more",
    "assessment": "Automated",
    "description": "The PASS_WARN_AGE parameter in /etc/login.defs allows an administrator to notify users that their password will expire in a defined number of days. It is recommended that the PASS_WARN_AGE parameter be set to 7 or more days.",
    "rationale": "Providing an advance warning that a password will be expiring gives users time to think of a secure password. Users caught unaware may choose a simple password or write it down where it may be discovered.",
    "audit": "Run the following command and verify PASS_WARN_AGE conforms to site policy (No less than 7 days): # grep ^\\s*PASS_WARN_AGE /etc/login.defs PASS_WARN_AGE 7 Verify all users with a password have their number of days of warning before password expires set to 7 or more: Run the following command and Review list of users and PASS_WARN_AGE to verify that all users' PASS_WARN_AGE conforms to site policy (No less than 7 days): # grep -E ^[^:]+:[^\\!*] /etc/shadow | cut -d: -f1,6 <user>:<PASS_WARN_AGE>",
    "remediation": "Set the PASS_WARN_AGE parameter to 7 in /etc/login.defs : PASS_WARN_AGE 7 Modify user parameters for all users with a password set to match: # chage --warndays 7 <user>  401 | P a g e",
    "function_names": [
      "linux_password_warn_age_min_7d",
      "login_defs_password_expiration_warning_7d",
      "system_auth_password_warn_age_configured",
      "linux_auth_password_expiry_warning_enabled",
      "etc_login_password_warn_age_compliant"
    ]
  },
  {
    "id": "5.4.1.5",
    "title": "Ensure inactive password lock is 30 days or less",
    "assessment": "Automated",
    "description": "User accounts that have been inactive for over a given period of time can be automatically disabled. It is recommended that accounts that are inactive for 30 days after password expiration be disabled. Note: A value of -1 would disable this setting.",
    "rationale": "Inactive accounts pose a threat to system security since the users are not logging in to notice failed login attempts or other anomalies.",
    "audit": "Run the following command and verify INACTIVE conforms to sire policy (no more than 30 days): # useradd -D | grep INACTIVE INACTIVE=30 Verify all users with a password have Password inactive no more than 30 days after password expires: Run the following command and Review list of users and INACTIVE to verify that all users' INACTIVE conforms to site policy (no more than 30 days): # grep -E ^[^:]+:[^\\!*] /etc/shadow | cut -d: -f1,7 <user>:<INACTIVE>",
    "remediation": "Run the following command to set the default password inactivity period to 30 days: # useradd -D -f 30 Modify user parameters for all users with a password set to match: # chage --inactive 30 <user>  403 | P a g e",
    "function_names": [
      "iam_user_inactive_password_lock_30d_or_less",
      "iam_user_password_lock_enabled",
      "iam_user_password_lock_duration_valid",
      "iam_user_password_lock_not_disabled",
      "iam_user_password_policy_inactive_lock_compliant"
    ]
  },
  {
    "id": "5.4.1.6",
    "title": "Ensure all users last password change date is in the past",
    "assessment": "Automated",
    "description": "All users should have a password change date in the past.",
    "rationale": "If a users recorded password change date is in the future then they could bypass any set password expiration.",
    "audit": "Run the following command and verify nothing is returned: # for usr in $(cut -d: -f1 /etc/shadow); do [[ $(chage --list $usr | grep '^Last password change' | cut -d: -f2) > $(date) ]] && echo \"$usr :$(chage -- list $usr | grep '^Last password change' | cut -d: -f2)\"; done",
    "remediation": "Investigate any users with a password change date in the future and correct them. Locking the account, expiring the password, or resetting the password manually may be appropriate.",
    "function_names": [
      "iam_user_password_change_date_in_past",
      "iam_user_password_change_date_recent",
      "iam_user_password_change_date_valid",
      "iam_user_password_change_date_not_future",
      "iam_user_password_change_date_compliant"
    ]
  },
  {
    "id": "5.4.2",
    "title": "Ensure system accounts are secured",
    "assessment": "Automated",
    "description": "There are a number of accounts provided with most distributions that are used to manage applications and are not intended to provide an interactive shell.",
    "rationale": "It is important to make sure that accounts that are not being used by regular users are prevented from being used to provide an interactive shell. By default, most distributions set the password field for these accounts to an invalid string, but it is also recommended that the shell field in the password file be set to the nologin shell. This prevents the account from potentially being used to run any commands. Note: The root, sync, shutdown, and halt users are exempted from requiring a non-login shell.",
    "audit": "Run the following commands and verify no results are returned: # awk -F: '($1!=\"root\" && $1!=\"sync\" && $1!=\"shutdown\" && $1!=\"halt\" && $1!~/^\\+/ && $3<'\"$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\"' && $7!=\"'\"$(which nologin)\"'\" && $7!=\"/bin/false\") {print}' /etc/passwd # awk -F: '($1!=\"root\" && $1!~/^\\+/ && $3<'\"$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\"') {print $1}' /etc/passwd | xargs -I '{}' passwd -S '{}' | awk '($2!=\"L\" && $2!=\"LK\") {print $1}'   406 | P a g e",
    "remediation": "Run the commands appropriate for your distribution: Set the shell for any accounts returned by the audit to nologin: # usermod -s $(which nologin) <user> Lock any non root accounts returned by the audit: # usermod -L <user> The following command will set all system accounts to a non login shell: # awk -F: '($1!=\"root\" && $1!=\"sync\" && $1!=\"shutdown\" && $1!=\"halt\" && $1!~/^\\+/ && $3<'\"$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\"' && $7!=\"'\"$(which nologin)\"'\" && $7!=\"/bin/false\" && $7!=\"/usr/bin/false\") {print $1}' /etc/passwd | while read -r user; do usermod -s \"$(which nologin)\" \"$user\"; done The following command will automatically lock not root system accounts: # awk -F: '($1!=\"root\" && $1!~/^\\+/ && $3<'\"$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\"') {print $1}' /etc/passwd | xargs -I '{}' passwd -S '{}' | awk '($2!=\"L\" && $2!=\"LK\") {print $1}' | while read -r user; do usermod -L \"$user\"; done",
    "function_names": [
      "os_system_accounts_no_shell_access",
      "os_system_accounts_password_locked",
      "os_system_accounts_no_home_directory",
      "os_system_accounts_no_login_permitted",
      "os_system_accounts_secure_uid_range",
      "os_system_accounts_no_ssh_keys",
      "os_system_accounts_restricted_sudo_access",
      "os_system_accounts_no_interactive_sessions",
      "os_system_accounts_immutable_config",
      "os_system_accounts_no_default_credentials"
    ]
  },
  {
    "id": "5.4.3",
    "title": "Ensure default group for the root account is GID 0",
    "assessment": "Automated",
    "description": "The usermod command can be used to specify which group the root user belongs to. This affects permissions of files that are created by the root user.",
    "rationale": "Using GID 0 for the root account helps prevent root -owned files from accidentally becoming accessible to non-privileged users.",
    "audit": "Run the following command and verify the result is 0 : # grep \"^root:\" /etc/passwd | cut -f4 -d: 0",
    "remediation": "Run the following command to set the root user default group to GID 0 : # usermod -g 0 root",
    "function_names": [
      "iam_root_group_default_gid_0",
      "iam_root_group_gid_0",
      "iam_root_user_default_group_gid_0",
      "iam_root_account_group_gid_0",
      "iam_root_default_group_gid_0"
    ]
  },
  {
    "id": "5.4.4",
    "title": "Ensure default user shell timeout is configured",
    "assessment": "Automated",
    "description": "TMOUT is an environmental setting that determines the timeout of a shell in seconds. • TMOUT= n - Sets the shell timeout to n seconds. A setting of TMOUT=0 disables timeout. • readonly TMOUT- Sets the TMOUT environmental variable as readonly, preventing unwanted modification during run-time. • export TMOUT - exports the TMOUT variable System Wide Shell Configuration Files: • /etc/profile - used to set system wide environmental variables on users shells. The variables are sometimes the same ones that are in the .bash_profile, however this file is used to set an initial PATH or PS1 for all shell users of the system. is only executed for interactive login shells, or shells executed with the --login parameter. • /etc/profile.d - /etc/profile will execute the scripts within /etc/profile.d/*.sh. It is recommended to place your configuration in a shell script within /etc/profile.d to set your own system wide environmental variables. • /etc/bash.bashrc - System wide version of .bashrc. etc/bashrc also invokes /etc/profile.d/*.sh if non-login shell, but redirects output to /dev/null if non- interactive. Is only executed for interactive shells or if BASH_ENV is set to /etc/bash.bashrc.   409 | P a g e",
    "rationale": "Setting a timeout value reduces the window of opportunity for unauthorized user access to another user's shell session that has been left unattended. It also ends the inactive session and releases the resources associated with that session. Notes: • The audit and remediation in this recommendation apply to bash and shell. If other shells are supported on the system, it is recommended that their configuration files are also checked. Other methods of setting a timeout exist for other shells not covered here. • The TMOUT option applies to the active shell only. In case a user switches from one shell to another, it needs another full cycle to close the remaining shell. • /etc/profile may get updated by YaST2 Online Update • Ensure that the timeout conforms to your local policy.",
    "audit": "Run the following commands to verify that TMOUT is configured to include a timeout of no more than 900 seconds, to be readonly, and to be exported: Run the following command to verify that TMOUT is configured in: a .sh file in /etc/profile.d/: # for f in /etc/profile.d/*.sh ; do grep -Eq '(^|^[^#]*;)\\s*(readonly|export(\\s+[^$#;]+\\s*)*)?\\s*TMOUT=(900|[1-8][0-9][0- 9]|[1-9][0-9]|[1-9])\\b' $f && grep -Eq '(^|^[^#]*;)\\s*readonly\\s+TMOUT\\b' $f && grep -Eq '(^|^[^#]*;)\\s*export\\s+([^$#;]+\\s+)*TMOUT\\b' $f && echo \"TMOUT correctly configured in file: $f\"; done TMOUT correctly configured in file: <name of file where TMOUT is configured> Run the following command to verify that TMOUT is not set to a longer timeout: # grep -PR '^\\s*([^$#;]+\\s+)*TMOUT=(9[0-9][1-9]|0+|[1- 9]\\d{3,})\\b\\s*(\\S+\\s*)*(\\s+#.*)?$' /etc/profile* /etc/bashrc.bashrc* Nothing should be returned   410 | P a g e",
    "remediation": "Review /etc/bash.bashrc, /etc/profile, and all files ending in *.sh in the /etc/profile.d/ directory and remove or edit all TMOUT=_n_ entries to follow local site policy. TMOUT should not exceed 900 or be equal to 0. Configure TMOUT in a file ending in .sh in the /etc/profile.d/ directory. TMOUT configuration examples: • As multiple lines: TMOUT=900 readonly TMOUT export TMOUT • As a single line: readonly TMOUT=900 ; export TMOUT",
    "function_names": [
      "shell_profile_tmout_configured",
      "shell_profile_tmout_readonly",
      "shell_profile_tmout_exported",
      "profile_d_tmout_configured",
      "profile_d_tmout_readonly",
      "profile_d_tmout_exported",
      "bash_bashrc_tmout_configured",
      "bash_bashrc_tmout_readonly",
      "bash_bashrc_tmout_exported",
      "shell_config_tmout_non_zero",
      "shell_config_tmout_system_wide"
    ]
  },
  {
    "id": "5.4.5",
    "title": "Ensure default user umask is configured",
    "assessment": "Automated",
    "description": "The user file-creation mode mask (umask) is used to determine the file permission for newly created directories and files. In Linux, the default permissions for any newly created directory is 0777 (rwxrwxrwx), and for any newly created file it is 0666 (rw-rw-rw-). The umask modifies the default Linux permissions by restricting (masking) these permissions. The umask is not simply subtracted, but is processed bitwise. Bits set in the umask are cleared in the resulting file mode. • The user creating the directories or files has the discretion of changing the permissions by: o Issuing the chmod command o Choosing a different default umask o Adding the umask command into a User Shell Configuration File, ( .bash_profile or .bashrc), in their home directory • The permissions listed are not masked by umask. ie a umask set by umask u=rwx,g=rx,o= is the Symbolic equivalent of the Octal umask 027. This umask would set a newly created directory with file mode drwxr-x--- and a newly created file with file mode rw-r-----. • umask can be set with either octal or Symbolic values: o Octal (Numeric) Value - Represented by either three or four digits. ie umask 0027 or umask 027. If a four digit umask is used, the first digit is ignored. The remaining three digits effect the resulting permissions for user, group, and world/other respectively. o Symbolic Value - Represented by a comma separated list for User u, group g, and world/other o.   412 | P a g e System Wide Shell Configuration Files: • /etc/profile - used to set system wide environmental variables on users shells. The variables are sometimes the same ones that are in the .bash_profile, however this file is used to set an initial PATH or PS1 for all shell users of the system. is only executed for interactive login shells, or shells executed with the --login parameter. • /etc/profile.d - /etc/profile will execute the scripts within /etc/profile.d/*.sh. It is recommended to place your configuration in a shell script within /etc/profile.d to set your own system wide environmental variables. • /etc/bash.bashrc - System wide version of .bashrc. etc/bashrc also invokes /etc/profile.d/*.sh if non-login shell, but redirects output to /dev/null if non- interactive. Is only executed for interactive shells or if BASH_ENV is set to /etc/bashrc. User Shell Configuration Files: • ~/.bash_profile - Is executed to configure your shell before the initial command prompt. Is only read by login shells. • ~/.bashrc - Is executed for interactive shells. only read by a shell that's both interactive and non-login",
    "rationale": "Setting a secure default value for umask ensures that users make a conscious choice about their file permissions. A permissive umask value could result in directories or files with excessive permissions that can be read and/or written to by unauthorized users. Notes: • The audit and remediation in this recommendation apply to bash and shell. If other shells are supported on the system, it is recommended that their configuration files also are checked. • Other methods of setting a default user umask exist. • If other methods are in use in your environment they should be audited and the shell configs should be verified to not override.   413 | P a g e",
    "audit": "Run the following commands to verify: • umask 027 or umask u=rwx,g=rx,o= or more restrictive • No System Wide umask is set that allows for: o A newly created directories's permissions to be less restrictive than 750 (drwxr-x---) o A newly created file's permissions to be less restrictive than 640 (rw-r-----). • The default System Wide umask is set to enforce: o A newly created directories's permissions to be 750 (drwxr-x---) o A newly created file's permissions be 640 (rw-r-----). Run the following commands to verify if umask is set, it is less restrictive than 027, u=rwx,g=rx,o=: # grep -RPi '(^|^[^#]*)\\s*umask\\s+([0-7][0-7][01][0-7]\\b|[0-7][0-7][0-7][0- 6]\\b|[0-7][01][0-7]\\b|[0-7][0-7][0- 6]\\b|(u=[rwx]{0,3},)?(g=[rwx]{0,3},)?o=[rwx]+\\b|(u=[rwx]{1,3},)?g=[^rx]{1,3}( ,o=[rwx]{0,3})?\\b)' /etc/login.defs /etc/default/login /etc/profile* /etc/bash.bashrc* No file should be returned - May return \"No such file or directory\" Run the following command to verify that a System Wide default umask of 027, u=rwx,g=rx,o=, or more restrictive is set: # grep -REi '^\\s*UMASK\\s+\\s*(0[0-7][2-7]7|[0-7][2- 7]7|u=(r?|w?|x?)(r?|w?|x?)(r?|w?|x?),g=(r?x?|x?r?),o=)\\b' /etc/login.defs /etc/default/login /etc/profile* /etc/bash.bashrc* Example output: <full path to file>:UMASK 027   414 | P a g e",
    "remediation": "Configure umask in one of the following locations: • /etc/login.defs - Recommended • A file ending in .sh in the /etc/profile.d/ directory • /etc/default/login • /etc/profile.local • /etc/profile - This is not recommended, may be updated/overwritten by YaST2 Online Update Example: edit /etc/login.defs and add or modify the UMASK line. UMASK 027 Review files ending in .sh in the /etc/profile.d/ directory, and the files; /etc/bash.bashrc, /etc/profile, and /etc/profile.local. Remove or edit all umask entries to follow local site policy. Any remaining entries should be: umask 027, umask u=rwx,g=rx,o= or more restrictive.",
    "function_names": [
      "linux_user_umask_configured",
      "linux_user_umask_octal_set",
      "linux_user_umask_symbolic_set",
      "linux_user_umask_min_restrictive",
      "linux_user_umask_no_world_writable",
      "linux_user_umask_profile_configured",
      "linux_user_umask_bashrc_configured",
      "linux_user_umask_system_wide_configured",
      "linux_user_umask_default_secure",
      "linux_user_umask_no_group_writable"
    ]
  },
  {
    "id": "5.5",
    "title": "Ensure root login is restricted to system console",
    "assessment": "Manual",
    "description": "The file /etc/securetty contains a list of valid terminals that may be logged in directly as root.",
    "rationale": "Since the system console has special properties to handle emergency situations, it is important to ensure that the console is in a physically secure location and that unauthorized consoles have not been defined.",
    "audit": "# cat /etc/securetty",
    "remediation": "Remove entries for any consoles that are not in a physically secure location.",
    "function_names": [
      "compute_system_console_root_login_restricted",
      "compute_securetty_root_access_limited",
      "compute_console_root_login_only",
      "compute_securetty_root_console_restricted"
    ]
  },
  {
    "id": "5.6",
    "title": "Ensure access to the su command is restricted",
    "assessment": "Automated",
    "description": "The su command allows a user to run a command or shell as another user. The program has been superseded by sudo, which allows for more granular control over privileged access. Normally, the su command can be executed by any user. By uncommenting the pam_wheel.so statement in /etc/pam.d/su, the su command will only allow users in a specific groups to execute su. This group should be empty to reinforce the use of sudo for privileged access.",
    "rationale": "Restricting the use of su , and using sudo in its place, provides system administrators better control of the escalation of user privileges to execute privileged commands. The sudo utility also provides a better logging and audit mechanism, as it can log each command executed via sudo , whereas su can only record that a user executed the su program.",
    "audit": "Run the following command and verify the output matches the line: # grep -E '^\\s*auth\\s+required\\s+pam_wheel\\.so\\s+(\\S+\\s+)*use_uid\\s+(\\S+\\s+)*group=\\S+\\ s*(\\S+\\s*)*(\\s+#.*)?$' /etc/pam.d/su auth required pam_wheel.so use_uid group=<group_name> Run the following command and verify that the group specified in <group_name> contains no users: # grep <group_name> /etc/group <group_name>:x:<GID>: There should be no users listed after the Group ID field.  417 | P a g e",
    "remediation": "Create an empty group that will be specified for use of the su command. The group should be named according to site policy. Example # groupadd sugroup Add the following line to the /etc/pam.d/su file, specifying the empty group: auth required pam_wheel.so use_uid group=sugroup",
    "function_names": [
      "compute_su_access_restricted",
      "compute_su_command_restricted_to_wheel_group",
      "compute_su_pam_wheel_enabled",
      "compute_su_sudo_enforcement",
      "compute_su_privileged_group_empty"
    ]
  },
  {
    "id": "6.1.1",
    "title": "Audit system file permissions",
    "assessment": "Manual",
    "description": "The RPM package manager has a number of useful options. One of these, the -V option, can be used to verify that system packages are correctly installed. The V option can be used to verify a particular package or to verify all system packages. If no output is returned, the package is installed correctly. The following table describes the meaning of output from the verify option: Code   Meaning S      File size differs. M      File mode differs (includes permissions and file type). 5      The MD5 checksum differs. D      The major and minor version numbers differ on a device file. L      A mismatch occurs in a link. U      The file ownership differs. G      The file group owner differs. T      The file time (mtime) differs. The rpm -qf command can be used to determine which package a particular file belongs to. For example the following commands determines which package the /etc/ssh/sshd_config file belongs to: # rpm -qf /etc/ssh/sshd_config  openssh-7.9p1-6.14.1.x86_64   421 | P a g e To verify the settings for the package that controls the /etc/ssh/sshd_config file, run the following: # rpm -V openssh-7.9p1-6.14.1.x86_64  S.5....T.  c /etc/ssh/sshd_config Note: You can feed the output of the rpm -qf command to the rpm -V command: #  rpm -V $(rpm -qf /etc/ssh/sshd_config)  S.5....T.  c /etc/ssh/sshd_config Notes: • Since packages and important files may change with new updates and releases, it is recommended to verify everything, not just a finite list of files. This can be a time consuming task and results may depend on site policy therefore it is not a scorable benchmark item, but is provided for those interested in additional security measures. • Some of the recommendations of this benchmark alter the state of files audited by this recommendation. The audit command will alert for all changes to a file permissions even if the new state is more secure than the default.",
    "rationale": "It is important to confirm that packaged system files and directories are maintained with the permissions they were intended to have from the OS distributor or in accordance with local site policy.",
    "audit": "Run the following command to review all installed packages. Note that this may be very time consuming and may be best scheduled via the cron utility. It is recommended that the output of this command be redirected to a file that can be reviewed later. This command will ignore configuration files due to the extreme likelihood that they will change. # rpm -Va --nomtime --nosize --nomd5 --nolinkto > <filename> | grep -vw c",
    "remediation": "Investigate the results to ensure any discrepancies found are understood and support proper secure operation of the system.  422 | P a g e References: 1. https://docs.fedoraproject.org/en-US/fedora/rawhide/system-administrators- guide/RPM/#s2-rpm-verifying",
    "references": "1. https://docs.fedoraproject.org/en-US/fedora/rawhide/system-administrators- guide/RPM/#s2-rpm-verifying",
    "function_names": [
      "system_package_file_permissions_audited",
      "rpm_package_integrity_verified",
      "system_file_mode_consistent",
      "rpm_package_checksum_valid",
      "system_file_ownership_correct",
      "rpm_package_version_matched",
      "system_file_link_valid",
      "rpm_package_mtime_consistent",
      "system_file_package_mapping_verified",
      "rpm_package_full_verification_enabled"
    ]
  },
  {
    "id": "6.1.2",
    "title": "Ensure permissions on /etc/passwd are configured",
    "assessment": "Automated",
    "description": "The /etc/passwd file contains user account information that is used by many system utilities and therefore must be readable for these utilities to operate.",
    "rationale": "It is critical to ensure that the /etc/passwd file is protected from unauthorized write access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.",
    "audit": "Run the following command and verify Uid and Gid are both 0/root and Access is 644 or more restrictive: # stat /etc/passwd Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)",
    "remediation": "Run the following commands to set owner, group, and permissions on /etc/passwd: # chown root:root /etc/passwd # chmod u-x,g-wx,o-wx /etc/passwd",
    "function_names": [
      "linux_file_passwd_permissions_configured",
      "linux_file_passwd_readable",
      "linux_file_passwd_secure_permissions",
      "linux_file_passwd_owner_root",
      "linux_file_passwd_group_root",
      "linux_file_passwd_mode_644",
      "linux_file_passwd_no_world_writable",
      "linux_file_passwd_no_unauthorized_access"
    ]
  },
  {
    "id": "6.1.3",
    "title": "Ensure permissions on /etc/shadow are configured",
    "assessment": "Automated",
    "description": "The /etc/shadow file is used to store the information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information.",
    "rationale": "If attackers can gain read access to the /etc/shadow file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the /etc/shadow file (such as expiration) could also be useful to subvert the user accounts.",
    "audit": "Run the following command and verify Uid is 0/root, Gid is 0/root or <gid> /shadow, and Access is 0640 or more restrictive: # stat /etc/shadow Access: (0640/-rw-r-----)  Uid: (    0/    root)   Gid: (   15/  shadow)",
    "remediation": "Run the following commands to set owner, group, and permissions on /etc/shadow: # chown root:root /etc/shadow # chmod u-x,g-wx,o-rwx /etc/shadow",
    "function_names": [
      "linux_file_shadow_permissions_configured",
      "linux_file_shadow_owner_root",
      "linux_file_shadow_group_root",
      "linux_file_shadow_mode_640",
      "linux_file_shadow_no_world_writable",
      "linux_file_shadow_no_group_writable",
      "linux_file_shadow_no_other_writable",
      "linux_file_shadow_restrictive_permissions"
    ]
  },
  {
    "id": "6.1.4",
    "title": "Ensure permissions on /etc/group are configured",
    "assessment": "Automated",
    "description": "The /etc/group file contains a list of all the valid groups defined in the system. The command below allows read/write access for root and read access for everyone else.",
    "rationale": "The /etc/group file needs to be protected from unauthorized changes by non-privileged users, but needs to be readable as this information is used with many non-privileged programs.",
    "audit": "Run the following command and verify Uid and Gid are both 0/root and Access is 644 or more restrictive: # stat /etc/group Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)",
    "remediation": "Run the following commands to set owner, group, and permissions on /etc/group : # chown root:root /etc/group # chmod u-x,g-wx,o-wx /etc/group",
    "function_names": [
      "linux_file_group_permissions_configured",
      "linux_file_group_read_only_non_root",
      "linux_file_group_root_write_only",
      "linux_file_group_secure_permissions",
      "linux_file_group_owner_root",
      "linux_file_group_mode_644",
      "linux_file_group_no_world_writable",
      "linux_file_group_restrictive_permissions"
    ]
  },
  {
    "id": "6.1.5",
    "title": "Ensure permissions on /etc/passwd- are configured",
    "assessment": "Automated",
    "description": "The /etc/passwd- file contains backup user account information.",
    "rationale": "It is critical to ensure that the /etc/passwd- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.",
    "audit": "Run the following command and verify Uid and Gid are both 0/root and Access is 644 or more restrictive: # stat /etc/passwd- Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)",
    "remediation": "Run the following commands to set owner, group, and permissions on /etc/passwd- : # chown root:root /etc/passwd- # chmod u-x,go-wx /etc/passwd-",
    "function_names": [
      "linux_file_passwd_backup_permissions_configured",
      "linux_file_passwd_backup_owner_root",
      "linux_file_passwd_backup_group_root",
      "linux_file_passwd_backup_mode_644",
      "linux_file_passwd_backup_no_world_writable",
      "linux_file_passwd_backup_no_group_writable",
      "linux_file_passwd_backup_no_other_writable"
    ]
  },
  {
    "id": "6.1.6",
    "title": "Ensure permissions on /etc/shadow- are configured",
    "assessment": "Automated",
    "description": "The /etc/shadow- file is used to store backup information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information.",
    "rationale": "It is critical to ensure that the /etc/shadow- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.",
    "audit": "Run the following command and verify verify Uid is 0/root, Gid is 0/root or /shadow, and Access is 0640 or more restrictive: # stat /etc/shadow- Access: (0640/-rw-r-----)  Uid: (    0/    root)   Gid: (    15/  shadow)",
    "remediation": "Run the following commands to set owner, group, and permissions on /etc/shadow-: # chown root:shadow /etc/shadow- # chmod u-x,g-wx,o-rwx /etc/shadow-",
    "function_names": [
      "linux_file_shadow_backup_permissions_configured",
      "linux_file_shadow_backup_owner_root",
      "linux_file_shadow_backup_group_root",
      "linux_file_shadow_backup_mode_0000",
      "linux_file_shadow_backup_no_world_readable",
      "linux_file_shadow_backup_no_world_writable",
      "linux_file_shadow_backup_no_group_writable",
      "linux_file_shadow_backup_no_other_writable"
    ]
  },
  {
    "id": "6.1.7",
    "title": "Ensure permissions on /etc/group- are configured",
    "assessment": "Automated",
    "description": "The /etc/group- file contains a backup list of all the valid groups defined in the system.",
    "rationale": "It is critical to ensure that the /etc/group- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.",
    "audit": "Run the following command and verify Uid and Gid are both 0/root and Access is 0644 or more restrictive: # stat /etc/group- Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)",
    "remediation": "Run the following commands to set owner, group, and permissions on /etc/group-: # chown root:root /etc/group- # chmod u-x,go-wx /etc/group-",
    "function_names": [
      "linux_file_group_backup_permissions_configured",
      "linux_file_group_backup_owner_correct",
      "linux_file_group_backup_mode_restricted",
      "linux_file_group_backup_immutable_flag_set",
      "linux_file_group_backup_access_controlled"
    ]
  },
  {
    "id": "6.1.8",
    "title": "Ensure no world writable files exist",
    "assessment": "Automated",
    "description": "Unix-based systems support variable settings to control access to files. World writable files are the least secure. See the chmod(2) man page for more information.",
    "rationale": "Data in world-writable files can be modified and compromised by any user on the system. World writable files may also indicate an incorrectly written script or program that could potentially be the cause of a larger compromise to the system's integrity.",
    "audit": "Run the following command and verify no files are returned: # df --local -P | awk '{if (NR!=1) print $6}' | xargs -I '{}' find '{}' -xdev -type f -perm -0002 The command above only searches local filesystems, there may still be compromised items on network mounted partitions. Additionally the --local option to df is not universal to all versions, it can be omitted to search all filesystems on a system including network mounted filesystems or the following command can be run manually for each partition: # find <partition> -xdev -type f -perm -0002",
    "remediation": "Removing write access for the \"other\" category ( chmod o-w <filename> ) is advisable, but always consult relevant vendor documentation to avoid breaking any application dependencies on a given file.  430 | P a g e",
    "function_names": [
      "unix_file_world_writable_disabled",
      "unix_file_permissions_restricted",
      "unix_file_world_writable_absent",
      "unix_file_write_access_restricted",
      "unix_file_permissions_no_world_write",
      "unix_file_world_writable_protected",
      "unix_file_write_permissions_secure",
      "unix_file_world_writable_prevented"
    ]
  },
  {
    "id": "6.1.9",
    "title": "Ensure no unowned files or directories exist",
    "assessment": "Automated",
    "description": "Sometimes when administrators delete users from the password file they neglect to remove all files owned by those users from the system.",
    "rationale": "A new user who is assigned the deleted user's user ID or group ID may then end up \"owning\" these files, and thus have more access on the system than was intended.",
    "audit": "Run the following command and verify no files are returned: # df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -nouser The command above only searches local filesystems, there may still be compromised items on network mounted partitions. Additionally the --local option to df is not universal to all versions, it can be omitted to search all filesystems on a system including network mounted filesystems or the following command can be run manually for each partition: # find <partition> -xdev -nouser",
    "remediation": "Locate files that are owned by users or groups not listed in the system configuration files, and reset the ownership of these files to some active user on the system as appropriate.  432 | P a g e",
    "function_names": [
      "filesystem_unowned_files_absent",
      "filesystem_unowned_directories_absent",
      "filesystem_orphaned_resources_absent",
      "filesystem_userless_files_absent",
      "filesystem_userless_directories_absent"
    ]
  },
  {
    "id": "6.1.10",
    "title": "Ensure no ungrouped files or directories exist",
    "assessment": "Automated",
    "description": "Sometimes when administrators delete users or groups from the system they neglect to remove all files owned by those users or groups.",
    "rationale": "A new user who is assigned the deleted user's user ID or group ID may then end up \"owning\" these files, and thus have more access on the system than was intended.",
    "audit": "Run the following command and verify no files are returned: # df --local -P | awk '{if (NR!=1) print $6}' | xargs -I '{}' find '{}' -xdev -nogroup The command above only searches local filesystems, there may still be compromised items on network mounted partitions. Additionally the --local option to df is not universal to all versions, it can be omitted to search all filesystems on a system including network mounted filesystems or the following command can be run manually for each partition: # find <partition> -xdev -nogroup",
    "remediation": "Locate files that are owned by users or groups not listed in the system configuration files, and reset the ownership of these files to some active user on the system as appropriate.  434 | P a g e",
    "function_names": [
      "filesystem_ungrouped_files_removed",
      "filesystem_ungrouped_directories_removed",
      "filesystem_orphaned_files_removed",
      "filesystem_orphaned_directories_removed",
      "filesystem_unowned_files_removed",
      "filesystem_unowned_directories_removed",
      "filesystem_unassigned_files_removed",
      "filesystem_unassigned_directories_removed"
    ]
  },
  {
    "id": "6.1.11",
    "title": "Audit SUID executables",
    "assessment": "Manual",
    "description": "The owner of a file can set the file's permissions to run with the owner's or group's permissions, even if the user running the program is not the owner or a member of the group. The most common reason for a SUID program is to enable users to perform functions (such as changing their password) that require root privileges.",
    "rationale": "There are valid reasons for SUID programs, but it is important to identify and review such programs to ensure they are legitimate.",
    "audit": "Run the following command to list SUID files: # df --local -P | awk '{if (NR!=1) print $6}' | xargs -I '{}' find '{}' -xdev -type f -perm -4000 The command above only searches local filesystems, there may still be compromised items on network mounted partitions. Additionally the --local option to df is not universal to all versions, it can be omitted to search all filesystems on a system including network mounted filesystems or the following command can be run manually for each partition: # find <partition> -xdev -type f -perm -4000",
    "remediation": "Ensure that no rogue SUID programs have been introduced into the system. Review the files returned by the action in the Audit section and confirm the integrity of these binaries.  436 | P a g e",
    "function_names": [
      "compute_file_suid_restricted",
      "compute_executable_suid_audited",
      "compute_file_suid_privileges_reviewed",
      "compute_executable_suid_ownership_verified",
      "compute_file_suid_permissions_audited",
      "compute_executable_suid_privilege_escalation_prevented",
      "compute_file_suid_privileges_minimized",
      "compute_executable_suid_usage_monitored"
    ]
  },
  {
    "id": "6.1.12",
    "title": "Audit SGID executables",
    "assessment": "Manual",
    "description": "The owner of a file can set the file's permissions to run with the owner's or group's permissions, even if the user running the program is not the owner or a member of the group. The most common reason for a SGID program is to enable users to perform functions (such as changing their password) that require root privileges.",
    "rationale": "There are valid reasons for SGID programs, but it is important to identify and review such programs to ensure they are legitimate. Review the files returned by the action in the audit section and check to see if system binaries have a different md5 checksum than what from the package. This is an indication that the binary may have been replaced.",
    "audit": "Run the following command to list SGID files: # df --local -P | awk '{if (NR!=1) print $6}' | xargs -I '{}' find '{}' -xdev -type f -perm -2000 The command above only searches local filesystems, there may still be compromised items on network mounted partitions. Additionally the --local option to df is not universal to all versions, it can be omitted to search all filesystems on a system including network mounted filesystems or the following command can be run manually for each partition: # find <partition> -xdev -type f -perm -2000",
    "remediation": "Ensure that no rogue SGID programs have been introduced into the system. Review the files returned by the action in the Audit section and confirm the integrity of these binaries.  438 | P a g e",
    "function_names": [
      "compute_file_sgid_restricted",
      "compute_executable_sgid_audited",
      "compute_file_sgid_privileges_secure",
      "compute_executable_sgid_ownership_valid",
      "compute_file_sgid_permissions_audited",
      "compute_executable_sgid_privilege_escalation_prevented",
      "compute_file_sgid_group_ownership_secure",
      "compute_executable_sgid_privilege_restricted"
    ]
  },
  {
    "id": "6.2.1",
    "title": "Ensure accounts in /etc/passwd use shadowed passwords",
    "assessment": "Automated",
    "description": "Local accounts can uses shadowed passwords. With shadowed passwords, The passwords are saved in shadow password file, /etc/shadow, encrypted by a salted one-way hash. Accounts with a shadowed password have an x in the second field in /etc/passwd.",
    "rationale": "The /etc/passwd file also contains information like user ID's and group ID's that are used by many system programs. Therefore, the /etc/passwd file must remain world readable. In spite of encoding the password with a randomly-generated one-way hash function, an attacker could still break the system if they got access to the /etc/passwd file. This can be mitigated by using shadowed passwords, thus moving the passwords in the /etc/passwd file to /etc/shadow. The /etc/shadow file is set so only root will be able to read and write. This helps mitigate the risk of an attacker gaining access to the encoded passwords with which to perform a dictionary attack. Notes: • All accounts must have passwords or be locked to prevent the account from being used by an unauthorized user. • A user account with an empty second field in /etc/passwd allows the account to be logged into by providing only the username.",
    "audit": "Run the following command and verify that no output is returned: # awk -F: '($2 != \"x\" ) { print $1 \" is not set to shadowed passwords \"}' /etc/passwd   441 | P a g e",
    "remediation": "If any accounts in the /etc/passwd file do not have a single x in the password field, run the following command to set these accounts to use shadowed passwords: # sed -e 's/^\\([a-zA-Z0-9_]*\\):[^:]*:/\\1:x:/' -i /etc/passwd Investigate to determine if the account is logged in and what it is being used for, to determine if it needs to be forced off.",
    "function_names": [
      "linux_account_shadowed_passwords",
      "linux_passwd_shadow_enabled",
      "linux_user_passwords_shadowed",
      "linux_etc_passwd_shadowed_entries",
      "linux_account_passwords_hashed_in_shadow"
    ]
  },
  {
    "id": "6.2.2",
    "title": "Ensure /etc/shadow password fields are not empty",
    "assessment": "Automated",
    "description": "An account with an empty password field means that anybody may log in as that user without providing a password.",
    "rationale": "All accounts must have passwords or be locked to prevent the account from being used by an unauthorized user.",
    "audit": "Run the following command and verify that no output is returned: # awk -F: '($2 == \"\" ) { print $1 \" does not have a password \"}' /etc/shadow",
    "remediation": "If any accounts in the /etc/shadow file do not have a password, run the following command to lock the account until it can be determined why it does not have a password: # passwd -l <username> Also, check to see if the account is logged in and investigate what it is being used for to determine if it needs to be forced off.",
    "function_names": [
      "linux_user_password_not_empty",
      "shadow_file_password_configured",
      "system_auth_password_required",
      "user_account_password_set",
      "shadow_entry_password_present"
    ]
  },
  {
    "id": "6.2.3",
    "title": "Ensure root is the only UID 0 account",
    "assessment": "Automated",
    "description": "Any account with UID 0 has superuser privileges on the system.",
    "rationale": "This access must be limited to only the default root account and only from the system console. Administrative access must be through an unprivileged account using an approved mechanism as noted in Item 5.6 Ensure access to the su command is restricted.",
    "audit": "Run the following command and verify that only \"root\" is returned: # awk -F: '($3 == 0) { print $1 }' /etc/passwd root",
    "remediation": "Remove any users other than root with UID 0 or assign them a new UID if appropriate.",
    "function_names": [
      "compute_user_root_only_uid_0",
      "compute_account_no_non_root_uid_0",
      "compute_system_no_duplicate_uid_0",
      "compute_user_no_duplicate_superuser_privileges"
    ]
  },
  {
    "id": "6.2.4",
    "title": "Ensure root PATH Integrity",
    "assessment": "Automated",
    "description": "The root user can execute any command on the system and could be fooled into executing programs unintentionally if the PATH is not set correctly.",
    "rationale": "Including the current working directory (.) or other writable directory in root 's executable path makes it likely that an attacker can gain superuser access by forcing an administrator operating as root to execute a Trojan horse program.",
    "audit": "Run the following script and verify no results are returned: #!/bin/bash if echo \"$PATH\" | grep -q \"::\" ; then echo \"Empty Directory in PATH (::)\" fi if echo \"$PATH\" | grep -q \":$\" ; then echo \"Trailing : in PATH\" fi for x in $(echo \"$PATH\" | tr \":\" \" \") ; do if [ -d \"$x\" ] ; then ls -ldH \"$x\" | awk ' $9 == \".\" {print \"PATH contains current working directory (.)\"} $3 != \"root\" {print $9, \"is not owned by root\"} substr($1,6,1) != \"-\" {print $9, \"is group writable\"} substr($1,9,1) != \"-\" {print $9, \"is world writable\"}' else echo \"$x is not a directory\" fi done",
    "remediation": "Correct or justify any items discovered in the Audit step.  445 | P a g e",
    "function_names": [
      "system_path_root_integrity",
      "system_path_root_secure",
      "system_path_root_unaltered",
      "system_path_root_immutable",
      "system_path_root_protected",
      "system_path_root_trusted",
      "system_path_root_restricted",
      "system_path_root_validated"
    ]
  },
  {
    "id": "6.2.5",
    "title": "Ensure all users' home directories exist",
    "assessment": "Automated",
    "description": "Users can be defined in /etc/passwd without a home directory or with a home directory that does not actually exist.",
    "rationale": "If the user's home directory does not exist or is unassigned, the user will be placed in \"/\" and will not be able to write any files or have local environment variables set.",
    "audit": "Run the following script and verify no results are returned: #!/bin/bash grep -E -v '^(halt|sync|shutdown)' /etc/passwd | awk -F: '($7 != \"'\"$(which nologin)\"'\" && $7 != \"/bin/false\") { print $1 \" \" $6 }' | while read -r user dir; do if [ ! -d \"$dir\" ]; then echo \"The home directory ($dir) of user $user does not exist.\" fi done Note: The audit script checks all users with interactive shells except halt, sync, shutdown, and nfsnobody.",
    "remediation": "If any users' home directories do not exist, create them and make sure the respective user owns the directory. Users without an assigned home directory should be removed or assigned a home directory as appropriate.  447 | P a g e",
    "function_names": [
      "linux_user_home_directory_exists",
      "linux_user_home_directory_valid",
      "linux_passwd_home_directory_configured",
      "linux_user_home_directory_present",
      "linux_home_directory_assigned"
    ]
  },
  {
    "id": "6.2.6",
    "title": "Ensure users' home directories permissions are 750 or more restrictive",
    "assessment": "Automated",
    "description": "While the system administrator can establish secure permissions for users' home directories, the users can easily override these.",
    "rationale": "Group or world-writable user home directories may enable malicious users to steal or modify other users' data or to gain another user's system privileges.",
    "audit": "Run the following script and verify no results are returned: #!/bin/bash grep -E -v '^(halt|sync|shutdown)' /etc/passwd | awk -F: '($7 != \"'\"$(which nologin)\"'\" && $7 != \"/bin/false\") { print $1 \" \" $6 }' | while read user dir; do if [ ! -d \"$dir\" ]; then echo \"The home directory ($dir) of user $user does not exist.\" else dirperm=$(ls -ld $dir | cut -f1 -d\" \") if [ $(echo $dirperm | cut -c6) != \"-\" ]; then echo \"Group Write permission set on the home directory ($dir) of user $user\" fi if [ $(echo $dirperm | cut -c8) != \"-\" ]; then echo \"Other Read permission set on the home directory ($dir) of user $user\" fi if [ $(echo $dirperm | cut -c9) != \"-\" ]; then echo \"Other Write permission set on the home directory ($dir) of user $user\" fi if [ $(echo $dirperm | cut -c10) != \"-\" ]; then echo \"Other Execute permission set on the home directory ($dir) of user $user\" fi fi done   449 | P a g e",
    "remediation": "Making global modifications to user home directories without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user file permissions and determine the action to be taken in accordance with site policy.",
    "function_names": [
      "linux_home_directory_permissions_750_or_stricter",
      "linux_home_directory_permissions_restrictive",
      "linux_home_directory_permissions_secure",
      "linux_home_directory_permissions_compliant",
      "linux_home_directory_permissions_cis_benchmark",
      "linux_home_directory_permissions_750_or_less",
      "linux_home_directory_permissions_enforced",
      "linux_home_directory_permissions_validated",
      "linux_home_directory_permissions_secure_config",
      "linux_home_directory_permissions_cis_6_2_6"
    ]
  },
  {
    "id": "6.2.7",
    "title": "Ensure users own their home directories",
    "assessment": "Automated",
    "description": "The user home directory is space defined for the particular user to set local environment variables and to store personal files.",
    "rationale": "Since the user is accountable for files stored in the user home directory, the user (or root) must be the owner of the directory.",
    "audit": "Run the following script and verify no results are returned: #!/usr/bin/env bash UHOC() { for i in $( awk -F: '($1!~/(halt|sync|shutdown|nfsnobody)/ && $7!~/^(\\/usr)?\\/sbin\\/nologin(\\/)?$/ && $7!~/(\\/usr)?\\/bin\\/false(\\/)?$/) {print $1\":\"$6}' /etc/passwd); do user=$(echo \"$i\" | cut -d: -f1) dir=$(echo \"$i\" | cut -d: -f2) if [ ! -d \"$dir\" ]; then [ -z \"$output2\" ] && output2=\"The following users' home directories don't exist: \\\"$user\\\"\" || output2=\"$output2, \\\"$user\\\"\" else owner=\"$(stat -L -c \"%U\" \"$dir\")\" if [ \"$owner\" != \"$user\" ] && [ \"$owner\" != \"root\" ]; then [ -z \"$output\" ] && output=\"The following users' don't own their home directory: \\\"$user\\\" home directory is owned by \\\"$owner\\\"\" || output=\"$output, \\\"$user\\\" home directory is owned by \\\"$owner\\\"\" fi fi done } UHOC",
    "remediation": "Change the ownership of any home directories that are not owned by the defined user to the correct user.  451 | P a g e",
    "function_names": [
      "compute_user_home_directory_owned",
      "compute_user_home_directory_correct_permissions",
      "compute_user_home_directory_exclusive_ownership",
      "compute_user_home_directory_no_group_write",
      "compute_user_home_directory_no_world_write",
      "compute_user_home_directory_no_world_read",
      "compute_user_home_directory_no_group_read",
      "compute_user_home_directory_no_other_access"
    ]
  },
  {
    "id": "6.2.8",
    "title": "Ensure users' dot files are not group or world writable",
    "assessment": "Automated",
    "description": "While the system administrator can establish secure permissions for users' \"dot\" files, the users can easily override these.",
    "rationale": "Group or world-writable user configuration files may enable malicious users to steal or modify other users' data or to gain another user's system privileges.",
    "audit": "Run the following script and verify no results are returned: #!/bin/bash grep -E -v '^(halt|sync|shutdown)' /etc/passwd | awk -F: '($7 != \"'\"$(which nologin)\"'\" && $7 != \"/bin/false\") { print $1 \" \" $6 }' | while read user dir; do if [ ! -d \"$dir\" ]; then echo \"The home directory ($dir) of user $user does not exist.\" else for file in $dir/.[A-Za-z0-9]*; do if [ ! -h \"$file\" -a -f \"$file\" ]; then fileperm=$(ls -ld $file | cut -f1 -d\" \") if [ $(echo $fileperm | cut -c6)  != \"-\" ]; then echo \"Group Write permission set on file $file\" fi if [ $(echo $fileperm | cut -c9)  != \"-\" ]; then echo \"Other Write permission set on file $file\" fi fi done fi done",
    "remediation": "Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user dot file permissions and determine the action to be taken in accordance with site policy.  453 | P a g e",
    "function_names": [
      "linux_user_dot_files_group_writable_disabled",
      "linux_user_dot_files_world_writable_disabled",
      "linux_user_dot_files_permissions_restricted",
      "linux_user_dot_files_secure_permissions",
      "linux_user_home_directory_dot_files_protected"
    ]
  },
  {
    "id": "6.2.9",
    "title": "Ensure no users have .forward files",
    "assessment": "Automated",
    "description": "The .forward file specifies an email address to forward the user's mail to.",
    "rationale": "Use of the .forward file poses a security risk in that sensitive data may be inadvertently transferred outside the organization. The .forward file also poses a risk as it can be used to execute commands that may perform unintended actions.",
    "audit": "Run the following script and verify no results are returned: #!/bin/bash awk -F: '($1 !~ /^(root|halt|sync|shutdown)$/ && $7 != \"'\"$(which nologin)\"'\" && $7 != \"/bin/false\" && $7 != \"/usr/bin/false\") { print $1 \" \" $6 }' /etc/passwd | while read user dir; do if [ ! -d \"$dir\" ] ; then echo \"The home directory ($dir) of user $user does not exist.\" else if [ ! -h \"$dir/.forward\" -a -f \"$dir/.forward\" ] ; then echo \".forward file $dir/.forward exists\" fi fi done",
    "remediation": "Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user .forward files and determine the action to be taken in accordance with site policy.  455 | P a g e",
    "function_names": [
      "linux_user_no_forward_files",
      "linux_user_forward_files_disabled",
      "linux_user_forward_files_absent",
      "linux_user_forward_files_removed",
      "linux_user_forward_files_prohibited"
    ]
  },
  {
    "id": "6.2.10",
    "title": "Ensure no users have .netrc files",
    "assessment": "Automated",
    "description": "The .netrc file contains data for logging into a remote host for file transfers via FTP.",
    "rationale": "The .netrc file presents a significant security risk since it stores passwords in unencrypted form. Even if FTP is disabled, user accounts may have brought over .netrc files from other systems which could pose a risk to those systems.",
    "audit": "Run the following script and verify no results are returned: #!/bin/bash awk -F: '($1 !~ /^(root|halt|sync|shutdown)$/ && $7 != \"'\"$(which nologin)\"'\" && $7 != \"/bin/false\" && $7 != \"/usr/bin/false\") { print $1 \" \" $6 }' /etc/passwd | while read user dir; do if [ ! -d \"$dir\" ]; then echo \"The home directory ($dir) of user $user does not exist.\" else if [ ! -h \"$dir/.netrc\" -a -f \"$dir/.netrc\" ]; then echo \".netrc file $dir/.netrc exists\" fi fi done",
    "remediation": "Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user .netrc files and determine the action to be taken in accordance with site policy.  457 | P a g e",
    "function_names": [
      "compute_user_no_netrc_files",
      "compute_user_netrc_files_absent",
      "compute_user_netrc_files_prohibited",
      "compute_user_netrc_files_restricted",
      "compute_user_netrc_files_disallowed"
    ]
  },
  {
    "id": "6.2.11",
    "title": "Ensure users' .netrc Files are not group or world accessible",
    "assessment": "Automated",
    "description": "While the system administrator can establish secure permissions for users' .netrc files, the users can easily override these.",
    "rationale": ".netrc files may contain unencrypted passwords that may be used to attack other systems. Note: While the complete removal of .netrc files is recommended if any are required on the system secure permissions must be applied.  459 | P a g e",
    "audit": "Run the following script and verify no results are returned: #!/bin/bash awk -F: '($1 !~ /^(root|halt|sync|shutdown)$/ && $7 != \"'\"$(which nologin)\"'\" && $7 != \"/bin/false\" && $7 != \"/usr/bin/false\") { print $1 \" \" $6 }' /etc/passwd | while read user dir; do if [ ! -d \"$dir\" ]; then echo \"The home directory ($dir) of user $user does not exist.\" else for file in $dir/.netrc; do if [ ! -h \"$file\" -a -f \"$file\" ]; then fileperm=$(ls -ld $file | cut -f1 -d\" \") if [ $(echo $fileperm | cut -c5)  != \"-\" ]; then echo \"Group Read set on $file\" fi if [ $(echo $fileperm | cut -c6)  != \"-\" ]; then echo \"Group Write set on $file\" fi if [ $(echo $fileperm | cut -c7)  != \"-\" ]; then echo \"Group Execute set on $file\" fi if [ $(echo $fileperm | cut -c8)  != \"-\" ]; then echo \"Other Read set on $file\" fi if [ $(echo $fileperm | cut -c9)  != \"-\" ]; then echo \"Other Write set on $file\" fi if [ $(echo $fileperm | cut -c10)  != \"-\" ]; then echo \"Other Execute set on $file\" fi fi done fi done",
    "remediation": "Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user .netrc file permissions and determine the action to be taken in accordance with site policy.  460 | P a g e",
    "function_names": [
      "compute_netrc_file_restrict_group_access",
      "compute_netrc_file_restrict_world_access",
      "compute_netrc_file_no_group_permissions",
      "compute_netrc_file_no_world_permissions",
      "compute_netrc_file_strict_permissions",
      "compute_netrc_file_secure_permissions",
      "compute_netrc_file_no_group_or_world_access",
      "compute_netrc_file_protected_access"
    ]
  },
  {
    "id": "6.2.12",
    "title": "Ensure no users have .rhosts files",
    "assessment": "Automated",
    "description": "While no .rhosts files are shipped by default, users can easily create them.",
    "rationale": "This action is only meaningful if .rhosts support is permitted in the file /etc/pam.conf . Even though the .rhosts files are ineffective if support is disabled in /etc/pam.conf , they may have been brought over from other systems and could contain information useful to an attacker for those other systems.",
    "audit": "Run the following script and verify no results are returned: #!/bin/bash awk -F: '($1 !~ /^(root|halt|sync|shutdown)$/ && $7 != \"'\"$(which nologin)\"'\" && $7 != \"/bin/false\" && $7 != \"/usr/bin/false\") { print $1 \" \" $6 }' /etc/passwd | while read user dir; do if [ ! -d \"$dir\" ]; then echo \"The home directory ($dir) of user $user does not exist.\" else for file in $dir/.rhosts; do if [ ! -h \"$file\" -a -e \"$file\" ]; then echo \".rhosts file in $dir\" fi done fi done",
    "remediation": "Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user .rhosts files and determine the action to be taken in accordance with site policy.  462 | P a g e",
    "function_names": [
      "compute_user_no_rhosts_files",
      "compute_user_rhosts_files_disabled",
      "compute_user_rhosts_files_absent",
      "compute_user_rhosts_files_prohibited",
      "compute_user_rhosts_files_restricted"
    ]
  },
  {
    "id": "6.2.13",
    "title": "Ensure all groups in /etc/passwd exist in /etc/group",
    "assessment": "Automated",
    "description": "Over time, system administration errors and changes can lead to groups being defined in /etc/passwd but not in /etc/group .",
    "rationale": "Groups defined in the /etc/passwd file but not in the /etc/group file pose a threat to system security since group permissions are not properly managed.",
    "audit": "Run the following script and verify no results are returned: #!/bin/bash for i in $(cut -s -d: -f4 /etc/passwd | sort -u ); do grep -q -P \"^.*?:[^:]*:$i:\" /etc/group if [ $? -ne 0 ]; then echo \"Group $i is referenced by /etc/passwd but does not exist in /etc/group\" fi done",
    "remediation": "Analyze the output of the Audit step above and perform the appropriate action to correct any discrepancies found.",
    "function_names": [
      "system_passwd_groups_exist_in_group",
      "system_group_consistency_ensured",
      "system_passwd_group_sync_maintained"
    ]
  },
  {
    "id": "6.2.14",
    "title": "Ensure no duplicate UIDs exist",
    "assessment": "Automated",
    "description": "Although the useradd program will not let you create a duplicate User ID (UID), it is possible for an administrator to manually edit the /etc/passwd file and change the UID field.",
    "rationale": "Users must be assigned unique UIDs for accountability and to ensure appropriate access protections.",
    "audit": "Run the following script and verify no results are returned: #!/bin/bash cut -f3 -d\":\" /etc/passwd | sort -n | uniq -c | while read x ; do [ -z \"$x\" ] && break set - $x if [ $1 -gt 1 ]; then users=$(awk -F: '($3 == n) { print $1 }' n=$2 /etc/passwd | xargs) echo \"Duplicate UID ($2): $users\" fi done",
    "remediation": "Based on the results of the audit script, establish unique UIDs and review all files owned by the shared UIDs to determine which UID they are supposed to belong to.",
    "function_names": [
      "linux_user_no_duplicate_uids",
      "linux_user_unique_uid_assignment",
      "linux_user_uid_conflict_free",
      "linux_user_uid_uniqueness_enforced",
      "linux_user_uid_no_manual_duplicates"
    ]
  },
  {
    "id": "6.2.15",
    "title": "Ensure no duplicate GIDs exist",
    "assessment": "Automated",
    "description": "Although the groupadd program will not let you create a duplicate Group ID (GID), it is possible for an administrator to manually edit the /etc/group file and change the GID field. Note: You can also use the grpck command to check for other inconsistencies in the /etc/group file.",
    "rationale": "User groups must be assigned unique GIDs for accountability and to ensure appropriate access protections.",
    "audit": "Run the following script and verify no results are returned: #!/bin/bash cut -d: -f3 /etc/group | sort | uniq -d | while read x ; do echo \"Duplicate GID ($x) in /etc/group\" done",
    "remediation": "Based on the results of the audit script, establish unique GIDs and review all files owned by the shared GID to determine which group they are supposed to belong to.",
    "function_names": [
      "linux_group_no_duplicate_gids",
      "linux_group_unique_gid_enforced",
      "linux_group_gid_consistency_verified",
      "linux_group_no_manual_gid_duplicates",
      "linux_group_grpck_validation_passed"
    ]
  },
  {
    "id": "6.2.16",
    "title": "Ensure no duplicate user names exist",
    "assessment": "Automated",
    "description": "Although the useradd program will not let you create a duplicate user name, it is possible for an administrator to manually edit the /etc/passwd file and change the user name.",
    "rationale": "If a user is assigned a duplicate user name, it will create and have access to files with the first UID for that username in /etc/passwd . Example: If \"test4\" has a UID of 1000 and a subsequent \"test4\" entry has a UID of 2000, logging in as \"test4\" will use UID 1000. Effectively, the UID is shared, which is a security problem",
    "audit": "Run the following script and verify no results are returned: #!/bin/bash cut -d: -f1 /etc/passwd | sort | uniq -d | while read x do echo \"Duplicate login name ${x} in /etc/passwd\" done",
    "remediation": "Based on the results of the audit script, establish unique user names for the users. File ownerships will automatically reflect the change as long as the users have unique UIDs.",
    "function_names": [
      "iam_user_no_duplicate_names",
      "linux_user_no_duplicate_names",
      "system_user_no_duplicate_names",
      "local_user_no_duplicate_names",
      "passwd_file_no_duplicate_users"
    ]
  },
  {
    "id": "6.2.17",
    "title": "Ensure no duplicate group names exist",
    "assessment": "Automated",
    "description": "Although the groupadd program will not let you create a duplicate group name, it is possible for an administrator to manually edit the /etc/group file and change the group name.",
    "rationale": "If a group is assigned a duplicate group name, it will create and have access to files with the first GID for that group in /etc/group . Effectively, the GID is shared, which is a security problem.",
    "audit": "Run the following script and verify no results are returned: #!/bin/bash cut -d: -f1 /etc/group | sort | uniq -d | while read x do echo \"Duplicate group name ${x} in /etc/group\" done",
    "remediation": "Based on the results of the audit script, establish unique names for the user groups. File group ownerships will automatically reflect the change as long as the groups have unique GIDs.",
    "function_names": [
      "iam_group_unique_names",
      "linux_group_no_duplicate_names",
      "system_group_name_uniqueness",
      "etc_group_unique_entries",
      "group_config_duplicate_name_check",
      "local_group_name_uniqueness",
      "unix_group_no_duplicate_names",
      "group_file_unique_names"
    ]
  },
  {
    "id": "6.2.18",
    "title": "Ensure shadow group is empty",
    "assessment": "Automated",
    "description": "The shadow group allows system programs which require access the ability to read the /etc/shadow file. No users should be assigned to the shadow group.",
    "rationale": "Any users assigned to the shadow group would be granted read access to the /etc/shadow file. If attackers can gain read access to the /etc/shadow file, they can easily run a password cracking program against the hashed passwords to break them. Other security information that is stored in the /etc/shadow file (such as expiration) could also be useful to subvert additional user accounts.",
    "audit": "Run the following commands and verify no results are returned: # grep ^shadow:[^:]*:[^:]*:[^:]+ /etc/group # awk -F: '($4 == \"<shadow-gid>\") { print }' /etc/passwd",
    "remediation": "Remove all users from the shadow group, and change the primary group of any users with shadow as their primary group.",
    "function_names": [
      "linux_shadow_group_empty",
      "linux_group_shadow_no_users",
      "linux_shadow_group_unassigned",
      "linux_group_shadow_membership_empty"
    ]
  }
]
[
  {
    "id": "1.1",
    "title": "Install the Latest SQL Server Service Packs and Hotfixes",
    "assessment": "Not Scored",
    "description": "SQL Server patches contain program updates that fix security and product functionality issues found in the software. These patches can be installed with a hotfix, which is a single patch, a cumulative update that is a small group of patches or a service pack, which is a large collection of patches. The SQL Server version and patch levels should be the most recent compatible with the organizations' operational needs",
    "rationale": "Using the most recent SQL Server software, along with all applicable patches can help limit the possibilities for vulnerabilities in the software, the installation version and/or patches applied during setup should be established according to the needs of the organization.",
    "audit": "To determine your SQL Server service pack level, run the following code snippet. SELECT SERVERPROPERTY('ProductLevel') as SP_installed, SERVERPROPERTY('ProductVersion') as Version; First column returns the installed Service Pack level, the second is the exact build number.",
    "remediation": "Identify the current version and patch level of your SQL Server instances and ensure they contain the latest security fixes.  Make sure to test these fixes in your test environments before updating production instances. The most recent SQL Server patches can be found here:  Hotfixes and Cumulative updates: http://blogs.msdn.com/b/sqlreleaseservices/  Service Packs: https://support.microsoft.com/en-us/kb/2958069 Default Value: Service packs and patches are not installed by default.  11 | P a g e References: 1. https://support.microsoft.com/en-us/kb/2958069 12 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "references": "1. https://support.microsoft.com/en-us/kb/2958069 12 | P a g e",
    "function_names": [
      "sql_server_instance_latest_service_pack_installed",
      "sql_server_instance_latest_hotfix_installed",
      "sql_server_instance_patches_up_to_date",
      "sql_server_instance_compatible_version_used",
      "sql_server_instance_security_patches_applied"
    ]
  },
  {
    "id": "1.2",
    "title": "Install on dedicated single-function member servers",
    "assessment": "Not Scored",
    "description": "It is recommended that SQL Server software be installed on a dedicated server.  This architectural consideration affords security flexibility in that the database server can be placed on a separate subnet allowing access only from particular hosts and over particular protocols.  Degrees of availability are easier to achieve as well - over time, an enterprise can move from a single database server to a failover to a cluster using load balancing or to some combination thereof.",
    "rationale": "It is easier to manage (i.e. reduce) the attack surface of the server hosting SQL Server software if the only surfaces to consider are the underlying operating system, SQL Server itself, and any security/operational tooling that may additionally be installed.  As noted in the description, availability can be more easily addressed if the database is on a dedicated server.",
    "audit": "Ensure that no other roles are enabled for the underlying operating system and that no excess tooling is installed, per enterprise policy.",
    "remediation": "Uninstall excess tooling and/or remove unnecessary roles from the underlying operating system. Impact: It is difficult to see any reasonably adverse impact to making this architectural change, once the costs of making the change have been paid.  Custom applications may need to be modified to accommodate database connections over the wire rather than on the host (i.e. using TCP/IP instead of Named Pipes).  Additional hardware and operating system licenses may be required to make these architectural changes.  13 | P a g e 2 Surface Area Reduction SQL Server offers various configuration options, some of them can be controlled by the sp_configure stored procedures. This section contains the listing of the corresponding recommendations. 14 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "impact": "It is difficult to see any reasonably adverse impact to making this architectural change, once the costs of making the change have been paid.  Custom applications may need to be modified to accommodate database connections over the wire rather than on the host (i.e. using TCP/IP instead of Named Pipes).  Additional hardware and operating system licenses may be required to make these architectural changes.  13 | P a g e 2 Surface Area Reduction SQL Server offers various configuration options, some of them can be controlled by the sp_configure stored procedures. This section contains the listing of the corresponding recommendations. 14 | P a g e",
    "function_names": [
      "compute_instance_dedicated_single_function",
      "sql_server_dedicated_installation",
      "database_server_separate_subnet",
      "sql_server_restricted_access",
      "compute_instance_single_function_role",
      "database_server_high_availability_enabled",
      "sql_server_failover_configuration",
      "sql_server_load_balancing_enabled"
    ]
  },
  {
    "id": "2.1",
    "title": "Set the 'Ad Hoc Distributed Queries' Server Configuration Option to 0",
    "assessment": "Scored",
    "description": "Ad Hoc Distributed Queries Allow users to query data and execute statements on external data sources. This functionality should be disabled.",
    "rationale": "This feature can be used to remotely access and exploit vulnerabilities on remote SQL Server instances and to run unsafe Visual Basic for Application functions.",
    "audit": "Run the following T-SQL command: SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'ad hoc distributed queries'; Both value columns must show 0.",
    "remediation": "Run the following T-SQL command: EXECUTE sp_configure 'show advanced options', 1; RECONFIGURE; EXECUTE sp_configure 'Ad Hoc Distributed Queries', 0; RECONFIGURE; GO EXECUTE sp_configure 'show advanced options', 0; RECONFIGURE; Default Value: 0 (disabled) References: 1. https://msdn.microsoft.com/en-us/library/ms187569(v=sql.120).aspx 15 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "references": "1. https://msdn.microsoft.com/en-us/library/ms187569(v=sql.120).aspx 15 | P a g e",
    "function_names": [
      "sql_server_ad_hoc_queries_disabled",
      "sql_server_distributed_queries_disabled",
      "sql_server_ad_hoc_queries_zero",
      "sql_server_ad_hoc_queries_config_disabled",
      "sql_server_external_queries_disabled"
    ]
  },
  {
    "id": "2.2",
    "title": "Set the 'CLR Enabled' Server Configuration Option to 0",
    "assessment": "Scored",
    "description": "The CLR enabled option specifies whether user assemblies can be run by SQL Server.",
    "rationale": "Enabling use of CLR assemblies widens the attack surface of SQL Server and puts it at risk from both inadvertent and malicious assemblies.",
    "audit": "Run the following T-SQL command: SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'clr enabled'; Both value columns must show 0.",
    "remediation": "Run the following T-SQL command: EXECUTE sp_configure 'clr enabled', 0; RECONFIGURE;  Default Value: By default, this option is disabled. 16 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "function_names": [
      "sql_server_clr_enabled_disabled",
      "sql_server_clr_enabled_set_to_0",
      "sql_server_clr_enabled_secure_config",
      "sql_server_clr_enabled_compliance_check",
      "sql_server_clr_enabled_disabled_by_default"
    ]
  },
  {
    "id": "2.3",
    "title": "Set the 'Cross DB Ownership Chaining' Server Configuration Option to 0",
    "assessment": "Scored",
    "description": "This option allows controlling cross-database ownership chaining across all databases at the instance (or server) level.",
    "rationale": "When enabled, this option allows a member of the db_owner role in a database to gain access to objects owned by a login in any other database, causing an unnecessary information disclosure. When required, cross-database ownership chaining should only be enabled for the specific databases requiring it instead of at the instance level for all databases by using the ALTER DATABASE <dbname> SET DB_CHAINING ON command.  This database option may not be changed on the master, model, or tempdb system databases.",
    "audit": "Run the following T-SQL command: SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'Cross db ownership chaining'; Both value columns must show 0.",
    "remediation": "Run the following T-SQL command: EXECUTE sp_configure 'Cross db ownership chaining', 0; RECONFIGURE; GO Default Value: 0 (disabled)  17 | P a g e References: 1. http://msdn.microsoft.com/en-us/library/ms188694(v=sql.120).aspx 18 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "references": "1. http://msdn.microsoft.com/en-us/library/ms188694(v=sql.120).aspx 18 | P a g e",
    "function_names": [
      "sql_server_cross_db_ownership_chaining_disabled",
      "sql_server_instance_ownership_chaining_disabled",
      "sql_server_database_chaining_disabled",
      "sql_server_cross_db_chaining_disabled",
      "sql_instance_ownership_chaining_disabled"
    ]
  },
  {
    "id": "2.4",
    "title": "Set the 'Database Mail XPs' Server Configuration Option to 0",
    "assessment": "Scored",
    "description": "This option controls the generation and transmission of email messages from SQL Server.",
    "rationale": "Disabling Database Mail reduces the SQL Server surface, eliminates a DOS attack vector and channel to exfiltrate data from the database server to a remote host.",
    "audit": "Run the following T-SQL command: SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'Database Mail XPs'; Both value columns must show 0.",
    "remediation": "Run the following T-SQL command: EXECUTE sp_configure 'show advanced options', 1; RECONFIGURE; EXECUTE sp_configure 'Database Mail XPs', 0; RECONFIGURE; GO EXECUTE sp_configure 'show advanced options', 0; RECONFIGURE; Default Value: By default, this option is disabled. 19 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "function_names": [
      "sql_server_database_mail_xps_disabled",
      "sql_server_database_mail_xps_set_to_zero",
      "sql_server_database_mail_xps_config_disabled",
      "sql_server_database_mail_xps_option_disabled",
      "sql_server_database_mail_xps_setting_disabled"
    ]
  },
  {
    "id": "2.5",
    "title": "Set the 'Ole Automation Procedures' Server Configuration Option to 0",
    "assessment": "Scored",
    "description": "Extended stored procedures that allow SQL Server users to execute functions external to SQL Server.",
    "rationale": "Enabling this option will increase the attack surface of SQL Server and allow users to execute functions in the security context of SQL Server.",
    "audit": "SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'Ole Automation Procedures'; Both value columns must show 0.",
    "remediation": "Run the following T-SQL command: EXECUTE sp_configure 'show advanced options', 1; RECONFIGURE; EXECUTE sp_configure 'Ole Automation Procedures', 0; RECONFIGURE; GO EXECUTE sp_configure 'show advanced options', 0; RECONFIGURE; Default Value: 0 (disabled) References: 1. http://msdn.microsoft.com/en-us/library/ms191188(v=sql.120).aspx 20 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "references": "1. http://msdn.microsoft.com/en-us/library/ms191188(v=sql.120).aspx 20 | P a g e",
    "function_names": [
      "sql_server_configuration_ole_automation_disabled",
      "sql_server_configuration_ole_automation_procedures_disabled",
      "sql_server_ole_automation_procedures_disabled",
      "sql_server_configuration_ole_automation_zero",
      "sql_server_ole_automation_zero"
    ]
  },
  {
    "id": "2.6",
    "title": "Set the 'Remote Access' Server Configuration Option to 0",
    "assessment": "Scored",
    "description": "Enables the execution of local stored procedures on remote servers or remote stored procedures on local server.",
    "rationale": "Functionality can be abused to launch a Denial-of-Service (DoS) attack on remote servers by off-loading query processing to a target.",
    "audit": "Run the following T-SQL command: SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'Remote access'; Both value columns must show 0.",
    "remediation": "Run the following T-SQL command: EXECUTE sp_configure 'show advanced options', 1; RECONFIGURE; EXECUTE sp_configure 'Remote access', 0; RECONFIGURE; GO EXECUTE sp_configure 'show advanced options', 0; RECONFIGURE; Default Value: 1 (enabled) References: 1. http://msdn.microsoft.com/en-us/library/ms187660(v=sql.120).aspx 21 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "references": "1. http://msdn.microsoft.com/en-us/library/ms187660(v=sql.120).aspx 21 | P a g e",
    "function_names": [
      "sql_server_remote_access_disabled",
      "sql_server_remote_access_zero",
      "sql_server_remote_procedure_disabled",
      "sql_server_local_procedure_restricted",
      "sql_server_stored_procedure_remote_blocked"
    ]
  },
  {
    "id": "2.7",
    "title": "Set the 'Remote Admin Connections' Server Configuration Option to 0",
    "assessment": "Scored",
    "description": "This setting controls whether a client application on a remote computer can use the Dedicated Administrator Connection (DAC).",
    "rationale": "The Dedicated Administrator Connection (DAC) lets an administrator access a running server to execute diagnostic functions or Transact-SQL statements, or to troubleshoot problems on the server, even when the server is locked or running in an abnormal state and not responding to a SQL Server Database Engine connection. In a cluster scenario the administrator may not actually be logged on to the same node that is currently hosting the SQL Server instance and thus is considered \"remote\". Therefore this setting should usually be enabled (1) for SQL Server failover clusters; otherwise it should be disabled (0) which is the default.",
    "audit": "Run the following T-SQL command: USE master; GO SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'Remote admin connections' AND SERVERPROPERTY('IsClustered') = 0; If no data is returned, the instance is a cluster and this recommendation is not applicable.  If data is returned, then both the value columns must show 0.",
    "remediation": "Run the following T-SQL command on non-clustered installations: EXECUTE sp_configure 'Remote admin connections', 0; RECONFIGURE; GO 22 | P a g e Default Value: 0 (disabled) References: 1. http://msdn.microsoft.com/en-us/library/ms190468(v=sql.120).aspx 23 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "references": "1. http://msdn.microsoft.com/en-us/library/ms190468(v=sql.120).aspx 23 | P a g e",
    "function_names": [
      "sql_server_remote_admin_connections_disabled",
      "sql_server_dac_remote_access_disabled",
      "sql_server_admin_connections_local_only",
      "sql_server_remote_dac_disabled",
      "sql_server_remote_admin_connections_zero"
    ]
  },
  {
    "id": "2.8",
    "title": "Set the 'Scan For Startup Procs' Server Configuration Option to 0",
    "assessment": "Scored",
    "description": "This option causes SQL Server to scan for and automatically run all stored procedures that are set to execute upon service startup.",
    "rationale": "Enforcing this control reduces the threat of an entity leveraging these facilities for malicious purposes.",
    "audit": "Run the following T-SQL command: SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'Scan for startup procs'; Both value columns must show 0.",
    "remediation": "Run the following T-SQL command: EXECUTE sp_configure 'show advanced options', 1; RECONFIGURE; EXECUTE sp_configure 'Scan for startup procs', 0; RECONFIGURE; GO EXECUTE sp_configure 'show advanced options', 0; RECONFIGURE; Impact: Setting Scan for Startup Procedures to 0 will prevent certain audit traces and other commonly used monitoring SPs from re-starting on start up. Additionally, replication requires this setting to be enabled (1) and will automatically change this setting if needed.  24 | P a g e Default Value: 0 (disabled) References: 1. http://msdn.microsoft.com/en-us/library/ms179460(v=sql.120).aspx 25 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "impact": "Setting Scan for Startup Procedures to 0 will prevent certain audit traces and other commonly used monitoring SPs from re-starting on start up. Additionally, replication requires this setting to be enabled (1) and will automatically change this setting if needed.  24 | P a g e Default Value: 0 (disabled)",
    "references": "1. http://msdn.microsoft.com/en-us/library/ms179460(v=sql.120).aspx 25 | P a g e",
    "function_names": [
      "sql_server_config_scan_startup_procs_disabled",
      "sql_server_startup_procs_scan_disabled",
      "sql_server_config_auto_start_procs_disabled",
      "sql_server_startup_procs_auto_run_disabled"
    ]
  },
  {
    "id": "2.9",
    "title": "Set the 'Trustworthy' Database Property to Off",
    "assessment": "Scored",
    "description": "The TRUSTWORTHY option allows database objects to access objects in other database under certain circumstances.",
    "rationale": "Provides protection from malicious CLR assemblies or extended procedures.",
    "audit": "Run the following T-SQL query to list any databases with a Trustworthy database property value of ON: SELECT name FROM sys.databases WHERE is_trustworthy_on = 1 AND name != 'msdb' AND state = 0; No rows should be returned.",
    "remediation": "Execute the following statement against the databases returned by the Audit Procedure: ALTER DATABASE <dbname> SET TRUSTWORTHY OFF; Default Value: OFF References: 1. http://msdn.microsoft.com/en-us/library/ms187861(v=sql.120).aspx 26 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "references": "1. http://msdn.microsoft.com/en-us/library/ms187861(v=sql.120).aspx 26 | P a g e",
    "function_names": [
      "sql_database_trustworthy_disabled",
      "sql_server_trustworthy_property_off",
      "database_trustworthy_setting_disabled",
      "sql_db_trustworthy_config_off",
      "database_trustworthy_access_restricted"
    ]
  },
  {
    "id": "2.10",
    "title": "Disable Unnecessary SQL Server Protocols",
    "assessment": "Not Scored",
    "description": "SQL Server supports Shared Memory, Named Pipes, TCP/IP and VIA protocols. However, SQL Server should be configured to use the bare minimum required based on the organization's needs.",
    "rationale": "Using fewer protocols minimizes the attack surface of SQL Server and in some cases can protect it from remote attacks.",
    "audit": "Open SQL Server Configuration Manager; go to the SQL Server Network Configuration.  Ensure that only required protocols are enabled.",
    "remediation": "Open SQL Server Configuration Manager; go to the SQL Server Network Configuration.  Ensure that only required protocols are enabled. Disable protocols not necessary. Impact: The Database Engine must be stopped and restarted for the change to take effect. Default Value: By default, TCP/IP and Shared Memory protocols are enabled on all commerical SQL Server 2008 instances. References: 1. http://msdn.microsoft.com/en-us/library/ms191294(v=sql.120).aspx 27 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "impact": "The Database Engine must be stopped and restarted for the change to take effect. Default Value: By default, TCP/IP and Shared Memory protocols are enabled on all commerical SQL Server 2008 instances.",
    "references": "1. http://msdn.microsoft.com/en-us/library/ms191294(v=sql.120).aspx 27 | P a g e",
    "function_names": [
      "sql_server_protocol_shared_memory_disabled",
      "sql_server_protocol_named_pipes_disabled",
      "sql_server_protocol_tcp_ip_enabled",
      "sql_server_protocol_via_disabled",
      "sql_server_protocol_minimal_required_enabled"
    ]
  },
  {
    "id": "2.11",
    "title": "Configure SQL Server to use non-standard ports",
    "assessment": "Not Scored",
    "description": "If enabled, the default SQL Server instance will be assigned a default port of TCP:1433 for TCP/IP communication.  Administrators can also configure named instances to use TCP:1433 for communication.  TCP:1433 is a widely known SQL Server port and this port assignment should be changed.",
    "rationale": "Using a non-default port helps protect the database from attacks directed to the default port.",
    "audit": "Open a powershell window and run the following command: PS C:\\>netstat -ano|select-string 1433.+listening This should return no lines. If any lines returned, check the process id in the last column if it's a SQL Server instance.",
    "remediation": "1. In SQL Server Configuration Manager, in the console pane, expand SQL Server Network Configuration, expand Protocols for , and then double-click the TCP/IP or VIA protocol 2. In the TCP/IP Properties dialog box, on the IP Addresses tab, several IP addresses appear in the format IP1, IP2, up to IPAll. One of these is for the IP address of the loopback adapter, 127.0.0.1. Additional IP addresses appear for each IP Address on the computer 3. Change the TCP Port field from 1433 to another non-standard port or leave the TCP Port field empty and set the TCP Dynamic Ports value to 0 to enable dynamic port assignment and then click OK. 4. In the console pane, click SQL Server Services. 5. In the details pane, right-click SQL Server () and then click Restart, to stop and restart SQL Server.   28 | P a g e Impact: Changing the default port will force DAC (Default Administrator Connection) to listen on a random port. Also, it might make benign applications, such as application firewalls, require special configuration. Default Value: By default, default SQL Server instances listen on to TCP/IP traffic on TCP port 1433 and named instances use dynamic ports. References: 1. http://msdn.microsoft.com/en-us/library/ms177440(v=sql.120).aspx 29 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "impact": "Changing the default port will force DAC (Default Administrator Connection) to listen on a random port. Also, it might make benign applications, such as application firewalls, require special configuration. Default Value: By default, default SQL Server instances listen on to TCP/IP traffic on TCP port 1433 and named instances use dynamic ports.",
    "references": "1. http://msdn.microsoft.com/en-us/library/ms177440(v=sql.120).aspx 29 | P a g e",
    "function_names": [
      "sql_server_instance_non_standard_port",
      "sql_server_instance_port_not_1433",
      "sql_server_named_instance_non_default_port",
      "sql_server_tcp_port_customized",
      "sql_server_communication_port_changed"
    ]
  },
  {
    "id": "2.12",
    "title": "Set the 'Hide Instance' option to 'Yes' for Production SQL Server instances",
    "assessment": "Scored",
    "description": "Non-clustered SQL Server instances within production environments should be designated as hidden to prevent advertisement by the SQL Server Browser service.",
    "rationale": "Designating production SQL Server instances as hidden leads to a more secure installation because they cannot be enumerated. However, clustered instances may break if this option is selected.",
    "audit": "1. In SQL Server Configuration Manager, expand SQL Server Network Configuration, right-click Protocols for <server instance>, and then select Properties. 2. On the Flags tab, in the Hide Instance box, select Yes, and then click OK to close the dialog box. The change takes effect immediately for new connections.",
    "remediation": "1. In SQL Server Configuration Manager, expand SQL Server Network Configuration, right-click Protocols for <server instance>, and then select Properties. 2. On the Flags tab, in the Hide Instance box, select Yes, and then click OK to close the dialog box. The change takes effect immediately for new connections. Default Value: By default, SQL Server instances are not hidden. References: 1. http://msdn.microsoft.com/en-us/library/ms179327(v=sql.120).aspx 30 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "references": "1. http://msdn.microsoft.com/en-us/library/ms179327(v=sql.120).aspx 30 | P a g e",
    "function_names": [
      "sql_server_instance_hide_enabled",
      "sql_server_instance_hide_enabled_production",
      "sql_server_instance_hide_enabled_production_only",
      "sql_server_instance_hide_enabled_non_clustered",
      "sql_server_instance_hide_enabled_production_non_clustered"
    ]
  },
  {
    "id": "2.13",
    "title": "Disable the 'sa' Login Account",
    "assessment": "Scored",
    "description": "The sa account is a widely known and often widely used SQL Server account with sysadmin privileges.",
    "rationale": "Enforcing this control reduces the probability of an attacker executing brute force attacks against a well-known principal.",
    "audit": "Use the following syntax to determine if the sa account is disabled. SELECT name, is_disabled FROM sys.server_principals WHERE sid = 0x01; An is_disabled value of 1 indicates the account is currently disabled.",
    "remediation": "Execute the following query: ALTER LOGIN sa DISABLE; Impact: It is not a good security practice to code applications or scripts to use the sa account. However, if this has been done disabling the sa account will prevent scripts and applications for authenticating to the database server and executing required tasks or functions. Default Value: By default the 'sa' login account is enabled.   31 | P a g e References: 1. http://msdn.microsoft.com/en-us/library/ms188786(v=sql.120).aspx 2. http://msdn.microsoft.com/en-us/library/ms189828(v=sql.120).aspx 32 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "impact": "It is not a good security practice to code applications or scripts to use the sa account. However, if this has been done disabling the sa account will prevent scripts and applications for authenticating to the database server and executing required tasks or functions. Default Value: By default the 'sa' login account is enabled.   31 | P a g e",
    "references": "1. http://msdn.microsoft.com/en-us/library/ms188786(v=sql.120).aspx 2. http://msdn.microsoft.com/en-us/library/ms189828(v=sql.120).aspx 32 | P a g e",
    "function_names": [
      "sql_server_login_sa_disabled",
      "sql_server_account_sa_admin_privileges_removed",
      "sql_server_login_sa_sysadmin_restricted",
      "sql_server_account_sa_default_credentials_disabled",
      "sql_server_login_sa_privileges_revoked"
    ]
  },
  {
    "id": "2.14",
    "title": "Rename the 'sa' Login Account",
    "assessment": "Scored",
    "description": "The sa account is a widely known and often widely used SQL Server account with sysadmin privileges.",
    "rationale": "It is more difficult to launch password-guessing and brute-force attacks against the sa account if the username is not known.",
    "audit": "Use the following syntax to determine if the sa account is renamed. SELECT name FROM sys.server_principals WHERE sid = 0x01; A name of sa indicates the account has not been renamed.",
    "remediation": "Replace the different_user value within the below syntax and execute rename the sa login. ALTER LOGIN sa WITH NAME = different_user;  Impact: It is not a good security practice to code applications or scripts to use the sa account. However, if this has been done renaming the sa account will prevent scripts and applications for authenticating to the database server and executing required tasks or functions. Default Value: By default the 'sa'account name is 'sa'  33 | P a g e References: 1. http://msdn.microsoft.com/en-us/library/ms144284.aspx 34 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "impact": "It is not a good security practice to code applications or scripts to use the sa account. However, if this has been done renaming the sa account will prevent scripts and applications for authenticating to the database server and executing required tasks or functions. Default Value: By default the 'sa'account name is 'sa'  33 | P a g e",
    "references": "1. http://msdn.microsoft.com/en-us/library/ms144284.aspx 34 | P a g e",
    "function_names": [
      "sql_server_login_sa_renamed",
      "sql_server_login_default_admin_renamed",
      "sql_server_login_privileged_account_renamed",
      "sql_server_login_sysadmin_renamed",
      "sql_server_login_high_privilege_renamed"
    ]
  },
  {
    "id": "2.15",
    "title": "Set the 'xp_cmdshell' Server Configuration Option to 0",
    "assessment": "Scored",
    "description": "The xp_cmdshell procedure allows an authenticated SQL Server user to execute operating- system command shell commands and return results as rows within the SQL client.",
    "rationale": "xp_cmdshell is commonly used by attackers to read or write data to/from the underlying Operating System of a database server.",
    "audit": "Run the following code snippet to determine if the xp_cmdshell system stored procedure is enabled: EXECUTE sp_configure 'show advanced options',1; RECONFIGURE WITH OVERRIDE; EXECUTE sp_configure 'xp_cmdshell'; A run value of 0 indicates that the xp_cmdshell option is disabled. If the option is enabled, run the following code snippet to disable this option: EXECUTE sp_configure 'show advanced options',1; RECONFIGURE WITH OVERRIDE; EXECUTE sp_configure 'xp_cmdshell',0; RECONFIGURE WITH OVERRIDE;",
    "remediation": "Run the following T-SQL command: EXECUTE sp_configure 'show advanced options', 1; RECONFIGURE; EXECUTE sp_configure 'Xp_cmdshell', 0; RECONFIGURE; GO EXECUTE sp_configure 'show advanced options', 0; RECONFIGURE; Default Value: 0 (disabled)  35 | P a g e References: 1. http://msdn.microsoft.com/en-us/library/ms175046(v=sql.120).aspx 2. http://msdn.microsoft.com/en-us/library/ms190693(v=sql.120).aspx 36 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "references": "1. http://msdn.microsoft.com/en-us/library/ms175046(v=sql.120).aspx 2. http://msdn.microsoft.com/en-us/library/ms190693(v=sql.120).aspx 36 | P a g e",
    "function_names": [
      "sql_server_configuration_xp_cmdshell_disabled",
      "sql_server_xp_cmdshell_option_disabled",
      "sql_server_configuration_xp_cmdshell_set_to_zero",
      "sql_server_xp_cmdshell_set_to_zero",
      "sql_server_configuration_xp_cmdshell_secure_value"
    ]
  },
  {
    "id": "2.16",
    "title": "Set AUTO_CLOSE OFF on contained databases",
    "assessment": "Scored",
    "description": "AUTO_CLOSE determines if a given database is closed or not after a connection terminates. If enabled, subsequent connections to the given database will require the database to be reopened and relevant procedure caches to be rebuilt.",
    "rationale": "Opening contained databases to authenticate a user consumes additional server resources and may contribute to a denial of service.",
    "audit": "Perform the following to find contained databases that are not configured as prescribed: SELECT name, containment, containment_desc, is_auto_close_on FROM sys.databases WHERE containment <> 0 and is_auto_close_on = 1;",
    "remediation": "Perform the following to establish the prescribed state for a given contained database: ALTER DATABASE <database_name> SET AUTO_CLOSE OFF;  Default Value: AUTO_CLOSE is off (Is_auto_close_on = 0) References: 1. http://msdn.microsoft.com/en-us/library/ff929055.aspx 37 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "references": "1. http://msdn.microsoft.com/en-us/library/ff929055.aspx 37 | P a g e",
    "function_names": [
      "sql_database_auto_close_disabled",
      "sql_database_auto_close_off",
      "contained_database_auto_close_disabled",
      "contained_database_auto_close_off"
    ]
  },
  {
    "id": "2.17",
    "title": "Verify No Login Has the Name 'sa'",
    "assessment": "Scored",
    "description": "The 'sa' login (e.g. principal) is a widely known and often widely used SQL Server account. Therefore, there should not be a login called 'sa' when the original 'sa' login (sid 0x01) has been renamed.",
    "rationale": "Enforcing this control reduces the probability of an attacker executing brute force attacks against a well-known principal.",
    "audit": "Use the following syntax to determine if there is an account named sa. SELECT sid, name, FROM sys.server_principals WHERE L.name = 'sa' AND L.sid <> 0x01; This query should not return any rows.",
    "remediation": "Execute the following query: DROP LOGIN sa;  Impact: It is not a good security practice to code applications or scripts to use the 'sa' account. Given that it is a best practice to rename and disable the 'sa' account, some 3rd party applications check for the existence of a login named 'sa' and if it doesn't exist, creates one. Removing the 'sa' login will prevent these scripts and applications from authenticating to the database server and executing required tasks or functions.  38 | P a g e Default Value: The login with a sid of 0x01 is named 'sa' by default.  3 Authentication and Authorization This section contains recommendations related to SQL server's authentication and authorization mechanisms. 39 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "impact": "It is not a good security practice to code applications or scripts to use the 'sa' account. Given that it is a best practice to rename and disable the 'sa' account, some 3rd party applications check for the existence of a login named 'sa' and if it doesn't exist, creates one. Removing the 'sa' login will prevent these scripts and applications from authenticating to the database server and executing required tasks or functions.  38 | P a g e Default Value: The login with a sid of 0x01 is named 'sa' by default.  3 Authentication and Authorization This section contains recommendations related to SQL server's authentication and authorization mechanisms. 39 | P a g e",
    "function_names": [
      "sql_server_login_sa_renamed",
      "sql_server_principal_sa_disabled",
      "sql_server_login_no_default_sa",
      "sql_server_principal_no_standard_sa",
      "sql_server_login_sa_removed"
    ]
  },
  {
    "id": "3.1",
    "title": "Set The 'Server Authentication' Property To Windows Authentication mode",
    "assessment": "Scored",
    "description": "Uses Windows Authentication to validate attempted connections.",
    "rationale": "Windows provides a more robust authentication mechanism than SQL Server authentication.",
    "audit": "Execute the following syntax: xp_loginconfig 'login mode'; A config_value of Windows NT Authentication indicates the Server Authentication property is set to Windows Authentication mode",
    "remediation": "Perform the following steps: 1. Open SQL Server Management Studio. 2. Open the Object Explorer tab and connect to the target database instance. 3. Right click the instance name and select Properties. 4. Select the Security page from the left menu. 5. Set the Server authentication setting to Windows Authentication mode. Default Value: Windows Authentication Mode References: 1. http://msdn.microsoft.com/en-us/library/ms188470(v=sql.120).aspx 40 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "references": "1. http://msdn.microsoft.com/en-us/library/ms188470(v=sql.120).aspx 40 | P a g e",
    "function_names": [
      "sql_server_authentication_windows_mode",
      "sql_server_authentication_windows_enabled",
      "sql_server_connection_windows_auth_required",
      "sql_server_auth_windows_only",
      "sql_server_security_windows_auth_enabled"
    ]
  },
  {
    "id": "3.2",
    "title": "Revoke CONNECT permissions on the 'guest user' within all SQL Server databases excluding the master, msdb and tempdb",
    "assessment": "Scored",
    "description": "Removes the right of guest users to connect to SQL Server user databases.",
    "rationale": "A login assumes the identity of the guest user when a login has access to SQL Server but does not have access to a database through its own account and the database has a guest user account. Revoking the connect permission for the guest user will ensure that a login is not able to access database information without explicit access to do so.",
    "audit": "Run the following code snippet in each database in the instance to determine if the guest user has CONNECT permission. No rows should be returned. USE [ database_name ]; GO SELECT DB_NAME() AS DBName, dpr.name, dpe.permission_name FROM sys.database_permissions dpe JOIN sys.database_principals dpr ON dpe.grantee_principal_id=dpr.principal_id WHERE dpr.name='guest' AND dpe.permission_name='CONNECT';",
    "remediation": "The following code snippet revokes CONNECT permissions from the guest user in a database: USE [ database_name ]; GO REVOKE CONNECT FROM guest; Impact: When CONNECT permission to the guest user is revoked, a SQL Server instance login must be mapped to a database user explicitly in order to have access to the database.  41 | P a g e Default Value: The guest user account is added to each new database but without CONNECT permission by default. References: 1. http://msdn.microsoft.com/en-us/library/bb402861(v=sql.120).aspx 42 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "impact": "When CONNECT permission to the guest user is revoked, a SQL Server instance login must be mapped to a database user explicitly in order to have access to the database.  41 | P a g e Default Value: The guest user account is added to each new database but without CONNECT permission by default.",
    "references": "1. http://msdn.microsoft.com/en-us/library/bb402861(v=sql.120).aspx 42 | P a g e",
    "function_names": [
      "sqlserver_database_guest_connect_revoked",
      "sqlserver_database_guest_connect_disabled",
      "sqlserver_database_guest_permission_restricted",
      "sqlserver_database_guest_access_denied",
      "sqlserver_database_guest_connect_revoked_excluding_system",
      "sqlserver_database_guest_connect_disabled_non_system",
      "sqlserver_database_guest_permission_restricted_user_databases",
      "sqlserver_database_guest_access_denied_non_system"
    ]
  },
  {
    "id": "3.3",
    "title": "Drop Orphaned Users From SQL Server Databases",
    "assessment": "Scored",
    "description": "A database user for which the corresponding SQL Server login is undefined or is incorrectly defined on a server instance cannot log in to the instance and is referred to as orphaned and should be removed.",
    "rationale": "Orphan users should be removed to avoid potential misuse of those broken users in any way.",
    "audit": "Run the following T-SQL query to identify orphan users. No rows should be returned. EXEC sp_change_users_login @Action='Report';",
    "remediation": "Run the following T-SQL query to remove an orphan user: DROP USER <username>; References: 1. http://msdn.microsoft.com/en-us/library/ms175475(v=sql.120).aspx 43 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "references": "1. http://msdn.microsoft.com/en-us/library/ms175475(v=sql.120).aspx 43 | P a g e",
    "function_names": [
      "sqlserver_database_orphaned_users_removed",
      "sqlserver_database_user_login_valid",
      "sqlserver_database_orphaned_users_cleaned",
      "sqlserver_database_user_mapping_valid",
      "sqlserver_database_orphaned_users_dropped"
    ]
  },
  {
    "id": "3.4",
    "title": "Do not use SQL Authentication in contained databases",
    "assessment": "Scored",
    "description": "Contained databases do not enforce password complexity rules.",
    "rationale": "The absence of an enforced password policy may increase the likelihood of a weak credential being established in a contained database.",
    "audit": "Execute the following in each contained database to find database users that are using SQL authentication: SELECT name AS DBUser FROM sys.database_principals WHERE name NOT IN ('dbo','Information_Schema','sys','guest') AND type IN ('U','S','G') AND authentication_type = 2; GO",
    "remediation": "Leverage Windows Authentication. References: 1. http://msdn.microsoft.com/en-us/library/ff929055.aspx   4 Password Policies This section contains recommendations related to SQL server's password policies. 44 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "references": "1. http://msdn.microsoft.com/en-us/library/ff929055.aspx   4 Password Policies This section contains recommendations related to SQL server's password policies. 44 | P a g e",
    "function_names": [
      "sql_database_contained_auth_disabled",
      "sql_database_password_complexity_enforced",
      "sql_contained_database_authentication_disabled",
      "sql_database_non_contained_auth_required",
      "sql_database_password_policy_compliance_enabled"
    ]
  },
  {
    "id": "4.1",
    "title": "Set the 'MUST_CHANGE' Option to ON for All SQL Authenticated Logins",
    "assessment": "Not Scored",
    "description": "SQL Server will prompt for an updated password the first time the altered login is used.",
    "rationale": "Enforcing password change will prevent the account administrators or anyone accessing the initial password to misuse the SQL login created without being noticed.",
    "audit": "1. Open SQL Server Management Studio. 2. Open Object Explorer and connect to the target instance. 3. Navigate to the Logins tab in Object Explorer and expand. Right click on the desired login and select Properties. 4. Verify the User must change password at next login checkbox is checked",
    "remediation": "Set the MUST_CHANGE option for SQL Authenticated logins ALTER LOGIN login_name WITH PASSWORD = password_value MUST_CHANGE; Impact: CHECK_EXPIRATION and CHECK_POLICY options must both be ON Default Value: ON References: 1. http://msdn.microsoft.com/en-us/library/ms189828(v=sql.120).aspx 45 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "impact": "CHECK_EXPIRATION and CHECK_POLICY options must both be ON Default Value: ON",
    "references": "1. http://msdn.microsoft.com/en-us/library/ms189828(v=sql.120).aspx 45 | P a g e",
    "function_names": [
      "sql_server_login_must_change_enabled",
      "sql_server_auth_password_reset_required",
      "sql_auth_login_password_expiry_enabled",
      "sql_server_login_initial_password_change_required",
      "sql_auth_login_must_change_on_first_use"
    ]
  },
  {
    "id": "4.2",
    "title": "Set the 'CHECK_EXPIRATION' Option to ON for All SQL Authenticated Logins Within the Sysadmin Role",
    "assessment": "Scored",
    "description": "Applies the same password expiration policy used in Windows to passwords used inside SQL Server.",
    "rationale": "Ensuring SQL logins comply with the secure password policy applied by the Windows Server Benchmark will ensure the passwords for SQL logins with Sysadmin privileges are changed on a frequent basis to help prevent compromise via a brute force attack. CONTROL SERVER is an equivalent permission to sysadmin and logins with that permission should also be required to have expiring passwords.",
    "audit": "Run the following T-SQL statement to find sysadmin logins with CHECK_EXPIRATION OFF. No rows should be returned. SELECT l.[name], 'sysadmin membership' AS 'Access_Method' FROM sys.sql_logins AS l WHERE IS_SRVROLEMEMBER('sysadmin',name) = 1 AND l.is_expiration_checked <> 1 UNION ALL SELECT l.[name], 'CONTROL SERVER' AS 'Access_Method' FROM sys.sql_logins AS l JOIN sys.server_permissions AS p ON l.principal_id = p.grantee_principal_id WHERE p.type = 'CL' AND p.state IN ('G', 'W') AND l.is_expiration_checked <> 1;",
    "remediation": "ALTER LOGIN [login_name] WITH CHECK_EXPIRATION = ON; Impact: This is a mitigating recommendation for systems which cannot follow the recommendation to use only Windows Authenticated logins. In regards to limiting this rule to only logins with sysadmin and CONTROL SERVER privileges, there are too many cases of applications that run with less than sysadmin level 46 | P a g e privileges that have hard-coded passwords or effectively hard-coded passwords (whatever is set the first time is nearly impossible to change). There are several line of business applications that are considered best of breed which has this failing. Also, keep in mind that the password policy is taken from the computer's local policy, which will take from the Default Domain Policy setting. Many organizations have a different password policy with regards to service accounts. These are handled in AD by setting the account's password not to expire and having some other process track when they need to be changed. With this second control in place, this is perfectly acceptable from an audit perspective. If you treat a SQL Server login as a service account, then you have to do the same. This ensures that the password change happens during a communicated downtime window and not arbitrarily. Default Value: 'CHECK_EXPIRATION' is ON by default when using SSMS to create a SQL authenticated login. 'CHECK_EXPIRATION' is OFF by default when using T-SQL CREATE LOGIN syntax without specifying the CHECK_EXPIRATION option. References: 1. http://msdn.microsoft.com/en-us/library/ms161959(v=sql.120).aspx 47 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "impact": "This is a mitigating recommendation for systems which cannot follow the recommendation to use only Windows Authenticated logins. In regards to limiting this rule to only logins with sysadmin and CONTROL SERVER privileges, there are too many cases of applications that run with less than sysadmin level 46 | P a g e privileges that have hard-coded passwords or effectively hard-coded passwords (whatever is set the first time is nearly impossible to change). There are several line of business applications that are considered best of breed which has this failing. Also, keep in mind that the password policy is taken from the computer's local policy, which will take from the Default Domain Policy setting. Many organizations have a different password policy with regards to service accounts. These are handled in AD by setting the account's password not to expire and having some other process track when they need to be changed. With this second control in place, this is perfectly acceptable from an audit perspective. If you treat a SQL Server login as a service account, then you have to do the same. This ensures that the password change happens during a communicated downtime window and not arbitrarily. Default Value: 'CHECK_EXPIRATION' is ON by default when using SSMS to create a SQL authenticated login. 'CHECK_EXPIRATION' is OFF by default when using T-SQL CREATE LOGIN syntax without specifying the CHECK_EXPIRATION option.",
    "references": "1. http://msdn.microsoft.com/en-us/library/ms161959(v=sql.120).aspx 47 | P a g e",
    "function_names": [
      "sql_server_login_password_expiration_enabled",
      "sql_server_sysadmin_login_check_expiration_enabled",
      "sql_server_auth_login_password_policy_enforced",
      "sql_server_sysadmin_login_password_expiration_required",
      "sql_server_login_password_expiration_active"
    ]
  },
  {
    "id": "4.3",
    "title": "Set the 'CHECK_POLICY' Option to ON for All SQL Authenticated Logins",
    "assessment": "Scored",
    "description": "Applies the same password complexity policy used in Windows to passwords used inside SQL Server.",
    "rationale": "Ensure SQL authenticated login passwords comply with the secure password policy applied by the Windows Server Benchmark so that they cannot be easily compromised via brute force attack.",
    "audit": "Use the following code snippet to determine the status of SQL Logins and if their password complexity is enforced. SELECT name, is_disabled FROM sys.sql_logins WHERE is_policy_checked = 0; The is_policy_checked value of 0 indicates that the 'CHECK_POLICY' option is OFF; value of 1 is ON. If is_disabled value is 1, then the login is disabled an unusable. If no rows are returned then either no SQL Authenticated logins exist or they all have 'CHECK_POLICY' ON.",
    "remediation": "ALTER LOGIN [login_name] WITH CHECK_POLICY = ON; Impact: This is a mitigating recommendation for systems which cannot follow the recommendation to use only Windows Authenticated logins. Weak passwords can lead to compromised systems. SQL Server authenticated logins will utilize the the password policy set in the computer's local policy, which is typically set by the Default Domain Policy setting. 48 | P a g e The setting is only enforced when the password is changed. This setting does not force existing weak passwords to be changed. Default Value: 'CHECK_POLICY'  is ON References: 1. http://msdn.microsoft.com/en-us/library/ms161959(v=sql.120).aspx   5 Auditing and Logging This section contains recommendations related to SQL server's audit and logging mechanisms. 49 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "impact": "This is a mitigating recommendation for systems which cannot follow the recommendation to use only Windows Authenticated logins. Weak passwords can lead to compromised systems. SQL Server authenticated logins will utilize the the password policy set in the computer's local policy, which is typically set by the Default Domain Policy setting. 48 | P a g e The setting is only enforced when the password is changed. This setting does not force existing weak passwords to be changed. Default Value: 'CHECK_POLICY'  is ON",
    "references": "1. http://msdn.microsoft.com/en-us/library/ms161959(v=sql.120).aspx   5 Auditing and Logging This section contains recommendations related to SQL server's audit and logging mechanisms. 49 | P a g e",
    "function_names": [
      "sql_server_login_password_policy_enabled",
      "sql_server_login_check_policy_enabled",
      "sql_server_auth_password_complexity_enabled",
      "sql_server_login_windows_policy_applied",
      "sql_server_auth_password_policy_enabled"
    ]
  },
  {
    "id": "5.1",
    "title": "Set the 'Maximum number of error log files' setting to greater than or equal to 12",
    "assessment": "Not Scored",
    "description": "SQL Server errorlog files must be protected from loss. The log files must be backed up before they are overwritten.",
    "rationale": "The SQL Server errorlog contains important information about major server events and login attempt information as well.",
    "audit": "1. Open SQL Server Management Studio. 2. Open Object Explorer and connect to the target instance. 3. Navigate to the Management tab in Object Explorer and expand. Right click on the SQL Server Logs file and select Configure. 4. Verify the Limit the number of error log files before they are recycled checkbox is checked 5. Verify the Maximum number of error log files is greater than or equal to 12",
    "remediation": "Adjust the number of logs to prevent data loss. The default value of 6 may be insufficient for a production environment. 1. Open SQL Server Management Studio. 2. Open Object Explorer and connect to the target instance. 3. Navigate to the Management tab in Object Explorer and expand. Right click on the SQL Server Logs file and select Configure 4. Check the Limit the number of error log files before they are recycled 5. Set the Maximum number of error log files to greater than or equal to 12  Default Value: 6 SQL Server error logs are retained by default.  50 | P a g e References: 1. http://msdn.microsoft.com/en-us/library/ms177285(v=sql.120).aspx 51 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "references": "1. http://msdn.microsoft.com/en-us/library/ms177285(v=sql.120).aspx 51 | P a g e",
    "function_names": [
      "sql_server_error_log_max_files",
      "sql_server_error_log_retention",
      "sql_server_error_log_backup_enabled",
      "sql_server_error_log_min_count_12",
      "sql_server_error_log_protection_enabled"
    ]
  },
  {
    "id": "5.2",
    "title": "Set the 'Default Trace Enabled' Server Configuration Option to 1",
    "assessment": "Scored",
    "description": "The default trace provides audit logging of database activity including account creations, privilege elevation and execution of DBCC commands.",
    "rationale": "Default trace provides valuable audit information regarding security-related activities on the server.",
    "audit": "Run the following T-SQL command: SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'Default trace enabled'; Both value columns must show 1.",
    "remediation": "Run the following T-SQL command: EXECUTE sp_configure 'show advanced options', 1; RECONFIGURE; EXECUTE sp_configure 'Default trace enabled', 1; RECONFIGURE; GO EXECUTE sp_configure 'show advanced options', 0; RECONFIGURE; Default Value: 1 (on) References: 1. http://msdn.microsoft.com/en-us/library/ms175513(v=sql.120).aspx 52 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "references": "1. http://msdn.microsoft.com/en-us/library/ms175513(v=sql.120).aspx 52 | P a g e",
    "function_names": [
      "sql_server_default_trace_enabled",
      "sql_server_audit_logging_enabled",
      "sql_server_trace_configuration_secure",
      "sql_server_dbcc_audit_enabled",
      "sql_server_privilege_elevation_logging_enabled"
    ]
  },
  {
    "id": "5.3",
    "title": "Set 'Login Auditing' to failed logins",
    "assessment": "Not Scored",
    "description": "Setting logs to record only failed login SQL Server authentication attempts. This is the default setting for SQL Server.",
    "rationale": "Logging failed logins provides key information that can be used to detect\\confirm password guessing attacks.  While logging successful login attempts can be used to confirm server access during forensic investigations, we recommend using Audit. This minimizes the writes to the ERRORLOG for SQL Server, which reduces the amount of noise for when a DBA is trying to troubleshoot an issue.",
    "audit": "XP_loginconfig 'audit level'; A config_value of 'failure'  indicates a server login auditing setting of 'Failed logins only'.",
    "remediation": "Perform the following steps to set the level of auditing: 1. Open SQL Server Management Studio. 2. Right click the target instance and select Properties and navigate to the Security tab. 3. Select the option Failed logins only under the \"Login Auditing\" section and click OK. 4. Restart the SQL Server instance. Impact: At a minimum, we want to ensure failed logins are captured in order to detect if an adversary is attempting to brute force passwords or otherwise attempting to access a SQL Server improperly. Default Value: By default, only failed login attempted are captured.  53 | P a g e References: 1. http://technet.microsoft.com/en-us/library/ms188470(v=sql.120).aspx 54 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "impact": "At a minimum, we want to ensure failed logins are captured in order to detect if an adversary is attempting to brute force passwords or otherwise attempting to access a SQL Server improperly. Default Value: By default, only failed login attempted are captured.  53 | P a g e",
    "references": "1. http://technet.microsoft.com/en-us/library/ms188470(v=sql.120).aspx 54 | P a g e",
    "function_names": [
      "sql_server_audit_login_failed_only",
      "sql_server_audit_failed_logins_enabled",
      "sql_server_authentication_failed_logging_enabled",
      "sql_server_audit_failed_attempts_only",
      "sql_server_login_audit_failed_restricted"
    ]
  },
  {
    "id": "5.4",
    "title": "Use SQL Server Audit to capture both failed and successful logins",
    "assessment": "Not Scored",
    "description": "SQL Server Audit is capable of capturing both failed and successful logins and writing them to one of three places: the application event log, the security event log, or the file system. We will use it to capture any login attempt to SQL Server, as well as any attempts to change audit policy. This will also serve to be a second source to record failed login attempts.",
    "rationale": "By utilizing Audit instead of the traditional setting under the Security tab to capture successful logins, we reduce the noise in the ERRORLOG. This keeps it smaller and easier to read for DBAs who are attempting to troubleshoot issues with the SQL Server. Also, the Audit object can write to the security event log, though this requires operating system configuration. This gives an additional option for where to store login events, especially in conjunction with an SIEM.",
    "audit": "SELECT S.name AS 'Audit Name' , CASE S.is_state_enabled WHEN 1 THEN 'Y' WHEN 0 THEN 'N' END AS 'Audit Enabled' , S.type_desc AS 'Write Location' , SA.name AS 'Audit Specification Name' , CASE SA.is_state_enabled WHEN 1 THEN 'Y' WHEN 0 THEN 'N' END AS 'Audit Specification Enabled' , SAD.audit_action_name , SAD.audited_result FROM sys.server_audit_specification_details AS SAD JOIN sys.server_audit_specifications AS SA ON SAD.server_specification_id = SA.server_specification_id JOIN sys.server_audits AS S ON SA.audit_guid = S.audit_guid WHERE SAD.audit_action_id IN ('CNAU', 'LGFL', 'LGSD');  The result set should contain 3 rows, one for the following audit_action_names:  AUDIT_CHANGE_GROUP  FAILED_LOGIN_GROUP 55 | P a g e  SUCCESSFUL_LOGIN_GROUP Both the Audit and Audit specification should be enabled and the audited_result should include both success and failure.",
    "remediation": "Via the SSMS GUI Interface: 1. Expand the SQL Server in Object Explorer. 2. Expand the Secuirty Folder 3. Right-click on the Audits folder and choose New Audit... 4. Specify a name for the Server Audit. 5. Specify the audit destination details and then click OK to save the Server Audit. 6. Right-click on Server Audit Specifications and choose New Server Audit Specification... 7. Name the Server Audit Specification 8. Select the just created Server Audit in the Audit drop-down selection. 9. Click the drop down under Audit Action Type and select AUDIT_CHANGE_GROUP. 10. Click the new drop down under Audit Action Type and select FAILED_LOGIN_GROUP. 11. Click the new drop down under Audit Action Type and select SUCCESSFUL_LOGIN_GROUP. 12. Click OK to save the Server Audit Specification. 13. Right-click on the new Server Audit Specification and select Enable Server Audit Specification. 14. Right-click on the new Server Audit and select Enable Server Audit. Via T-SQL: Execute code similar to: CREATE SERVER AUDIT TrackLogins TO APPLICATION_LOG; GO CREATE SERVER AUDIT SPECIFICATION TrackAllLogins FOR SERVER AUDIT TrackLogins ADD (FAILED_LOGIN_GROUP), ADD (SUCCESSFUL_LOGIN_GROUP), ADD (AUDIT_CHANGE_GROUP) WITH (STATE = ON); GO ALTER SERVER AUDIT TrackLogins WITH (STATE = ON); GO Please note, if the write destination for the Audit object is to be the security event log, see 56 | P a g e the Books Online topic Write SQL Server Audit Events to the Security Log and follow the appropriate steps. Impact: With the previous recommendation, only failed logins are captured. If the Audit object is not implemented with the appropriate setting, SQL Server will not capture successful logins, which might prove of use for forensics. Default Value: By default, there is no audit object tracking login events. Also, successful logins aren't normally tracked. References: 1. https://msdn.microsoft.com/en-us/library/cc280525(v=sql.120).aspx   6 Application Development This section contains recommendations related to developing applications that interface with SQL server. 57 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "impact": "With the previous recommendation, only failed logins are captured. If the Audit object is not implemented with the appropriate setting, SQL Server will not capture successful logins, which might prove of use for forensics. Default Value: By default, there is no audit object tracking login events. Also, successful logins aren't normally tracked.",
    "references": "1. https://msdn.microsoft.com/en-us/library/cc280525(v=sql.120).aspx   6 Application Development This section contains recommendations related to developing applications that interface with SQL server. 57 | P a g e",
    "function_names": [
      "sql_server_audit_login_capture_enabled",
      "sql_server_audit_failed_logins_captured",
      "sql_server_audit_successful_logins_captured",
      "sql_server_audit_policy_change_captured",
      "sql_server_audit_event_log_writing_enabled",
      "sql_server_audit_security_log_writing_enabled",
      "sql_server_audit_file_system_writing_enabled",
      "sql_server_audit_all_login_attempts_captured"
    ]
  },
  {
    "id": "6.1",
    "title": "Sanitize Database and Application User Input",
    "assessment": "Not Scored",
    "description": "Always validate user input received from a database client or application by testing type, length, format, and range prior to transmitting it to the database server.",
    "rationale": "Sanitizing user input drastically minimizes risk of SQL injection.",
    "audit": "Check with the application teams to ensure any database interaction is through the use of stored procedures and not dynamic SQL. Revoke any INSERT, UPDATE, or DELETE privileges to users so that modifications to data must be done through stored procedures. Verify that there's no SQL query in the application code produced by string concatenation.",
    "remediation": "The following steps can be taken to remediate SQL injection vulnerabilities:  Review TSQL and application code for SQL Injection  Only permit minimally privileged accounts to send user input to the server  Minimize the risk of SQL injection attack by using parameterized commands and stored procedures  Reject user input containing binary data, escape sequences, and comment characters  Always validate user input and do not use it directly to build SQL statements Impact: Sanitize user input may require changes to application code or database object syntax. These changes can require applications or databases to be taken temporarily off-line. Any change to TSQL or application code should be thoroughly tested in testing environment before production implementation.   58 | P a g e References: 1. https://www.owasp.org/index.php/SQL_Injection 2. http://msdn.microsoft.com/en-us/library/ms161953(v=sql.120).aspx 59 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "impact": "Sanitize user input may require changes to application code or database object syntax. These changes can require applications or databases to be taken temporarily off-line. Any change to TSQL or application code should be thoroughly tested in testing environment before production implementation.   58 | P a g e",
    "references": "1. https://www.owasp.org/index.php/SQL_Injection 2. http://msdn.microsoft.com/en-us/library/ms161953(v=sql.120).aspx 59 | P a g e",
    "function_names": [
      "database_client_input_validation_enabled",
      "database_client_input_type_checked",
      "database_client_input_length_validated",
      "database_client_input_format_verified",
      "database_client_input_range_checked",
      "application_user_input_sanitization_enabled",
      "application_user_input_type_checked",
      "application_user_input_length_validated",
      "application_user_input_format_verified",
      "application_user_input_range_checked",
      "database_server_input_validation_enabled",
      "database_server_input_sanitization_required"
    ]
  },
  {
    "id": "6.2",
    "title": "Set the 'CLR Assembly Permission Set' to SAFE_ACCESS for All CLR Assemblies",
    "assessment": "Scored",
    "description": "Setting CLR Assembly Permission Sets to SAFE_ACCESS will prevent assemblies from accessing external system resources such as files, the network, environment variables, or the registry.",
    "rationale": "Assemblies with EXTERNAL_ACCESS or UNSAFE permission sets can be used to access sensitive areas of the operating system, steal and/or transmit data and alter the state and other protection measures of the underlying Windows Operating System. Assemblies which are Microsoft-created (is_user_defined = 0) are excluded from this check as they are required for overall system functionality.",
    "audit": "Execute the following SQL statement: SELECT name, permission_set_desc FROM sys.assemblies where is_user_defined = 1; All the returned assemblies should show SAFE_ACCESS in the permission_set_desc column.",
    "remediation": "ALTER ASSEMBLY assembly_name WITH PERMISSION_SET = SAFE; Impact: The remediation measure should first be tested within a test environment prior to production to ensure the assembly still functions as designed with SAFE permission setting. Default Value: SAFE permission is set by default. 60 | P a g e References: 1. http://msdn.microsoft.com/en-us/library/ms345101(v=sql.120).aspx 2. http://msdn.microsoft.com/en-us/library/ms189790(v=sql.120).aspx 3. http://msdn.microsoft.com/en-us/library/ms186711(v=sql.120).aspx 7 Encryption This setting contains recommendations pertaining to encryption-related aspects of MS SQL. 61 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "impact": "The remediation measure should first be tested within a test environment prior to production to ensure the assembly still functions as designed with SAFE permission setting. Default Value: SAFE permission is set by default. 60 | P a g e",
    "references": "1. http://msdn.microsoft.com/en-us/library/ms345101(v=sql.120).aspx 2. http://msdn.microsoft.com/en-us/library/ms189790(v=sql.120).aspx 3. http://msdn.microsoft.com/en-us/library/ms186711(v=sql.120).aspx 7 Encryption This setting contains recommendations pertaining to encryption-related aspects of MS SQL. 61 | P a g e",
    "function_names": [
      "sql_server_clr_assembly_safe_access_enabled",
      "sql_server_clr_assembly_permission_set_safe_access",
      "sql_server_clr_assembly_external_access_restricted",
      "sql_server_clr_assembly_resource_access_disabled",
      "sql_server_clr_assembly_safe_access_required"
    ]
  },
  {
    "id": "7.1",
    "title": "Ensure Symmetric Key encryption algorithm is AES_128 or higher in non-system databases",
    "assessment": "Scored",
    "description": "Per the Microsoft Best Practices, only the SQL Server AES algorithm options, AES_128, AES_192, and AES_256, should be used for a symmetric key encryption algorithm.",
    "rationale": "The following algorithms (as referred to by SQL Server) are considered weak or deprecated and should no longer be used in SQL Server: DES, DESX, RC2, RC4, RC4_128. Many organizations may accept the Triple DES algorithms (TDEA) which use keying options 1 (3 key aka 3TDEA) or keying option 2 (2 key aka 2TDEA). In SQL Server, these are referred to as TRIPLE_DES_3KEY and TRIPLE_DES respectively. Additionally, the SQL Server algorithm named DESX is actually the same implementation as the TRIPLE_DES_3KEY option. However, using the DESX identifier as the algorithm type has been deprecated and its usage is now discouraged.",
    "audit": "Run the following code for each individual user database: USE [dbname] GO SELECT db_name() AS Database_Name, name AS Key_Name FROM sys.symmetric_keys WHERE algorithm_desc NOT IN ('AES_128','AES_192','AES_256') AND db_id() > 4; GO For compliance, no rows should be returned.",
    "remediation": "Refer to Microsoft SQL Server Books Online ALTER SYMMETRIC KEY entry: http://msdn.microsoft.com/en-US/library/ms189440.aspx Impact: Eliminates use of weak and deprecated algorithms, which may put a system at higher risk of an attacker breaking the key. 62 | P a g e Encrypted data cannot be compressed, but compressed data can be encrypted. If you use compression, you should compress data before encrypting it. Default Value: none 63 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "impact": "Eliminates use of weak and deprecated algorithms, which may put a system at higher risk of an attacker breaking the key. 62 | P a g e Encrypted data cannot be compressed, but compressed data can be encrypted. If you use compression, you should compress data before encrypting it. Default Value: none 63 | P a g e",
    "function_names": [
      "sql_server_symmetric_key_aes_128_or_higher",
      "sql_server_database_symmetric_key_strong_encryption",
      "sql_server_non_system_db_symmetric_key_aes_min_128",
      "sql_server_symmetric_key_encryption_algorithm_compliant",
      "sql_server_database_symmetric_key_secure_algorithm"
    ]
  },
  {
    "id": "7.2",
    "title": "Ensure asymmetric key size is greater than or equal to 2048 in non- system databases",
    "assessment": "Scored",
    "description": "Microsoft Best Practices recommend to use at least a 2048-bit encryption algorithm for asymmetric keys.",
    "rationale": "The RSA_2048 encryption algorithm for asymmetric keys in SQL Server is the highest bit- level provided and therefore the most secure available choice (other choices are RSA_512 and RSA_1024).",
    "audit": "Run the following code for each individual user database: USE [dbname] GO SELECT db_name() AS Database_Name, name AS Key_Name FROM sys.asymmetric_keys WHERE key_length < 2048 AND db_id() > 4; GO For compliance, no rows should be returned.",
    "remediation": "Refer to Microsoft SQL Server Books Online ALTER ASYMMETRIC KEY entry: http://msdn.microsoft.com/en-us/library/ms187311.aspx Impact: The higher-bit level may result in slower performance, but reduces the likelihood of an attacker breaking the key. Encrypted data cannot be compressed, but compressed data can be encrypted. If you use compression, you should compress data before encrypting it. Default Value: none 64 | P a g e 8 Appendix: Additional Considerations This appendix discusses possible configuration options for which no recommendation is being given. 65 | P a g e",
    "profile_applicability": "  Level 1 - Database Engine",
    "impact": "The higher-bit level may result in slower performance, but reduces the likelihood of an attacker breaking the key. Encrypted data cannot be compressed, but compressed data can be encrypted. If you use compression, you should compress data before encrypting it. Default Value: none 64 | P a g e 8 Appendix: Additional Considerations This appendix discusses possible configuration options for which no recommendation is being given. 65 | P a g e",
    "function_names": [
      "sql_database_asymmetric_key_min_2048",
      "database_asymmetric_key_size_compliant",
      "sql_non_system_database_key_size_2048",
      "database_key_asymmetric_min_2048_bits",
      "non_system_database_asymmetric_key_secure_size"
    ]
  },
  {
    "id": "8.1",
    "title": "SQL Server Browser Service",
    "assessment": "Not Scored",
    "description": "No recommendation is being given on disabling the SQL Server Browser service.",
    "rationale": "In the case of a default instance installation, the SQL Server Browser service is disabled by default. Unless there is a named instance on the same server, there is no typically reason for the SQL Server Browser service to be running. In this case it is strongly suggested that the SQL Server Browser service remain disabled. When it comes to named instances, given that a security scan can fingerprint a SQL Server listening on any port, it's therefore of limited benefit to disable the SQL Server Browser service . However, if all connections against the named instance are via applications and are not visible to end users, then configuring the named instance to listening on a static port, disabling the SQL Server Browser service, and configuring the apps to connect to the specified port should be the direction taken. This follows the general practice of reducing the surface area, especially for an unneeded feature. On the other hand, if end users are directly connecting to databases on the instance, then typically having them use ServerName\\InstanceName is best. This requires the SQL Server Browser service to be running. Disabling the SQL Server Browser service would mean the end users would have to remember port numbers for the instances. When they don't that will generate service calls to IT staff. Given the limited benefit of disabling the service, the trade-off is probably not worth it, meaning it makes more business sense to leave the SQL Server Browser service enabled.",
    "audit": "[This section intentionally left blank.]",
    "remediation": "[This section intentionally left blank.]  66 | P a g e Impact: [This section intentionally left blank.] Default Value: The SQL Server Browser service is disabled if only a default instance is installed on the server. If a named instance is installed, the default value is for the SQL Server Browser service to be configured as Automatic for startup.  Control Set Correctly Yes No 1 Installation, Updates and Patches 1.1 Install the Latest SQL Server Service Packs and Hotfixes (Not Scored)   1.2 Install on dedicated single-function member servers (Not Scored)   2 Surface Area Reduction 2.1 Set the 'Ad Hoc Distributed Queries' Server Configuration Option to 0 (Scored)   2.2 Set the 'CLR Enabled' Server Configuration Option to 0 (Scored)   2.3 Set the 'Cross DB Ownership Chaining' Server Configuration Option to 0 (Scored)   2.4 Set the 'Database Mail XPs' Server Configuration Option to 0 (Scored)   2.5 Set the 'Ole Automation Procedures' Server Configuration Option to 0 (Scored)   2.6 Set the 'Remote Access' Server Configuration Option to 0 (Scored)   2.7 Set the 'Remote Admin Connections' Server Configuration Option to 0 (Scored)   2.8 Set the 'Scan For Startup Procs' Server Configuration Option to 0 (Scored)   2.9 Set the 'Trustworthy' Database Property to Off (Scored)   2.10 Disable Unnecessary SQL Server Protocols (Not Scored)   2.11 Configure SQL Server to use non-standard ports (Not Scored)   2.12 Set the 'Hide Instance' option to 'Yes' for Production SQL Server instances (Scored)   2.13 Disable the 'sa' Login Account (Scored)   2.14 Rename the 'sa' Login Account (Scored)   2.15 Set the 'xp_cmdshell' Server Configuration Option to 0 (Scored)   2.16 Set AUTO_CLOSE OFF on contained databases (Scored)   2.17 Verify No Login Has the Name 'sa' (Scored)   67 | P a g e 3 Authentication and Authorization 3.1 Set The 'Server Authentication' Property To Windows Authentication mode (Scored)   3.2 Revoke CONNECT permissions on the 'guest user' within all SQL Server databases excluding the master, msdb and tempdb (Scored)   3.3 Drop Orphaned Users From SQL Server Databases (Scored)   3.4 Do not use SQL Authentication in contained databases (Scored)   4 Password Policies 4.1 Set the 'MUST_CHANGE' Option to ON for All SQL Authenticated Logins (Not Scored)   4.2 Set the 'CHECK_EXPIRATION' Option to ON for All SQL Authenticated Logins Within the Sysadmin Role (Scored)   4.3 Set the 'CHECK_POLICY' Option to ON for All SQL Authenticated Logins (Scored)   5 Auditing and Logging 5.1 Set the 'Maximum number of error log files' setting to greater than or equal to 12 (Not Scored)   5.2 Set the 'Default Trace Enabled' Server Configuration Option to 1 (Scored)   5.3 Set 'Login Auditing' to failed logins (Not Scored)   5.4 Use SQL Server Audit to capture both failed and successful logins (Not Scored)   6 Application Development 6.1 Sanitize Database and Application User Input (Not Scored)   6.2 Set the 'CLR Assembly Permission Set' to SAFE_ACCESS for All CLR Assemblies (Scored)   7 Encryption 7.1 Ensure Symmetric Key encryption algorithm is AES_128 or higher in non-system databases (Scored)   7.2 Ensure asymmetric key size is greater than or equal to 2048 in non-system databases (Scored)   8 Appendix: Additional Considerations 8.1 SQL Server Browser Service (Not Scored)    68 | P a g e  Appendix: Change History Date Version Changes for this version 12-17-2014 1.0.0 Initial Release 10-09-2015 1.1.0 MSSQL Benchmark - Recommend Changing 5.3 to Leverage SQL Server Audit. Ticket #125 10-09-2015 1.1.0 Review and update links in references to ensure the point to the correct SQL version docs. Ticket #127 10-09-2015 1.1.0 Reduce complexity of Audit query in Section 4.2. Ticket #134 10-09-2015 1.1.0 Reduce complexity of Audit query in Section 4.3. Ticket # 135 10-09-2015 1.1.0 Create new Recommendation to verify no login has the name sa. Ticket #137 10-09-2015 1.1.0 Add Clarification to Recommendation 6.2. Ticket #138",
    "profile_applicability": "  Level 1 - Database Engine",
    "impact": "[This section intentionally left blank.] Default Value: The SQL Server Browser service is disabled if only a default instance is installed on the server. If a named instance is installed, the default value is for the SQL Server Browser service to be configured as Automatic for startup.  Control Set Correctly Yes No 1 Installation, Updates and Patches 1.1 Install the Latest SQL Server Service Packs and Hotfixes (Not Scored)   1.2 Install on dedicated single-function member servers (Not Scored)   2 Surface Area Reduction 2.1 Set the 'Ad Hoc Distributed Queries' Server Configuration Option to 0 (Scored)   2.2 Set the 'CLR Enabled' Server Configuration Option to 0 (Scored)   2.3 Set the 'Cross DB Ownership Chaining' Server Configuration Option to 0 (Scored)   2.4 Set the 'Database Mail XPs' Server Configuration Option to 0 (Scored)   2.5 Set the 'Ole Automation Procedures' Server Configuration Option to 0 (Scored)   2.6 Set the 'Remote Access' Server Configuration Option to 0 (Scored)   2.7 Set the 'Remote Admin Connections' Server Configuration Option to 0 (Scored)   2.8 Set the 'Scan For Startup Procs' Server Configuration Option to 0 (Scored)   2.9 Set the 'Trustworthy' Database Property to Off (Scored)   2.10 Disable Unnecessary SQL Server Protocols (Not Scored)   2.11 Configure SQL Server to use non-standard ports (Not Scored)   2.12 Set the 'Hide Instance' option to 'Yes' for Production SQL Server instances (Scored)   2.13 Disable the 'sa' Login Account (Scored)   2.14 Rename the 'sa' Login Account (Scored)   2.15 Set the 'xp_cmdshell' Server Configuration Option to 0 (Scored)   2.16 Set AUTO_CLOSE OFF on contained databases (Scored)   2.17 Verify No Login Has the Name 'sa' (Scored)   67 | P a g e 3 Authentication and Authorization 3.1 Set The 'Server Authentication' Property To Windows Authentication mode (Scored)   3.2 Revoke CONNECT permissions on the 'guest user' within all SQL Server databases excluding the master, msdb and tempdb (Scored)   3.3 Drop Orphaned Users From SQL Server Databases (Scored)   3.4 Do not use SQL Authentication in contained databases (Scored)   4 Password Policies 4.1 Set the 'MUST_CHANGE' Option to ON for All SQL Authenticated Logins (Not Scored)   4.2 Set the 'CHECK_EXPIRATION' Option to ON for All SQL Authenticated Logins Within the Sysadmin Role (Scored)   4.3 Set the 'CHECK_POLICY' Option to ON for All SQL Authenticated Logins (Scored)   5 Auditing and Logging 5.1 Set the 'Maximum number of error log files' setting to greater than or equal to 12 (Not Scored)   5.2 Set the 'Default Trace Enabled' Server Configuration Option to 1 (Scored)   5.3 Set 'Login Auditing' to failed logins (Not Scored)   5.4 Use SQL Server Audit to capture both failed and successful logins (Not Scored)   6 Application Development 6.1 Sanitize Database and Application User Input (Not Scored)   6.2 Set the 'CLR Assembly Permission Set' to SAFE_ACCESS for All CLR Assemblies (Scored)   7 Encryption 7.1 Ensure Symmetric Key encryption algorithm is AES_128 or higher in non-system databases (Scored)   7.2 Ensure asymmetric key size is greater than or equal to 2048 in non-system databases (Scored)   8 Appendix: Additional Considerations 8.1 SQL Server Browser Service (Not Scored)    68 | P a g e  Appendix: Change History Date Version Changes for this version 12-17-2014 1.0.0 Initial Release 10-09-2015 1.1.0 MSSQL Benchmark - Recommend Changing 5.3 to Leverage SQL Server Audit. Ticket #125 10-09-2015 1.1.0 Review and update links in references to ensure the point to the correct SQL version docs. Ticket #127 10-09-2015 1.1.0 Reduce complexity of Audit query in Section 4.2. Ticket #134 10-09-2015 1.1.0 Reduce complexity of Audit query in Section 4.3. Ticket # 135 10-09-2015 1.1.0 Create new Recommendation to verify no login has the name sa. Ticket #137 10-09-2015 1.1.0 Add Clarification to Recommendation 6.2. Ticket #138",
    "function_names": [
      "sql_server_browser_service_disabled",
      "sql_server_browser_service_unnecessary_removed",
      "sql_server_browser_service_secure_config",
      "sql_server_browser_service_network_restricted",
      "sql_server_browser_service_access_controlled"
    ]
  }
]
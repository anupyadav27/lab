[
  {
    "id": "1.1",
    "title": "Install the Latest SQL Server Service Packs and Hotfixes",
    "assessment": "Scored",
    "description": "SQL Server patches contain program updates that fix security and product functionality issues found in the software. These patches can be installed with a hotfix which is a single patch, a cumulative update which is a small group of patches or a service pack which is a large collection of patches. The SQL Server version and patch levels should be the most recent compatible with the organizations' operational needs",
    "rationale": "Using the most recent SQL Server software, along with all applicable patches can help limit the possibilities for vulnerabilities in the software, the installation version and/or patches applied during setup should be established according to the needs of the organization.",
    "audit": "To determine your SQL Server service pack level, run the following code snippet. SELECT SERVERPROPERTY('ProductLevel') as SP_installed, SERVERPROPERTY('ProductVersion') as Version; First column returns the installed Service Pack level, the second is the exact build number.",
    "remediation": "Identify the current version and patch level of your SQL Server instances and ensure they contain the latest security fixes.  Make sure to test these fixes in your test environments before updating production instances.  11 | P a g e The most recent SQL Server patches can be found here: Hotfixes and Cumulative updates: http://blogs.msdn.com/b/sqlreleaseservices/ Service Packs: http://support.microsoft.com/kb/968382 Default Value: Service packs and patches are not installed by default. References: 1. http://support.microsoft.com/sp 2. http://support.microsoft.com/kb/968382",
    "function_names": [
      "sql_server_instance_latest_service_pack_installed",
      "sql_server_instance_latest_hotfix_installed",
      "sql_server_instance_latest_cumulative_update_installed",
      "sql_server_instance_patch_level_current",
      "sql_server_instance_version_compatible",
      "sql_server_instance_security_patches_applied",
      "sql_server_instance_functionality_patches_applied",
      "sql_server_instance_patch_compliance_verified"
    ],
    "references": "1. http://support.microsoft.com/sp 2. http://support.microsoft.com/kb/968382"
  },
  {
    "id": "1.2",
    "title": "Install on dedicated single-function member servers",
    "assessment": "Not Scored",
    "description": "It is recommended that SQL Server software be installed on a dedicated server.  This architectural consideration affords security flexibility in that the database server can be placed on a separate subnet allowing access only from particular hosts and over particular protocols.  Degrees of availability are easier to achieve as well - over time, an enterprise can move from a single database server to a failover to a cluster using load balancing or to some combination thereof.",
    "rationale": "It is easier to manage (i.e. reduce) the attack surface of the server hosting SQL Server software if the only surfaces to consider are the underlying operating system, SQL Server itself, and any security/operational tooling that may additionally be installed.  As noted in the description, availability can be more easily addressed if the database is on a dedicated server.",
    "audit": "Ensure that no other roles are enabled for the underlying operating system and that no excess tooling is installed, per enterprise policy.   12 | P a g e",
    "remediation": "Uninstall excess tooling and/or remove unnecessary roles from the underlying operating system. Impact: It is difficult to see any reasonably adverse impact to making this architectural change, once the costs of making the change have been paid.  Custom applications may need to be modified to accommodate database connections over the wire rather than on the host (i.e. using TCP/IP instead of Named Pipes).  Additional hardware and operating system licenses may be required to make these architectural changes. 2 Surface Area Reduction SQL Server offers various configuration options, some of them can be controlled by the sp_configure stored procedures. This section contains the listing of the corresponding recommendations.",
    "function_names": [
      "compute_sql_server_dedicated_host",
      "compute_sql_server_single_function",
      "compute_sql_server_isolated_subnet",
      "compute_sql_server_restricted_access",
      "compute_sql_server_high_availability_enabled",
      "compute_sql_server_failover_configured",
      "compute_sql_server_load_balancing_enabled"
    ],
    "impact": "It is difficult to see any reasonably adverse impact to making this architectural change, once the costs of making the change have been paid.  Custom applications may need to be modified to accommodate database connections over the wire rather than on the host (i.e. using TCP/IP instead of Named Pipes).  Additional hardware and operating system licenses may be required to make these architectural changes. 2 Surface Area Reduction SQL Server offers various configuration options, some of them can be controlled by the sp_configure stored procedures. This section contains the listing of the corresponding recommendations."
  },
  {
    "id": "2.1",
    "title": "Set the 'Ad Hoc Distributed Queries' Server Configuration Option to 0",
    "assessment": "Scored",
    "description": "Ad Hoc Distributed Queries Allow users to query data and execute statements on external data sources. This functionality should be disabled.",
    "rationale": "This feature can be used to remotely access and exploit vulnerabilities on remote SQL Server instances and to run unsafe Visual Basic for Application functions.",
    "audit": "Run the following T-SQL command: SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'ad hoc distributed queries'; 13 | P a g e Both value columns must show 0.",
    "remediation": "Run the following T-SQL command: EXECUTE sp_configure 'show advanced options', 1; RECONFIGURE; EXECUTE sp_configure 'Ad Hoc Distributed Queries', 0; RECONFIGURE; GO EXECUTE sp_configure 'show advanced options', 0; RECONFIGURE;  Default Value: 0 (disabled) References: 1. http://msdn.microsoft.com/en-us/library/ms187569(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/ms187569(v=sql.100).aspx",
    "function_names": [
      "sql_server_ad_hoc_distributed_queries_disabled",
      "sql_server_distributed_queries_restricted",
      "sql_server_external_data_access_blocked",
      "sql_server_ad_hoc_queries_zero_value",
      "sql_server_remote_query_execution_disabled"
    ],
    "references": "1. http://msdn.microsoft.com/en-us/library/ms187569(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/ms187569(v=sql.100).aspx"
  },
  {
    "id": "2.2",
    "title": "Set the 'CLR Enabled' Server Configuration Option to 0",
    "assessment": "Scored",
    "description": "The CLR enabled option specifies whether user assemblies can be run by SQL Server.",
    "rationale": "Enabling use of CLR assemblies widens the attack surface of SQL Server and puts it at risk from both inadvertent and malicious assemblies.",
    "audit": "Run the following T-SQL command: SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use 14 | P a g e FROM sys.configurations WHERE name = 'clr enabled'; Both value columns must show 0.",
    "remediation": "Run the following T-SQL command: EXECUTE sp_configure 'clr enabled', 0; RECONFIGURE;  Default Value: By default, this option is disabled.",
    "function_names": [
      "sql_server_clr_enabled_disabled",
      "sql_server_user_assemblies_disabled",
      "sql_server_clr_integration_disabled",
      "sql_server_clr_0_setting",
      "sql_server_clr_disabled"
    ]
  },
  {
    "id": "2.3",
    "title": "Set the 'Cross DB Ownership Chaining' Server Configuration Option to 0",
    "assessment": "Scored",
    "description": "This option allows controlling cross-database ownership chaining across all databases.",
    "rationale": "This option allows a member of the db_owner role in a database to gain access to objects owned by a login in any other database, causing an unnecessary information disclosure.",
    "audit": "Run the following T-SQL command: SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'Cross db ownership chaining'; Both value columns must show 0. 15 | P a g e",
    "remediation": "Run the following T-SQL command: EXECUTE sp_configure 'Cross db ownership chaining', 0; RECONFIGURE; GO Default Value: 0 (disabled) References: 1. http://msdn.microsoft.com/en-us/library/ms188694(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/ms188694(v=sql.100).aspx",
    "function_names": [
      "sql_server_cross_db_ownership_chaining_disabled",
      "sql_server_database_ownership_chaining_restricted",
      "sql_server_cross_db_access_disabled",
      "sql_server_ownership_chaining_disabled_all_databases",
      "sql_server_cross_db_ownership_chaining_zero_value"
    ],
    "references": "1. http://msdn.microsoft.com/en-us/library/ms188694(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/ms188694(v=sql.100).aspx"
  },
  {
    "id": "2.4",
    "title": "Set the 'Database Mail XPs' Server Configuration Option to 0",
    "assessment": "Scored",
    "description": "Enables the generation and transmission of email messages from SQL Server.",
    "rationale": "Disabling Database Mail reduces the SQL Server surface, eliminates a DOS attack vector and channel to exfiltrate data from the database server to a remote host.",
    "audit": "Run the following T-SQL command: SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'Database Mail XPs'; Both value columns must show 0.  16 | P a g e",
    "remediation": "Run the following T-SQL command: EXECUTE sp_configure 'show advanced options', 1; RECONFIGURE; EXECUTE sp_configure 'Database Mail XPs', 0; RECONFIGURE; GO EXECUTE sp_configure 'show advanced options', 0; RECONFIGURE; Default Value: By default, this option is disabled.",
    "function_names": [
      "sql_server_database_mail_xps_disabled",
      "sql_server_database_mail_xps_set_to_zero",
      "sql_server_configuration_option_disabled",
      "sql_server_mail_feature_disabled",
      "sql_server_xps_configuration_disabled"
    ]
  },
  {
    "id": "2.5",
    "title": "Set the 'Ole Automation Procedures' Server Configuration Option to 0",
    "assessment": "Scored",
    "description": "Extended stored procedures that allow SQL Server users to execute functions external to SQL Server.",
    "rationale": "Enabling this option will increase the attack surface of SQL Server and allow users to execute functions in the security context of SQL Server.",
    "audit": "SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'Ole Automation Procedures';",
    "remediation": "Run the following T-SQL command: 17 | P a g e EXECUTE sp_configure 'show advanced options', 1; RECONFIGURE; EXECUTE sp_configure 'Ole Automation Procedures', 0; RECONFIGURE; GO EXECUTE sp_configure 'show advanced options', 0; RECONFIGURE;  Default Value: 0 (disabled) References: 1. http://msdn.microsoft.com/en-us/library/ms191188(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/ms191188(v=sql.100).aspx",
    "function_names": [
      "sql_server_configuration_ole_automation_disabled",
      "sql_server_ole_automation_procedures_disabled",
      "sql_server_configuration_ole_automation_zero",
      "sql_server_ole_automation_zero_value",
      "sql_server_configuration_ole_automation_procedures_disabled"
    ],
    "references": "1. http://msdn.microsoft.com/en-us/library/ms191188(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/ms191188(v=sql.100).aspx"
  },
  {
    "id": "2.6",
    "title": "Set the 'Remote Access' Server Configuration Option to 0",
    "assessment": "Scored",
    "description": "Enables the execution of local stored procedures on remote servers or remote stored procedures on local server.",
    "rationale": "Functionality can be abused to launch a Denial-of-Service (DoS) attack on remote servers by off-loading query processing to a target.",
    "audit": "Run the following T-SQL command: SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'Remote access'; Both value columns must show 0.  18 | P a g e",
    "remediation": "Run the following T-SQL command: EXECUTE sp_configure 'show advanced options', 1; RECONFIGURE; EXECUTE sp_configure 'Remote access', 0; RECONFIGURE; GO EXECUTE sp_configure 'show advanced options', 0; RECONFIGURE;  Default Value: 1 (enabled) References: 1. http://msdn.microsoft.com/en-us/library/ms187660(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/ms187660(v=sql.100).aspx",
    "function_names": [
      "sql_server_remote_access_disabled",
      "sql_server_remote_access_config_zero",
      "sql_server_stored_procedure_remote_execution_disabled",
      "sql_server_remote_access_option_disabled",
      "sql_server_remote_procedure_call_disabled"
    ],
    "references": "1. http://msdn.microsoft.com/en-us/library/ms187660(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/ms187660(v=sql.100).aspx"
  },
  {
    "id": "2.7",
    "title": "Set the 'Remote Admin Connections' Server Configuration Option to 0",
    "assessment": "Scored",
    "description": "This option defines whether the Dedicated Admin Connection (DAC) is listening on localhost only or on the SQL Server IP address.",
    "rationale": "The Dedicated Admin Connection is a powerful database feature that allows connected users to circumvent the SQL Server abstraction layer and have direct access to several system tables which can be used to conduct malicious activities. This feature should be restricted to local administration only to reduce exposure.",
    "audit": "Run the following T-SQL command: 19 | P a g e SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'Remote admin connections'; Both value columns must show 1 on clustered installations.",
    "remediation": "Run the following T-SQL command on clustered installations: EXECUTE sp_configure 'show advanced options', 1; RECONFIGURE; EXECUTE sp_configure 'Remote admin connections', 1; RECONFIGURE; GO EXECUTE sp_configure 'show advanced options', 0; RECONFIGURE;  Default Value: 0 (disabled) References: 1. http://msdn.microsoft.com/en-us/library/ms190468(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/ms190468(v=sql.100).aspx",
    "function_names": [
      "sql_server_admin_connection_localhost_only",
      "sql_server_remote_admin_connections_disabled",
      "sql_server_dac_localhost_restricted",
      "sql_server_admin_connection_no_external_access",
      "sql_server_remote_admin_listener_disabled"
    ],
    "references": "1. http://msdn.microsoft.com/en-us/library/ms190468(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/ms190468(v=sql.100).aspx"
  },
  {
    "id": "2.8",
    "title": "Set the 'Scan For Startup Procs' Server Configuration Option to 0",
    "assessment": "Scored",
    "description": "This option causes SQL Server to scan for and automatically run all stored procedures that are set to execute upon service startup.   20 | P a g e",
    "rationale": "Enforcing this control reduces the threat of an entity leveraging these facilities for malicious purposes.",
    "audit": "Run the following T-SQL command: SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'Scan for startup procs'; Both value columns must show 0.",
    "remediation": "Run the following T-SQL command: EXECUTE sp_configure 'show advanced options', 1; RECONFIGURE; EXECUTE sp_configure 'Scan for startup procs', 0; RECONFIGURE; GO EXECUTE sp_configure 'show advanced options', 0; RECONFIGURE;  Impact: Setting Scan for Startup Procedures to 0 will prevent certain audit traces and other commonly used monitoring SPs from re-starting on start up. Default Value: 0 (disabled) References: 1. http://msdn.microsoft.com/en-us/library/ms179460(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/ms179460(v=sql.100).aspx 21 | P a g e",
    "function_names": [
      "sql_server_startup_procs_scan_disabled",
      "sql_server_auto_startup_procs_disabled",
      "sql_server_startup_procs_scan_zero",
      "sql_server_startup_procs_scan_setting_disabled",
      "sql_server_startup_procs_auto_execution_disabled"
    ],
    "impact": "Setting Scan for Startup Procedures to 0 will prevent certain audit traces and other commonly used monitoring SPs from re-starting on start up. Default Value: 0 (disabled)",
    "references": "1. http://msdn.microsoft.com/en-us/library/ms179460(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/ms179460(v=sql.100).aspx 21 | P a g e"
  },
  {
    "id": "2.9",
    "title": "Set the 'Trustworthy' Database Property to Off",
    "assessment": "Scored",
    "description": "The TRUSTWORTHY option allows database objects to access objects in other database under certain circumstances.",
    "rationale": "Provides protection from malicious CLR assemblies or extended procedures.",
    "audit": "Run the following T-SQL query to list the database with a Trustworthy database property value of ON: SELECT name FROM sys.databases WHERE is_trustworthy_on = 1 AND name != 'msdb' AND state = 0;",
    "remediation": "Execute the following statement against the database: ALTER DATABASE <dbname> SET TRUSTWORTHY OFF; Default Value: OFF References: 1. http://msdn.microsoft.com/en-us/library/ms187861(v=sql.100).aspx 2. http://msdn.microsoft.com/en-us/library/ms187861(v=sql.105).aspx 22 | P a g e",
    "function_names": [
      "sql_server_database_trustworthy_disabled",
      "sql_database_trustworthy_property_off",
      "database_trustworthy_setting_disabled",
      "sql_trustworthy_feature_disabled",
      "database_trustworthy_access_restricted"
    ],
    "references": "1. http://msdn.microsoft.com/en-us/library/ms187861(v=sql.100).aspx 2. http://msdn.microsoft.com/en-us/library/ms187861(v=sql.105).aspx 22 | P a g e"
  },
  {
    "id": "2.10",
    "title": "Disable Unnecessary SQL Server Protocols",
    "assessment": "Not Scored",
    "description": "SQL Server supports Shared Memory, Named Pipes, TCP/IP and VIA protocols. However, SQL Server should be configured to use the bare minimum required based on the organization's needs.",
    "rationale": "Using fewer protocols minimizes the attack surface of SQL Server and in some cases can protect it from remote attacks.",
    "audit": "Open SQL Server Configuration Manager; go to the SQL Server Network Configuration.  Ensure that only required protocols are enabled.",
    "remediation": "Open SQL Server Configuration Manager; go to the SQL Server Network Configuration.  Ensure that only required protocols are enabled. Disable protocols not necessary. Impact: The Database Engine must be stopped and restarted for the change to take effect. Default Value: By default, TCP/IP and Shared Memory protocols are enabled on all commerical SQL Server 2008 instances. References: 1. http://msdn.microsoft.com/en-us/library/ms191294(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/ms191294(v=sql.100).aspx 23 | P a g e",
    "function_names": [
      "sql_server_protocol_shared_memory_disabled",
      "sql_server_protocol_named_pipes_disabled",
      "sql_server_protocol_tcp_ip_enabled",
      "sql_server_protocol_via_disabled",
      "sql_server_protocol_unnecessary_disabled_all",
      "sql_server_protocol_minimal_required_enabled"
    ],
    "impact": "The Database Engine must be stopped and restarted for the change to take effect. Default Value: By default, TCP/IP and Shared Memory protocols are enabled on all commerical SQL Server 2008 instances.",
    "references": "1. http://msdn.microsoft.com/en-us/library/ms191294(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/ms191294(v=sql.100).aspx 23 | P a g e"
  },
  {
    "id": "2.11",
    "title": "Configure SQL Server to use non-standard ports",
    "assessment": "Not Scored",
    "description": "If enabled, the default SQL Server instance will be assigned a default port of TCP:1433 for TCP/IP communication.  Administrators can also configure named instances to use TCP:1433 for communication.  TCP:1433 is a widely known SQL Server port and this port assignment should be changed.",
    "rationale": "Using a non-default port helps protect the database from attacks directed to the default port.",
    "audit": "Open a powershell window and run the following command: PS C:\\>netstat -ano|select-string 1433.+listening This should return no lines. If any lines returned, check the process id in the last column if it's a SQL Server instance.",
    "remediation": "1. In SQL Server Configuration Manager, in the console pane, expand SQL Server Network Configuration, expand Protocols for , and then double-click the TCP/IP or VIA protocol 2. In the TCP/IP Properties dialog box, on the IP Addresses tab, several IP addresses appear in the format IP1, IP2, up to IPAll. One of these is for the IP address of the loopback adapter, 127.0.0.1. Additional IP addresses appear for each IP Address on the computer 3. Change the TCP Port field from 1433 to another non-standard port or leave the TCP Port field empty and set the TCP Dynamic Ports value to 0 to enable dynamic port assignment and then click OK. 4. In the console pane, click SQL Server Services. 5. In the details pane, right-click SQL Server () and then click Restart, to stop and restart SQL Server. 24 | P a g e Impact: Changing the default port will force DAC (Default Administrator Connection) to listen on a random port. Also, it might make benign applications, such as application firewalls, require special configuration. Default Value: By default, default SQL Server instances listen on to TCP/IP traffic on TCP port 1433 and named instances use dynamic ports. References: 1. http://support.microsoft.com/kb/308091 2. http://msdn.microsoft.com/en-us/library/ms177440(v=sql.105).aspx 3. http://msdn.microsoft.com/en-us/library/ms177440(v=sql.100).aspx",
    "function_names": [
      "sql_server_instance_non_standard_port",
      "sql_server_instance_port_not_1433",
      "sql_server_named_instance_custom_port",
      "sql_server_tcp_port_changed_from_default",
      "sql_server_communication_non_default_port"
    ],
    "impact": "Changing the default port will force DAC (Default Administrator Connection) to listen on a random port. Also, it might make benign applications, such as application firewalls, require special configuration. Default Value: By default, default SQL Server instances listen on to TCP/IP traffic on TCP port 1433 and named instances use dynamic ports.",
    "references": "1. http://support.microsoft.com/kb/308091 2. http://msdn.microsoft.com/en-us/library/ms177440(v=sql.105).aspx 3. http://msdn.microsoft.com/en-us/library/ms177440(v=sql.100).aspx"
  },
  {
    "id": "2.12",
    "title": "Set the 'Hide Instance' option to 'Yes' for Production SQL Server instances",
    "assessment": "Scored",
    "description": "SQL Server instances within production environments should be designated as hidden to prevent advertisement by the SQL Server Browser service.",
    "rationale": "Designating production SQL Server instances as hidden leads to a more secure installation because they cannot be enumerated.",
    "audit": "1. In SQL Server Configuration Manager, expand SQL Server Network Configuration, right-click Protocols for <server instance>, and then select Properties. 2. On the Flags tab, in the Hide Instance box, select Yes, and then click OK to close the dialog box. The change takes effect immediately for new connections.",
    "remediation": "1. In SQL Server Configuration Manager, expand SQL Server Network Configuration, right-click Protocols for <server instance>, and then select Properties. 25 | P a g e 2. On the Flags tab, in the Hide Instance box, select Yes, and then click OK to close the dialog box. The change takes effect immediately for new connections.  Default Value: By default, SQL Server instances are not hidden. References: 1. http://msdn.microsoft.com/en-us/library/ms179327(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/ms179327(v=sql.100).aspx",
    "function_names": [
      "sql_server_instance_hide_option_enabled",
      "sql_server_instance_hide_option_production",
      "sql_server_instance_production_hidden",
      "sql_server_instance_browser_service_disabled",
      "sql_server_instance_production_no_advertisement"
    ],
    "references": "1. http://msdn.microsoft.com/en-us/library/ms179327(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/ms179327(v=sql.100).aspx"
  },
  {
    "id": "2.13",
    "title": "Disable the 'sa' Login Account",
    "assessment": "Scored",
    "description": "The sa account is a widely known and often widely used SQL Server account with sysadmin privileges.",
    "rationale": "Enforcing this control reduces the probability of an attacker executing brute force attacks against a well-known principal.",
    "audit": "Use the following syntax to determine if the sa account is disabled. SELECT name, is_disabled FROM sys.server_principals WHERE sid = 0x01; An is_disabled value of 1 indicates the account is currently disabled.",
    "remediation": "Execute the following query: ALTER LOGIN sa DISABLE; 26 | P a g e Impact: It is not a good security practice to code applications or scripts to use the sa account. However, if this has been done disabling the sa account will prevent scripts and applications for authenticating to the database server and executing required tasks or functions. Default Value: By default the 'sa' login account is enabled. References: 1. http://msdn.microsoft.com/en-us/library/ms188786(v=sql.100).aspx 2. http://msdn.microsoft.com/en-us/library/ms188786(v=sql.105).aspx 3. http://msdn.microsoft.com/en-us/library/ms189828(v=sql.100).aspx 4. http://msdn.microsoft.com/en-us/library/ms189828(v=sql.105).aspx",
    "function_names": [
      "sql_server_login_sa_disabled",
      "sql_server_account_sa_admin_privileges_removed",
      "sql_server_user_sa_no_admin_access",
      "sql_server_login_sa_sysadmin_privileges_revoked",
      "sql_server_account_sa_default_credentials_disabled"
    ],
    "impact": "It is not a good security practice to code applications or scripts to use the sa account. However, if this has been done disabling the sa account will prevent scripts and applications for authenticating to the database server and executing required tasks or functions. Default Value: By default the 'sa' login account is enabled.",
    "references": "1. http://msdn.microsoft.com/en-us/library/ms188786(v=sql.100).aspx 2. http://msdn.microsoft.com/en-us/library/ms188786(v=sql.105).aspx 3. http://msdn.microsoft.com/en-us/library/ms189828(v=sql.100).aspx 4. http://msdn.microsoft.com/en-us/library/ms189828(v=sql.105).aspx"
  },
  {
    "id": "2.14",
    "title": "Rename the 'sa' Login Account",
    "assessment": "Scored",
    "description": "The sa account is a widely known and often widely used SQL Server account with sysadmin privileges.",
    "rationale": "It is more difficult to launch password-guessing and brute-force attacks against the sa account if the username is not known.",
    "audit": "Use the following syntax to determine if the sa account is renamed. SELECT name FROM sys.server_principals WHERE sid = 0x01; A name of sa indicates the account has not been renamed.  27 | P a g e",
    "remediation": "Replace the different_user value within the below syntax and execute rename the sa login. ALTER LOGIN sa WITH NAME = different_user;  Impact: It is not a good security practice to code applications or scripts to use the sa account. However, if this has been done renaming the sa account will prevent scripts and applications for authenticating to the database server and executing required tasks or functions. Default Value: By default the 'sa'account name is 'sa' References: 1. http://msdn.microsoft.com/en-us/library/ms144284.aspx 3 Extended Stored Procedures Extended stored procedures are to be removed in a future version of SQL Server. Consider using CLR Integration instead. The following extended stored procedures should not be used by any application or maintenance script. Do not attempt to remove or assign DENY rule to any of these stored procedures. Doing so may result in an unsupported installation of SQL Server 2008.",
    "function_names": [
      "sql_server_login_sa_renamed",
      "sql_server_login_default_admin_disabled",
      "sql_server_login_sysadmin_privileges_restricted",
      "sql_server_login_built_in_accounts_renamed",
      "sql_server_login_high_privilege_accounts_renamed"
    ],
    "impact": "It is not a good security practice to code applications or scripts to use the sa account. However, if this has been done renaming the sa account will prevent scripts and applications for authenticating to the database server and executing required tasks or functions. Default Value: By default the 'sa'account name is 'sa'",
    "references": "1. http://msdn.microsoft.com/en-us/library/ms144284.aspx 3 Extended Stored Procedures Extended stored procedures are to be removed in a future version of SQL Server. Consider using CLR Integration instead. The following extended stored procedures should not be used by any application or maintenance script. Do not attempt to remove or assign DENY rule to any of these stored procedures. Doing so may result in an unsupported installation of SQL Server 2008."
  },
  {
    "id": "3.1",
    "title": "Revoke Execute on 'xp_availablemedia' to PUBLIC",
    "assessment": "Scored",
    "description": "Lists all available storage devices that may be written to.   28 | P a g e",
    "rationale": "Ensuring this procedure is disabled will prevent an attacker from viewing local available drives for directory and file enumeration. This procedure is currently leveraged by several automated SQL Injection tools.",
    "audit": "The following steps can be used to audit using SQL Server Management Studio: 1. In Object Explorer, navigate to the SQL Server instance and expand the path: Databases\\System Databases\\master\\Programmability\\Extended Stored Procedures\\System Extended Stored Procedures 2. Locate xp_availablemedia, right click and select Properties 3. Select the Permissions tab 4. If the 'public' entry does not exist within the Users or Roles listing the server is in compliance with the recommendation and you can halt further steps.  If the 'public' entry does exist proceed to step 5 5. Select the 'public' entry within the Users or Roles listing 6. If the Grant checkbox for the Execute permission is checked the Public role maintains Execute permission on the procedure and the listed remediation procedure should be followed. The following steps can be used to audit using Transact-SQL: select OBJECT_NAME(major_id) as 'extended_procedure', permission_name, 'PUBLIC' as 'to_principal' from sys.database_permissions where major_id = OBJECT_ID('xp_availablemedia') AND [type] = 'EX' AND grantee_principal_id = 0 Any record returned indicates the public role maintains execute permission on the procedure and the listed remediation procedure should be followed.",
    "remediation": "Revoke use by all general users on the SQL Server machine: REVOKE EXECUTE ON xp_availablemedia TO PUBLIC; Note: Server logins within the sysadmin role will retain use of this procedure. Default Value: By default, execute permissions for this extended stored procedure is not given to the public database role.  29 | P a g e References: 1. No references available as this is an undocumented extended stored procedure.",
    "function_names": [
      "sql_server_database_xp_availablemedia_public_revoked",
      "sql_server_xp_availablemedia_execute_restricted",
      "sql_server_stored_procedure_xp_availablemedia_public_disabled",
      "sql_server_xp_availablemedia_public_access_revoked",
      "sql_server_database_xp_availablemedia_execute_permission_removed"
    ],
    "references": "1. No references available as this is an undocumented extended stored procedure."
  },
  {
    "id": "3.2",
    "title": "Set the 'xp_cmdshell' option to disabled",
    "assessment": "Scored",
    "description": "The xp_cmdshell procedure allows an authenticated SQL Server user to execute operating- system command shell commands and return results as rows within the SQL client.",
    "rationale": "xp_cmdshell is commonly used by attackers to read or write data to/from the underlying Operating System of a database server.",
    "audit": "Run the following code snippet to determine if the xp_cmdshell system stored procedure is enabled: EXECUTE sp_configure 'show advanced options',1; RECONFIGURE WITH OVERRIDE; EXECUTE sp_configure 'xp_cmdshell'; A run value of 0 indicates that the xp_cmdshell option is disabled. If the option is enabled, run the following code snippet to disable this option: EXECUTE sp_configure 'show advanced options',1; RECONFIGURE WITH OVERRIDE; EXECUTE sp_configure 'xp_cmdshell',0; RECONFIGURE WITH OVERRIDE;      30 | P a g e",
    "remediation": "Run the following T-SQL command: EXECUTE sp_configure 'show advanced options', 1; RECONFIGURE; EXECUTE sp_configure 'Xp_cmdshell', 0; RECONFIGURE; GO EXECUTE sp_configure 'show advanced options', 0; RECONFIGURE;  Default Value: 0 (disabled) References: 1. http://msdn.microsoft.com/en-us/library/ms175046(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/ms175046(v=sql.100).aspx 3. http://msdn.microsoft.com/en-us/library/ms190693(v=sql.105).aspx 4. http://msdn.microsoft.com/en-us/library/ms190693(v=sql.100).aspx",
    "function_names": [
      "sql_server_database_xp_cmdshell_disabled",
      "sql_server_instance_xp_cmdshell_disabled",
      "sql_server_feature_xp_cmdshell_disabled",
      "sql_server_security_xp_cmdshell_disabled",
      "sql_server_configuration_xp_cmdshell_disabled"
    ],
    "references": "1. http://msdn.microsoft.com/en-us/library/ms175046(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/ms175046(v=sql.100).aspx 3. http://msdn.microsoft.com/en-us/library/ms190693(v=sql.105).aspx 4. http://msdn.microsoft.com/en-us/library/ms190693(v=sql.100).aspx"
  },
  {
    "id": "3.3",
    "title": "Revoke Execute on 'xp_dirtree' to PUBLIC",
    "assessment": "Scored",
    "description": "Returns a result set of the directory tree for a given directory path.",
    "rationale": "Ensuring this procedure is disabled will prevent an attacker from performing directory enumeration and listing files and folders to read or write data to / from.  This procedure is currently leveraged by several automated SQL Injection tools.",
    "audit": "The following steps can be used to audit using SQL Server Management Studio: 1. In Object Explorer, navigate to the SQL Server instance and expand the path: Databases\\System Databases\\master\\Programmability\\Extended Stored Procedures\\System Extended Stored Procedures 2. Locate xp_dirtree, right click and select Properties 31 | P a g e 3. Select the Permissions tab 4. If the 'public' entry does not exist within the Users or Roles listing the server is in compliance with the recommendation and you can halt further steps. If the 'public' entry does exist proceed to step 5 5. Select the 'public' entry within the Users or Roles listing 6. If the Grant checkbox for the Execute permission is checked the Public role maintains Execute permission on the procedure and the listed remediation procedure should be followed. The following steps can be used to audit using Transact-SQL: select OBJECT_NAME(major_id) as 'extended_procedure', permission_name, 'PUBLIC' as 'to_principal' from sys.database_permissions where major_id = OBJECT_ID('xp_dirtree') AND [type] = 'EX' AND grantee_principal_id = 0 Any record returned indicates the public role maintains execute permission on the procedure and the listed remediation procedure should be followed.",
    "remediation": "Revoke use by all general users on the SQL Server machine: REVOKE EXECUTE ON xp_dirtree TO PUBLIC; Note: Server logins within the sysadmin role will retain use of this procedure. Default Value: Execute permissions on this stored procedure are denied to the public role by default.",
    "function_names": [
      "sql_server_database_execute_permission_revoked",
      "sql_server_database_public_access_restricted",
      "sql_server_database_xp_dirtree_disabled",
      "sql_server_database_public_execute_removed",
      "sql_server_database_privilege_escalation_prevented"
    ]
  },
  {
    "id": "3.4",
    "title": "Revoke Execute on 'xp_enumgroups' to PUBLIC",
    "assessment": "Scored",
    "description": "This procedure provides a list of local Microsoft Windows groups or a list of global groups that are defined in a specified Windows machine.",
    "rationale": "Ensuring this procedure is disabled will limit an attacker\u2019s ability to identify the Windows groups present on the SQL Server machine.  This procedure is currently leveraged by several automated SQL Injection tools. 32 | P a g e",
    "audit": "The following steps can be used to audit using SQL Server Management Studio: 1. In Object Explorer, navigate to the SQL Server instance and expand the path: Databases\\System Databases\\master\\Programmability\\Extended Stored Procedures\\System Extended Stored Procedures 2. Locate xp_enumgroups, right click and select Properties 3. Select the Permissions tab 4. If the 'public' entry does not exist within the Users or Roles listing the server is in compliance with the recommendation and you can halt further steps. If the 'public' entry does exist proceed to step 5 5. Select the 'public' entry within the Users or Roles listing 6. If the Grant checkbox for the Execute permission is checked the Public role maintains Execute permission on the procedure and the listed remediation procedure should be followed. The following steps can be used to audit using Transact-SQL: select OBJECT_NAME(major_id) as 'extended_procedure', permission_name, 'PUBLIC' as 'to_principal' from sys.database_permissions where major_id = OBJECT_ID('xp_enumgroups') AND [type] = 'EX' AND grantee_principal_id = 0 Any record returned indicates the public role maintains execute permission on the procedure and the listed remediation procedure should be followed.",
    "remediation": "Revoke use by all general users on the SQL Server machine: REVOKE EXECUTE ON xp_enumgroups to PUBLIC; Note: Server logins within the sysadmin role will retain use of this procedure. Default Value: By default, execute permissions for this extended stored procedure is not given to the public database role.",
    "function_names": [
      "sql_server_database_public_execute_revoked",
      "sql_server_database_xp_enumgroups_public_restricted",
      "sql_server_database_public_permission_removed",
      "sql_server_database_xp_enumgroups_execute_disabled",
      "sql_server_database_public_execute_disabled"
    ]
  },
  {
    "id": "3.5",
    "title": "Revoke Execute on 'xp_fixeddrives' to PUBLIC",
    "assessment": "Scored",
    "description": "Returns a list of all hard drives on the machine and the space free in megabytes for each drive.",
    "rationale": "Ensuring this procedure is disabled will prevent an attacker from viewing local available drives for directory and file enumeration.",
    "audit": "The following steps can be used to audit using SQL Server Management Studio: 1. In Object Explorer, navigate to the SQL Server instance and expand the path: Databases\\System Databases\\master\\Programmability\\Extended Stored Procedures\\System Extended Stored Procedures 2. Locate xp_fixeddrives, right click and select Properties 3. Select the Permissions tab 4. If the 'public' entry does not exist within the Users or Roles listing the server is in compliance with the recommendation and you can halt further steps. If the 'public' entry does exist proceed to step 5 5. Select the 'public' entry within the Users or Roles listing 6. If the Grant checkbox for the Execute permission is checked the Public role maintains Execute permission on the procedure and the listed remediation procedure should be followed.  The following steps can be used to audit using Transact-SQL: select OBJECT_NAME(major_id) as 'extended_procedure', permission_name, 'PUBLIC' as 'to_principal' from sys.database_permissions where major_id = OBJECT_ID('xp_fixeddrives') AND [type] = 'EX' AND grantee_principal_id = 0 Any record returned indicates the public role maintains execute permission on the procedure and the listed remediation procedure should be followed.",
    "remediation": "Revoke use by all general users on the SQL Server machine: REVOKE EXECUTE ON xp_fixeddrives TO PUBLIC; Note: Server logins within the sysadmin role will retain use of this procedure. 34 | P a g e Default Value: By default, the public server group is given execute permissions to this stored procedure.",
    "function_names": [
      "sql_server_database_execute_permission_revoked",
      "sql_server_database_public_access_restricted",
      "sql_server_database_xp_fixeddrives_disabled",
      "sql_server_database_public_execute_removed",
      "sql_server_database_drive_info_protected"
    ]
  },
  {
    "id": "3.6",
    "title": "Revoke Execute on 'xp_servicecontrol' to PUBLIC",
    "assessment": "Scored",
    "description": "Can be used to start and stop windows services running on the SQL Server machine.",
    "rationale": "Can be used by a remote attacker to shutdown Windows services associated with Anti- virus products or firewalls to loosen the security posture of a database server.",
    "audit": "The following steps can be used to audit using SQL Server Management Studio: 1. In Object Explorer, navigate to the SQL Server instance and expand the path: Databases\\System Databases\\master\\Programmability\\Extended Stored Procedures\\System Extended Stored Procedures 2. Locate xp_servicecontrol, right click and select Properties 3. Select the Permissions tab 4. If the 'public' entry does not exist within the Users or Roles listing the server is in compliance with the recommendation and you can halt further steps. If the 'public' entry does exist proceed to step 5 5. Select the 'public' entry within the Users or Roles listing 6. If the Grant checkbox for the Execute permission is checked the Public role maintains Execute permission on the procedure and the listed remediation procedure should be followed. The following steps can be used to audit using Transact-SQL: select OBJECT_NAME(major_id) as 'extended_procedure', permission_name, 'PUBLIC' as 'to_principal' from sys.database_permissions where major_id = OBJECT_ID('xp_servicecontrol') AND [type] = 'EX' AND grantee_principal_id = 0 Any record returned indicates the public role maintains execute permission on the procedure and the listed remediation procedure should be followed.  35 | P a g e",
    "remediation": "Revoke use by all general us REVOKE EXECUTE ON xp_servicecontrol TO PUBLIC; Note: Server logins within the sysadmin role will retain use of this procedure Default Value: By default, the public role is given execute permissions to this extended stored procedure. References: 1. No references available as this is an undocumented extended stored procedure.",
    "function_names": [
      "sql_server_xp_servicecontrol_public_execute_revoked",
      "sql_server_xp_servicecontrol_public_access_restricted",
      "sql_server_xp_servicecontrol_execute_permission_removed",
      "sql_server_xp_servicecontrol_public_execute_disabled",
      "sql_server_xp_servicecontrol_public_execute_denied"
    ],
    "references": "1. No references available as this is an undocumented extended stored procedure."
  },
  {
    "id": "3.7",
    "title": "Revoke Execute on 'xp_subdirs' to PUBLIC",
    "assessment": "Scored",
    "description": "Lists all subdirectories listed for a given folder path.",
    "rationale": "Ensuring this procedure is disabled will prevent an attacker from performing directory enumeration and listing all subdirectories on the file system for a given directory path. This is information that an attacker would be able to make use of to determine where key OS files are located.",
    "audit": "The following steps can be used to audit using SQL Server Management Studio: 1. In Object Explorer, navigate to the SQL Server instance and expand the path: Databases\\System Databases\\master\\Programmability\\Extended Stored Procedures\\System Extended Stored Procedures 2. Locate xp_subdirs, right click and select Properties 3. Select the Permissions tab 4. If the 'public' entry does not exist within the Users or Roles listing the server is in compliance with the recommendation and you can halt further steps. If the 'public' entry does exist proceed to step 5 5. Select the 'public' entry within the Users or Roles listing 36 | P a g e 6. If the Grant checkbox for the Execute permission is checked the Public role maintains Execute permission on the procedure and the listed remediation procedure should be followed. The following steps can be used to audit using Transact-SQL: select OBJECT_NAME(major_id) as 'extended_procedure', permission_name, 'PUBLIC' as 'to_principal' from sys.database_permissions where major_id = OBJECT_ID('xp_subdirs') AND [type] = 'EX' AND grantee_principal_id = 0 Any record returned indicates the public role maintains execute permission on the procedure and the listed remediation procedure should be followed.",
    "remediation": "Revoke use by all general users on the SQL Server machine: REVOKE EXECUTE ON xp_subdirs TO PUBLIC; Note: Server logins within the sysadmin role will retain use of this procedure. Default Value: By default, the public role is not given execute permissions to this extended stored procedure. References: 1. No references available as this is an undocumented extended stored procedure.",
    "function_names": [
      "sql_server_folder_public_execute_revoked",
      "sql_server_subdirectory_public_access_restricted",
      "sql_server_xp_subdirs_public_permission_removed",
      "sql_server_folder_execute_permission_revoked",
      "sql_server_public_execute_permission_disabled"
    ],
    "references": "1. No references available as this is an undocumented extended stored procedure."
  },
  {
    "id": "3.8",
    "title": "Revoke Execute on 'xp_regaddmultistring' to PUBLIC",
    "assessment": "Scored",
    "description": "Adds multiple strings to the server's registry.",
    "rationale": "Ensuring this procedure is disabled will prevent a SQL Server user from writing to the Windows registry via SQL Server.  37 | P a g e",
    "audit": "The following steps can be used to audit using SQL Server Management Studio: 1. In Object Explorer, navigate to the SQL Server instance and expand the path: Databases\\System Databases\\master\\Programmability\\Extended Stored Procedures\\System Extended Stored Procedures 2. Locate xp_regaddmdmultistring, right click and select Properties 3. Select the Permissions tab 4. If the 'public' entry does not exist within the Users or Roles listing the server is in compliance with the recommendation and you can halt further steps. If the 'public' entry does exist proceed to step 5 5. Select the 'public' entry within the Users or Roles listing 6. If the Grant checkbox for the Execute permission is checked the Public role maintains Execute permission on the procedure and the listed remediation procedure should be followed. The following steps can be used to audit using Transact-SQL: select OBJECT_NAME(major_id) as 'extended_procedure', permission_name, 'PUBLIC' as 'to_principal' from sys.database_permissions where major_id = OBJECT_ID('xp_regaddmultistring') AND [type] = 'EX' AND grantee_principal_id = 0 Any record returned indicates the public role maintains execute permission on the procedure and the listed remediation procedure should be followed.",
    "remediation": "Revoke use by all general users on the SQL Server machine: REVOKE EXECUTE ON xp_regaddmultistring TO PUBLIC; Note: Server logins within the sysadmin role will retain use of this procedure. Default Value: Execute permissions are not revoked on this system stored procedure by default. References: 1. This stored procedure is undocumented and thus no official reference exists.",
    "function_names": [
      "sql_server_registry_permission_no_public_execute",
      "sql_server_registry_xp_regaddmultistring_restricted",
      "sql_server_registry_public_execute_revoked",
      "sql_server_registry_xp_regaddmultistring_no_public_access",
      "sql_server_registry_execute_permission_restricted"
    ],
    "references": "1. This stored procedure is undocumented and thus no official reference exists."
  },
  {
    "id": "3.9",
    "title": "Revoke Execute on 'xp_regdeletekey' to PUBLIC",
    "assessment": "Scored",
    "description": "Deletes registry keys from the server's registry.",
    "rationale": "Ensuring this procedure is disabled will prevent a SQL Server user from deleting values from the Windows registry via SQL Server.",
    "audit": "The following steps can be used to audit using SQL Server Management Studio: 1. In Object Explorer, navigate to the SQL Server instance and expand the path: Databases\\System Databases\\master\\Programmability\\Extended Stored Procedures\\System Extended Stored Procedures 2. Locate xp_regdeletekey, right click and select Properties 3. Select the Permissions tab 4. If the 'public' entry does not exist within the Users or Roles listing the server is in compliance with the recommendation and you can halt further steps. If the 'public' entry does exist proceed to step 5 5. Select the 'public' entry within the Users or Roles listing 6. If the Grant checkbox for the Execute permission is checked the Public role maintains Execute permission on the procedure and the listed remediation procedure should be followed. The following steps can be used to audit using Transact-SQL: select OBJECT_NAME(major_id) as 'extended_procedure', permission_name, 'PUBLIC' as 'to_principal' from sys.database_permissions where major_id = OBJECT_ID('xp_regdeletekey') AND [type] = 'EX' AND grantee_principal_id = 0 Any record returned indicates the public role maintains execute permission on the procedure and the listed remediation procedure should be followed.",
    "remediation": "Revoke use by all general users on the SQL Server machine: REVOKE EXECUTE ON xp_regdeletekey TO PUBLIC; Note: Server logins within the sysadmin role will retain use of this procedure. 39 | P a g e Default Value: Execute permissions are not revoked on this system stored procedure by default. References: 1. This stored procedure is undocumented and thus no official reference exists.",
    "function_names": [
      "sql_server_permission_no_public_execute",
      "sql_server_registry_key_restricted_access",
      "sql_server_xp_regdeletekey_public_revoked",
      "sql_server_extended_procedure_secure_permissions",
      "sql_server_public_execute_permission_disabled"
    ],
    "profile_applicability": "\uf0b7 Level 1 - Database Engine",
    "references": "1. This stored procedure is undocumented and thus no official reference exists."
  },
  {
    "id": "3.10",
    "title": "Revoke Execute on 'xp_regdeletevalue' to PUBLIC",
    "assessment": "Scored",
    "description": "Deletes values from the server's registry.",
    "rationale": "Ensuring this procedure is disabled will prevent a SQL Server user from deleting values from the Windows registry via SQL Server.",
    "audit": "The following steps can be used to audit using SQL Server Management Studio: 1. In Object Explorer, navigate to the SQL Server instance and expand the path: Databases\\System Databases\\master\\Programmability\\Extended Stored Procedures\\System Extended Stored Procedures 2. Locate xp_regdeletevalue, right click and select Properties 3. Select the Permissions tab 4. If the 'public' entry does not exist within the Users or Roles listing the server is in compliance with the recommendation and you can halt further steps. If the 'public' entry does exist proceed to step 5 5. Select the 'public' entry within the Users or Roles listing 6. If the Grant checkbox for the Execute permission is checked the Public role maintains Execute permission on the procedure and the listed remediation procedure should be followed. The following steps can be used to audit using Transact-SQL: select OBJECT_NAME(major_id) as 'extended_procedure', permission_name, 'PUBLIC' as 'to_principal' from sys.database_permissions where major_id = OBJECT_ID('xp_regdeletevalue') AND [type] = 'EX' AND grantee_principal_id = 0 40 | P a g e Any record returned indicates the public role maintains execute permission on the procedure and the listed remediation procedure should be followed.",
    "remediation": "Revoke use by all general users on the SQL Server machine: REVOKE EXECUTE ON xp_regdeletevalue TO PUBLIC; Note: Server logins within the sysadmin role will retain use of this procedure. Default Value: Execute permissions are not revoked on this system stored procedure by default. References: 1. This stored procedure is undocumented and thus no official reference exists.",
    "function_names": [
      "sql_server_permission_revoke_public_execute_xp_regdeletevalue",
      "sql_server_registry_access_restrict_public_execute",
      "sql_server_xp_regdeletevalue_public_execute_revoked",
      "sql_server_public_execute_xp_regdeletevalue_disabled",
      "sql_server_registry_modification_restrict_public_access"
    ],
    "references": "1. This stored procedure is undocumented and thus no official reference exists."
  },
  {
    "id": "3.11",
    "title": "Revoke Execute on 'xp_regenumvalues' to PUBLIC",
    "assessment": "Scored",
    "description": "Enumerates a set of values from a provided registry path.",
    "rationale": "Ensuring this procedure is disabled will prevent a SQL Server user from enumerating and reading registry values.",
    "audit": "The following steps can be used to audit using SQL Server Management Studio: 1. In Object Explorer, navigate to the SQL Server instance and expand the path: Databases\\System Databases\\master\\Programmability\\Extended Stored Procedures\\System Extended Stored Procedures 2. Locate xp_regenumvalues, right click and select Properties 3. Select the Permissions tab 4. If the 'public' entry does not exist within the Users or Roles listing the server is in compliance with the recommendation and you can halt further steps. If the 'public' entry does exist proceed to step 5 41 | P a g e 5. Select the 'public' entry within the Users or Roles listing 6. If the Grant checkbox for the Execute permission is checked the Public role maintains Execute permission on the procedure and the listed remediation procedure should be followed.  The following steps can be used to audit using Transact-SQL: select OBJECT_NAME(major_id) as 'extended_procedure', permission_name, 'PUBLIC' as 'to_principal' from sys.database_permissions where major_id = OBJECT_ID('xp_regenumvalues') AND [type] = 'EX' AND grantee_principal_id = 0 Any record returned indicates the public role maintains execute permission on the procedure and the listed remediation procedure should be followed.",
    "remediation": "Revoke use by all general users on the SQL Server machine: REVOKE EXECUTE ON xp_regenumvalues TO PUBLIC; Note: Server logins within the sysadmin role will retain use of this procedure. Default Value: Execute permissions are not revoked on this system stored procedure by default. References: 1. This stored procedure is undocumented and thus no official reference exists.",
    "function_names": [
      "sql_server_extended_procedure_execute_revoked",
      "sql_server_xp_regenumvalues_public_restricted",
      "sql_server_registry_enum_values_protected",
      "sql_server_public_execute_permission_revoked",
      "sql_server_xp_regenumvalues_access_locked"
    ],
    "references": "1. This stored procedure is undocumented and thus no official reference exists."
  },
  {
    "id": "3.12",
    "title": "Revoke Execute on 'xp_regremovemultistring' to PUBLIC",
    "assessment": "Scored",
    "description": "Removes multiple strings from the server's registry.",
    "rationale": "Ensuring this procedure is disabled will prevent a SQL Server user from deleting batch values from the Windows registry via SQL Server. 42 | P a g e",
    "audit": "The following steps can be used to audit using SQL Server Management Studio: 1. In Object Explorer, navigate to the SQL Server instance and expand the path: Databases\\System Databases\\master\\Programmability\\Extended Stored Procedures\\System Extended Stored Procedures 2. Locate xp_regremovemultistring, right click and select Properties 3. Select the Permissions tab 4. If the 'public' entry does not exist within the Users or Roles listing the server is in compliance with the recommendation and you can halt further steps. If the 'public' entry does exist proceed to step 5 5. Select the 'public' entry within the Users or Roles listing 6. If the Grant checkbox for the Execute permission is checked the Public role maintains Execute permission on the procedure and the listed remediation procedure should be followed. The following steps can be used to audit using Transact-SQL: select OBJECT_NAME(major_id) as 'extended_procedure', permission_name, 'PUBLIC' as 'to_principal' from sys.database_permissions where major_id = OBJECT_ID('xp_regremovemultistring') AND [type] = 'EX' AND grantee_principal_id = 0 Any record returned indicates the public role maintains execute permission on the procedure and the listed remediation procedure should be followed.",
    "remediation": "Revoke use by all general users on the SQL Server machine: REVOKE EXECUTE ON xp_regremovemultistring TO PUBLIC; Note: Server logins within the sysadmin role will retain use of this procedure. Default Value: Execute permissions are not revoked on this system stored procedure by default. References: 1. This stored procedure is undocumented and thus no official reference exists. 43 | P a g e",
    "function_names": [
      "sql_server_registry_permission_revoke_public",
      "sql_server_registry_xp_regremovemultistring_restricted",
      "sql_server_registry_execute_permission_revoked",
      "sql_server_registry_public_access_removed",
      "sql_server_registry_secure_configuration_enabled"
    ],
    "references": "1. This stored procedure is undocumented and thus no official reference exists. 43 | P a g e"
  },
  {
    "id": "3.13",
    "title": "Revoke Execute on 'xp_regwrite' to PUBLIC",
    "assessment": "Scored",
    "description": "Writes key values to the server's registry.",
    "rationale": "Ensuring this procedure is disabled will prevent a SQL Server user from writing to the Windows registry via SQL Server.",
    "audit": "The following steps can be used to audit using SQL Server Management Studio: 1. In Object Explorer, navigate to the SQL Server instance and expand the path: Databases\\System Databases\\master\\Programmability\\Extended Stored Procedures\\System Extended Stored Procedures 2. Locate xp_regwrite, right click and select Properties 3. Select the Permissions tab 4. If the 'public' entry does not exist within the Users or Roles listing the server is in compliance with the recommendation and you can halt further steps. If the 'public' entry does exist proceed to step 5 5. Select the 'public' entry within the Users or Roles listing 6. If the Grant checkbox for the Execute permission is checked the Public role maintains Execute permission on the procedure and the listed remediation procedure should be followed. The following steps can be used to audit using Transact-SQL: select OBJECT_NAME(major_id) as 'extended_procedure', permission_name, 'PUBLIC' as 'to_principal' from sys.database_permissions where major_id = OBJECT_ID('xp_regwrite') AND [type] = 'EX' AND grantee_principal_id = 0 Any record returned indicates the public role maintains execute permission on the procedure and the listed remediation procedure should be followed.",
    "remediation": "Revoke use by all general users on the SQL Server machine: 44 | P a g e REVOKE EXECUTE ON xp_regwrite TO PUBLIC; Note: Server logins within the sysadmin role will retain use of this procedure. Default Value: Execute permission is not granted to the public role by default. References: 1. This stored procedure is undocumented and thus no official reference exists.",
    "function_names": [
      "sql_server_permission_no_public_execute",
      "sql_server_xp_regwrite_restricted",
      "sql_server_registry_write_protected",
      "sql_server_public_execute_revoked",
      "sql_server_xp_regwrite_no_public_access"
    ],
    "references": "1. This stored procedure is undocumented and thus no official reference exists."
  },
  {
    "id": "3.14",
    "title": "Revoke Execute on 'xp_regread' to PUBLIC",
    "assessment": "Scored",
    "description": "Reads key values from the server's registry.",
    "rationale": "Ensuring this procedure is disabled will prevent a SQL Server user from enumerating and reading registry values. This procedure is leveraged by several automated SQL injection tools.",
    "audit": "The following steps can be used to audit using SQL Server Management Studio: 1. In Object Explorer, navigate to the SQL Server instance and expand the path: Databases\\System Databases\\master\\Programmability\\Extended Stored Procedures\\System Extended Stored Procedures 2. Locate xp_regread, right click and select Properties 3. Select the Permissions tab 4. If the 'public' entry does not exist within the Users or Roles listing the server is in compliance with the recommendation and you can halt further steps. If the 'public' entry does exist proceed to step 5 5. Select the 'public' entry within the Users or Roles listing 6. If the Grant checkbox for the Execute permission is checked the Public role maintains Execute permission on the procedure and the listed remediation procedure should be followed. The following steps can be used to audit using Transact-SQL: 45 | P a g e select OBJECT_NAME(major_id) as 'extended_procedure', permission_name, 'PUBLIC' as 'to_principal' from sys.database_permissions where major_id = OBJECT_ID('xp_regread') AND [type] = 'EX' AND grantee_principal_id = 0 Any record returned indicates the public role maintains execute permission on the procedure and the listed remediation procedure should be followed.",
    "remediation": "Revoke use by all general users on the SQL Server machine: REVOKE EXECUTE ON xp_regread TO PUBLIC; Note: Server logins within the sysadmin role will retain use of this procedure. Default Value: Execute permission is granted to the public role by default. References: 1. This stored procedure is undocumented and thus no official reference exists. 4 Authentication and Authorization [This space intentionally left blank]",
    "function_names": [
      "sql_server_permission_revoke_public_xp_regread",
      "sql_server_function_execute_restricted_public",
      "sql_server_xp_regread_public_access_revoked",
      "sql_server_registry_access_public_disabled",
      "sql_server_xp_regread_execute_permission_denied"
    ],
    "references": "1. This stored procedure is undocumented and thus no official reference exists. 4 Authentication and Authorization [This space intentionally left blank]"
  },
  {
    "id": "4.1",
    "title": "Set The 'Server Authentication' Property To Windows Authentication mode",
    "assessment": "Scored",
    "description": "Uses Windows Authentication to validate attempted connections.",
    "rationale": "Windows provides a more robust authentication mechanism than SQL Server authentication.  46 | P a g e",
    "audit": "Execute the following syntax: xp_loginconfig 'login mode'; A config_value of Windows NT Authentication indicates the Server Authentication property is set to Windows Authentication mode",
    "remediation": "Perform the following steps: 1. Open SQL Server Management Studio. 2. Open the Object Explorer tab and connect to the target database instance. 3. Right click the instance name and select Properties. 4. Select the Security page from the left menu. 5. Set the Server authentication setting to Windows Authentication mode. Default Value: Windows Authentication Mode References: 1. http://msdn.microsoft.com/en-us/library/ms188470(v=sql.100).aspx 2. http://msdn.microsoft.com/en-us/library/ms188470(v=sql.105).aspx",
    "function_names": [
      "sql_server_authentication_windows_mode_enabled",
      "sql_server_connection_windows_auth_required",
      "sql_server_authentication_windows_only",
      "sql_server_windows_auth_enabled",
      "sql_server_auth_mode_windows_only",
      "sql_server_connection_windows_auth_enabled",
      "sql_server_auth_windows_required",
      "sql_server_windows_auth_mode_enabled"
    ],
    "references": "1. http://msdn.microsoft.com/en-us/library/ms188470(v=sql.100).aspx 2. http://msdn.microsoft.com/en-us/library/ms188470(v=sql.105).aspx"
  },
  {
    "id": "4.2",
    "title": "Revoke CONNECT permissions on the 'guest user' within all SQL Server databases excluding the master, msdb and tempdb",
    "assessment": "Scored",
    "description": "Removes the right of guest users to connect to SQL Server user databases.",
    "rationale": "A login assumes the identity of the guest user when a login has access to SQL Server but does not have access to a database through its own account and the database has a guest user account. Revoking the connect permission for the guest user will ensure that a login is not able to access database information without explicit access to do so. 47 | P a g e",
    "audit": "Run the following code snippet in each database in the instance to determine if the guest user exists. SELECT DB_NAME(), name FROM sys.database_principals WHERE name = 'guest'",
    "remediation": "The following code snippet revokes CONNECT permissions from the guest user in a database: REVOKE CONNECT FROM guest;  Default Value: The guest user account is added to each new database by default. References: 1. http://msdn.microsoft.com/en-us/library/bb402861(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/bb402861(v=sql.100).aspx",
    "function_names": [
      "sqlserver_database_guest_connect_revoked",
      "sqlserver_database_guest_connect_disabled",
      "sqlserver_database_guest_permissions_restricted",
      "sqlserver_database_guest_access_denied",
      "sqlserver_database_guest_connect_removed",
      "sqlserver_database_guest_login_disabled",
      "sqlserver_database_guest_privileges_revoked",
      "sqlserver_database_guest_connect_prohibited"
    ],
    "references": "1. http://msdn.microsoft.com/en-us/library/bb402861(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/bb402861(v=sql.100).aspx"
  },
  {
    "id": "4.3",
    "title": "Drop Orphaned Users From SQL Server Databases",
    "assessment": "Scored",
    "description": "A database user for which the corresponding SQL Server login is undefined or is incorrectly defined on a server instance cannot log in to the instance and is referred to as orphaned and should be removed.",
    "rationale": "Orphan users should be removed to avoid potential misuse of those broken users in any way. 48 | P a g e",
    "audit": "Run the following T-SQL query to identify orphan users: EXEC sp_change_users_login @Action='Report';",
    "remediation": "Run the following T-SQL query to remove an orphan user: DROP USER <username>; References: 1. http://msdn.microsoft.com/en-us/library/ms175475(v=sql.100).aspx 2. http://msdn.microsoft.com/en-us/library/ms175475(v=sql.105).aspx 5 Password Policies [This space intentionally left blank]",
    "function_names": [
      "sqlserver_database_orphaned_users_removed",
      "sqlserver_database_user_login_defined",
      "sqlserver_database_user_login_valid",
      "sqlserver_database_orphaned_users_cleaned",
      "sqlserver_database_user_login_consistent"
    ],
    "references": "1. http://msdn.microsoft.com/en-us/library/ms175475(v=sql.100).aspx 2. http://msdn.microsoft.com/en-us/library/ms175475(v=sql.105).aspx 5 Password Policies [This space intentionally left blank]"
  },
  {
    "id": "5.1",
    "title": "Set the 'MUST_CHANGE' Option to ON for All SQL Authenticated Logins",
    "assessment": "Not Scored",
    "description": "SQL Server will prompt for an updated password the first time the altered login is used.",
    "rationale": "Enforcing password change will prevent the account administrators or anyone accessing the initial password to misuse the SQL login created without being noticed.",
    "audit": "1. Open SQL Server Management Studio. 2. Open Object Explorer and connect to the target instance. 49 | P a g e 3. Navigate to the Logins tab in Object Explorer and expand. Right click on the desired login and select Properties. 4. Verify the User must change password at next login checkbox is checked",
    "remediation": "Set the MUST_CHANGE option for SQL Authenticated logins ALTER LOGIN login_name WITH PASSWORD = password_value MUST_CHANGE; Impact: CHECK_EXPIRATION and CHECK_POLICY options must both be ON Default Value: ON References: 1. http://msdn.microsoft.com/en-us/library/ms189828(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/ms189828(v=sql.100).aspx",
    "function_names": [
      "sql_login_must_change_enabled",
      "sql_auth_password_reset_required",
      "sql_server_login_password_policy_enforced",
      "sql_auth_login_initial_password_change_required",
      "sql_login_credential_rotation_mandatory"
    ],
    "impact": "CHECK_EXPIRATION and CHECK_POLICY options must both be ON Default Value: ON",
    "references": "1. http://msdn.microsoft.com/en-us/library/ms189828(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/ms189828(v=sql.100).aspx"
  },
  {
    "id": "5.2",
    "title": "Set the 'CHECK_EXPIRATION' Option to ON for All SQL Authenticated Logins Within the Sysadmin Role",
    "assessment": "Scored",
    "description": "Applies the same password expiration policy used in Windows to passwords used inside SQL Server.",
    "rationale": "Ensuring SQL logins comply with the secure password policy applied by the Windows Server Benchmark will ensure the passwords for SQL logins with Sysadmin privileges are changed on a frequent basis to help prevent compromise via a brute force attack.    50 | P a g e",
    "audit": "SELECT SQLLoginName = sp.name,  PasswordExpirationEnforced = CAST(sl.is_expiration_checked AS BIT) FROM sys.server_principals sp JOIN sys.sql_logins AS sl ON sl.principal_id = sp.principal_id WHERE sp.type_desc = 'SQL_LOGIN';",
    "remediation": "ALTER LOGIN [login_name] WITH CHECK_EXPIRATION = ON; Default Value: 'CHECK_EXPIRATION' is ON References: 1. http://msdn.microsoft.com/en-us/library/ms161959(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/ms161959(v=sql.100).aspx",
    "function_names": [
      "sql_server_login_password_expiration_enabled",
      "sql_server_sysadmin_login_check_expiration_enabled",
      "sql_server_auth_login_password_policy_enabled",
      "sql_server_sysadmin_password_expiration_required",
      "sql_server_login_password_expiration_enforced"
    ],
    "references": "1. http://msdn.microsoft.com/en-us/library/ms161959(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/ms161959(v=sql.100).aspx"
  },
  {
    "id": "5.3",
    "title": "Set the 'CHECK_POLICY' Option to ON for All SQL Authenticated Logins",
    "assessment": "Scored",
    "description": "Applies the same password complexity policy used in Windows to passwords used inside SQL Server.",
    "rationale": "Ensuring SQL logins comply with the secure password policy applied by the Windows Server Benchmark will ensure SQL  logins are not blank and cannot be easily compromised via brute force attack.",
    "audit": "Use the following code snippet to determine the SQL Logins and if their password complexity is enforced. SELECT SQLLoginName = sp.name, PasswordPolicyEnforced = CAST(sl.is_policy_checked AS BIT) FROM sys.server_principals sp 51 | P a g e JOIN sys.sql_logins AS sl ON sl.principal_id = sp.principal_id WHERE sp.type_desc = 'SQL_LOGIN'; A PasswordPolicyEnforced value of 0 indicates that the 'Check_Policy' option is OFF",
    "remediation": "ALTER LOGIN [login_name] WITH CHECK_POLICY = ON; Default Value: 'CHECK_POLICY'  is ON References: 1. http://msdn.microsoft.com/en-us/library/ms161959(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/ms161959(v=sql.100).aspx 6 Auditing and Logging SQL Server audit and logging configuration settings.",
    "function_names": [
      "sql_server_login_password_policy_enabled",
      "sql_server_login_check_policy_enabled",
      "sql_server_auth_password_complexity_enabled",
      "sql_server_login_windows_policy_enabled",
      "sql_server_auth_password_policy_enabled"
    ],
    "references": "1. http://msdn.microsoft.com/en-us/library/ms161959(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/ms161959(v=sql.100).aspx 6 Auditing and Logging SQL Server audit and logging configuration settings."
  },
  {
    "id": "6.1",
    "title": "Set the 'Maximum number of error log files' setting to greater than or equal to 12",
    "assessment": "Not Scored",
    "description": "SQL Server errorlog files must be protected from loss. The log files must be backed up before they are overwritten.",
    "rationale": "The SQL Server errorlog contains important information about major server events and login attempt information as well.",
    "audit": "1. Open SQL Server Management Studio. 2. Open Object Explorer and connect to the target instance. 3. Navigate to the Management tab in Object Explorer and expand. Right click on the SQL Server Logs file and select Configure. 52 | P a g e 4. Verify the Limit the number of error log files before they are recycled checkbox is checked 5. Verify the Maximum number of error log files is greater than or equal to 12",
    "remediation": "Adjust the number of logs to prevent data loss. The default value of 6 may be insufficient for a production environment. 1. Open SQL Server Management Studio. 2. Open Object Explorer and connect to the target instance. 3. Navigate to the Management tab in Object Explorer and expand. Right click on the SQL Server Logs file and select Configure 4. Check the Limit the number of error log files before they are recycled 5. Set the Maximum number of error log files to greater than or equal to 12  Default Value: 6 SQL Server error logs are retained by default. References: 1. http://msdn.microsoft.com/en-us/library/ms177285(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/ms177285(v=sql.100).aspx",
    "function_names": [
      "sql_server_error_log_retention_min_12_files",
      "sql_server_error_log_backup_before_overwrite",
      "sql_server_error_log_max_files_configured",
      "sql_server_error_log_protection_enabled",
      "sql_server_error_log_retention_compliance"
    ],
    "references": "1. http://msdn.microsoft.com/en-us/library/ms177285(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/ms177285(v=sql.100).aspx"
  },
  {
    "id": "6.2",
    "title": "Set the 'Default Trace Enabled' Server Configuration Option to 1",
    "assessment": "Scored",
    "description": "The default trace provides audit logging of database activity including account creations, privilege elevation and execution of DBCC commands.",
    "rationale": "Default trace provides valuable audit information regarding security-related activities on the server.  53 | P a g e",
    "audit": "Run the following T-SQL command: SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'Default trace enabled'; Both value columns must show 1.",
    "remediation": "Run the following T-SQL command: EXECUTE sp_configure 'show advanced options', 1; RECONFIGURE; EXECUTE sp_configure 'Default trace enabled', 1; RECONFIGURE; GO EXECUTE sp_configure 'show advanced options', 0; RECONFIGURE;  Default Value: 1 (on) References: 1. http://msdn.microsoft.com/en-us/library/ms175513(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/ms175513(v=sql.100).aspx",
    "function_names": [
      "sql_server_default_trace_enabled",
      "sql_server_audit_logging_enabled",
      "sql_server_trace_configuration_secure",
      "sql_server_dbcc_audit_enabled",
      "sql_server_privilege_elevation_logging_enabled"
    ],
    "references": "1. http://msdn.microsoft.com/en-us/library/ms175513(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/ms175513(v=sql.100).aspx"
  },
  {
    "id": "6.3",
    "title": "Set 'Login Auditing' to Both failed and successful logins",
    "assessment": "Not Scored",
    "description": "Setting logs both successful and failed login SQL Server authentication attempts.  54 | P a g e",
    "rationale": "Logging successful and failed logins provides key information that can be used to detect\\confirm password guessing attacks.  Further, logging successful login attempts can be used to confirm server access during forensic investigations.",
    "audit": "XP_loginconfig 'audit level'; A config_value of 'all'  indicates a server login auditing setting of 'Both failed and successful logins'.",
    "remediation": "Perform the following steps to set the level of auditing: 1. Open SQL Server Management Studio. 2. Right click the target instance and select Properties and navigate to the Security tab. 3. Select the option Both failed and successful logins under the \"Login Auditing\" section and click OK. 4. Restart the SQL Server instance. Default Value: By default, only failed login attempted are captured. References: 1. http://technet.microsoft.com/en-us/library/ms188470(v=sql.105).aspx 2. http://technet.microsoft.com/en-us/library/ms188470(v=sql.100).aspx 7 Application Development [This space intentionally left blank]",
    "function_names": [
      "sql_server_audit_login_both_attempts",
      "sql_server_authentication_logging_enabled",
      "sql_server_audit_failed_and_successful_logins",
      "sql_server_login_audit_both_events",
      "sql_server_authentication_audit_comprehensive"
    ],
    "references": "1. http://technet.microsoft.com/en-us/library/ms188470(v=sql.105).aspx 2. http://technet.microsoft.com/en-us/library/ms188470(v=sql.100).aspx 7 Application Development [This space intentionally left blank]"
  },
  {
    "id": "7.1",
    "title": "Sanitize Database and Application User Input",
    "assessment": "Not Scored",
    "description": "Always validate user input received from a database client or application by testing type, length, format, and range prior to transmitting it to the database server.",
    "rationale": "Sanitizing user input drastically minimizes risk of SQL injection.",
    "audit": "Check with the application teams to ensure any database interaction is through the use of stored procedures and not dynamic SQL. Revoke any INSERT, UPDATE, or DELETE privileges to users so that modifications to data must be done through stored procedures. Verify that there's no SQL query in the application code produced by string concatenation.",
    "remediation": "The following steps can be taken to remediate SQL injection vulnerabilities: \uf0b7 Review TSQL and application code for SQL Injection \uf0b7 Only permit minimally privileged accounts to send user input to the server \uf0b7 Minimize the risk of SQL injection attack by using parameterized commands and stored procedures \uf0b7 Reject user input containing binary data, escape sequences, and comment characters \uf0b7 Always validate user input and do not use it directly to build SQL statements Impact: Sanitize user input may require changes to application code or database object syntax. These changes can require applications or databases to be taken temporarily off-line. Any change to TSQL or application code should be thoroughly tested in testing environment before production implementation. References: 1. https://www.owasp.org/index.php/SQL_Injection 2. http://msdn.microsoft.com/en-us/library/ms161953(v=sql.100).aspx 3. http://msdn.microsoft.com/en-us/library/ms161953(v=sql.105).aspx 56 | P a g e",
    "function_names": [
      "database_user_input_sanitized",
      "database_user_input_type_validated",
      "database_user_input_length_validated",
      "database_user_input_format_validated",
      "database_user_input_range_validated",
      "application_user_input_sanitized",
      "application_user_input_type_validated",
      "application_user_input_length_validated",
      "application_user_input_format_validated",
      "application_user_input_range_validated"
    ],
    "impact": "Sanitize user input may require changes to application code or database object syntax. These changes can require applications or databases to be taken temporarily off-line. Any change to TSQL or application code should be thoroughly tested in testing environment before production implementation.",
    "references": "1. https://www.owasp.org/index.php/SQL_Injection 2. http://msdn.microsoft.com/en-us/library/ms161953(v=sql.100).aspx 3. http://msdn.microsoft.com/en-us/library/ms161953(v=sql.105).aspx 56 | P a g e"
  },
  {
    "id": "7.2",
    "title": "Set the 'CLR Assembly Permission Set' to SAFE_ACCESS for All CLR Assemblies",
    "assessment": "Scored",
    "description": "Setting CLR Assembly Permission Sets to SAFE_ACCESS will prevent assemblies from accessing external system resources such as files, the network, environment variables, or the registry.",
    "rationale": "Assemblies with EXTERNAL_ACCESS or UNSAFE permission sets can be used to access sensitive areas of the operating system, steal and/or transmit data and alter the state and other protection measures of the underlying Windows Operating System.",
    "audit": "Execute the following SQL statement: SELECT name, permission_set_desc FROM sys.assemblies where is_user_defined = 1; All the returned assemblies should show SAFE_ACCESS in the permission_set_desc column.",
    "remediation": "ALTER ASSEMBLY assembly_name WITH PERMISSION_SET = SAFE; Impact: The remediation measure should first be tested within a test environment prior to production to ensure the assembly still functions as designed with SAFE permission setting. Default Value: SAFE permission set  57 | P a g e References: 1. http://msdn.microsoft.com/en-us/library/ms345101(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/ms189790(v=sql.100).aspx 3. http://msdn.microsoft.com/en-us/library/ms189790(v=sql.105).aspx 4. http://msdn.microsoft.com/en-us/library/ms345101(v=sql.100).aspx 5. http://msdn.microsoft.com/en-us/library/ms186711(v=sql.100).aspx 6. http://msdn.microsoft.com/en-us/library/ms186711(v=sql.105).aspx  58 | P a g e  Appendix: Change History Date Version Changes for this version January 6, 2014 1.0.0 Initial release.",
    "function_names": [
      "sql_server_clr_assembly_safe_access_enabled",
      "sql_server_clr_assembly_permission_set_safe_access",
      "sql_server_clr_assembly_external_access_restricted",
      "sql_server_clr_assembly_unsafe_permissions_disabled",
      "sql_server_clr_assembly_resource_access_blocked"
    ],
    "impact": "The remediation measure should first be tested within a test environment prior to production to ensure the assembly still functions as designed with SAFE permission setting. Default Value: SAFE permission set  57 | P a g e",
    "references": "1. http://msdn.microsoft.com/en-us/library/ms345101(v=sql.105).aspx 2. http://msdn.microsoft.com/en-us/library/ms189790(v=sql.100).aspx 3. http://msdn.microsoft.com/en-us/library/ms189790(v=sql.105).aspx 4. http://msdn.microsoft.com/en-us/library/ms345101(v=sql.100).aspx 5. http://msdn.microsoft.com/en-us/library/ms186711(v=sql.100).aspx 6. http://msdn.microsoft.com/en-us/library/ms186711(v=sql.105).aspx  58 | P a g e  Appendix: Change History Date Version Changes for this version January 6, 2014 1.0.0 Initial release."
  }
]
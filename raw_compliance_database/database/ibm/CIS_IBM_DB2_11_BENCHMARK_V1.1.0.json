[
  {
    "id": "1.1.1",
    "title": "Install Available Updates",
    "assessment": "Manual",
    "description": "Periodically, IBM releases updates for its Db2 11 products in the form of modification packs, fix packs, and interim fix packs. All updates are cumulative and contain the contents of the previous updates provided. It is recommended that you review the available updates for Db2 11 on a regular and frequent basis and, optionally, subscribe for notification of critical Db2 fixes. Db2 11.1 specifics Modification packs contain new features as well as defect fixes and are indicated by a change in the modification and fix pack numbers in the product identifier (e.g. Db2 11.1.4.5 is modification pack 4 for Db2 11.1). Fix packs contain only defect fixes and are indicated by a change in just the fix pack number in the product identifier (e.g. Db2 11.1.4.5 is fix pack 5 for Db2 11.1). Interim fix packs contain only critical defect fixes (e.g. HIPER and security vulnerabilities) made available since the last modification or fix pack released and are identified by an “iFixNN” suffix, where NN is the number of the interim fix. Db2 11.5 specifics Modification packs contain new features as well as defect fixes and are indicated by a change in the modification number in the product identifier (e.g. Db2 11.5.4.0 is modification pack 4 for Db2 11.5). Fix packs contain only defect fixes and are indicated by a change in just the fix pack number in the product identifier (e.g. Db2 11.5.4.1 is fix pack 1 for modification 4 of Db2 11.5). Db2 11.5 does not provide Interim fix packs.",
    "rationale": "Being aware of the available updates and critical fixes helps you evaluate which Db2 update is the minimum level that you should use for your next system update. It will also help you understand the relative urgency of acquiring the latest Db2 fix pack to help protect the database from known vulnerabilities and reduce downtime that may otherwise result from functional defects.",
    "audit": "Perform the following Db2 commands to obtain the version: $ db2level DB21085I This instance or install (instance name, where applicable: \"db2inst1\") uses \"64\" bits and DB2 code release \"SQL11055\" with level identifier \"0606010F\". Informational tokens are \"DB2 v11.5.5.0\", \"s2011011400\", \"DYN2011011400AMD64\", and Fix Pack \"0\".",
    "remediation": "Apply the latest fix pack as offered from IBM. References: 1. https://www-01.ibm.com/support/docview.wss?uid=ibm10718119 2. https://www.ibm.com/support/mynotifications 3. https://www.ibm.com/support/pages/published-security-vulnerabilities-db2-linux- unix-and-windows-including-special-build-information 4. https://www-01.ibm.com/support/docview.wss?rs=71&uid=swg27007053 5. https://www.ibm.com/developerworks/community/blogs/IMSupport/entry/All_abou t_ifixes_interim_fixes?lang=en 6. https://www.ibm.com/support/pages/security-vulnerabilities-hiper-and-special- attention-apars-fixed-db2-linux-unix-and-windows-version-111 7. https://www.ibm.com/support/pages/security-vulnerabilities-hiper-and-special- attention-apars-fixed-db2-linux-unix-and-windows-version-115",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www-01.ibm.com/support/docview.wss?uid=ibm10718119 2. https://www.ibm.com/support/mynotifications 3. https://www.ibm.com/support/pages/published-security-vulnerabilities-db2-linux- unix-and-windows-including-special-build-information 4. https://www-01.ibm.com/support/docview.wss?rs=71&uid=swg27007053 5. https://www.ibm.com/developerworks/community/blogs/IMSupport/entry/All_abou t_ifixes_interim_fixes?lang=en 6. https://www.ibm.com/support/pages/security-vulnerabilities-hiper-and-special- attention-apars-fixed-db2-linux-unix-and-windows-version-111 7. https://www.ibm.com/support/pages/security-vulnerabilities-hiper-and-special- attention-apars-fixed-db2-linux-unix-and-windows-version-115",
    "function_names": [
      "db2_instance_updates_installed",
      "db2_instance_modification_packs_installed",
      "db2_instance_fix_packs_installed",
      "db2_instance_interim_fix_packs_installed",
      "db2_instance_latest_version_installed",
      "db2_instance_security_updates_installed",
      "db2_instance_automatic_updates_enabled",
      "db2_instance_update_notifications_enabled",
      "db2_instance_version_compliance_verified",
      "db2_instance_patch_management_enabled"
    ]
  },
  {
    "id": "2.1",
    "title": "Prevent Database Users from Logging into the Operating System",
    "assessment": "Manual",
    "description": "Db2’s default authentication mechanism (SERVER) uses the operating system for authentication. This necessitates that users who require access to the database can be authenticated by the operating system. A by-product of this is that those users will be able to log into a shell in the OS of the database server, such as through ssh. The scope of the problem is greater if the OS has been configured to use an LDAP server for authentication, as that would likely contain more than just database users. Unless explicitly authorized, database users should not be able to log into the OS and action is required to prevent this. åFor Windows, the recommendation is based on the CIS Benchmark for Windows Server 2016, section \"2.2.21 Ensure 'Deny access to this computer from the network' to include 'Guests, Local account and member of Administrators group'\" .",
    "rationale": "Only authorized users should be able to log into the operating system that is running the Db2 database server. This will reduce the attack exposure of the system by preventing database users from accessing operating system resources or taking advantage of operating system flaws. Impact: The recommendation in this section affects who can log into the operating system of the server where Db2 is installed. Care must be taken to ensure that appropriate settings are made and system administrators continue to have the ability to login to the system.",
    "audit": "RHEL 7 and RHEL 8 Run the following commands as root: $ grep pam_access /etc/pam.d/system-auth If the command does not return a line from the file, this is a Fail, and the remediation should be followed. AIX  In the file /etc/security/user, the default stanza should have the following: rlogin = false This ensure that by default a user is not able to remotely log into the system unless their user has been explicitly configured with rlogin = true. If the rlogin value in the default stanza is not false, that is a finding, and the remediation should be followed. Windows To establish the recommended configuration via Group Policy, navigate the following UI path: Computer Configuration\\Policies\\Windows Settings\\Security Settings\\Local Policies\\User Rights Assignment\\Access this computer from the network Ensure these two values are present in the setting, and if not, this is a Fail, and the remediation should be followed: 1. Guests 2. Local account and member of Administrators group.",
    "remediation": "The steps to accomplish this differ per OS and even the level of OS. RHEL 7 Run the following commands as root: 1. Modify the file /etc/security/access.conf Add users who are allowed to log into the OS with a + + : <user1> <user2> Add a deny all rule as the last rule to prevent other users not explicitly allowed to log in, which would apply to database users: - : ALL : ALL 2. Modify the file /etc/sysconfig/authconfig Ensure the following line is set to yes USEPAMACCESS=yes 3. Run this command to update the auth configuration: $ authconfig --updateall Using these steps will ensure that account required pam_access.so is placed into the file /etc/pam.d/system-auth and the access list will be enforced for OS login.  RHEL 8 Run the following commands as root: 1. Modify the file /etc/security/access.conf Add users who are allowed to log into the OS with a + + : <user1> <user2> Add a deny all rule as the last rule to prevent other users not explicitly allowed to log in, which would apply to database users: - : ALL : ALL 2. Run this command to update the auth configuration: $ authselect enable-feature with-pamaccess Using these steps will ensure that account required pam_access.so is placed into the file /etc/pam.d/system-auth and the access list will be enforced for OS login. AIX 1. Ensure appropriate users are explicitly listed as being allowed to log into the system. It is important that you have users listed with privilege to rlogin so that you do not lock yourself out of the system. Modify the file /etc/security/user, and for each user allowed to log in, find their stanza and add the following line: rlogin = true 2. Modify the default stanza to indicate the default value is that users are not able to login rlogin = false 3. Ensure the DB2LOGINRESTRICTIONS registry variable is set to a value of LOCAL (the default if not specified) or NONE. Setting a value of NETWORK will return an error during Db2 authentication for any user with rlogin set to false. You can check this value as the instance owner by issuing the command: $ db2set | grep DB2LOGINRESTRICTIONS 4. To change the value, use the command: db2set DB2LOGINRESTRICTIONS=LOCAL Windows  The remediation should only be followed for these scenarios: 1. You are using Db2 11.5 or later 2. You are using Db2 11.1 or prior and do not have local accounts that are members of the Administrator group. Following these changes will prevent local accounts that are members of the Administrator group from connecting to the database. Follow these steps: To establish the recommended configuration via Group Policy, configure the following UI path: Computer Configuration\\Policies\\Windows Settings\\Security Settings\\Local Policies\\User Rights Assignment\\Access this computer from the network Ensure these two values are present in the setting, and if not follow the remediation: 1. Guests 2. Local account and member of Administrators group. For Db2 11.5 and later, set the DB2_WINDOWS_LOGON_TYPE to DEFINITION. This setting controls how Db2 authenticates users when they connect. Local users must hold the right \"Allow log on locally\" and not be part of the \"Deny log on locally\". Domain users must hold the right \"Access this computer from the network\" and not be part of \"Deny access to this computer from the network\". This setting will ensure that local users are authenticated when connecting to Db2 according to their ability to log on locally, and not through the default value of accessing this computer from the network. Issue the following command db2set DB2_WINDOW_LOGON_TYPE=DEFINITION",
    "profile_applicability": "•  Level 1 - RDBMS",
    "impact": "The recommendation in this section affects who can log into the operating system of the server where Db2 is installed. Care must be taken to ensure that appropriate settings are made and system administrators continue to have the ability to login to the system.",
    "function_names": [
      "db2_user_os_login_disabled",
      "db2_authentication_server_disabled",
      "db2_ldap_auth_restricted",
      "windows_user_remote_login_restricted",
      "windows_deny_network_access_enabled",
      "windows_local_account_login_disabled",
      "windows_admin_group_login_restricted",
      "db2_os_shell_access_disabled"
    ]
  },
  {
    "id": "3.1.1",
    "title": "Require Explicit Authorization for Cataloging (CATALOG_NOAUTH)",
    "assessment": "Automated",
    "description": "Db2 can be configured to allow users that do not possess the SYSADM authority to catalog and uncatalog databases and nodes. It is recommended that the CATALOG_NOAUTH parameter be set to NO.",
    "rationale": "Cataloging a database is the process of registering a database from a remote client to allow remote call and access. Setting CATALOG_NOAUTH to YES bypasses all permissions checks and allows anyone to catalog and uncatalog databases.",
    "audit": "Perform the following to determine if authorization is explicitly required to catalog and uncatalog databases and nodes: 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command: db2 => get database manager configuration 3. Locate the value of CATALOG_NOAUTH in the output: Cataloging allowed without authority (CATALOG_NOAUTH) = NO Ensure CATALOG_NOAUTH is NO.",
    "remediation": "Perform the following to require explicit authorization to catalog and uncatalog databases and nodes. 1. Attach to the Db2 instance  db2 => attach to <db2instance> 2. Run the following command: db2 => update database manager configuration using catalog_noauth no References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=parameters-catalog-noauth- cataloging-allowed-without-authority",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=parameters-catalog-noauth- cataloging-allowed-without-authority",
    "function_names": [
      "db2_instance_catalog_noauth_disabled",
      "db2_database_explicit_authorization_required",
      "db2_parameter_catalog_noauth_no",
      "db2_auth_catalog_privileges_restricted"
    ]
  },
  {
    "id": "3.1.2",
    "title": "Secure Permissions for Default Database File Path (DFTDBPATH)",
    "assessment": "Automated",
    "description": "The DFTDBPATH parameter contains the default file path used to create Db2 databases. It is recommended that the permissions for this directory be set to full access for Db2 administrators and read and execute access only for all other accounts. It is also recommended that this directory be owned by the Db2 Administrator.",
    "rationale": "Restricting access to the directory used as the default file path through permissions will help ensure that the confidentiality, integrity, and availability of the files there are protected.",
    "audit": "For Windows and Linux: 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command from the Db2 command window: db2 => get database manager configuration 3. Locate this value in the output to find the default file path: Default database path (DFTDBPATH) = <valid directory> Additional steps for Windows: 1. Connect to the Db2 host 2. Right-click over the directory used for the default file path 3. Choose Properties 4. Select the Security tab 5. Review and verify the privileges for all accounts. 6. Review and verify that the Db2 Administrator is the owner of the directory. Additional steps for Linux: 1. Connect to the Db2 host  2. Change to the directory used as the default file path 3. Review and verify the permissions for the directory for all users; also ensure that the Db2 Administrator is the owner. $ ls -al",
    "remediation": "For Windows and Linux: 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command to change the default file path, if necessary: db2 => update database manager configuration using dftdbpath <valid directory> Additional steps for Windows: 1. Connect to the Db2 host 2. Right-click over the directory used as the default file path 3. Choose Properties 4. Select the Security tab 5. Assign ownership of the directory to the Db2 Administrator 6. Grant all Db2 administrator accounts the Full Control authority 7. Grant only read and execute privileges to all other users (revoke all other privileges) Additional steps for Linux: 1. Connect to the Db2 host 2. Change to the directory used as the default file path 3. Assign the Db2 Administrator to be the owner of the directory using the chown command 4. Change the permissions for the directory $ chmod -R 755",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_directory_dftdbpath_permissions_restricted",
      "db2_directory_dftdbpath_owner_admin",
      "db2_directory_dftdbpath_access_controlled",
      "db2_directory_dftdbpath_admin_full_access",
      "db2_directory_dftdbpath_non_admin_read_only"
    ]
  },
  {
    "id": "3.1.3",
    "title": "Set Diagnostic Logging to Capture Errors and Warnings (DIAGLEVEL)",
    "assessment": "Automated",
    "description": "The DIAGLEVEL parameter specifies the type of diagnostic errors that will be recorded in the db2diag.log file. It is recommended that the DIAGLEVEL parameter be set to at least 3.",
    "rationale": "The recommended DIAGLEVEL setting is 3, but any value greater than 3 is also acceptable. A value of at least 3 will allow the Db2 instance to capture all errors and warnings that occur on the system.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command: db2 => get database manager configuration 3. Locate the DIAGLEVEL value in the output: Diagnostic error capture level (DIAGLEVEL) = 3 Ensure DIAGLEVEL is greater than or equal to 3.",
    "remediation": "1. Attach to the Db2 instance db2 => attach to <db2instance> 2. Run the following command: db2 => update database manager configuration using diaglevel 3",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_database_diaglevel_min_3",
      "db2_instance_logging_errors_warnings",
      "db2_diagnostic_logging_level_3",
      "db2_diaglog_errors_warnings_enabled",
      "db2_logging_diaglevel_compliance",
      "db2_diagnostic_logging_min_level_3",
      "db2_instance_diaglevel_errors_warnings",
      "db2_database_logging_errors_warnings_enabled"
    ]
  },
  {
    "id": "3.1.4",
    "title": "Secure Permissions for All Diagnostic Logs (DIAGPATH)",
    "assessment": "Automated",
    "description": "The DIAGPATH parameter specifies the location of the diagnostic files for the Db2 instance. The directory at this location should be secured so that users have read and execute privileges only (no write privileges). All Db2 administrators should have full access to the directory.",
    "rationale": "Securing the directory will ensure that the confidentiality, integrity, and availability of the diagnostic files contained in the directory are preserved.",
    "audit": "For both Windows and Linux Perform the following Db2 commands to obtain the location of the directory: 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command: db2 => get database manager configuration 3. Locate the DIAGPATH value in the output: Diagnostic data directory path (DIAGPATH) = <valid directory> Additional steps for Windows: 1. Connect to the Db2 host 2. Right-click over the diagnostic log directory 3. Choose Properties 4. Select the Security tab 5. Review the access for all accounts Additional steps for Linux: 1. Connect to the Db2 host 2. Change to the diagnostic log directory  3. Review the permissions of the directory $ ls -al",
    "remediation": "For Windows and Linux To change the directory for the diagnostic logs: 1. Attach to the Db2 instance db2 => attach to <db2instance> 2. Run the following command: db2 => update database manager configuration using diagpath <valid directory> Additional steps for Windows: 1. Connect to the Db2 host 2. Right-click over the diagnostic log directory 3. Choose Properties 4. Select the Security tab 5. Grant the Full Control authority to all Db2 administrator accounts 6. Grant only read and execute privileges to all other accounts (revoke any other privileges) Additional steps for Linux: 1. Connect to the Db2 host 2. Change to the diagnostic log directory 3. Change the permissions of the directory $ chmod -R 3777 .",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_instance_diagpath_read_only",
      "db2_instance_diagpath_no_write_privileges",
      "db2_instance_diagpath_admin_full_access",
      "db2_instance_diagpath_secure_permissions",
      "db2_instance_diagpath_user_restricted_access"
    ]
  },
  {
    "id": "3.1.5",
    "title": "Secure Permissions for Alternate Diagnostic Log Path (ALT_DIAGPATH)",
    "assessment": "Automated",
    "description": "The ALT_DIAGPATH parameter specifies an alternative location of the diagnostic files for the Db2 instance if the primary location specified by DIAGPATH is unavailable. The directory at this location should be secured so that users have read and execute privileges only (no write privileges). All Db2 administrators should have full access to the directory.",
    "rationale": "Securing the directory will ensure that the confidentiality, integrity, and availability of the diagnostic files contained in the directory are preserved.",
    "audit": "For both Windows and Linux Perform the following Db2 commands to obtain the location of the directory: 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command: db2 => get database manager configuration 3. Locate the ALT_DIAGPATH value in the output: Alternate diagnostic data directory path (ALT_DIAGPATH) = <valid directory> Additional steps for Windows: 1. Connect to the Db2 host 2. Right-click over the diagnostic log directory 3. Choose Properties 4. Select the Security tab 5. Review the access for all accounts Additional steps for Linux:  1. Connect to the Db2 host 2. Change to the diagnostic log directory 3. Review the permissions of the directory $ ls -al",
    "remediation": "For Windows and Linux To change the directory for the diagnostic logs: 1. Attach to the Db2 instance db2 => attach to <db2instance> 2. Run the following command: db2 => update database manager configuration using diagpath <valid directory> Additional steps for Windows: 1. Connect to the Db2 host 2. Right-click over the diagnostic log directory 3. Choose Properties 4. Select the Security tab 5. Grant the Full Control authority to all Db2 administrator accounts 6. Grant only read and execute privileges to all other accounts (revoke any other privileges) Additional steps for Linux: 1. Connect to the Db2 host 2. Change to the diagnostic log directory 3. Change the permissions of the directory $ chmod -R 3777 .",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_instance_alt_diagpath_read_only",
      "db2_instance_alt_diagpath_no_write_privileges",
      "db2_instance_alt_diagpath_admin_full_access",
      "db2_instance_alt_diagpath_secure_permissions",
      "db2_instance_alt_diagpath_restrict_user_access"
    ]
  },
  {
    "id": "3.1.6",
    "title": "Disable Client Discovery Requests (DISCOVER)",
    "assessment": "Automated",
    "description": "The DISCOVER parameter determines what kind of discovery requests, if any, the Db2 client can make. It is recommended that this is disabled.",
    "rationale": "Discovery capabilities may be used by a malicious entity to derive the names of and target Db2 instances. In this configuration, the client can not issue discovery requests.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Run the following command: db2 => get database manager configuration 2. Locate the DISCOVER value in the output: Discovery mode (DISCOVER) = KNOWN 3. If the value of DISCOVER is DISABLE then this is a Pass, otherwise the remediation should be followed.",
    "remediation": "1. Run the following command: db2 => update database manager configuration using discover disable References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=parameters-discover-discovery- mode",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=parameters-discover-discovery- mode",
    "function_names": [
      "db2_database_discover_disabled",
      "db2_client_discovery_disabled",
      "db2_instance_discover_requests_disabled",
      "db2_connection_discover_disabled",
      "db2_security_discover_disabled"
    ]
  },
  {
    "id": "3.1.7",
    "title": "Disable Instance Discoverability (DISCOVER_INST)",
    "assessment": "Automated",
    "description": "The DISCOVER_INST parameter specifies whether the instance can be discovered in the network. It is recommended that instances not be discoverable.",
    "rationale": "Discovery capabilities may be used by a malicious entity to derive the names of and target Db2 instances.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Attach to the Db2 instance: db2 => attach to <db2instance> 2. Run the following command: db2 => get database manager configuration 3. Locate the DISCOVER_INST value in the output: Discover server instance (DISCOVER_INST) = DISABLE 4. If the value of DISCOVER_INST is DISABLE then this is a Pass. Otherwise database discovery is possible, and the remediation steps should be followed.",
    "remediation": "1. Attach to the Db2 instance: db2 => attach to <db2instance> 2. Run the following command: db2 => update database manager configuration using discover_inst disable  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=parameters-discover-inst-discover- server-instance",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=parameters-discover-inst-discover- server-instance",
    "function_names": [
      "compute_instance_discover_inst_disabled",
      "compute_instance_discovery_disabled",
      "compute_instance_network_discovery_disabled",
      "compute_instance_visibility_disabled",
      "compute_instance_external_discovery_disabled"
    ]
  },
  {
    "id": "3.1.8",
    "title": "Set Maximum Connection Limits (MAX_CONNECTIONS and MAX_COORDAGENTS)",
    "assessment": "Automated",
    "description": "The MAX_CONNECTIONS parameter indicates the maximum number of client connections allowed per member. It is recommended that this parameter be set without the AUTOMATIC setting. The AUTOMATIC setting means for the value to grow unconstrained, and a value of -1 means to use the same value as MAX_COORDAGENTS. The MAX_COORDAGENTS parameter equals the maximum number of agents needed to perform connections to the database or attachments to the instance. The AUTOMATIC setting means for the value to grow unconstrained. The MAX_COORDAGENTS parameter should be set to a fixed value without the AUTOMATIC setting. The exact value is highly dependent on business requirements for simultaneous connections. For example, if only a single application with a connection pool of 10 connections will connect to the database server, a much smaller value may be appropriate than a database server that expects to have hundreds of simultaneous connections. These examples will use a value of 200. Ensure that dependent parameters, such as MAXAPPLS, are set less than or equal to the MAX_CONNECTIONS parameter. As instance parameters, MAX_CONNECTIONS and MAX_COORDAGENTS govern all databases within the instance, and thus the summation of MAXAPPLS value for all databases must be considered.",
    "rationale": "By default, Db2 allows an unlimited number of users to access the Db2 instance. In addition to giving access to the Db2 instance to authorized users only, it is recommended to set a limit to the number of users allowed to access a Db2 instance. This helps prevent denial of service conditions should an authorized process malfunction and attempt many simultaneous connections.",
    "audit": "erform the following Db2 commands to obtain the value(s) for these settings: 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command:  db2 => get database manager configuration 3. Locate the MAX_COORDAGENTS values in the output: Max number of coordinating agents (MAX_COORDAGENTS) = AUTOMATIC(200) The value of MAX_COORDAGENTS should be set without AUTOMATIC. 4. Locate the MAX_CONNECTIONS values in the output: Max number of client connections (MAX_CONNECTIONS) = AUTOMATIC(MAX_COORDAGENTS) The value of MAX_COORDAGENTS for the MAX_CONNECTIONS parameter signifies a value of -1 and indicates it uses the value of MAX_COORDAGENTS. If the value of MAX_CONNECTIONS shows AUTOMATIC, this is a Fail, and the remediation steps should be followed.",
    "remediation": "The default value for MAX_COORDAGENTS is AUTOMATIC(200). Allowable range is 1 to 64,000. The recommended value is 200, without the AUTOMATIC setting. The value of 200 is used as an example and is dependent on workload as discussed in the Description. The default value for MAX_CONNECTIONS is set to AUTOMATIC(-1). Allowable range is 1 to 64,000, or -1 for matching the value of MAX_COORDAGENTS. The recommended value is -1 without AUTOMATIC. It is also acceptable to have a value for MAX_CONNECTIONS that is greater than MAX_COORDAGENTS, such as 300, in order to turn on the Concentrator feature. Generally, both MAX_COORDAGENTS and MAX_CONNECTIONS should be configured within the same statement, otherwise the error SQL6112N may be encountered. The following command will set the MAX_COORDAGENTS to 200, as well as set the MAX_CONNECTIONS to -1. 1. Attach to the Db2 instance db2 => attach to <db2instance> 2. Run the following command: db2 => update database manager configuration using max_coordagents 200 max_connections -1 References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=parameters-max-connections- maximum-number-client-connections 2. https://www.ibm.com/docs/en/db2/11.5?topic=parameters-max-coordagents- maximum-number-coordinating-agents",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=parameters-max-connections- maximum-number-client-connections 2. https://www.ibm.com/docs/en/db2/11.5?topic=parameters-max-coordagents- maximum-number-coordinating-agents",
    "function_names": [
      "db2_instance_max_connections_fixed",
      "db2_instance_max_coordagents_fixed",
      "db2_instance_max_connections_no_automatic",
      "db2_instance_max_coordagents_no_automatic",
      "db2_instance_max_connections_dependent_params_valid",
      "db2_instance_max_coordagents_dependent_params_valid",
      "db2_instance_max_connections_less_than_max_coordagents",
      "db2_instance_max_connections_business_aligned",
      "db2_instance_max_coordagents_business_aligned",
      "db2_instance_max_connections_sum_maxappls_valid"
    ]
  },
  {
    "id": "3.1.9",
    "title": "Set Administrative Notification Level (NOTIFYLEVEL)",
    "assessment": "Automated",
    "description": "The NOTIFYLEVEL parameter specifies the type of administration notification messages that are written to the administration notification log. It is recommended that this parameter be set greater than or equal to 3. A setting of 3, which includes settings 1 & 2, will log all fatal errors, failing services, system integrity, as well as system health.",
    "rationale": "The system should be monitoring all Health Monitor alarms, warnings, and attentions. This may give an indication of any malicious usage on the Db2 instance.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command: db2 => get database manager configuration 3. Locate the NOTIFYLEVEL value in the output: Notify Level (NOTIFYLEVEL) = 3",
    "remediation": "1. Attach to the Db2 instance db2 => attach to <db2instance> 2. Run the following command: db2 => update database manager configuration using notifylevel 3  Default Value: The default value of NOTIFYLEVEL is 3.",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_instance_notify_level_min_3",
      "db2_database_notify_level_secure",
      "db2_admin_notification_logging_enabled",
      "db2_notification_log_health_monitoring_enabled",
      "db2_notify_level_fatal_errors_logged",
      "db2_notify_level_system_integrity_logged",
      "db2_notify_level_service_failures_logged",
      "db2_notify_level_system_health_logged"
    ]
  },
  {
    "id": "3.1.10",
    "title": "Secure the Java Development Kit Installation Path (JDK_PATH)",
    "assessment": "Automated",
    "description": "The JDK_PATH parameter contains the directory under which the Software Developer's Kit (SDK) for Java™ is installed. The Java SDK is used for running Java stored procedures and user-defined functions. It is recommended that the owner of this directory is bin on Linux and AIX, and a member of the Db2 administration group on Windows. The directory should have read and execute permission for all users, but only write permission for the owner.",
    "rationale": "Restricting access to the Java JDK will help ensure that only an authorized JDK is used for running Java routines within Db2.",
    "audit": "For Windows and Linux: 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command from the Db2 command window: db2 => get database manager configuration 3. Locate this value in the output to find the JDK path: Default database path (JDK_PATH) = <valid directory> Additional steps for Windows: 1. Connect to the Db2 host 2. Right-click over the directory used for the JDK path 3. Choose Properties 4. Select the Security tab 5. Review and verify the privileges for all accounts. 6. Review and verify that the Db2 Administrator is the owner of the directory. Additional steps for Linux:  1. Connect to the Db2 host 2. Change to the directory used as the JDK path 3. Review and verify the permissions for the directory for all users; also ensure that bin is the owner. $ ls -ald",
    "remediation": "For Windows and Linux: 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command to change the JDK path, if necessary: db2 => update database manager configuration using jdk_path <valid directory> Additional steps for Windows: 1. Connect to the Db2 host 2. Right-click over the directory used as the JDK path 3. Choose Properties 4. Select the Security tab 5. Assign ownership of the directory to the Db2 Administrator 6. Grant all Db2 administrator accounts the Full Control authority 7. Grant only read and execute privileges to all other users (revoke all other privileges) Additional steps for Linux: 1. Connect to the Db2 host as root 2. Change to the directory used as the JDK path 3. Assign bin to be the owner of the directory using the chown command 4. Change the permissions for the directory $ chmod -R 755 References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=parameters-jdk-path-software- developer",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=parameters-jdk-path-software- developer",
    "function_names": [
      "db2_jdk_path_owner_bin",
      "db2_jdk_path_permissions_read_execute_all",
      "db2_jdk_path_write_owner_only",
      "db2_jdk_path_admin_group_windows",
      "db2_jdk_path_secure_installation"
    ]
  },
  {
    "id": "3.1.11",
    "title": "Secure the Python Runtime Path (PYTHON_PATH)",
    "assessment": "Automated",
    "description": "The PYTHON_PATH parameter contains the directory under which the Python runtime is installed. It is recommended that the owner of this directory is bin on Linux and AIX, and a member of the Db2 administration group on Windows. The directory should have read and execute permission for all users, but only write permission for the owner.",
    "rationale": "Restricting access to the python runtime will help ensure that only an authorized runtime is used for running Python routines within Db2.",
    "audit": "For Windows and Linux: 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command from the Db2 command window: db2 => get database manager configuration 3. Locate this value in the output to find the Python path: Default database path (PYTHON_PATH) = <valid directory> Additional steps for Windows: 1. Connect to the Db2 host 2. Right-click over the directory used for the Python path 3. Choose Properties 4. Select the Security tab 5. Review and verify the privileges for all accounts. 6. Review and verify that the Db2 Administrator is the owner of the directory. Additional steps for Linux: 1. Connect to the Db2 host 2. Change to the directory used as the Python path  3. Review and verify the permissions for the directory for all users; also ensure that bin is the owner. $ ls -ald",
    "remediation": "For Windows and Linux: 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command to change the Python path, if necessary: db2 => update database manager configuration using python_path <valid directory> Additional steps for Windows: 1. Connect to the Db2 host 2. Right-click over the directory used as the Python path 3. Choose Properties 4. Select the Security tab 5. Assign ownership of the directory to the Db2 Administrator 6. Grant all Db2 administrator accounts the Full Control authority 7. Grant only read and execute privileges to all other users (revoke all other privileges) Additional steps for Linux: 1. Connect to the Db2 host as root 2. Change to the directory used as the Python path 3. Assign bin to be the owner of the directory using the chown command 4. Change the permissions for the directory $ chmod -R 755",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "compute_python_runtime_path_owner_bin",
      "compute_python_runtime_path_permissions_read_all",
      "compute_python_runtime_path_permissions_write_owner",
      "compute_python_runtime_path_permissions_execute_all",
      "compute_python_runtime_path_owner_db2_admin_group_windows"
    ]
  },
  {
    "id": "3.1.12",
    "title": "Secure the R Runtime Path (R_PATH)",
    "assessment": "Automated",
    "description": "The R_PATH parameter contains the directory under which the R runtime is installed. The R runtime is used for running R stored procedures and user-defined functions. It is recommended that the owner of this directory is bin on Linux and AIX, and a member of the Db2 administration group on Windows. The directory should have read and execute permission for all users, but only write permission for the owner.",
    "rationale": "Restricting access to the R runtime will help ensure that only an authorized runtime is used for running R routines within Db2.",
    "audit": "For Windows and Linux: 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command from the Db2 command window: db2 => get database manager configuration 3. Locate this value in the output to find the R path: Default database path (R_PATH) = <valid directory> Additional steps for Windows: 1. Connect to the Db2 host 2. Right-click over the directory used for the R path 3. Choose Properties 4. Select the Security tab 5. Review and verify the privileges for all accounts. 6. Review and verify that the Db2 Administrator is the owner of the directory. Additional steps for Linux: 1. Connect to the Db2 host 2. Change to the directory used as the R path  3. Review and verify the permissions for the directory for all users; also ensure that bin is the owner. $ ls -ald",
    "remediation": "For Windows and Linux: 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command to change the R path, if necessary: db2 => update database manager configuration using r_path <valid directory> Additional steps for Windows: 1. Connect to the Db2 host 2. Right-click over the directory used as the R path 3. Choose Properties 4. Select the Security tab 5. Assign ownership of the directory to the Db2 Administrator 6. Grant all Db2 administrator accounts the Full Control authority 7. Grant only read and execute privileges to all other users (revoke all other privileges) Additional steps for Linux: 1. Connect to the Db2 host as root 2. Change to the directory used as the R path 3. Assign bin to be the owner of the directory using the chown command 4. Change the permissions for the directory $ chmod -R 755 References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=parameters-r-path-r-runtime- directory",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=parameters-r-path-r-runtime- directory",
    "function_names": [
      "db2_r_runtime_path_owner_bin_linux_aix",
      "db2_r_runtime_path_owner_admin_group_windows",
      "db2_r_runtime_path_read_execute_all",
      "db2_r_runtime_path_write_owner_only"
    ]
  },
  {
    "id": "3.1.13",
    "title": "Secure the Communication Buffer Exit Library (COMM_EXIT_LIST)",
    "assessment": "Automated",
    "description": "A communication exit library is a dynamically loaded library that vendor applications use to examine communication buffers. The COMM_EXIT_LIST parameter specifies the list of communication buffer exist libraries. The permissions on the libraries should be secured so that users other than the instance owner do not have write privileges.",
    "rationale": "If a malicious user has write access to a communication exit library, they can overwrite it with their own thereby receiving all of the communication buffers that Db2 receives over the network. Securing the libraries will prevent a loss of confidentiality of data.",
    "audit": "Steps for Linux: • 32-bit and 64-bit server side user authentication plugins are found in $DB2PATH/security32/plugin/commexit and $DB2PATH/security64/plugin/commexit directories respectively Review the permissions of the plugins that are in use: ls -al Steps for Windows: • 32-bit and 64-bit server side user authentication plugins are found in $DB2PATH\\security\\plugin\\commexit\\ <instance name> Review the permissions of the plugins that are in use: 1. Right-click over the plugin file 2. Choose properties 3. Select the Security tab 4. Review the access for all accounts",
    "remediation": "To change permissions of a file on Linux: chmod 755 <file>  To change permissions of a file on Windows: 1. Right-click on the file 2. Choose properties 3. Select the Security tab 4. Grant the Full Control authority to all Db2 administrator accounts 5. Grant only read and execute privileges to all other accounts (revoke any other privileges)",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_communication_buffer_exit_library_restricted_permissions",
      "db2_comm_exit_list_write_permissions_restricted",
      "db2_communication_buffer_exit_library_owner_only_write",
      "db2_comm_exit_list_library_permissions_secure",
      "db2_communication_buffer_exit_library_no_public_write",
      "db2_comm_exit_list_library_write_restricted_to_owner"
    ]
  },
  {
    "id": "3.2.1",
    "title": "Specify Secure Remote Shell Command (DB2RSHCMD)",
    "assessment": "Automated",
    "description": "The DB2RSHCMD registry varible specifies the remote shell command to use when starting remote database partitions and with the db2_all script to run utilities and commands on all database partitions. It is recommended that a value be used which encrypts the data sent between partitions, such as ssh.",
    "rationale": "The traditional rsh command sends all its data, including passwords, in plaintext between partitions. An attacker who can read network traffic may have access to these passwords and other data. Specifying a remote shell command, such as ssh encrypts the data sent over the network. Impact: Enabling this value without configuring public and private keys may result in an inability to start or stop Db2 across all partitions without manually issuing db2start/db2stop individually on each partition.",
    "audit": "Verify that the DB2RSHCMD registry variable is set to a value such as ssh that encrypts the data by running the following command: db2set -all | grep DB2RSHCMD In Db2 V11.5 Mod Pack 6 and later, the above command should not yield a value, or should yield a value of ssh. In Db2 V11.5 Mod Pack 5 or earlier, the above command should yield a value of ssh.",
    "remediation": "1. Follow the guidance on this page to create public and private keys for ssh: https://www.ibm.com/docs/en/db2/11.5?topic=installation-enabling-execution- remote-commands 2. Run the following command to set the DB2_RSHCMD registry variable to ssh: db2set DB2RSHCMD=ssh  Default Value: In Db2 V11.5 Mod Pack 5 or earlier, the default value is rsh. In Db2 V11.5 Mod Pack 6 or later, the default value is ssh. References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=variables- communications#r0005660__C_DB2RSHCMD 2. https://www.ibm.com/docs/en/db2/11.5?topic=installation-enabling-execution- remote-commands",
    "profile_applicability": "•  Level 1 - RDBMS",
    "impact": "Enabling this value without configuring public and private keys may result in an inability to start or stop Db2 across all partitions without manually issuing db2start/db2stop individually on each partition.",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=variables- communications#r0005660__C_DB2RSHCMD 2. https://www.ibm.com/docs/en/db2/11.5?topic=installation-enabling-execution- remote-commands",
    "function_names": [
      "db2_registry_secure_rsh_command",
      "db2_registry_rsh_command_encrypted",
      "db2_registry_rsh_command_ssh_required",
      "db2_registry_secure_remote_shell",
      "db2_registry_rsh_command_secure_protocol"
    ]
  },
  {
    "id": "3.2.2",
    "title": "Turn Off Remote Command Legacy Mode (DB2RCMD_LEGACY_MODE)",
    "assessment": "Automated",
    "description": "The DB2RCMD_LEGACY_MODE registry variable determines whether the Db2 Remote Command Service runs with enhanced security or not. It is recommended that legacy mode not be enabled. This registry variable only applies to Db2 Servers running on Windows.",
    "rationale": "Legacy mode requires the Db2 service account to have privileges to impersonate the client account.",
    "audit": "Verify that the DB2RCMD_LEGACY_MODE registry variable is set to off by running the following command: db2set -all | grep DB2RCMD_LEGACY_MODE The above command should not yield a value or should yield a value of OFF.",
    "remediation": "Run the following command to set the DB2RCMD_LEGACY_MODE registry variable to OFF: db2set DB2RCMD_LEGACY_MODE=OFF Default Value: The default value of DB2RCMD_LEGACY_MODE is OFF. References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=variables-system- environment#r0005658_%5C_S_DB2RCMD_LEGACY_MODE",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=variables-system- environment#r0005658_%5C_S_DB2RCMD_LEGACY_MODE",
    "function_names": [
      "db2_registry_legacy_mode_disabled",
      "db2_remote_command_legacy_mode_disabled",
      "db2_registry_legacy_mode_secure",
      "db2_remote_command_legacy_mode_secure",
      "db2_registry_legacy_mode_not_enabled",
      "db2_remote_command_legacy_mode_not_enabled"
    ]
  },
  {
    "id": "3.2.3",
    "title": "Disable Grants During Restore (DB2_RESTORE_GRANT_ADMIN_AUTHORITIES)",
    "assessment": "Automated",
    "description": "The DB2_RESTORE_GRANT_ADMIN_AUTHORITIES registry variable determines whether the authorization ID of the user performing a restore is granted administrative authorities (SECADM, DBADM, DATAACCESS, and ACCESSCTRL authorities) on the restored database. It is typically used when restoring a database on a server where the original database creator account does not exist. It is recommended that this variable not be set except when specifically performing a restore where you wish these privileges to be granted so they are not accidentally granted.",
    "rationale": "Use of this registry variable may grant administrative authorities accidentally if the value is left on during normal operations and a restore is run.",
    "audit": "Verify the value of the DB2_RESTORE_GRANT_ADMIN_AUTHORITIES registry variable by running the following command: db2set -all | grep DB2_RESTORE_GRANT_ADMIN_AUTHORITIES The above command should not yield a value or should yield a value of OFF.",
    "remediation": "Run the following command to set the DB2_RESTORE_GRANT_ADMIN_AUTHORITIES registry variable to OFF: db2set DB2_RESTORE_GRANT_ADMIN_AUTHORITIES=OFF Default Value: The default value of DB2_RESTORE_GRANT_ADMIN_AUTHORITIES is OFF. References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=variables-system- environment#r0005658_\\_S_DB2_RESTORE_GRANT_ADMIN_AUTHORITIES",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=variables-system- environment#r0005658_\\_S_DB2_RESTORE_GRANT_ADMIN_AUTHORITIES",
    "function_names": [
      "db2_instance_restore_grants_disabled",
      "db2_registry_restore_admin_privileges_disabled",
      "db2_database_restore_privileges_escalation_prevented",
      "db2_instance_restore_admin_authorities_restricted",
      "db2_registry_restore_grants_default_denied"
    ]
  },
  {
    "id": "3.2.4",
    "title": "Enable Extended Security (DB2_EXTSECURITY)",
    "assessment": "Automated",
    "description": "The DB2_EXTSECURITY registry variable determines whether extended security is enabled on Windows. Extended security enables file permissions for all Db2 objects so they can be accessed by users in DB2ADMNS and DB2USERS groups. It is recommended that extended security be enabled. This registry variable only applies to Db2 Servers running on Windows.",
    "rationale": "Extended security provides file permission protection for Db2 objects when running in a multi-user environment. Impact: Before enabling extended security for an existing installation, you should ensure you have added users to the DB2ADMNS and DB2USERS groups so that you are able to access Db2 once the permission have been applied. Once extended security is enabled, it is not recommended to be directly disabled, instead a full re-install should be used.",
    "audit": "erify that extended security is enabled by running the following command: db2set -all | grep DB2_EXTSECURITY The above command should yield a value of ON.",
    "remediation": "Run the following command to enable extended security (consult documentation for additional options as appropriate): db2extsec References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=variables- miscellaneous#r0005669__M_DB2_EXTSECURITY 2. https://www.ibm.com/docs/en/db2/11.5?topic=security-extended-windows-using- db2admns-db2users-groups 3. https://www.ibm.com/docs/en/db2/11.5?topic=commands-db2extsec-set- permissions-db2-objects",
    "profile_applicability": "•  Level 1 - RDBMS",
    "impact": "Before enabling extended security for an existing installation, you should ensure you have added users to the DB2ADMNS and DB2USERS groups so that you are able to access Db2 once the permission have been applied. Once extended security is enabled, it is not recommended to be directly disabled, instead a full re-install should be used.",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=variables- miscellaneous#r0005669__M_DB2_EXTSECURITY 2. https://www.ibm.com/docs/en/db2/11.5?topic=security-extended-windows-using- db2admns-db2users-groups 3. https://www.ibm.com/docs/en/db2/11.5?topic=commands-db2extsec-set- permissions-db2-objects",
    "function_names": [
      "db2_registry_extended_security_enabled",
      "db2_registry_extended_security_enabled_windows",
      "db2_registry_extended_security_enabled_db2admins",
      "db2_registry_extended_security_enabled_db2users",
      "db2_registry_extended_security_enabled_file_permissions",
      "db2_registry_extended_security_enabled_windows_only"
    ]
  },
  {
    "id": "3.2.5",
    "title": "Limit OS Privileges of Fenced Mode Process (DB2_LIMIT_FENCED_GROUP)",
    "assessment": "Automated",
    "description": "The DB2_LIMIT_FENCED_GROUP registry variable allows restricting the operating system privileges of the fenced mode process (db2fmp) to the privileges assigned to the DB2USERS group. This variable only has effect if extended security is enabled (DB2_EXTSEC) and the Db2 Service Account is not LocalSystem. This registry variable only applies to Db2 Servers running on Windows.",
    "rationale": "By default, the fenced mode process has access to both the DB2ADMNS and DB2USERS groups.",
    "audit": "Verify the value of the DB2_LIMIT_FENCED_GROUP registry variable by running the following command: db2set -all | grep DB2_LIMIT_FENCED_GROUP The above command should yield a value of ON.",
    "remediation": "Run the following command to set the DB2_LIMIT_FENCED_GROUP registry variable to ON: db2set DB2_LIMIT_FENCED_GROUP=ON Default Value: The default value of DB2_LIMIT_FENCED_GROUP is OFF. References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=variables- miscellaneous#r0005669__M_DB2_LIMIT_FENCED_GROUP 2. https://www.ibm.com/docs/en/db2/11.5?topic=windows-restricting-operating- system-privileges-db2fmp-process",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=variables- miscellaneous#r0005669__M_DB2_LIMIT_FENCED_GROUP 2. https://www.ibm.com/docs/en/db2/11.5?topic=windows-restricting-operating- system-privileges-db2fmp-process",
    "function_names": [
      "db2_fenced_process_no_admin_privileges",
      "db2_fenced_process_restricted_group",
      "db2_fenced_process_extsec_enabled",
      "db2_service_account_no_localsystem",
      "db2_fenced_process_privileges_limited",
      "db2_registry_fenced_group_restricted",
      "db2_windows_fenced_process_secure",
      "db2_fenced_process_db2users_group_only"
    ]
  },
  {
    "id": "3.3.1",
    "title": "Secure Db2 Runtime Library",
    "assessment": "Manual",
    "description": "A Db2 software installation will place all executables under the default <DB2PATH> \\sqllib directory. This directory needs to be secured so it grants only the necessary access to authorized users and administrators.",
    "rationale": "The Db2 runtime is comprised of files that are executed as part of the Db2 service. If these resources are not secured, an attacker may alter them to execute arbitrary code.",
    "audit": "Perform the following to obtain the value for this setting: For Windows: 1. Connect to the Db2 host 2. Right-click on the NODE000x\\sqldbdir directory 3. Choose Properties 4. Select the Security tab 5. Determine the permissions for DB administrator accounts and all other accounts For Linux: 1. Connect to the Db2 host 2. Change to the NODE000x/sqldbdir directory 3. Determine the permissions for the directory $ ls -al",
    "remediation": "For Windows: 1. Connect to the Db2 host 2. Right-click on the NODE000x\\sqldbdir directory 3. Choose Properties 4. Select the Security tab 5. Select all DB administrator accounts and grant them the Full Control authority 6. Select all other accounts and revoke all privileges other than Read and Execute  For Linux: 1. Connect to the Db2 host 2. Change to the /NODE000x/sqldbdir directory 3. Change the permission level of the directory to this recommended value $ chmod -R 755 Default Value: Linux • $DB2PATH/NODE000x/sqldbdir is owned by the Db2 administrator with read, write, and execute access. Windows • $DB2PATH\\NODE000x\\sqldbdir owned by the Db2 administrator with read, write, and execute access. The database instance db2inst1 located in /home/NODE000x needs the following permissions: drwxrwxr-x 11 db2inst1 db2grp1 4096 Aug 08 1:34 NODE0000 All lower directories need the same settings: /db2,/db2/data, /db2/data/db2inst1, /db2/data/db2inst1/db2inst1 and /db2/data/db2inst1/db2inst1/NODE0000 would need the same settings drwxrwxr-x.",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_runtime_library_secure_permissions",
      "db2_runtime_library_restrict_access",
      "db2_runtime_library_authorized_users_only",
      "db2_runtime_library_no_unauthorized_access",
      "db2_runtime_library_minimal_permissions",
      "db2_runtime_library_admin_only_access",
      "db2_runtime_library_directory_protected",
      "db2_runtime_library_executable_restricted"
    ]
  },
  {
    "id": "3.3.2",
    "title": "Secure the Database Container Directory",
    "assessment": "Manual",
    "description": "A Db2 database container is the physical storage of the data.",
    "rationale": "The containers are needed for the database to operate properly. The loss of the containers can cause down time. Also, allowing excessive access to the containers may help an attacker to gain access to their contents. Therefore, secure the location(s) of the containers by restricting the access and ownership. Allow only the instance owner to have access to the tablespace containers.",
    "audit": "Review all users that have access to the directory of the containers. On Linux and AIX ensure that only the instance owner has access to the directory of the containers and the container files themselves. On Windows only administrators, and if extended security is enabled, members of the DB2ADMINS group should have access to the directory of the containers and the container files. No other users should have access.",
    "remediation": "On Linux and AIX, set the privileges for the directory of the containers so that only the instance owner has full access, and all other users have no access. On Windows, set the privileges for the directory of the containers and the container files so that only administrators, and if extended security is enabled members of the DB2ADMINS group, have full access, and all other users have no access.",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_container_directory_secure_permissions",
      "db2_container_directory_encryption_enabled",
      "db2_container_directory_restrict_access",
      "db2_container_directory_audit_logging_enabled",
      "db2_container_directory_backup_enabled",
      "db2_container_directory_immutable_config",
      "db2_container_directory_no_world_writable",
      "db2_container_directory_owner_validated"
    ]
  },
  {
    "id": "3.3.3",
    "title": "Set umask Value in the Db2 Instance Owner’s .profile",
    "assessment": "Automated",
    "description": "The Db2 instance owner’s .profile file in Linux sets the environment variables and the settings for the user. This file is specific to the Korn shell and BASH shell, and other shells may have a different file.",
    "rationale": "The umask value should be set to 022 for the owner of the Db2 software at all times to ensure files are not created with unnecessary privileges.",
    "audit": "1. Ensure that the umask 022 setting exists in the .profile. $ grep umask ~/.profile umask 022 2. Ensure that umask 022 is currently enforced when logged in as the instance owner: $ umask 022",
    "remediation": "Add umask 022 to the .profile file.",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_instance_owner_profile_umask_configured",
      "db2_instance_profile_secure_umask_set",
      "db2_owner_profile_umask_restrictive",
      "db2_profile_umask_value_compliant",
      "db2_instance_umask_setting_enforced"
    ]
  },
  {
    "id": "4.1.1",
    "title": "Creating the Database Without PUBLIC Grants (RESTRICTIVE)",
    "assessment": "Automated",
    "description": "This parameter indicates whether the database was created with the RESTRICTIVE clause in the CREATE DATABASE statement. When creating a database, the use of the RESTRICTIVE clause will cause certain privileges to be revoked from PUBLIC.",
    "rationale": "Impact: Allowing the default privileges granted to the group PUBLIC to remain in tack can have negative impacts on the database as well as undermine measures put in place to limit access to authorized users.",
    "audit": "Perform the following Db2 commands to determine if the database was created with the RESTRICTIVE clause. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select value from sysibmadm.dbcfg where name = 'restrict_access' If the value is YES then this is a Pass. Otherwise the database was not created with the RESTRICTIVE clause.",
    "remediation": "There is no remediation for this parameter due to the fact that the placement of the RESTRICTIVE clause happens within the CREATE DATABASE statement. Unless your backup strategies allow for a complete overhaul of your environment where you are able to recreate the database with the RESTRICTIVE clause, we do not recommend changing this parameter. However, if you would like to align your database configuration to that which the RESTRICTIVE clause would provide, please ensure the following: 1. SYSCAT.DBAUTH – Ensure PUBLIC is NOT granted the following authorities: o CREATETAB o BINDADD  o CONNECT o IMPLICIT_SCHEMA 2. SYSCAT.TABAUTH – Ensure PUBLIC is NOT granted the following privileges: o SELECT on all SYSCAT and SYSIBM tables o SELECT and UPDATE on all SYSSTAT tables o SELECT on the following views in schema SYSIBMADM: ▪ ALL_* ▪ USER_* ▪ ROLE_* ▪ SESSION_* ▪ DICTIONARY ▪ TAB 3. SYSCAT.ROUTINEAUTH – Ensure PUBLIC is NOT granted the following privileges: o EXECUTE with GRANT on all procedures in schema SQLJ o EXECUTE with GRANT on all functions and procedures in schema SYSFUN o EXECUTE with GRANT on all functions and procedures in schema SYSPROC o EXECUTE on all table functions in schema SYSIBM o EXECUTE on all other procedures in schema SYSIBM 4. SYSCAT.MODULEAUTH – Ensure PUBLIC is NOT granted the following privileges: o EXECUTE on the following modules in schema SYSIBMADM: ▪ DBMS_DDL ▪ DBMS_JOB ▪ DBMS_LOB ▪ DBMS_OUTPUT ▪ DBMS_SQL ▪ DBMS_STANDARD ▪ DBMS_UTILITY 5. SYSCAT.PACKAGEAUTH – Ensure PUBLIC is NOT granted the following privileges: o BIND on all packages created in the NULLID schema o EXECUTE on all packages created in the NULLID schema 6. SYSCAT.SCHEMAAUTH – Ensure PUBLIC` is NOT granted the following privileges: o CREATEIN on schema SQLJ o CREATEIN on schema NULLID 7. SYSCAT.TBSPACEAUTH – Ensure PUBLIC is NOT granted the USE privilege on table space USERSPACE1. 8. SYSCAT.WORKLOADAUTH – Ensure PUBLIC is NOT granted the USAGE privilege on SYSDEFAULTUSERWORKLOAD. 9. SYSCAT.VARIABLEAUTH – Ensure PUBLIC is NOT granted the READ privilege on schema global variables in the SYSIBM schema. References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=commands-create-database 2. https://www.ibm.com/docs/en/db2/11.5?topic=ownership-default-privileges- granted-creating-database",
    "profile_applicability": "•  Level 2 - RDBMS (extends Level 1 - RDBMS)",
    "impact": "Allowing the default privileges granted to the group PUBLIC to remain in tack can have negative impacts on the database as well as undermine measures put in place to limit access to authorized users.",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=commands-create-database 2. https://www.ibm.com/docs/en/db2/11.5?topic=ownership-default-privileges- granted-creating-database",
    "function_names": [
      "database_public_grants_restricted",
      "database_restrictive_creation_enabled",
      "database_public_access_revoked",
      "database_restrictive_clause_used",
      "database_public_privileges_disabled"
    ]
  },
  {
    "id": "4.1.2",
    "title": "Set Failed Archive Retry Delay (ARCHRETRYDELAY)",
    "assessment": "Automated",
    "description": "The ARCHRETRYDELAY parameter specifies the number of seconds the Db2 service will wait before it reattempts to archive log files after a failure. It is recommended that this parameter be set anywhere in the range of 10-30. You do not want the delay to be so short that the database ends up in a denial of service scenario, but you don't want the delay to be too long if an outside attack happens at the same time.",
    "rationale": "Ensure that the value is non-zero, otherwise archive logging will not retry after the first failure. A denial of service attack can render the database without an archive log if this setting is not set. An archive log will ensure that all transactions can safely be restored or logged for auditing.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => get database configuration 3. Locate the ARCHRETRYDELAY value in the output: Log archive retry Delay (secs) (ARCHRETRYDELAY) = 20",
    "remediation": "1. Connect to the Db2 database db2 => connect to <dbname> 2. To successfully set the ARCHRETRYDELAY within the 10-30 range, run the following command:  db2 => update database configuration using archretrydelay *nn* (where *nn* is a range between 10-30) Default Value: The default value for ARCHRETRYDELAY is 20.",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_log_archive_retry_delay_within_range",
      "db2_log_archive_retry_delay_min_10",
      "db2_log_archive_retry_delay_max_30",
      "db2_log_archive_retry_delay_configured",
      "db2_log_archive_retry_delay_valid"
    ]
  },
  {
    "id": "4.1.3",
    "title": "Auto-restart After Abnormal Termination (AUTORESTART)",
    "assessment": "Automated",
    "description": "The AUTORESTART parameter specifies if the database manager will start a crash recovery automatically when the first user tries to connect to a database which has previously terminated abnormally. If the parameter is set to OFF an explicit RESTART DATABASE command has to be issued to initiate a crash recovery. It is recommended that this parameter is set to ON (which is also the default).",
    "rationale": "Setting the database to auto-restart will reduce the downtime of the database.",
    "audit": "1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => get database configuration 3. Locate the AUTORESTART value in the output: Auto restart enabled (AUTORESTART) = ON",
    "remediation": "1. Connect to the Db2 database db2 => connect to <dbname> 2. Run the following command: db2 => update database configuration using autorestart on  Default Value: The default value for AUTORESTART is ON.",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "database_manager_autorecovery_enabled",
      "database_manager_autorecovery_on",
      "database_manager_autorecovery_default",
      "database_manager_autorecovery_required",
      "database_manager_crash_recovery_auto",
      "database_manager_autorecovery_no_manual_restart",
      "database_manager_autorecovery_post_crash",
      "database_manager_autorecovery_on_abnormal_termination"
    ]
  },
  {
    "id": "4.1.4",
    "title": "Disable Database Discovery (DISCOVER_DB)",
    "assessment": "Automated",
    "description": "The DISCOVER_DB parameter specifies if the database will respond to a discovery request from a client. It is recommended that this parameter be set to DISABLE.",
    "rationale": "Setting the database discovery to disabled can hide a database with sensitive data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => get database configuration 3. Locate the DISCOVER_DB value in the output: Discovery support for this database (DISCOVER_DB) = DISABLE",
    "remediation": "1. Connect to the Db2 database db2 => connect to <dbname> 2. Run the following command: db2 => update database configuration using discover_db disable",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "database_instance_discovery_disabled",
      "database_instance_discover_db_disabled",
      "database_instance_client_discovery_disabled",
      "database_instance_unauthorized_discovery_disabled",
      "database_instance_secure_discovery_disabled"
    ]
  },
  {
    "id": "4.1.5",
    "title": "Secure Permissions for the Primary Archive Log Location (LOGARCHMETH1)",
    "assessment": "Automated",
    "description": "The LOGARCHMETH1 parameter specifies the type of media and the location used as the primary destination of archived logs. It is recommended that the directory used for the archived logs be set to full access for Db2 administrator accounts and read and execute for all other accounts.",
    "rationale": "Restricting access to the contents of the primary archive log directory will help ensure that the confidentiality, integrity, and availability of archive logs are protected. Although there are many ways to ensure that your primary logs will be archived, we recommend using the value of DISK as part of the LOGARCHMETH1 parameter. This will properly ensure that the primary logs are archived. A finding of OFF is not acceptable.",
    "audit": "For Windows and Linux: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => get database configuration 3. Locate this value in the output to find the primary archive log directory: Default database path (LOGARCHMETH1) = <valid directory> Additional steps for Windows: 1. Connect to the Db2 host 2. Right-click on the primary archive log directory 3. Choose Properties 4. Select the Security tab 5. Review and verify the privileges for all accounts Additional steps for Linux:  1. Connect to the Db2 host 2. Change to the primary archive log directory 3. Review and verify the permissions for the directory for all users. $ ls -al",
    "remediation": "For Windows and Linux: 1. Attach to the Db2 instance. 2. Run the following command to change the primary archive log directory, if necessary: db2 => update database configuration using logarchmeth1 <valid directory> Additional steps for Windows (assuming that the logarchmeth1 parameter includes DISK): 1. Connect to the Db2 host 2. Right-click on the primary archive log directory 3. Choose Properties 4. Select the Security tab 5. Grant all Db2 administrator accounts the Full Control authority 6. Grant all other accounts read and execute privileges only (revoke all other privileges) Additional steps for Linux (assuming that the logarchmeth1 parameter includes DISK): 1. Connect to the Db2 host 2. Change to the primary archive log directory 3. Change the permissions for the directory $ chmod -R 755",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_log_archive_permissions_secure",
      "db2_log_archive_directory_restricted",
      "db2_log_archive_admin_full_access",
      "db2_log_archive_non_admin_read_only",
      "db2_log_archive_location_protected",
      "db2_log_archive_method1_secure",
      "db2_primary_archive_log_permissions_compliant",
      "db2_log_archive_directory_access_controlled"
    ]
  },
  {
    "id": "4.1.6",
    "title": "Secure Permissions for the Secondary Archive Log Location (LOGARCHMETH2)",
    "assessment": "Automated",
    "description": "The LOGARCHMETH2 parameter specifies the type of media and the location used as the secondary destination for archived logs. It is recommended that the directory used for the archived logs be set to full access for Db2 administrator accounts and read and execute only for all other accounts.",
    "rationale": "Restricting access to the contents of the secondary archive log directory will help ensure that the confidentiality, integrity, and availability of archive logs are protected. Although there are many ways to ensure that your logs will be archived, we recommend using the value of DISK as part of the LOGARCHMETH2 parameter. This will properly ensure that the logs are archived. A finding of OFF is not acceptable.",
    "audit": "For Windows and Linux: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => get database configuration 3. Locate this value in the output to find the secondary archive log directory: Default database path (LOGARCHMETH2) = <valid directory> Additional steps for Windows: 1. Connect to the Db2 host 2. Right-click on the secondary archive log directory 3. Choose Properties 4. Select the Security tab 5. Review and verify the privileges for all accounts Additional steps for Linux:  1. Connect to the Db2 host 2. Change to the secondary archive log directory 3. Review and verify the permissions for the directory for all users $ ls -al",
    "remediation": "For Windows and Linux: 1. Attach to the Db2 instance. 2. Run the following command to change the secondary archive log directory, if necessary: db2 => update database configuration using logarchmeth2 <valid directory> Additional steps for Windows (assuming that the logarchmeth2 parameter includes DISK): 1. Connect to the Db2 host 2. Right-click on the secondary archive log directory 3. Choose Properties 4. Select the Security tab 5. Grant all Db2 administrator accounts the Full Control authority 6. Grant all other accounts read and execute privileges only (revoke all other privileges) Additional steps for Linux (assuming that the logarchmeth2 parameter includes DISK): 1. Connect to the Db2 host 2. Change to the secondary archive log directory 3. Change the permissions for the directory $ chmod -R 755",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_parameter_logarchmeth2_secure_permissions",
      "db2_archive_log_location_restrictive_access",
      "db2_logarchmeth2_admin_full_access",
      "db2_secondary_log_archive_permissions",
      "db2_archive_log_directory_secure_permissions",
      "db2_logarchmeth2_non_admin_read_execute_only"
    ]
  },
  {
    "id": "4.1.7",
    "title": "Secure Permissions for the Tertiary Archive Log Location (FAILARCHPATH)",
    "assessment": "Automated",
    "description": "The FAILARCHPATH parameter specifies the type of media and the location used as the tertiary destination of archived logs. It is recommended that the directory used for the archived logs be set to full access for Db2 administrator accounts and read and execute only for all other accounts.",
    "rationale": "Restricting access to the contents of the tertiary archive log directory will help ensure that the confidentiality, integrity, and availability of archive logs are protected. Although there are many ways to ensure that your logs will be archived, we recommend using the value of DISK as part of the FAILARCHPATH parameter. This will properly ensure that the logs are archived. A finding of OFF is not acceptable.",
    "audit": "For Windows and Linux: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => get database configuration 3. Locate this value in the output to find the tertiary archive log directory: Default database path (FAILARCHPATH) = <valid directory> Additional steps for Windows: 1. Connect to the Db2 host 2. Right-click on the tertiary archive log directory 3. Choose Properties 4. Select the Security tab 5. Review and verify the privileges for all accounts Additional steps for Linux:  1. Connect to the Db2 host 2. Change to the tertiary archive log directory 3. Review and verify the permissions for the directory for all users. $ ls -al",
    "remediation": "For Windows and Linux: 1. Attach to the Db2 instance. 2. Run the following command to change the tertiary archive log directory, if necessary: db2 => update database configuration using failarchpath Additional steps for Windows (assuming that the failarchpath parameter includes DISK): 1. Connect to the Db2 host 2. Right-click on the tertiary archive log directory 3. Choose Properties 4. Select the Security tab 5. Grant all Db2 administrator accounts the Full Control authority 6. Grant all other accounts read and execute privileges only (revoke all other privileges) For Linux (assuming that the failarchpath parameter includes DISK): 1. Connect to the Db2 host 2. Change to the tertiary archive log directory 3. Change the permissions for the directory $ chmod -R 755",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_archive_log_location_permissions_restricted",
      "db2_failarchpath_directory_access_controlled",
      "db2_archived_logs_directory_admin_only_write",
      "db2_tertiary_log_location_secure_permissions",
      "db2_archive_log_path_non_admin_read_only"
    ]
  },
  {
    "id": "4.1.8",
    "title": "Secure Permissions for the Log Mirror Location (MIRRORLOGPATH)",
    "assessment": "Automated",
    "description": "The MIRRORLOGPATH parameter specifies the type of media and the location used to store the mirror copy of the logs. It is recommended that the directory used for the mirror copy of the logs be set to full access for Db2 administrator accounts and read and execute only for all other accounts.",
    "rationale": "A mirror log path should not be empty and it should be a valid path. The mirror log path stores a second copy of the active log files. Access to the directory pointed to by that path should be restricted through permissions to help ensure that the confidentiality, integrity, and availability of the mirror logs are protected.",
    "audit": "For Windows and Linux Perform the following Db2 commands to obtain the directory location: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => get database configuration 3. Locate the MIRRORLOGPATH value in the output: Mirror log path (MIRRORLOGPATH) = C:\\DB2MIRRORLOGS Additional steps for Windows: 1. Connect to the Db2 host 2. Right-click on the mirror log directory 3. Choose Properties 4. Select the Security tab 5. Review and verify the privileges for all accounts Additional steps for Linux:  1. Connect to the Db2 host 2. Change to the mirror log directory 3. Review and verify the permissions for the directory for all users. $ ls -al",
    "remediation": "For Windows and Linux: 1. Connect to the Db2 database db2 => connect to <dbname> 2. Run the following command to change the mirror log directory, if necessary: db2 => update database configuration using mirrorlogpath <valid directory> Additional steps for Windows: 1. Connect to the Db2 host 2. Right-click on the mirror log directory 3. Choose Properties 4. Select the Security tab 5. Grant all Db2 administrator accounts the Full Control authority 6. Grant all other accounts read and execute privileges only (revoke all other privileges) Additional steps for Linux: 1. Connect to the Db2 host 2. Change to the mirror log directory 3. Change the permissions for the directory $ chmod -R 755",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_log_mirror_path_restrictive_permissions",
      "db2_log_mirror_path_admin_full_access",
      "db2_log_mirror_path_non_admin_read_execute_only",
      "db2_log_mirror_path_secure_permissions",
      "db2_log_mirror_path_access_controlled"
    ]
  },
  {
    "id": "4.1.9",
    "title": "Secure Permissions for the Log Overflow Location (OVERFLOWLOGPATH)",
    "assessment": "Manual",
    "description": "The OVERFLOWLOGPATH parameter specifies a location for Db2® databases to find log files needed for a rollforward operation, as well as where to store active log files retrieved from the archive. It also gives a location for finding and storing log files needed for using db2ReadLog API. It is recommended that the directory used be set to full access for Db2 administrator accounts and read and execute only for all other accounts.",
    "rationale": "The overflow log path can contain log files containing user data. Access to the directory pointed to by that path should be restricted through permissions to help ensure that the confidentiality, integrity, and availability of the logs are protected.",
    "audit": "For Windows and Linux Perform the following Db2 commands to obtain the directory location: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => get database configuration 3. Locate the OVERFLOWLOGPATH value in the output: Overflow log path (OVERFLOWLOGPATH) = Additional steps for Windows: 1. Connect to the Db2 host 2. Right-click on the overflow log directory 3. Choose Properties 4. Select the Security tab 5. Review and verify the privileges for all accounts Additional steps for Linux:  1. Connect to the Db2 host 2. Change to the overflow log directory 3. Review and verify the permissions for the directory for all users. $ ls -al",
    "remediation": "For Windows and Linux: 1. Connect to the Db2 database db2 => connect to <dbname> 2. Run the following command to change the mirror log directory, if necessary: db2 => update database configuration using overflowlogpath <valid directory> Additional steps for Windows: 1. Connect to the Db2 host 2. Right-click on the overflow archive log directory 3. Choose Properties 4. Select the Security tab 5. Grant all Db2 administrator accounts the Full Control authority 6. Grant all other accounts read and execute privileges only (revoke all other privileges) Additional steps for Linux: 1. Connect to the Db2 host 2. Change to the overflow log directory 3. Change the permissions for the directory $ chmod -R 755",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_database_overflow_log_path_secure_permissions",
      "db2_log_overflow_location_restricted_access",
      "db2_overflow_log_path_admin_full_access",
      "db2_log_overflow_directory_read_execute_only",
      "db2_database_overflow_log_path_permissions_compliant"
    ]
  },
  {
    "id": "4.1.10",
    "title": "Establish Retention Set Size for Backups (NUM_DB_BACKUPS)",
    "assessment": "Manual",
    "description": "The NUM_DB_BACKUPS parameter specifies the number of backups to retain for a database before marking the oldest backup as deleted. It is recommended that this parameter be set to at least 12.",
    "rationale": "Retain multiple copies of the database backup to ensure that the database can recover from an unexpected failure. This parameter should not be set to 0. Multiple backups should be kept ensuring that all logs and transactions can be used for auditing.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => get database configuration 3. Locate the NUM_DB_BACKUPS value in the output: Number of database backups to retain (NUM_DB_BACKUPS) = 12",
    "remediation": "1. Connect to the Db2 database db2 => connect to <dbname> 2. Run the following command: db2 => update database configuration using num_db_backups 12",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "database_backup_retention_min_12",
      "database_backup_retention_set_size",
      "database_backup_retention_count_sufficient",
      "database_backup_retention_policy_compliant",
      "database_backup_retention_threshold_met"
    ]
  },
  {
    "id": "4.1.11",
    "title": "Set Archive Log Failover Retry Limit (NUMARCHRETRY)",
    "assessment": "Automated",
    "description": "The NUMARCHRETRY parameter determines how many times a database will try to archive the log file to the primary or the secondary archive destination before trying the failover directory. It is recommended that this parameter be set to 5.",
    "rationale": "Establishing a failover retry time limit will ensure that the database will always have a means to recover from an abnormal termination. This parameter should not be set to 0.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => get database configuration 3. Locate the NUMARCHRETRY value in the output: Number of log archive retries on error (NUMARCHRETRY) = 5",
    "remediation": "1. Connect to the Db2 database db2 => connect to <dbname> 2. Run the following command: db2 => update database configuration using numarchretry 5",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "database_archive_log_retry_limit_set",
      "database_archive_log_failover_retry_limit_configured",
      "database_archive_log_retry_count_set_to_5",
      "database_archive_log_numarchretry_parameter_set",
      "database_archive_log_failover_retry_limit_compliant"
    ]
  },
  {
    "id": "4.1.12",
    "title": "Set Maximum Number of Applications (MAXAPPLS)",
    "assessment": "Automated",
    "description": "The MAXAPPLS parameter specifies the maximum number of concurrent applications that can be connected (both local and remote) to a database. In an instance with a single database, it is recommended that this value be set to AUTOMATIC. While this indicates that any number of connections should be allowed, an upper limit of MAX_CONNECTIONS database manager configuration parameter is still enforced. If there are multiple databases within the instance, then the sum of MAXAPPLS for each database should be less than or equal to MAX_CONNECTIONS. When AUTOMATIC is used, MAXAPPLS can also have a parameter. The value is not used to determine the maximum number of connections, but rather for dependent parameters, such as PCKCACHESZ and CATALOG_CACHESZ that can derive their value from MAXAPPLS. In such a case the value specified with AUTOMATIC should represent the expected number of connections.",
    "rationale": "By default, Db2 allows an unlimited number of users to access the Db2 instance. In addition to giving access to the Db2 instance to authorized users only, it is recommended to set a limit to the number of users allowed to access a Db2 instance. This helps prevent denial of service conditions should an authorized process malfunction and attempt many simultaneous connections. Impact: Increasing the value of this parameter without lowering the MAXLOCKS parameter or increasing the LOCKLIST parameter could cause you to reach the database limit on locks (LOCKLIST) rather than the application limit and as a result cause pervasive lock escalation problems.",
    "audit": "Perform the following Db2 commands to obtain the value of the MAXAPPLS parameter: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command:  db2 => get database configuration 3. Locate the MAXAPPLS value in the output: Max Number of Active Applications (MAXAPPLS) = AUTOMATIC(40)",
    "remediation": "1. Connect to the Db2 database db2 => connect to <dbname> 2. If a single database is used in the instance, run the following command: db2 => update database configuration using maxappls AUTOMATIC 3. If multiple databases are used in the instance, determine appropriate values for each database such that the sum of MAXAPPLS values equals the MAX_CONNECTIONS database manager configuration parameter value (for example 100 for each of 2 databases when MAX_CONNECTIONS is 200), and run the following command: db2 => update database configuration using maxappls 200 References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=parameters-maxappls-maximum- number-active-applications",
    "profile_applicability": "•  Level 1 - RDBMS",
    "impact": "Increasing the value of this parameter without lowering the MAXLOCKS parameter or increasing the LOCKLIST parameter could cause you to reach the database limit on locks (LOCKLIST) rather than the application limit and as a result cause pervasive lock escalation problems.",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=parameters-maxappls-maximum- number-active-applications",
    "function_names": [
      "db2_instance_maxappls_automatic",
      "db2_database_maxappls_less_than_max_connections",
      "db2_instance_maxappls_dependent_parameters_valid",
      "db2_database_maxappls_sum_within_max_connections",
      "db2_instance_maxappls_parameter_configured"
    ]
  },
  {
    "id": "4.1.13",
    "title": "Ensure a Secure Connect Procedure is Used (CONNECT_PROC)",
    "assessment": "Manual",
    "description": "The CONNECT_PROC stored procedure runs as part of every connection to the database and allows customization of the application environment, such as setting special registers. It could for example, set the CURRENT_PATH special register which controls the search path for finding functions and procedures to execute. Only an authorized procedure should be used.",
    "rationale": "The CONNECT_PROC procedure could be used to modify the application environment within the connection causing unexpected behavior.",
    "audit": "Perform the following Db2 commands to determine if a CONNECT_PROC procedure is being used: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => get database configuration 3. Locate the CONNECT_PROC value in the output: Connect procedure (CONNECT_PROC) = If the value is not set, this is a Pass. If a value is set, it should be reviewed to ensure it is an appropriate procedure to be run for every connection.",
    "remediation": "To turn off the connect proc, perform the following commands: 1. Connect to the Db2 database db2 => connect to <dbname>  2. Run the following command: db2 => update database configuration using connect_proc NULL IMMEDIATE References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=parameters-connect-proc-connect- procedure-name-database 2. https://www.ibm.com/docs/en/db2/11.5?topic=databases-customizing- application-environment-using-connect-procedure",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=parameters-connect-proc-connect- procedure-name-database 2. https://www.ibm.com/docs/en/db2/11.5?topic=databases-customizing- application-environment-using-connect-procedure",
    "function_names": [
      "database_connect_proc_authorized",
      "database_connect_proc_secure",
      "database_connect_proc_no_unauthorized_changes",
      "database_connect_proc_approved_signature",
      "database_connect_proc_immutable",
      "database_connect_proc_owned_by_admin",
      "database_connect_proc_no_public_access",
      "database_connect_proc_encrypted",
      "database_connect_proc_version_controlled",
      "database_connect_proc_audit_logging_enabled"
    ]
  },
  {
    "id": "4.1.14",
    "title": "Specify a Secure Location for External Tables (EXTBL_LOCATION)",
    "assessment": "Manual",
    "description": "The EXTBL_LOCATION database configuration parameter provides an allow list of paths that external tables may access for local files, for both reading and writing. It is recommended that this value be set to appropriate paths with the understanding that confidential data may reside in this directory. Specifying appropriate paths is part of an organizations standard operating procedures (SOP).",
    "rationale": "External tables can read and write data to the paths configured within the EXTBL_LOCATION configuration parameter. To avoid a loss of confidentiality of the data which may be reside in these paths, they should be examined to ensure they match the values specified by the SOP.",
    "audit": "Perform the following Db2 commands to determine if a EXTBL_LOCATION is specified: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => get database configuration 3. Locate the EXTBL_LOCATION value in the output: Allowed paths for external tables (EXTBL_LOCATION) = /home/db2inst1 If the value does not match what has been specified in the SOP, then follow the remediation steps.",
    "remediation": "To specify an external table location, perform the following commands: 1. Connect to the Db2 database  db2 => connect to <dbname> 2. Run the following command: db2 => update database configuration using extbl_location <paths> References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=parameters-extbl-location-external- table-location",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=parameters-extbl-location-external- table-location",
    "function_names": [
      "database_external_table_secure_location",
      "database_external_table_path_restricted",
      "database_external_table_allowlist_configured",
      "database_external_table_confidential_path",
      "database_external_table_sop_compliant_location"
    ]
  },
  {
    "id": "4.1.15",
    "title": "Disable Database Discoverability (DISCOVER_DB)",
    "assessment": "Automated",
    "description": "The DISCOVER_DB parameter specifies whether the database can be discovered in the network. It is recommended that databases not be discoverable.",
    "rationale": "Discovery capabilities may be used by a malicious entity to derive the names of and target Db2 databases.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database: db2 => connect to <dbname> 2. Run the following command: db2 => get database configuration 3. Locate the DISCOVER_DB value in the output: Discovery support for this database       (DISCOVER_DB) = ENABLE 4. If the value of DISCOVER_DB is DISABLE then this is a Pass. Otherwise database discovery is possible, and the remediation steps should be followed.",
    "remediation": "1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => update database configuration using discover_db disable  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=parameters-discover-db-discover- database",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=parameters-discover-db-discover- database",
    "function_names": [
      "database_instance_discoverability_disabled",
      "database_instance_discover_db_disabled",
      "database_instance_network_discovery_disabled",
      "database_instance_public_visibility_disabled",
      "database_instance_network_exposure_disabled"
    ]
  },
  {
    "id": "4.2.1",
    "title": "Restrict Access to SYSCAT.AUDITPOLICIES",
    "assessment": "Automated",
    "description": "The SYSCAT.AUDITPOLICIES view contains all audit policies for a database. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "This view contains sensitive information about the auditing security for this database. Access to the audit policies may aid attackers in avoiding detection.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname= 'AUDITPOLICIES' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.AUDITPOLICIES FROM PUBLIC References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatauditpolicies",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatauditpolicies",
    "function_names": [
      "database_audit_policies_public_access_restricted",
      "database_audit_policies_public_role_revoked",
      "database_audit_policies_unauthorized_access_denied",
      "database_audit_policies_view_access_restricted",
      "database_audit_policies_public_privileges_removed"
    ]
  },
  {
    "id": "4.2.2",
    "title": "Restrict Access to SYSCAT.AUDITUSE",
    "assessment": "Automated",
    "description": "The SYSCAT.AUDITUSE view contains database audit policy for all non-database objects, such as authority, groups, roles, and users. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "This view contains sensitive information about the types of objects being audited. Access to the audit policy may aid attackers in avoiding detection.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname = 'AUDITUSE' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.AUDITUSE FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscataudituse",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscataudituse",
    "function_names": [
      "db2_audituse_public_access_restricted",
      "db2_audituse_public_role_revoked",
      "db2_audituse_unauthorized_access_denied",
      "db2_audituse_view_public_permissions_disabled",
      "db2_audituse_non_admin_access_restricted"
    ]
  },
  {
    "id": "4.2.3",
    "title": "Restrict Access to SYSCAT.COLAUTH",
    "assessment": "Automated",
    "description": "The SYSCAT.COLAUTH view contains the column privileges granted to the user or a group of users. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "This view contains the column privileges granted to the user, group, or role in the database and may be used as an attack vector.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname = 'COLAUTH' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.COLAUTH FROM PUBLIC References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatcolauth",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatcolauth",
    "function_names": [
      "db2_table_view_public_access_restricted",
      "db2_colauth_public_privileges_revoked",
      "db2_system_catalog_view_access_controlled",
      "db2_public_role_table_view_restricted",
      "db2_colauth_view_public_access_denied"
    ]
  },
  {
    "id": "4.2.4",
    "title": "Restrict Access to SYSCAT.COLDIST",
    "assessment": "Automated",
    "description": "The SYSCAT.COLDIST view contains the nth most frequent value of some column, or the nth quantile (cumulative distribution) value of the column. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSCAT views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSCAT.COLDIST view from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname= 'COLDIST' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.COLDIST FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatcoldist",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatcoldist",
    "function_names": [
      "db2_table_view_public_access_restricted",
      "db2_catalog_view_no_public_access",
      "db2_system_view_access_restricted",
      "db2_coldist_view_public_revoked",
      "db2_catalog_view_permissions_secure",
      "db2_system_view_privileges_restricted",
      "db2_sensitive_view_public_access_denied",
      "db2_coldist_view_access_controlled"
    ]
  },
  {
    "id": "4.2.5",
    "title": "Restrict Access to SYSCAT.COLGROUPDIST",
    "assessment": "Automated",
    "description": "The SYSCAT.COLGROUPDIST view contains the n th most frequent value of the column group or the n th quantile value of the column group. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSCAT views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSCAT.COLGROUPDIST view from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname= 'COLGROUPDIST' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.COLGROUPDIST FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatcolgroupdist",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatcolgroupdist",
    "function_names": [
      "db2_table_view_public_access_restricted",
      "db2_colgroupdist_view_public_access_revoked",
      "db2_system_catalog_view_access_restricted",
      "db2_sensitive_view_public_permissions_removed",
      "db2_colgroupdist_view_privileges_restricted"
    ]
  },
  {
    "id": "4.2.6",
    "title": "Restrict Access to SYSCAT.COLUMNS",
    "assessment": "Automated",
    "description": "The SYSCAT.COLUMNS view contains all the columns in the database instance. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSCAT views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSCAT.COLUMNS view from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname= 'COLUMNS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.COLUMNS FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatcolumns",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatcolumns",
    "function_names": [
      "db2_table_columns_public_access_restricted",
      "db2_syscat_columns_public_access_revoked",
      "db2_catalog_columns_public_permissions_denied",
      "db2_metadata_columns_public_visibility_disabled",
      "db2_system_columns_public_query_restricted"
    ]
  },
  {
    "id": "4.2.7",
    "title": "Restrict Access to SYSCAT.CONTEXTATTRIBUTES",
    "assessment": "Automated",
    "description": "The SYSCAT.CONTEXTATTRIBUTES view contains all the trusted context attributes in the database instance. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSCAT views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSCAT.CONTEXTATTRIBUTES view from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname= 'CONTEXTATTRIBUTES' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.CONTEXTATTRIBUTES FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatcontextattributes",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatcontextattributes",
    "function_names": [
      "db2_context_attributes_public_access_restricted",
      "db2_context_attributes_public_privileges_revoked",
      "db2_context_attributes_public_access_denied",
      "db2_context_attributes_public_permissions_removed",
      "db2_context_attributes_public_view_restricted"
    ]
  },
  {
    "id": "4.2.8",
    "title": "Restrict Access to SYSCAT.CONTEXTS",
    "assessment": "Automated",
    "description": "The SYSCAT.CONTEXTS view contains the trusted contexts in the database instance. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSCAT views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSCAT.CONTEXTS view from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname= 'CONTEXTS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.CONTEXTS FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatcontexts",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatcontexts",
    "function_names": [
      "db2_trusted_contexts_public_access_restricted",
      "db2_contexts_view_public_access_revoked",
      "db2_syscat_contexts_public_privileges_removed",
      "db2_trusted_contexts_public_permissions_denied"
    ]
  },
  {
    "id": "4.2.9",
    "title": "Restrict Access to SYSCAT.CONTROLDEP",
    "assessment": "Automated",
    "description": "The SYSCAT.CONTROLDEP view contains the dependency of a row permission or column mask on some other object. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSCAT views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSCAT.CONTROLDEP view from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname= 'CONTROLDEP' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.CONTROLDEP FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatcontroldep",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatcontroldep",
    "function_names": [
      "db2_table_control_dep_public_access_restricted",
      "db2_table_control_dep_public_privileges_revoked",
      "db2_table_control_dep_public_permissions_denied",
      "db2_table_control_dep_public_access_disabled",
      "db2_table_control_dep_public_visibility_restricted"
    ]
  },
  {
    "id": "4.2.10",
    "title": "Restrict Access to SYSCAT.CONTROLS",
    "assessment": "Automated",
    "description": "The SYSCAT.CONTROLS view contains row permissions and column masks. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSCAT views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSCAT.CONTROLS view from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname= 'CONTROLS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.CONTROLS FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatcontrols",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatcontrols",
    "function_names": [
      "db2_table_controls_public_access_restricted",
      "db2_syscat_controls_public_privileges_revoked",
      "db2_security_controls_view_access_limited",
      "db2_syscat_controls_public_role_restricted",
      "db2_table_controls_unauthorized_access_denied"
    ]
  },
  {
    "id": "4.2.11",
    "title": "Restrict Access to SYSCAT.DBAUTH",
    "assessment": "Automated",
    "description": "The SYSCAT.DBAUTH view contains information on authorities granted to users or groups of users. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "This view contains all the grants in the database and may be used as an attack vector.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname = 'DBAUTH' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.DBAUTH FROM PUBLIC References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatdbauth",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatdbauth",
    "function_names": [
      "db2_database_syscat_dbauth_public_restricted",
      "db2_database_dbauth_public_access_denied",
      "db2_database_syscat_dbauth_no_public_access",
      "db2_database_dbauth_public_restricted",
      "db2_database_syscat_dbauth_access_restricted"
    ]
  },
  {
    "id": "4.2.12",
    "title": "Restrict Access to SYSCAT.EVENTS",
    "assessment": "Automated",
    "description": "The SYSCAT.EVENTS view contains all types of events that the database is currently monitoring. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "The types of events that the database is monitoring should not be made readily available to the public.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname = 'EVENTS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.EVENTS FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatevents",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatevents",
    "function_names": [
      "database_events_public_access_restricted",
      "syscat_events_public_access_revoked",
      "database_events_public_privileges_removed",
      "syscat_events_public_permissions_denied",
      "database_events_public_view_restricted"
    ]
  },
  {
    "id": "4.2.13",
    "title": "Restrict Access to SYSCAT.EVENTTABLES",
    "assessment": "Automated",
    "description": "The SYSCAT.EVENTTABLES view contains the name of the destination table that will receive the monitoring events. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "PUBLIC should not have access to see the target name of the event monitoring table.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname = 'EVENTTABLES' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.EVENTTABLES FROM PUBLIC References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscateventtables",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscateventtables",
    "function_names": [
      "db2_syscat_eventtables_public_access_restricted",
      "db2_eventtables_public_role_revoked",
      "db2_syscat_eventtables_unauthorized_access_denied",
      "db2_eventtables_public_privileges_disabled",
      "db2_syscat_eventtables_view_restricted_access"
    ]
  },
  {
    "id": "4.2.14",
    "title": "Restrict Access to SYSCAT.EXTERNALTABLEOPTIONS",
    "assessment": "Automated",
    "description": "The SYSCAT.EXTERNALTABLEOPTIONS view contains the external tables in the database instance. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSCAT views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSCAT.EXTERNALTABLEOPTIONS view from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname= 'EXTERNALTABLEOPTIONS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.EXTERNALTABLEOPTIONS FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatexternaltableoptions",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatexternaltableoptions",
    "function_names": [
      "db2_external_table_options_public_access_restricted",
      "db2_syscat_external_table_options_no_public_access",
      "database_external_table_options_public_privileges_revoked",
      "db2_table_options_view_public_access_disabled",
      "syscat_external_table_options_public_restricted"
    ]
  },
  {
    "id": "4.2.15",
    "title": "Restrict Access to SYSCAT.INDEXAUTH",
    "assessment": "Automated",
    "description": "The SYSCAT.INDEXAUTH view contains a list of users or groups that have CONTROL access on an index. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "The list of all users with access to an index should not be exposed to the public.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname = 'INDEXAUTH' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.INDEXAUTH FROM PUBLIC References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatindexauth",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatindexauth",
    "function_names": [
      "db2_indexauth_public_access_restricted",
      "db2_indexauth_public_role_revoked",
      "db2_indexauth_control_access_restricted",
      "db2_indexauth_public_privileges_removed",
      "db2_indexauth_view_access_limited",
      "db2_indexauth_public_permissions_denied",
      "db2_indexauth_control_privileges_restricted",
      "db2_indexauth_public_access_disabled"
    ]
  },
  {
    "id": "4.2.16",
    "title": "Restrict Access to SYSCAT.MODULEAUTH",
    "assessment": "Automated",
    "description": "The SYSCAT.MODULEAUTH view contains all granted privileges on a module for users, groups, or roles and is read only.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSCAT views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSCAT.MODULEAUTH view from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname = 'MODULEAUTH' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.MODULEAUTH FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatmoduleauth",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatmoduleauth",
    "function_names": [
      "db2_moduleauth_restricted_access",
      "db2_moduleauth_no_public_access",
      "db2_moduleauth_privileges_audited",
      "db2_moduleauth_read_only_enforced",
      "db2_moduleauth_user_access_restricted",
      "db2_moduleauth_group_access_restricted",
      "db2_moduleauth_role_access_restricted",
      "db2_moduleauth_privilege_escalation_prevented"
    ]
  },
  {
    "id": "4.2.17",
    "title": "Restrict Access to SYSCAT.PACKAGEAUTH",
    "assessment": "Automated",
    "description": "The SYSCAT.PACKAGEAUTH view contains the package privileges granted to the user or a group of users. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "The list of all users with access to a package should not be exposed to the public.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname = 'PACKAGEAUTH' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.PACKAGEAUTH FROM PUBLIC References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatpackageauth",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatpackageauth",
    "function_names": [
      "db2_package_auth_public_access_restricted",
      "db2_syscat_packageauth_public_privileges_revoked",
      "db2_package_auth_public_role_restricted",
      "db2_syscat_packageauth_public_access_denied"
    ]
  },
  {
    "id": "4.2.18",
    "title": "Restrict Access to SYSCAT.PACKAGES",
    "assessment": "Automated",
    "description": "The SYSCAT.PACKAGES view contains the names of all packages created in the database instance. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "The names of packages created in the database can be used as an entry point if a vulnerable package exists.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname = 'PACKAGES' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.PACKAGES FROM PUBLIC References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatpackages",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatpackages",
    "function_names": [
      "db2_package_view_public_access_restricted",
      "db2_syscat_packages_public_access_revoked",
      "db2_package_metadata_public_access_disabled",
      "db2_syscat_packages_public_privileges_removed",
      "db2_package_view_public_permissions_denied"
    ]
  },
  {
    "id": "4.2.19",
    "title": "Restrict Access to SYSCAT.PASSTHRUAUTH",
    "assessment": "Automated",
    "description": "The SYSCAT.PASSTHRUAUTH view contains the names of user or group that have pass- through authorization to query the data source. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "The ability to see which accounts have the pass-through privilege could allow an attacker to exploit these accounts to access another data source.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname = 'PASSTHRUAUTH' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.PASSTHRUAUTH FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatpassthruauth",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatpassthruauth",
    "function_names": [
      "db2_pass_through_auth_public_restricted",
      "db2_syscat_passthruauth_no_public_access",
      "db2_auth_view_public_access_restricted",
      "db2_passthruauth_public_permissions_denied",
      "db2_syscat_passthruauth_public_role_restricted"
    ]
  },
  {
    "id": "4.2.20",
    "title": "Restrict Access to SYSCAT.ROLEAUTH",
    "assessment": "Automated",
    "description": "The SYSCAT.ROLEAUTH view contains information on all roles and their respective grantees. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "PUBLIC should not have access to see the grants of the roles because this could be used as a point of exploit.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname = 'ROLEAUTH' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.ROLEAUTH FROM PUBLIC References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatroleauth",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatroleauth",
    "function_names": [
      "db2_roleauth_public_access_restricted",
      "db2_roleauth_public_permissions_revoked",
      "db2_roleauth_public_privileges_removed",
      "db2_roleauth_public_access_denied",
      "db2_roleauth_public_view_restricted"
    ]
  },
  {
    "id": "4.2.21",
    "title": "Restrict Access to SYSCAT.ROLES",
    "assessment": "Automated",
    "description": "The SYSCAT.ROLES view contains all roles available in the database. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "PUBLIC should not have access to see all the roles because this could be used as a point of exploit.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname = 'ROLES' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.ROLES FROM PUBLIC References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatroles",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatroles",
    "function_names": [
      "database_role_public_access_restricted",
      "database_role_syscat_roles_access_restricted",
      "database_role_public_syscat_roles_restricted",
      "database_role_public_access_disabled",
      "database_role_syscat_roles_public_restricted"
    ]
  },
  {
    "id": "4.2.22",
    "title": "Restrict Access to SYSCAT.ROUTINEAUTH",
    "assessment": "Automated",
    "description": "The SYSCAT.ROUTINEAUTH view contains a list of all users that have EXECUTE privilege on a routine (function, method, or procedure). It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "PUBLIC should not have access to see all the users because this could be used as a point of exploit.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname = 'ROUTINEAUTH' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.ROUTINEAUTH FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatroutineauth",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatroutineauth",
    "function_names": [
      "db2_routineauth_public_access_restricted",
      "db2_routineauth_public_privileges_revoked",
      "db2_routineauth_public_execute_disabled",
      "db2_routineauth_view_access_controlled",
      "db2_routineauth_public_role_restricted"
    ]
  },
  {
    "id": "4.2.23",
    "title": "Restrict Access to SYSCAT.ROUTINES",
    "assessment": "Automated",
    "description": "The SYSCAT.ROUTINES view contains all user-defined routines, functions, and stored procedures in the database. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "User-defined functions and routines should not be exposed to the public for exploits.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname = 'ROUTINES' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.ROUTINES FROM PUBLIC References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatroutines",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatroutines",
    "function_names": [
      "database_routines_public_access_restricted",
      "database_routines_public_privileges_revoked",
      "database_routines_public_role_restricted",
      "database_routines_unauthorized_access_blocked",
      "database_routines_public_view_disabled"
    ]
  },
  {
    "id": "4.2.24",
    "title": "Restrict Access to SYSCAT.SECURITYLABELACCESS",
    "assessment": "Automated",
    "description": "The SYSCAT.SECURITYLABELACCESS view contains security label that was granted access. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSCAT views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSCAT.SECURITYLABELACCESS view from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname= 'SECURITYLABELACCESS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.SECURITYLABELACCESS FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatsecuritylabelaccess",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatsecuritylabelaccess",
    "function_names": [
      "db2_security_label_access_public_restricted",
      "db2_security_label_access_no_public_access",
      "db2_security_label_access_secure_permissions",
      "db2_security_label_access_public_role_denied",
      "db2_security_label_access_restrict_public_view"
    ]
  },
  {
    "id": "4.2.25",
    "title": "Restrict Access to SYSCAT.SECURITYLABELCOMPONENTELEMENTS",
    "assessment": "Automated",
    "description": "The SYSCAT.SECURITYLABELCOMPONENTELEMENTS view contains the element value for security label components. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSCAT views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSCAT.SECURITYLABELCOMPONENTELEMENTS view from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname= 'SECURITYLABELCOMPONENTELEMENTS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname>  2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.SECURITYLABELCOMPONENTELEMENTS FROM PUBLIC References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views- syscatsecuritylabelcomponentelements",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views- syscatsecuritylabelcomponentelements",
    "function_names": [
      "db2_security_label_component_elements_public_access_restricted",
      "db2_security_label_component_elements_public_revoked",
      "db2_security_label_component_elements_public_denied",
      "db2_security_label_component_elements_public_permissions_restricted",
      "db2_security_label_component_elements_public_privileges_revoked"
    ]
  },
  {
    "id": "4.2.26",
    "title": "Restrict Access to SYSCAT.SECURITYLABELCOMPONENTS",
    "assessment": "Automated",
    "description": "The SYSCAT.SECURITYLABELCOMPONENTELEMENTS view contains the element value for security label components. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSCAT views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSCAT.SECURITYLABELCOMPONENTELEMENTS view from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname= 'SECURITYLABELCOMPONENTELEMENTS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command:  db2 => REVOKE SELECT ON SYSCAT.SECURITYLABELCOMPONENTELEMENTS FROM PUBLIC References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views- syscatsecuritylabelcomponents",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views- syscatsecuritylabelcomponents",
    "function_names": [
      "db2_security_label_components_public_access_restricted",
      "db2_security_label_components_no_public_access",
      "db2_security_label_components_access_restricted_to_roles",
      "db2_security_label_components_public_privileges_revoked",
      "db2_security_label_components_view_access_controlled"
    ]
  },
  {
    "id": "4.2.27",
    "title": "Restrict Access to SYSCAT.SECURITYLABELS",
    "assessment": "Automated",
    "description": "The SYSCAT.SECURITYLABELS view contains security labels. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSCAT views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSCAT.SECURITYLABELS view from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname= 'SECURITYLABELS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.SECURITYLABELS FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatsecuritylabels",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatsecuritylabels",
    "function_names": [
      "db2_security_labels_public_access_restricted",
      "db2_security_labels_public_privileges_revoked",
      "db2_security_labels_public_access_denied",
      "db2_security_labels_public_role_restricted",
      "db2_security_labels_public_permissions_removed"
    ]
  },
  {
    "id": "4.2.28",
    "title": "Restrict Access to SYSCAT.SECURITYPOLICIES",
    "assessment": "Automated",
    "description": "The SYSCAT.SECURITYPOLICIES view contains all database security policies. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "PUBLIC should not be able to view all the database security policies.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname = 'SECURITYPOLICIES' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.SECURITYPOLICIES FROM PUBLIC References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatsecuritypolicies",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatsecuritypolicies",
    "function_names": [
      "database_security_policy_public_access_restricted",
      "security_policy_public_access_revoked",
      "syscat_security_policies_public_restricted",
      "database_security_policy_view_access_controlled",
      "security_policy_view_public_permissions_removed"
    ]
  },
  {
    "id": "4.2.29",
    "title": "Restrict Access to SYSCAT.SECURITYPOLICYCOMPONENTRULES",
    "assessment": "Automated",
    "description": "The SYSCAT.SECURITYPOLICYCOMPONENTRULES view contains the read and write access rules for security label components. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSCAT views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSCAT.SECURITYPOLICYCOMPONENTRULES view from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname= 'SECURITYPOLICYCOMPONENTRULES' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command:  db2 => REVOKE SELECT ON SYSCAT.SECURITYPOLICYCOMPONENTRULES FROM PUBLIC References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views- syscatsecuritypolicycomponentrules",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views- syscatsecuritypolicycomponentrules",
    "function_names": [
      "db2_security_policy_component_rules_public_access_restricted",
      "db2_security_policy_component_rules_no_public_access",
      "db2_security_component_rules_access_restricted_to_public",
      "db2_security_component_rules_public_access_revoked",
      "db2_security_policy_component_rules_public_permissions_denied"
    ]
  },
  {
    "id": "4.2.30",
    "title": "Restrict Access to SYSCAT.SECURITYPOLICYEXEMPTIONS",
    "assessment": "Automated",
    "description": "The SYSCAT.SECURITYPOLICYEXEMPTIONS view contains the exemption to a security policy that was granted to a database account. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "PUBLIC should not be able to view all the exemptions to the database security policies.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname = 'SECURITYPOLICYEXEMPTIONS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.SECURITYPOLICYEXEMPTIONS FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views- syscatsecuritypolicyexemptions",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views- syscatsecuritypolicyexemptions",
    "function_names": [
      "db2_security_policy_exemptions_public_access_restricted",
      "db2_security_policy_exemptions_no_public_access",
      "db2_security_policy_exemptions_access_restricted_to_roles",
      "db2_security_policy_exemptions_public_role_revoked",
      "db2_security_policy_exemptions_privileges_restricted"
    ]
  },
  {
    "id": "4.2.31",
    "title": "Restrict Access to SYSCAT.SERVEROPTIONS",
    "assessment": "Automated",
    "description": "The SYSCAT.SERVEROPTIONS view contains server-specific option values. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSCAT views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSCAT.SERVEROPTIONS view from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname= 'SERVEROPTIONS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.SERVEROPTIONS FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatserveroptions",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatserveroptions",
    "function_names": [
      "db2_server_options_public_access_restricted",
      "db2_server_options_public_role_revoked",
      "db2_server_options_unauthorized_access_denied",
      "db2_server_options_public_privileges_removed",
      "db2_server_options_view_access_restricted"
    ]
  },
  {
    "id": "4.2.32",
    "title": "Restrict Access to SYSCAT.SCHEMAAUTH",
    "assessment": "Automated",
    "description": "The SYSCAT.SCHEMAAUTH view contains a list of all users that have one or more privileges or access to a particular schema. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "PUBLIC should not have access to see all the users because this could be used as a point of exploit.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname = 'SCHEMAAUTH' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.SCHEMAAUTH FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatschemaauth",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatschemaauth",
    "function_names": [
      "db2_schema_auth_public_access_restricted",
      "db2_schema_auth_public_privileges_revoked",
      "db2_schema_auth_public_view_disabled",
      "db2_schema_auth_public_access_denied",
      "db2_schema_auth_public_permissions_removed"
    ]
  },
  {
    "id": "4.2.33",
    "title": "Restrict Access to SYSCAT.SCHEMATA",
    "assessment": "Automated",
    "description": "The SYSCAT.SCHEMATA view contains all schema names in the database. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "PUBLIC should not have access to see all the schema names in the database because this could be used as a point of exploit.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname = 'SCHEMATA' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.SCHEMATA FROM PUBLIC References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatschemata",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatschemata",
    "function_names": [
      "db2_schema_public_access_restricted",
      "db2_syscat_schmata_public_access_disabled",
      "db2_schema_metadata_public_access_denied",
      "db2_syscat_schmata_view_restricted",
      "db2_schema_information_public_access_blocked"
    ]
  },
  {
    "id": "4.2.34",
    "title": "Restrict Access to SYSCAT.SEQUENCEAUTH",
    "assessment": "Automated",
    "description": "The SYSCAT.SEQUENCEAUTH view contains users, groups, or roles granted privilege(s) on a sequence. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "PUBLIC should not have access to see all the granted access of a sequence in the database because this could be used as a point of exploit.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname = 'SEQUENCEAUTH' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.SEQUENCEAUTH FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatsequenceauth",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatsequenceauth",
    "function_names": [
      "db2_sequence_auth_public_restricted",
      "db2_sequence_auth_no_public_access",
      "db2_sequence_auth_public_privileges_revoked",
      "db2_sequence_auth_public_permissions_denied",
      "db2_sequence_auth_public_access_disabled"
    ]
  },
  {
    "id": "4.2.35",
    "title": "Restrict Access to SYSCAT.STATEMENTS",
    "assessment": "Automated",
    "description": "The SYSCAT.STATEMENTS view contains all SQL statements of a compiled package. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "PUBLIC should not have access to the SQL statements of a database package. This could lead to an exploit.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname = 'STATEMENTS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.STATEMENTS FROM PUBLIC References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatstatements",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatstatements",
    "function_names": [
      "db2_syscat_statements_public_access_restricted",
      "db2_statements_view_public_access_denied",
      "syscat_statements_public_privileges_revoked",
      "db2_compiled_package_statements_access_restricted"
    ]
  },
  {
    "id": "4.2.36",
    "title": "Restrict Access to SYSCAT.STATEMENTTEXTS",
    "assessment": "Automated",
    "description": "The SYSCAT.STATEMENTTEXTS view contains user-provided SQL statements for statement thresholds. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSCAT views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSCAT.STATEMENTTEXTS view from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname= 'STATEMENTTEXTS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.STATEMENTTEXTS FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatstatementtexts",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatstatementtexts",
    "function_names": [
      "db2_view_public_access_restricted",
      "db2_statementtexts_public_access_revoked",
      "db2_syscat_statementtexts_no_public_access",
      "db2_syscat_view_access_restricted",
      "db2_statementtexts_view_public_permissions_removed"
    ]
  },
  {
    "id": "4.2.37",
    "title": "Restrict Access to SYSCAT.SURROGATEAUTHIDS",
    "assessment": "Automated",
    "description": "The SYSCAT.SURROGATEAUTHIDS view contains the names of all accounts that have been granted SETSESSIONUSER privilege on a user or to PUBLIC. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "PUBLIC should not be able to view the names of all the surrogate accounts with SETSESSIONUSER privilege.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname = 'SURROGATEAUTHIDS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.SURROGATEAUTHIDS FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatsurrogateauthids",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatsurrogateauthids",
    "function_names": [
      "db2_surrogateauthids_public_access_restricted",
      "db2_surrogateauthids_privilege_revoked",
      "db2_surrogateauthids_public_visibility_disabled",
      "db2_surrogateauthids_access_controlled",
      "db2_surrogateauthids_public_permission_denied"
    ]
  },
  {
    "id": "4.2.38",
    "title": "Restrict Access to SYSCAT.TABAUTH",
    "assessment": "Automated",
    "description": "The SYSCAT.TABAUTH view contains users or groups that have been granted one or more privileges on a table or view. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "PUBLIC should not have access to the grants of views and tables in a database. This could lead to an exploit.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname = 'TABAUTH' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.TABAUTH FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscattabauth",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscattabauth",
    "function_names": [
      "db2_table_auth_public_access_restricted",
      "db2_syscat_tabauth_public_privileges_revoked",
      "db2_table_auth_public_privileges_removed",
      "db2_syscat_tabauth_public_access_denied",
      "db2_table_auth_public_permissions_restricted"
    ]
  },
  {
    "id": "4.2.39",
    "title": "Restrict Access to SYSCAT.TBSPACEAUTH",
    "assessment": "Automated",
    "description": "The SYSCAT.TBSPACEAUTH view contains users or groups that have been granted the USE privilege on a particular tablespace in the database. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "PUBLIC should not have access to the grants of the tablespaces in a database. This could lead to an exploit.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname = 'TBSPACEAUTH' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.TBSPACEAUTH FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscattbspaceauth",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscattbspaceauth",
    "function_names": [
      "database_tablespace_auth_no_public_access",
      "database_tablespace_auth_restrict_public_role",
      "database_tablespace_auth_public_role_revoked",
      "database_tablespace_auth_public_access_disabled",
      "database_tablespace_auth_public_privileges_restricted"
    ]
  },
  {
    "id": "4.2.40",
    "title": "Restrict Access to SYSCAT.USEROPTIONS",
    "assessment": "Automated",
    "description": "The SYSCAT.USEROPTIONS view contains server-specific user option values. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSCAT views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSCAT.USEROPTIONS view from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname= 'USEROPTIONS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.USEROPTIONS FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatuseroptions",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatuseroptions",
    "function_names": [
      "db2_useroptions_public_access_restricted",
      "db2_useroptions_public_privileges_revoked",
      "db2_useroptions_public_permissions_denied",
      "db2_useroptions_public_access_disabled",
      "db2_useroptions_public_visibility_restricted"
    ]
  },
  {
    "id": "4.2.41",
    "title": "Restrict Access to SYSCAT.VARIABLEAUTH",
    "assessment": "Automated",
    "description": "The SYSCAT.VARIABLEAUTH view contains the granted privileges on a global variable for users, groups, or roles and is read only.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSCAT views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSCAT.VARIABLEAUTH view from PUBLIC to reduce risk to the organization's data.",
    "audit": "Determine if SYSCAT.VARIABLEAUTH privileges for users, groups, and roles are correctly set. Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname = 'VARIABLEAUTH' and grantee = 'PUBLIC' 3. Review privileges for users, groups, and roles. If the output is BLANK, then it is considered a Pass.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.VARIABLEAUTH FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatvariableauth",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatvariableauth",
    "function_names": [
      "db2_variableauth_restrict_access",
      "db2_variableauth_read_only_enforced",
      "db2_variableauth_privileges_restricted",
      "db2_variableauth_access_controlled",
      "db2_variableauth_view_protected"
    ]
  },
  {
    "id": "4.2.42",
    "title": "Restrict Access to SYSCAT.VARIABLES",
    "assessment": "Automated",
    "description": "The SYSCAT.VARIABLES view contains global variables. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSCAT views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSCAT.VARIABLES view from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname= 'VARIABLES' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.VARIABLES FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatvariables",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatvariables",
    "function_names": [
      "db2_variable_access_restricted",
      "db2_variable_public_access_revoked",
      "db2_syscat_variables_public_restricted",
      "db2_global_variable_access_controlled",
      "db2_variable_view_public_denied"
    ]
  },
  {
    "id": "4.2.43",
    "title": "Restrict Access to SYSCAT.WORKLOADAUTH",
    "assessment": "Automated",
    "description": "The SYSCAT.WORKLOADAUTH view represents the users, groups, or roles that have been granted the USAGE privilege on a workload.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSCAT views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSCAT.WORKLOADAUTH from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname = 'WORKLOADAUTH' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.WORKLOADAUTH FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatworkloadauth",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatworkloadauth",
    "function_names": [
      "iam_workload_auth_usage_restricted",
      "iam_workload_auth_access_restricted",
      "iam_workload_auth_privilege_restricted",
      "iam_workload_auth_view_restricted",
      "iam_workload_auth_usage_limited",
      "iam_workload_auth_privilege_limited",
      "iam_workload_auth_access_limited",
      "iam_workload_auth_view_limited"
    ]
  },
  {
    "id": "4.2.44",
    "title": "Restrict Access to SYSCAT.WRAPOPTIONS",
    "assessment": "Automated",
    "description": "The SYSCAT.WRAPOPTIONS view contains wrapper-specific options. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSCAT views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSCAT.WRAPOPTIONS view from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname= 'WRAPOPTIONS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.WRAPOPTIONS FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatwrapoptions",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatwrapoptions",
    "function_names": [
      "db2_syscat_wrapooptions_public_access_restricted",
      "db2_syscat_wrapooptions_public_privileges_revoked",
      "db2_syscat_wrapooptions_public_role_denied",
      "db2_syscat_wrapooptions_unauthorized_access_blocked",
      "db2_syscat_wrapooptions_public_permissions_disabled"
    ]
  },
  {
    "id": "4.2.45",
    "title": "Restrict Access to SYSCAT.XSROBJECTAUTH",
    "assessment": "Automated",
    "description": "The SYSCAT.XSROBJECTAUTH view contains granted USAGE privileges on a particular XSR object for users, groups, or roles and is read only.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSCAT views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSCAT.XSROBJECTAUTH view from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSCAT' and tabname = 'XSROBJECTAUTH' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSCAT.XSROBJECTAUTH FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatxsrobjectauth",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscatxsrobjectauth",
    "function_names": [
      "db2_xsrobjectauth_restricted_access",
      "db2_xsrobjectauth_no_public_access",
      "db2_xsrobjectauth_usage_privileges_restricted",
      "db2_xsrobjectauth_readonly_enforced",
      "db2_xsrobjectauth_privilege_audit_enabled"
    ]
  },
  {
    "id": "4.2.46",
    "title": "Restrict Access to SYSSTAT.COLDIST",
    "assessment": "Automated",
    "description": "The SYSSTAT.COLDIST view contains the nth most frequent value of some column, or the nth quantile (cumulative distribution) value of the column. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSSTAT views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSSTAT.COLDIST view from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSSTAT' and tabname= 'COLDIST' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSSTAT.COLDIST FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-sysstatcoldist",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-sysstatcoldist",
    "function_names": [
      "snowflake_sysstat_coldist_public_access_restricted",
      "snowflake_view_public_access_restricted",
      "snowflake_sysstat_view_public_access_revoked",
      "snowflake_coldist_view_public_access_denied",
      "snowflake_sysstat_coldist_public_role_restricted"
    ]
  },
  {
    "id": "4.2.47",
    "title": "Restrict Access to SYSSTAT.COLGROUPDIST",
    "assessment": "Automated",
    "description": "The SYSSTAT.COLGROUPDIST view contains the n th most frequent value of the column group or the n th quantile value of the column group. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSSTAT views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSSTAT.COLGROUPDIST view from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSSTAT' and tabname= 'COLGROUPDIST' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSSTAT.COLGROUPDIST FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-sysstatcolgroupdist",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-sysstatcolgroupdist",
    "function_names": [
      "database_sysstat_colgroupdist_public_access_restricted",
      "database_sysstat_colgroupdist_public_role_revoked",
      "database_sysstat_colgroupdist_access_controlled",
      "database_sysstat_colgroupdist_public_privileges_removed",
      "database_sysstat_colgroupdist_secure_permissions"
    ]
  },
  {
    "id": "4.2.48",
    "title": "Restrict Access to SYSSTAT.COLUMNS",
    "assessment": "Automated",
    "description": "The SYSSTAT.COLUMNS view contains all the columns in the database instance. It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSSTAT views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSSTAT.COLUMNS view from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSSTAT' and tabname= 'COLUMNS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSSTAT.COLUMNS FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-sysstatcolumns",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-sysstatcolumns",
    "function_names": [
      "database_instance_sysstat_columns_public_access_restricted",
      "database_instance_sysstat_columns_access_restricted",
      "database_instance_public_role_sysstat_columns_restricted",
      "database_instance_sysstat_columns_no_public_access",
      "database_instance_sysstat_columns_access_controlled"
    ]
  },
  {
    "id": "4.3.1",
    "title": "Restrict Access to SYSIBM.SYSAUDITPOLICIES",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSAUDITPOLICIES table contains all audit policies for a database. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "This table contains sensitive information about the auditing security for this database. Access to the audit policies may aid attackers in avoiding detection.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname= 'SYSAUDITPOLICIES' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSAUDITPOLICIES FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_audit_policies_table_secure",
      "db2_sysauditpolicies_public_denied",
      "db2_table_public_privileges_revoked",
      "db2_audit_table_access_restricted",
      "db2_sysauditpolicies_read_access_denied",
      "db2_table_public_role_restricted",
      "db2_audit_policies_table_public_blocked"
    ]
  },
  {
    "id": "4.3.2",
    "title": "Restrict Access to SYSIBM.SYSAUDITUSE",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSAUDITUSE table contains database audit policy for all non-database objects, such as authority, groups, roles, and users. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "This table contains sensitive information about the types of objects being audited. Access to the audit policy may aid attackers in avoiding detection.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname = 'SYSAUDITUSE' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSAUDITUSE FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_audit_table_no_public_access",
      "db2_sysaudituse_table_access_restricted",
      "db2_audit_policy_table_secure",
      "db2_non_db_object_audit_protected"
    ]
  },
  {
    "id": "4.3.3",
    "title": "Restrict Access to SYSIBM.SYSCOLAUTH",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSCOLAUTH table contains the column privileges granted to the user or a group of users. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "This table contains the column privileges granted to the user, group, or role in the database and may be used as an attack vector.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname = 'SYSCOLAUTH' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSCOLAUTH FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_syscolauth_public_revoke",
      "db2_table_privileges_public_denied",
      "db2_syscolauth_access_restricted",
      "db2_table_public_permissions_disabled"
    ]
  },
  {
    "id": "4.3.4",
    "title": "Restrict Access to SYSIBM.SYSCOLDIST",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSCOLDIST table contains the nth most frequent value of some column, or the nth quantile (cumulative distribution) value of the column. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSIBM tables. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSIBM.SYSCOLDIST table from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname= 'SYSCOLDIST' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSCOLDIST FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_syscoldist_public_access_revoked",
      "db2_table_privileges_restricted",
      "db2_syscoldist_access_controlled",
      "db2_public_role_table_access_denied"
    ]
  },
  {
    "id": "4.3.5",
    "title": "Restrict Access to SYSIBM.SYSCOLGROUPDIST",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSCOLGROUPDIST table contains the n th most frequent value of the column group or the n th quantile value of the column group. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSIBM tables. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSIBM.SYSCOLGROUPDIST table from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname= 'SYSCOLGROUPDIST' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSCOLGROUPDIST FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_syscolgroupdist_public_revoked",
      "db2_table_privileges_public_removed",
      "db2_syscolgroupdist_access_restricted",
      "db2_table_public_permissions_disabled"
    ]
  },
  {
    "id": "4.3.6",
    "title": "Restrict Access to SYSIBM.SYSCOLUMNS",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSCOLUMNS table contains all the columns in the database instance. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSIBM tables. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSIBM.SYSCOLUMNS table from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname= 'SYSCOLUMNS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSCOLUMNS FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_syscolumns_public_access_restricted",
      "db2_sysibm_syscolumns_public_access_restricted",
      "db2_table_public_role_restricted",
      "db2_syscolumns_public_role_restricted",
      "db2_sysibm_syscolumns_public_role_restricted",
      "db2_table_public_privileges_restricted",
      "db2_syscolumns_public_privileges_restricted"
    ]
  },
  {
    "id": "4.3.7",
    "title": "Restrict Access to SYSIBM.SYSCONTEXTATTRIBUTES",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSCONTEXTATTRIBUTES table contains all the trusted context attributes in the database instance. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSIBM tables. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSIBM.SYSCONTEXTATTRIBUTES table from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname= 'SYSCONTEXTATTRIBUTES' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSCONTEXTATTRIBUTES FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_syscontextattributes_public_access_revoked",
      "db2_trusted_context_attributes_public_restricted",
      "db2_sysibm_table_public_privileges_removed",
      "db2_context_attributes_public_access_denied"
    ]
  },
  {
    "id": "4.3.8",
    "title": "Restrict Access to SYSIBM.SYSCONTEXTS",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSCONTEXTS table contains the trusted contexts in the database instance. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSIBM tables. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSIBM.SYSCONTEXTS table from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname= 'SYSCONTEXTS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSCONTEXTS FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_syscontexts_public_access_restricted",
      "db2_trusted_contexts_public_access_restricted",
      "db2_sysibm_table_public_access_restricted",
      "db2_security_table_public_access_restricted"
    ]
  },
  {
    "id": "4.3.9",
    "title": "Restrict Access to SYSIBM.SYSDEPENDENCIES",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSDEPENDENCIES table contains the dependency of one object on another, such as a row permission or column mask on some other object. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSIBM tables. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSIBM.SYSDEPENDENCIES table from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname= 'SYSDEPENDENCIES' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command:  db2 => REVOKE SELECT ON SYSIBM.SYSDEPENDENCIES FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_sysdependencies_public_access_restricted",
      "db2_table_privileges_restricted",
      "db2_sysdependencies_privileges_restricted",
      "db2_public_role_access_restricted",
      "db2_sysdependencies_public_role_restricted",
      "db2_table_public_role_restricted",
      "db2_sysdependencies_access_restricted"
    ]
  },
  {
    "id": "4.3.10",
    "title": "Restrict Access to SYSIBM.SYSCONTROLS",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSCONTROLS table contains row permissions and column masks. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSIBM tables. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSIBM.SYSCONTROLS table from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname= 'SYSCONTROLS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSCONTROLS FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_syscontrols_public_access_restricted",
      "db2_syscontrols_table_public_access_restricted",
      "db2_syscontrols_public_permissions_restricted",
      "db2_table_public_access_syscontrols_restricted",
      "db2_syscontrols_table_public_role_restricted"
    ]
  },
  {
    "id": "4.3.11",
    "title": "Restrict Access to SYSIBM.SYSDBAUTH",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSDBAUTH table contains information on authorities granted to users or groups of users. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "This table contains all the grants in the database and may be used as an attack vector.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname = 'SYSDBAUTH' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSDBAUTH FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_sysdbauth_public_access_restricted",
      "db2_table_sysdbauth_public_role_revoked",
      "db2_table_sysdbauth_unauthorized_access_denied",
      "db2_table_sysdbauth_public_privileges_disabled",
      "db2_table_sysdbauth_access_control_enforced"
    ]
  },
  {
    "id": "4.3.12",
    "title": "Restrict Access to SYSIBM.SYSEVENTS",
    "assessment": "Automated",
    "description": "The SYSCAT.SYSEVENTS table contains all types of events that the database is currently monitoring. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "The types of events that the database is monitoring should not be made readily available to the public.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname = 'SYSEVENTS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSEVENTS FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_sysevents_table_no_public_access",
      "db2_system_table_access_restricted",
      "db2_event_table_public_privileges_revoked",
      "db2_sysevents_table_secure_permissions"
    ]
  },
  {
    "id": "4.3.13",
    "title": "Restrict Access to SYSIBM.SYSEVENTTABLES",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSEVENTTABLES table contains the name of the destination table that will receive the monitoring events. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "PUBLIC should not have access to see the target name of the event monitoring table.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname = 'SYSEVENTTABLES' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSEVENTTABLES FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_event_table_public_access_revoked",
      "db2_sysibm_table_secure_permissions",
      "db2_monitoring_table_public_restricted",
      "db2_sysibm_syseventtables_access_controlled"
    ]
  },
  {
    "id": "4.3.14",
    "title": "Restrict Access to SYSIBM.SYSEXTTAB",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSEXTTAB table contains the external tables in the database instance. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSIBM tables. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSIBM.SYSEXTTAB table from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname= 'SYSEXTTAB' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSEXTTAB FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_table_sysibm_sysexttab_public_access_restricted",
      "db2_table_public_role_restricted",
      "db2_table_sysibm_sysexttab_public_role_restricted",
      "db2_table_external_table_access_restricted",
      "db2_table_sysibm_sysexttab_access_restricted"
    ]
  },
  {
    "id": "4.3.15",
    "title": "Restrict Access to SYSIBM.SYSINDEXAUTH",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSINDEXAUTH table contains a list of users or groups that have CONTROL access on an index. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "The list of all users with access to an index should not be exposed to the public.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname = 'SYSINDEXAUTH' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSINDEXAUTH FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_sysindexauth_public_access_restricted",
      "db2_table_sysindexauth_no_public_control",
      "db2_table_sysindexauth_public_privileges_revoked",
      "db2_table_sysindexauth_public_access_denied",
      "db2_table_sysindexauth_public_control_disabled"
    ]
  },
  {
    "id": "4.3.16",
    "title": "Restrict Access to SYSIBM.SYSMODULEAUTH",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSMODULEAUTH view contains all granted privileges on a module for users, groups, or roles and is read only.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSIBM tables. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSIBM.SYSMODULEAUTH table from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname = 'SYSMODULEAUTH' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSMODULEAUTH FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_module_auth_restrict_access",
      "db2_sysmoduleauth_read_only_enforced",
      "db2_module_privileges_view_restricted",
      "db2_sysmoduleauth_access_controlled",
      "db2_module_auth_no_public_access"
    ]
  },
  {
    "id": "4.3.17",
    "title": "Restrict Access to SYSIBM.SYSPASSTHRUAUTH",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSPASSTHRUAUTH table contains the names of user or group that have pass- through authorization to query the data source. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "The ability to see which accounts have the pass-through privilege could allow an attacker to exploit these accounts to access another data source.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname = 'SYSPASSTHRUAUTH' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSPASSTHRUAUTH FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_syspassthruauth_no_public_access",
      "db2_auth_table_secure_permissions",
      "db2_passthruauth_public_restricted",
      "db2_sysibm_table_access_controlled"
    ]
  },
  {
    "id": "4.3.18",
    "title": "Restrict Access to SYSIBM.SYSPLANAUTH",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSPLANAUTH table contains the package privileges granted to the user or a group of users. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "The list of all users with access to a package should not be exposed to the public.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname = 'SYSPLANAUTH' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSPLANAUTH FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_sysplanauth_public_restricted",
      "db2_table_public_privileges_revoked",
      "db2_sysplanauth_public_access_denied",
      "db2_table_public_access_disabled"
    ]
  },
  {
    "id": "4.3.19",
    "title": "Restrict Access to SYSIBM.SYSPLAN",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSPLAN table contains the names of all packages created in the database instance. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "The names of packages created in the database can be used as an entry point if a vulnerable package exists.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname = 'SYSPLAN' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSPLAN FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_sysplan_table_no_public_access",
      "db2_sysibm_table_permissions_restricted",
      "db2_sysplan_table_access_controlled",
      "db2_table_public_role_restricted"
    ]
  },
  {
    "id": "4.3.20",
    "title": "Restrict Access to SYSIBM.SYSROLEAUTH",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSROLEAUTH table contains information on all roles and their respective grantees. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "PUBLIC should not have access to see the grants of the roles because this could be used as a point of exploit.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname = 'SYSROLEAUTH' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSROLEAUTH FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_sysroleauth_public_access_restricted",
      "db2_role_auth_table_public_access_restricted",
      "db2_sysibm_table_public_access_restricted",
      "db2_role_auth_table_no_public_access"
    ]
  },
  {
    "id": "4.3.21",
    "title": "Restrict Access to SYSIBM.SYSROLES",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSROLES table contains all roles available in the database. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "PUBLIC should not have access to see all the roles because this could be used as a point of exploit.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname = 'SYSROLES' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "erform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSROLES FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_sysroles_table_public_access_restricted",
      "db2_sysibm_sysroles_public_access_restricted",
      "db2_sysroles_table_access_restricted",
      "db2_sysibm_table_public_role_restricted"
    ]
  },
  {
    "id": "4.3.22",
    "title": "Restrict Access to SYSIBM.SYSROUTINEAUTH",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSROUTINEAUTH table contains a list of all users that have EXECUTE privilege on a routine (function, method, or procedure). It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "PUBLIC should not have access to see all the users because this could be used as a point of exploit.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname = 'SYSROUTINEAUTH' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSROUTINEAUTH FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_sysroutineauth_public_access_restricted",
      "db2_table_sysroutineauth_public_privileges_revoked",
      "db2_table_sysroutineauth_execute_privileges_restricted",
      "db2_table_sysroutineauth_public_role_restricted",
      "db2_table_sysroutineauth_access_control_enabled"
    ]
  },
  {
    "id": "4.3.23",
    "title": "Restrict Access to SYSIBM.SYSROUTINES",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSROUTINES table contains user-defined routines (scalar function, table function, sourced function, aggregate interface function, method, or procedure). It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSIBM tables. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSIBM.SYSROUTINES table from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname= 'SYSROUTINES' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSROUTINES FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_sysroutines_public_access_revoked",
      "db2_routine_table_permissions_restricted",
      "db2_sysibm_sysroutines_public_access_disabled",
      "db2_sensitive_table_public_access_denied"
    ]
  },
  {
    "id": "4.3.24",
    "title": "Restrict Access to SYSIBM.ROUTINES_S",
    "assessment": "Automated",
    "description": "The SYSIBM.ROUTINES_S view contains user-defined routines (scalar function, table function, sourced function, aggregate interface function, method, or procedure). It is recommended that the PUBLIC role be restricted from accessing this view.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSIBM views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSIBM.ROUTINES_S view from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname= 'ROUTINES_S' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.ROUTINES_S FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_routines_s_public_access_restricted",
      "db2_routines_s_public_role_revoked",
      "db2_routines_s_unauthorized_access_denied",
      "db2_routines_s_public_privileges_removed",
      "db2_routines_s_access_control_enforced"
    ]
  },
  {
    "id": "4.3.25",
    "title": "Restrict Access to SYSIBM.SYSSCHEMAAUTH",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSSCHEMAAUTH table contains a list of all users that have one or more privileges or access to a particular schema. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "PUBLIC should not have access to see all the users because this could be used as a point of exploit.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname = 'SYSSCHEMAAUTH' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSSCHEMAAUTH FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_schema_auth_public_restricted",
      "db2_sysschemaauth_no_public_access",
      "db2_schema_auth_table_protected",
      "db2_sysschemaauth_privileges_restricted",
      "db2_schema_auth_public_denied"
    ]
  },
  {
    "id": "4.3.26",
    "title": "Restrict Access to SYSIBM.SYSSCHEMATA",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSSCHEMATA table contains all schema names in the database. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "PUBLIC should not have access to see all the schema names in the database because this could be used as a point of exploit.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname = 'SYSSCHEMATA' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSSCHEMATA FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_schema_public_access_restricted",
      "db2_sysschema_public_access_revoked",
      "db2_sysibm_table_permissions_secure",
      "db2_schema_metadata_access_controlled",
      "db2_public_role_schema_access_denied"
    ]
  },
  {
    "id": "4.3.27",
    "title": "Restrict Access to SYSIBM.SYSSECURITYLABELACCESS",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSSECURITYLABELACCESS table contains security label that was granted access. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSIBM tables. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSIBM.SYSSECURITYLABELACCESS table from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname= 'SYSSECURITYLABELACCESS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSSECURITYLABELACCESS FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_security_label_access_no_public",
      "db2_syssecuritylabelaccess_public_restricted",
      "db2_table_syssecuritylabelaccess_secure",
      "db2_table_access_public_denied"
    ]
  },
  {
    "id": "4.3.28",
    "title": "Restrict Access to SYSIBM.SYSSECURITYLABELCOMPONENTELEMENTS",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSSECURITYLABELCOMPONENTELEMENTS table contains the element value for security label components. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSIBM tables. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSIBM.SYSSECURITYLABELCOMPONENTELEMENTS table from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname= 'SYSSECURITYLABELCOMPONENTELEMENTS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname>  2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSSECURITYLABELCOMPONENTELEMENTS FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_security_label_component_elements_public_restricted",
      "db2_syssecuritylabelcomponentelements_no_public_access",
      "db2_table_syssecuritylabelcomponentelements_public_revoked",
      "db2_security_label_table_public_privileges_removed"
    ]
  },
  {
    "id": "4.3.29",
    "title": "Restrict Access to SYSIBM.SYSSECURITYLABELCOMPONENTS",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSSECURITYLABELCOMPONENTS table contains security label components. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSIBM tables. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSIBM.SYSSECURITYLABELCOMPONENTS table from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname= 'SYSSECURITYLABELCOMPONENTS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSSECURITYLABELCOMPONENTS FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_security_label_components_public_revoked",
      "db2_syssecuritylabelcomponents_no_public_access",
      "db2_table_public_privileges_removed",
      "db2_security_label_components_access_restricted"
    ]
  },
  {
    "id": "4.3.30",
    "title": "Restrict Access to SYSIBM.SYSSECURITYLABELS",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSSECURITYLABELS table contains security labels. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSIBM tables. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSIBM.SYSSECURITYLABELS table from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname= 'SYSSECURITYLABELS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSSECURITYLABELS FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_table_syssecuritylabels_public_restricted",
      "db2_security_labels_public_access_restricted",
      "db2_table_public_role_restricted",
      "db2_syssecuritylabels_public_role_restricted"
    ]
  },
  {
    "id": "4.3.31",
    "title": "Restrict Access to SYSIBM.SYSSECURITYPOLICIES",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSSECURITYPOLICIES table contains all database security policies. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "PUBLIC should not be able to view all the database security policies.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname = 'SYSSECURITYPOLICIES' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSSECURITYPOLICIES FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_security_policies_public_access_restricted",
      "db2_syssecuritypolicies_public_access_restricted",
      "db2_table_public_role_restricted",
      "db2_security_policies_public_role_restricted"
    ]
  },
  {
    "id": "4.3.32",
    "title": "Restrict Access to SYSIBM.SYSSECURITYPOLICYCOMPONENTRULES",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSSECURITYPOLICYCOMPONENTRULES table contains the read and write access rules for security label components. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSIBM tables. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSIBM.SYSSECURITYPOLICYCOMPONENTRULES table from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname= 'SYSSECURITYPOLICYCOMPONENTRULES' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname>  2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSSECURITYPOLICYCOMPONENTRULES FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_security_policy_component_rules_no_public_access",
      "db2_syssecuritypolicycomponentrules_public_restricted",
      "db2_table_syssecuritypolicycomponentrules_public_access_revoked",
      "db2_security_policy_component_rules_public_denied"
    ]
  },
  {
    "id": "4.3.33",
    "title": "Restrict Access to SYSIBM.SYSSECURITYPOLICYEXEMPTIONS",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSSECURITYPOLICYEXEMPTIONS table contains the exemption to a security policy that was granted to a database account. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "PUBLIC should not be able to view all the exemptions to the database security policies.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname = 'SYSSECURITYPOLICYEXEMPTIONS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSSECURITYPOLICYEXEMPTIONS FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_security_policy_exemptions_public_access_restricted",
      "db2_syssecuritypolicyexemptions_public_access_restricted",
      "db2_table_syssecuritypolicyexemptions_public_access_restricted",
      "db2_security_policy_exemptions_access_restricted",
      "db2_syssecuritypolicyexemptions_access_restricted",
      "db2_table_syssecuritypolicyexemptions_access_restricted",
      "db2_table_public_role_restricted",
      "db2_security_policy_exemptions_public_role_restricted",
      "db2_syssecuritypolicyexemptions_public_role_restricted"
    ]
  },
  {
    "id": "4.3.34",
    "title": "Restrict Access to SYSIBM.SYSSERVEROPTIONS",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSSERVEROPTIONS table contains server-specific option values. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSIBM tables. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSIBM.SYSSERVEROPTIONS table from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname= 'SYSSERVEROPTIONS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSSERVEROPTIONS FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_server_options_table_secure_access",
      "db2_sysserveroptions_public_restricted",
      "db2_table_privileges_public_revoked",
      "db2_server_options_table_no_public_access"
    ]
  },
  {
    "id": "4.3.35",
    "title": "Restrict Access to SYSIBM.SYSSEQUENCEAUTH",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSSEQUENCEAUTH table contains users, groups, or roles granted privilege(s) on a sequence. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "PUBLIC should not have access to see all the granted access of a sequence in the database because this could be used as a point of exploit.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname = 'SYSSEQUENCEAUTH' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSSEQUENCEAUTH FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_sequence_auth_no_public_access",
      "db2_syssequenceauth_public_privileges_revoked",
      "db2_table_public_privileges_removed",
      "db2_sequence_auth_public_restricted"
    ]
  },
  {
    "id": "4.3.36",
    "title": "Restrict Access to SYSIBM.SYSSTATEMENTTEXTS",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSSTATEMENTTEXTS table contains user-provided SQL statements for statement thresholds. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSIBM tables. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSIBM.SYSSTATEMENTTEXTS table from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname= 'SYSSTATEMENTTEXTS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSSTATEMENTTEXTS FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_sysstatementtexts_public_access_revoked",
      "db2_sysibm_table_public_access_denied",
      "db2_sysstatementtexts_public_privileges_removed",
      "db2_table_public_privileges_restricted",
      "db2_sysibm_table_public_access_disabled",
      "db2_sysstatementtexts_public_access_blocked",
      "db2_table_public_access_prohibited"
    ]
  },
  {
    "id": "4.3.37",
    "title": "Restrict Access to SYSIBM.SYSSTMT",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSSTMT table contains all SQL statements of a compiled package. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "PUBLIC should not have access to the SQL statements of a database package. This could lead to an exploit.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname = 'SYSSTMT' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSSTMT FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_sysstmt_table_no_public_access",
      "db2_sysibm_table_access_restricted",
      "db2_sysstmt_table_secure_permissions",
      "db2_table_public_role_restricted",
      "db2_sysstmt_table_access_controlled",
      "db2_sysibm_table_no_public_privileges",
      "db2_table_public_access_denied"
    ]
  },
  {
    "id": "4.3.38",
    "title": "Restrict Access to SYSIBM.SYSSURROGATEAUTHIDS",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSSURROGATEAUTHIDS table contains the names of all accounts that have been granted SETSESSIONUSER privilege on a user or to PUBLIC. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "PUBLIC should not be able to view the names of all the surrogate accounts with SETSESSIONUSER privilege.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname = 'SYSSURROGATEAUTHIDS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSSURROGATEAUTHIDS FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_syssurrogateauthids_public_access_restricted",
      "db2_table_syssurrogateauthids_no_public_privileges",
      "db2_table_syssurrogateauthids_secure_access_control",
      "db2_table_syssurrogateauthids_public_role_restricted",
      "db2_table_syssurrogateauthids_privilege_access_limited"
    ]
  },
  {
    "id": "4.3.39",
    "title": "Restrict Access to SYSIBM.SYSTABAUTH",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSTABAUTH table contains users or groups that have been granted one or more privileges on a table or view. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "PUBLIC should not have access to the grants of views and tables in a database. This could lead to an exploit.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname = 'SYSTABAUTH' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSTABAUTH FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_systabauth_public_privileges_revoked",
      "db2_system_table_public_access_disabled",
      "db2_systabauth_public_role_restricted",
      "db2_table_auth_public_permissions_denied"
    ]
  },
  {
    "id": "4.3.40",
    "title": "Restrict Access to SYSIBM.SYSTBSPACEAUTH",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSTBSPACEAUTH table contains users or groups that have been granted the USE privilege on a particular tablespace in the database. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "PUBLIC should not have access to the grants of the tablespaces in a database. This could lead to an exploit.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname = 'SYSTBSPACEAUTH' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSTBSPACEAUTH FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_tablespace_auth_public_restricted",
      "db2_systbspaceauth_public_access_denied",
      "db2_tablespace_privilege_public_revoked",
      "db2_systbspaceauth_public_use_disabled",
      "db2_tablespace_auth_no_public_access"
    ]
  },
  {
    "id": "4.3.41",
    "title": "Restrict Access to SYSIBM.SYSUSEROPTIONS",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSUSEROPTIONS table contains server-specific user option values. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSIBM tables. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSIBM.SYSUSEROPTIONS table from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname= 'SYSUSEROPTIONS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSUSEROPTIONS FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_sysuseroptions_public_access_restricted",
      "db2_table_public_privileges_revoked",
      "db2_sysuseroptions_public_privileges_revoked",
      "db2_table_public_access_denied",
      "db2_sysuseroptions_public_access_denied",
      "db2_table_public_permissions_restricted",
      "db2_sysuseroptions_public_permissions_restricted"
    ]
  },
  {
    "id": "4.3.42",
    "title": "Restrict Access to SYSIBM.SYSVARIABLEAUTH",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSVARIABLEAUTH view contains the granted privileges on a global variable for users, groups, or roles and is read only.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSIBM tables. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSIBM.SYSVARIABLEAUTH view from PUBLIC to reduce risk to the organization's data.",
    "audit": "Determine if SYSIBM.SYSVARIABLEAUTH privileges for users, groups, and roles are correctly set. Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname = 'SYSVARIABLEAUTH' and grantee = 'PUBLIC' 3. Review privileges for users, groups, and roles. If the output is BLANK, then it is considered a Pass.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSVARIABLEAUTH FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_global_variable_auth_restricted_access",
      "db2_sysvariableauth_no_public_access",
      "db2_variable_auth_privileges_minimized",
      "db2_sysvariableauth_read_only_enforced",
      "db2_global_variable_auth_no_anonymous_access"
    ]
  },
  {
    "id": "4.3.43",
    "title": "Restrict Access to SYSIBM.SYSVARIABLES",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSVARIABLES table contains global variables. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSIBM tables. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSIBM.SYSVARIABLES table from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname= 'SYSVARIABLES' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSVARIABLES FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_sysvariables_public_access_denied",
      "db2_global_variables_public_restricted",
      "db2_sysibm_table_public_access_blocked",
      "db2_sysvariables_public_privileges_revoked"
    ]
  },
  {
    "id": "4.3.44",
    "title": "Restrict Access to SYSIBM.SYSWORKLOADAUTH",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSWORKLOADAUTH table represents the users, groups, or roles that have been granted the USAGE privilege on a workload.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSIBM tables. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSIBM.SYSWORKLOADAUTH from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname = 'SYSWORKLOADAUTH' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSWORKLOADAUTH FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_workload_auth_no_public_access",
      "db2_workload_auth_restricted_privileges",
      "db2_workload_auth_usage_privilege_audited",
      "db2_workload_auth_minimal_user_assignments",
      "db2_workload_auth_no_default_privileges",
      "db2_workload_auth_explicit_permissions_only",
      "db2_workload_auth_privilege_review_required"
    ]
  },
  {
    "id": "4.3.45",
    "title": "Restrict Access to SYSIBM.SYSWRAPOPTIONS",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSWRAPOPTIONS table contains wrapper-specific options. It is recommended that the PUBLIC role be restricted from accessing this table.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSIBM tables. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSIBM.SYSWRAPOPTIONS table from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBM' and tabname= 'SYSWRAPOPTIONS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBM.SYSWRAPOPTIONS FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_public_access_restricted",
      "db2_syswrapoptions_public_access_revoked",
      "db2_table_public_privileges_removed",
      "db2_syswrapoptions_public_permissions_disabled",
      "db2_table_public_access_denied"
    ]
  },
  {
    "id": "4.3.46",
    "title": "Restrict Access to SYSIBM.SYSXSROBJECTAUTH",
    "assessment": "Automated",
    "description": "The SYSIBM.SYSXSROBJECTAUTH table contains granted USAGE privileges on a particular XSR object for users, groups, or roles and is read only.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSIBM tables. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSIBM.SYSXSROBJECTAUTH table from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = ‘SYSIBMADM’ and tabname = ‘AUTHORIZATIONIDS’ and grantee = ‘PUBLIC’ 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBMADM.AUTHORIZATIONIDS FROM PUBLIC",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_table_sysxsrobjectauth_restricted_access",
      "db2_table_sysxsrobjectauth_no_public_access",
      "db2_table_sysxsrobjectauth_usage_privileges_restricted",
      "db2_table_sysxsrobjectauth_read_only_enforced",
      "db2_table_sysxsrobjectauth_privileges_audited",
      "db2_table_sysxsrobjectauth_no_unauthorized_users",
      "db2_table_sysxsrobjectauth_access_controlled",
      "db2_table_sysxsrobjectauth_usage_privileges_monitored"
    ]
  },
  {
    "id": "4.4.1",
    "title": "Restrict Access to SYSIBMADM.AUTHORIZATIONIDS",
    "assessment": "Automated",
    "description": "SYSIBMADM.AUTHORIZATIONIDS is an administrative view for the currently connected server.",
    "rationale": "Databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for SYSCAT views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSIBMADM.AUTHORIZATIONIDS view from PUBLIC to reduce risk to the organization’s data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBMADM' and tabname = 'AUTHORIZATIONIDS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SELECT ON SYSIBMADM.AUTHORIZATIONIDS FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-authorizationids- authorization-ids-types",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-authorizationids- authorization-ids-types",
    "function_names": [
      "db2_authorization_view_restrict_access",
      "db2_admin_view_no_public_access",
      "db2_authorizationids_privileged_access_only",
      "db2_sysibmadm_view_restricted_permissions",
      "db2_authorizationids_admin_access_controlled"
    ]
  },
  {
    "id": "4.4.2",
    "title": "Restrict Access to SYSIBMADM.OBJECTOWNERS",
    "assessment": "Automated",
    "description": "The SYSIBMADM.OBJECTOWNERS administrative view shows the complete object ownership information for each authorization ID for USER owning a system catalog defined object from the connected database.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on the SYSIBMADM.OBJECTOWNERS view from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBMADM' and tabname = 'OBJECTOWNERS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => revoke select on SYSIBMADM.OBJECTOWNERS from public  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-objectowners-object- ownership-information",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-objectowners-object- ownership-information",
    "function_names": [
      "db2_object_owners_access_restricted",
      "db2_object_owners_admin_view_protected",
      "db2_object_owners_privileges_limited",
      "db2_object_owners_access_controlled",
      "db2_object_owners_view_restricted"
    ]
  },
  {
    "id": "4.4.3",
    "title": "Restrict Access to SYSIBMADM.PRIVILEGES",
    "assessment": "Automated",
    "description": "The SYSIBMADM.PRIVILEGES administrative view displays all explicit privileges for all authorization IDs in the currently connected databases' system catalogs. PRIVILEGES schema is SYSIBMADM.",
    "rationale": "Any databases created without the RESTRICT option automatically GRANT the SELECT privilege to PUBLIC for catalog views. Therefore, it is strongly recommended to explicitly REVOKE the SELECT privilege on SYSIBMADM.PRIVILEGES from PUBLIC to reduce risk to the organization's data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBMADM' and tabname = 'PRIVILEGES' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => revoke select on SYSIBMADM.PRIVILEGES from public  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-privileges-privilege- information",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-privileges-privilege- information",
    "function_names": [
      "db2_privileges_view_restricted_access",
      "db2_privileges_view_no_public_access",
      "db2_privileges_view_admin_only_access",
      "db2_privileges_view_explicit_privileges_restricted",
      "db2_privileges_view_auth_ids_restricted"
    ]
  },
  {
    "id": "4.4.4",
    "title": "Restrict Access to SYSPROC.AUTH_LIST_AUTHORITIES_FOR_AUTHID",
    "assessment": "Automated",
    "description": "The table function SYSPROC.AUTH_LIST_AUTHORITIES_FOR_AUTHID returns the instance and database authorities for the specified authorization ID. In a non-restrictive database this table function has EXECUTE granted to public. It is recommended that public should not be able to execute this routine.",
    "rationale": "A malicious user may use this function to conduct information gathering regarding users that have high level authorities.",
    "audit": "Perform the following Db2 commands to check if PUBLIC has EXECUTE on this routine: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.routineauth where schema = 'SYSPROC' and specificname = 'AUTH_LIST_AUTHORITIES_FOR_AUTHID' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has EXECUTE privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command:  db2 => revoke EXECUTE on function SYSPROC.AUTH_LIST_AUTHORITIES_FOR_AUTHID from public RESTRICT References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-auth-list-authorities-authid- returns-list-agents",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-auth-list-authorities-authid- returns-list-agents",
    "function_names": [
      "db2_table_function_auth_list_authorities_no_public_execute",
      "db2_table_function_auth_list_authorities_restricted_access",
      "db2_table_function_auth_list_authorities_public_revoked",
      "db2_table_function_auth_list_authorities_execute_privileges_restricted"
    ]
  },
  {
    "id": "4.4.5",
    "title": "Restrict Access to SYSPROC.AUTH_LIST_ROLES_FOR_AUTHID",
    "assessment": "Automated",
    "description": "The table function SYSPROC.AUTH_LIST_ROLES_FOR_AUTHID returns the roles for the specified authorization ID. In a non-restrictive database this table function has EXECUTE granted to public. It is recommended that public should not be able to execute this routine.",
    "rationale": "A malicious user may use this function to conduct information gathering regarding the roles that a user belongs to.",
    "audit": "Perform the following Db2 commands to check if PUBLIC has EXECUTE on this routine: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.routineauth where schema = 'SYSPROC' and specificname = 'AUTH_LIST_ROLES_FOR_AUTHID' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has EXECUTE privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command:  db2 => revoke EXECUTE on function SYSPROC.AUTH_LIST_ROLES_FOR_AUTHID from public RESTRICT References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-auth-list-roles-authid- returns-roles-list",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-auth-list-roles-authid- returns-roles-list",
    "function_names": [
      "db2_table_function_public_execute_restricted",
      "db2_auth_list_roles_public_access_revoked",
      "db2_sysproc_auth_list_roles_execute_permission_denied",
      "db2_table_function_public_execute_disabled",
      "db2_auth_list_roles_for_authid_public_access_removed"
    ]
  },
  {
    "id": "4.4.6",
    "title": "Restrict Access to SYSPROC.AUTH_LIST_GROUPS_FOR_AUTHID",
    "assessment": "Automated",
    "description": "The table function SYSPROC.AUTH_LIST_GROUPS_FOR_AUTHID returns the groups for the specified authorization ID. In a non-restrictive database this table function has EXECUTE granted to public. It is recommended that public should not be able to execute this routine.",
    "rationale": "A malicious user may use this function to conduct information gathering regarding the groups that users belong to.",
    "audit": "Perform the following Db2 commands to check if PUBLIC has EXECUTE on this routine: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.routineauth where schema = 'SYSPROC' and specificname = 'AUTH_LIST_GROUPS_FOR_AUTHID' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has EXECUTE privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command:  db2 => revoke EXECUTE on function SYSPROC.AUTH_GROUPS_FOR_AUTHID from public RESTRICT References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=srv-auth-list-groups-authid-group- membership-authorization-ids",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=srv-auth-list-groups-authid-group- membership-authorization-ids",
    "function_names": [
      "db2_table_function_auth_list_groups_no_public_access",
      "db2_auth_list_groups_execute_restricted",
      "db2_sysproc_auth_list_groups_public_permission_denied",
      "db2_auth_list_groups_execute_privilege_restricted",
      "db2_table_function_auth_list_groups_public_execute_disabled"
    ]
  },
  {
    "id": "4.4.7",
    "title": "Restrict Access to SYSIBMADM.AUTHORIZATIONIDS",
    "assessment": "Automated",
    "description": "The view SYSIBMADM.AUTHORIZATIONIDS lists all the authorization ID known to the database server. In a non-restrictive database this view has SELECT granted to public. It is recommended that public should not be able to select from this view.",
    "rationale": "A malicious user may use this view to conduct information gathering regarding the users that are known to the database server.",
    "audit": "Perform the following Db2 commands to check if PUBLIC has SELECT on this view: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBMADM' and tabname = 'AUTHORIZATIONIDS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => revoke SELECT on table SYSIBMADM.AUTHORIZATIONIDS from public  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-authorizationids- authorization-ids-types",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-authorizationids- authorization-ids-types",
    "function_names": [
      "db2_view_public_access_restricted",
      "db2_authorizationids_select_privilege_revoked",
      "db2_sysibmadm_auth_ids_public_select_disabled",
      "db2_auth_ids_view_access_restricted",
      "db2_public_select_auth_ids_denied"
    ]
  },
  {
    "id": "4.4.8",
    "title": "Restrict Access to SYSIBMADM.OBJECTOWNERS",
    "assessment": "Automated",
    "description": "The view SYSIBMADM.OBJECTOWNERS lists all the authorization ID that own objects within the database. In a non-restrictive database this view has SELECT granted to public. It is recommended that public should not be able to select from this view.",
    "rationale": "A malicious user may use this view to conduct information gathering regarding the users that own objects.",
    "audit": "Perform the following Db2 commands to check if PUBLIC has SELECT on this view: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBMADM' and tabname = 'OBJECTOWNERS' and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => revoke SELECT on table SYSIBMADM.OBJECTOWNERS from public  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-objectowners-object- ownership-information",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-objectowners-object- ownership-information",
    "function_names": [
      "db2_view_objectowners_public_access_restricted",
      "db2_objectowners_select_privilege_revoked",
      "db2_sysibmadm_view_public_access_denied",
      "db2_objectowners_view_select_permission_restricted",
      "db2_database_objectowners_public_select_disabled"
    ]
  },
  {
    "id": "4.4.9",
    "title": "Restrict Access to SYSIBMADM.PRIVILEGES",
    "assessment": "Automated",
    "description": "The view SYSIBMADM.PRIVILEGES lists all the privileges that have been explicitly granted to authorization IDs. In a non-restrictive database this view has SELECT granted to public. It is recommended that public should not be able to select from this view.",
    "rationale": "A malicious user may use this view to conduct information gathering regarding the privileges that users have.",
    "audit": "Perform the following Db2 commands to check if PUBLIC has SELECT on this routine: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee from syscat.tabauth where tabschema = 'SYSIBMADM' and tabname = PRIVILEGES and grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => revoke SELECT on table SYSIBMADM.PRIVILEGES from public  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-privileges-privilege- information",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-privileges-privilege- information",
    "function_names": [
      "db2_privileges_view_public_access_restricted",
      "db2_privileges_view_select_privilege_revoked",
      "db2_privileges_view_public_select_disabled",
      "db2_privileges_view_access_controlled",
      "db2_privileges_view_public_permissions_removed"
    ]
  },
  {
    "id": "4.5.1",
    "title": "Restrict Access to Tablespaces",
    "assessment": "Automated",
    "description": "A tablespace is where the data is physically stored. It is recommended that tablespace usage be restricted to authorized users.",
    "rationale": "Grant the USE of tablespace privilege to only authorized users. Restrict the privilege from PUBLIC, where applicable, as a malicious user can cause a denial of service at the tablespace level by overloading it with corrupted data.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select grantee, tbspace from sysibm.systbspaceauth where grantee = 'PUBLIC' 3. If the output contains zero rows, then it is considered a Pass. Otherwise, PUBLIC has SELECT privilege and the remediation steps should be followed.",
    "remediation": "Perform the following to revoke access from PUBLIC. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE USE OF TABLESPACE [$tablespace_name\\] FROM PUBLIC  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscattablespaces",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=views-syscattablespaces",
    "function_names": [
      "rds_tablespace_authorized_users_only",
      "rds_tablespace_restricted_access",
      "rds_tablespace_no_public_access",
      "database_tablespace_access_controlled",
      "database_tablespace_authorized_access_only",
      "rds_tablespace_permissions_restricted",
      "database_tablespace_no_unauthorized_access",
      "rds_tablespace_secure_access_policy"
    ]
  },
  {
    "id": "4.5.2",
    "title": "Remove Unused Schemas",
    "assessment": "Automated",
    "description": "A schema is a logical grouping of database objects. It is recommended that unused schemas be removed from the database.",
    "rationale": "Unused schemas can be left unmonitored and may be subjected to abuse and therefore should be removed.",
    "audit": "1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select schemaname from syscat.schemata 3. Review the list of schemas",
    "remediation": "Remove unnecessary schemas. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => drop scheme <scheme name> restrict",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "database_schema_unused_removed",
      "database_schema_active_only",
      "database_schema_no_unused",
      "database_schema_cleanup_required"
    ]
  },
  {
    "id": "4.5.3",
    "title": "Review System Tablespaces",
    "assessment": "Automated",
    "description": "System tablespaces store all system object data within that database. It is recommended that system tablespaces are used to store system data only and not user data. Only certain table spaces can be used to hold user tables.",
    "rationale": "Users should not have privileges to create user data objects within the system tablespaces. User data objects created within the system tablespaces should be removed.",
    "audit": "1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select tabschema,tabname,tbspace from syscat.tables where tabschema not in ('SYSIBM','SYSTOOLS') and tbspace in ('SYSTOOLSPACE','SYSTOOLSTMPSPACE') 3. Review the list of system tablespaces. If the output is BLANK, that is considered a Pass.",
    "remediation": "1. Connect to the Db2 database. db2 => connect to <dbname> 2. Review the system tablespaces to identify any user data objects within them. 3. Drop, migrate, or otherwise remove all user data objects (tables, schemas, etc.) from within the system tablespaces. 4. Revoke write access for the system tablespaces from all users.  5 Authentication Considerations",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "database_system_tablespace_system_data_only",
      "database_tablespace_no_user_data",
      "database_tablespace_system_objects_only",
      "database_tablespace_user_data_segregated",
      "database_system_tablespace_valid_usage"
    ]
  },
  {
    "id": "5.1",
    "title": "Specify a Secure Connection Authentication Type (SRVCON_AUTH)",
    "assessment": "Manual",
    "description": "This parameter can take on any of the following values: • NOT_SPECIFIED • CLIENT • SERVER • SERVER_ENCRYPT • KERBEROS • KRB_SERVER_ENCRYPT • GSSPLUGIN • GSS_SERVER_ENCRYPT • SERVER_ENCRYPT_TOKEN • KERBEROS_TOKEN • GSSPLUGIN_TOKEN • KRB_SVR_ENC_TOKEN • GSS_SVR_ENC_TOKEN If this parameter is set to NOT_SPECIFIED, then the type of authentication for connections is determined by the AUTHENTICATION parameter. Recommendations: 1. Do not use CLIENT authentication type. 2. SERVER_ENCRYPT instead of SERVER is recommended as a compensating configuration if TLS cannot be used to encrypted client server communications.",
    "rationale": "When using CLIENT authentication type, the server trusts the client to authenticate the connecting user. A malicious user can connect to the database as any user including a database administrator by simply creating that user on the client system. When using SERVER authentication type without SSL enabled, the user ID and password that are sent from the client to the server during a connect or an attach are in plaintext format. Therefore, these credentials are exposed when sent across an unsecure network and can be intercepted by a malicious user.  Impact: It is important to be aware that the implementation of this recommendation results in a brief downtime. It is advisable to ensure that the setting is implemented during an approved maintenance window.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command: db2 => get database manager configuration 3. Locate the SRVCON_AUTH value in the output: Server Connection Authentication (SRVCON_AUTH) = SERVER Any value other than CLIENT is acceptable.",
    "remediation": "1. Attach to the Db2 instance db2 => attach to <db2instance> 2. Run the following command: db2 => update database manager configuration parameter using srvcon_auth <authentication type> 3. Restart the Db2 instance. db2 => db2stop db2 => db2start Refer to the 'encryption of data in motion' section for more information about using SSL for client-server communication.",
    "profile_applicability": "•  Level 1 - RDBMS",
    "impact": "It is important to be aware that the implementation of this recommendation results in a brief downtime. It is advisable to ensure that the setting is implemented during an approved maintenance window.",
    "function_names": [
      "cloud_cdn_connection_auth_type_not_specified",
      "cloud_cdn_connection_auth_type_no_client",
      "cloud_cdn_connection_auth_type_server_encrypt",
      "cloud_cdn_connection_auth_type_secure_recommended"
    ]
  },
  {
    "id": "5.2",
    "title": "Specify a Secure Authentication Type (AUTHENTICATION)",
    "assessment": "Manual",
    "description": "The AUTHENTICATION database manager configuration parameter specifies how and where authentication takes place for incoming connections to the database as well as local authorization of commands run outside a connection or attachment, such as tools run from the command line. This parameter can be overridden by the SRVCON_AUTH parameter for incoming connections. This parameter can take on any of the following values: • CLIENT • SERVER • SERVER_ENCRYPT • DATA_ENCRYPT • DATA_ENCRYPT_CMP • KERBEROS • KRB_SERVER_ENCRYPT • GSSPLUGIN • GSS_SERVER_ENCRYPT Recommendations: 1. Do not use CLIENT, DATA_ENCRYPT or DATA_ENCRYPT_CMP authentication types. 2. SERVER_ENCRYPT instead of SERVER is recommended as a compensating configuration if TLS cannot be used to encrypted client server communications.",
    "rationale": "When using CLIENT authentication type, the server trusts the client to authenticate the connecting user. A malicious user can connect to the database as any user including a database administrator by simply creating that user on the client system. DATA_ENCRYPT and DATA_ENCRYPT_CMP authentication types provide the ability to encrypt both user credentials and user data when sent from the client to the server. Since these authentication types use DES encryption algorithm which is cryptographically weak, they are deprecated in favor of SSL. When using SERVER authentication type without SSL enabled, the user ID and password that are sent from the client to the server during a connect or an attach are in plaintext format. Therefore, these credentials are exposed when sent across an insecure network and can be intercepted by a malicious user.  Impact: It is important to be aware that the implementation of this recommendation results in a brief downtime. It is therefore advisable to ensure that the setting is implemented during an approved maintenance window.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command: db2 => get database manager configuration 3. Locate the AUTHENTICATION value in the output: Database manager authentication (AUTHENTICATION) = SERVER",
    "remediation": "1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command: db2 => update database manager configuration parameter using authentication <authentication type> 3. Restart the Db2 instance. db2 => db2stop db2 => db2start Refer to the 'encryption of data in motion' section for more information about using SSL for client-server communication.",
    "profile_applicability": "•  Level 1 - RDBMS",
    "impact": "It is important to be aware that the implementation of this recommendation results in a brief downtime. It is therefore advisable to ensure that the setting is implemented during an approved maintenance window.",
    "function_names": [
      "db_manager_authentication_secure_type",
      "db_manager_authentication_no_client_auth",
      "db_manager_authentication_no_data_encrypt",
      "db_manager_authentication_server_encrypt_enabled",
      "db_manager_authentication_kerberos_enabled",
      "db_manager_authentication_gssplugin_enabled",
      "db_manager_authentication_tls_encrypted",
      "db_manager_authentication_no_weak_types",
      "db_manager_authentication_secure_override",
      "db_manager_authentication_no_legacy_types"
    ]
  },
  {
    "id": "5.3",
    "title": "Database Manager Configuration Parameter: ALTERNATE_AUTH_ENC",
    "assessment": "Manual",
    "description": "The ALTERNATE_AUTH_ENC database manager configuration parameter specifies the encryption algorithm that is used to encrypt user ID and password that are sent from the client during a connect or attach. This parameter is in effect when the authentication method that is negotiated between the client and the server is SERVER_ENCRYPT. It is recommended to set this parameter to AES_ONLY.",
    "rationale": "If this parameter is set to a value other than AES_ONLY, the server can accept the DES encryption algorithm to encrypt the user credentials and DES is cryptographically weak in comparison to AES. Impact: It is important to be aware that the implementation of this recommendation results in a brief downtime. It is therefore advisable to ensure that the setting is implemented during an approved maintenance window.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command: db2 => get database manager configuration 3. Locate the ALTERNATE_AUTH_ENC value in the output: Alternate authentication (ALTERNATE_AUTH_ENC) = AES_ONLY",
    "remediation": "1. Attach to the Db2 instance  db2 => attach to <db2instance> 2. Run the following command: db2 => update database manager configuration parameter using alternate_auth_enc aes_only 3. Restart the Db2 instance. db2 => db2stop db2 => db2start",
    "profile_applicability": "•  Level 1 - RDBMS",
    "impact": "It is important to be aware that the implementation of this recommendation results in a brief downtime. It is therefore advisable to ensure that the setting is implemented during an approved maintenance window.",
    "function_names": [
      "db_manager_parameter_alterate_auth_enc_aes_only",
      "db_manager_auth_encryption_aes_only",
      "db_config_parameter_alterate_auth_enc_aes_only",
      "db_auth_encryption_algorithm_aes_only",
      "db_manager_auth_encryption_algorithm_aes_only"
    ]
  },
  {
    "id": "5.4",
    "title": "Database Manager Configuration Parameter: TRUST_ALLCLNTS",
    "assessment": "Manual",
    "description": "This database manager configuration parameter is only active when the authentication parameter is set to CLIENT which is not a recommended setting as discussed in the [authentication parameter section](#specify-a-secure-authentication-type- authentication). If the parameter is set to YES, the server assumes that the client side is handling authentication to the database. If the parameter is set to NO, the client must provide authentication to the server on behalf of the user. The recommended value for this parameter is NO.",
    "rationale": "If the server trusts the client to authenticate the connecting user, a malicious user can connect to the database as any user including a database administrator by simply creating that user on the client system. Impact: It is important to be aware that the implementation of this recommendation results in a brief downtime. It is therefore advisable to ensure that the setting is implemented during an approved maintenance window.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command: db2 => get database manager configuration 3. Locate the TRUST_ALLCLNTS value in the output. Trust all clients (TRUST_ALLCLNTS) = NO",
    "remediation": "1. Attach to the Db2 instance.  db2 => attach to <db2instance> 2. Run the following command: db2 => update database manager configuration parameter using trust_allclnts no 3. Restart the Db2 instance. db2 => db2stop db2 => db2start",
    "profile_applicability": "•  Level 1 - RDBMS",
    "impact": "It is important to be aware that the implementation of this recommendation results in a brief downtime. It is therefore advisable to ensure that the setting is implemented during an approved maintenance window.",
    "function_names": [
      "database_manager_authentication_trust_allclients_disabled",
      "database_manager_authentication_client_auth_required",
      "database_manager_authentication_trust_allclients_no",
      "database_manager_authentication_secure_client_auth_enabled"
    ]
  },
  {
    "id": "5.5",
    "title": "Database Manager Configuration Parameter: TRUST_CLNTAUTH",
    "assessment": "Manual",
    "description": "This database manager configuration parameter is only active when the authentication parameter is set to CLIENT which is not a recommended setting as discussed in the [authentication parameter section](#specify-a-secure-authentication-type- authentication). If the parameter is set to CLIENT, the user ID and password are not needed, but if they are provided, authentication will occur at the client. If the parameter is set to SERVER, the user ID and password are needed and will be authenticated at the server. The recommended value for this parameter is SERVER.",
    "rationale": "If the server trusts the client to authenticate the connecting user, a malicious user can connect to the database as any user including a database administrator by simply creating that user on the client system. Impact: It is important to be aware that the implementation of this recommendation results in a brief downtime. It is therefore advisable to ensure that the setting is implemented during an approved maintenance window.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command: db2 => get database manager configuration 3. Locate the TRUST_CLNTAUTH value in the output: Trusted client authentication (TRUST_CLNTAUTH) = SERVER",
    "remediation": "1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command: db2 => update database manager configuration parameter using trust_clntauth SERVER 3. Restart the Db2 instance. db2 => db2stop db2 => db2start",
    "profile_applicability": "•  Level 1 - RDBMS",
    "impact": "It is important to be aware that the implementation of this recommendation results in a brief downtime. It is therefore advisable to ensure that the setting is implemented during an approved maintenance window.",
    "function_names": [
      "database_manager_trust_clntauth_server",
      "database_manager_authentication_server",
      "database_manager_client_auth_disabled",
      "database_manager_secure_auth_type",
      "database_manager_trust_clntauth_secure",
      "database_manager_authentication_client_disabled"
    ]
  },
  {
    "id": "5.6",
    "title": "Database Manager Configuration Parameter: FED_NOAUTH",
    "assessment": "Manual",
    "description": "The FED_NOAUTH database manager configuration parameter determines whether federated authentication will be bypassed at the instance. If this parameter is set to YES, the AUTHENTICATION parameter is set to SERVER or SERVER_ENCRYPT and the FEDERATED parameter is set to YES, then authentication at the instance is bypassed and is instead assumed to be performed at the data source. It is recommended to set this parameter to NO.",
    "rationale": "Setting FED_NOAUTH to NO will ensure that authentication is not bypassed for any users that are connecting to the instance. Impact: It is important to be aware that the implementation of this recommendation results in a brief downtime. It is therefore advisable to ensure that the setting is implemented during an approved maintenance window.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command: db2 => get database manager configuration 3. Locate the FED_NOAUTH value in the output: Bypass federated authentication (FED_NOAUTH) = NO",
    "remediation": "1. Attach to the Db2 instance  db2 => attach to <db2instance> 2. Run the following command: db2 => update database manager configuration using fed_auth no 3. Restart the Db2 instance. db2 => db2stop db2 => db2start",
    "profile_applicability": "•  Level 1 - RDBMS",
    "impact": "It is important to be aware that the implementation of this recommendation results in a brief downtime. It is therefore advisable to ensure that the setting is implemented during an approved maintenance window.",
    "function_names": [
      "database_manager_fed_noauth_disabled",
      "database_manager_authentication_server_encrypted",
      "database_manager_federated_authentication_enabled",
      "database_manager_instance_authentication_required"
    ]
  },
  {
    "id": "5.7",
    "title": "Secure Permissions for All Authentication Plugins",
    "assessment": "Manual",
    "description": "The following database manager configuration parameters allow the use of custom plugins for authentication and group lookup purposes. • CLNT_PW_PLUGIN • CLNT_KRB_PLUGIN • GROUP_PLUGIN • LOCAL_GSSPLUGIN • SRVCON_GSSPLUGIN_LIST • SRVCON_PW_PLUGIN The permissions on the plugins specified by any of the above parameters should be secured so that users other than the instance owner don't have write privileges.",
    "rationale": "If a malicious user has write access to a plugin, they can overwrite it with their own thereby manipulating the authentication and authorization behavior for connecting users.",
    "audit": "Steps for Linux: • 32-bit and 64-bit client side user authentication plugins are found in $DB2PATH/security32/plugin/client and $DB2PATH/security64/plugin/client directories respectively • 32-bit and 64-bit server side user authentication plugins are found in $DB2PATH/security32/plugin/server and $DB2PATH/security64/plugin/server directories respectively Review the permissions of the plugins that are in use: ls -al Steps for Windows: • 32-bit and 64-bit client side user authentication plugins are found in $DB2PATH\\security\\plugin\\instance name\\client • 32-bit and 64-bit server side user authentication plugins are found in $DB2PATH\\security\\plugin\\instance name\\server Review the permissions of the plugins that are in use:  1. Right-click over the plugin file 2. Choose properties 3. Select the Security tab 4. Review the access for all accounts",
    "remediation": "To change permissions of a file on Linux: chmod 755 <file> To change permissions of a file on Windows: 1. Right-click on the file 2. Choose properties 3. Select the Security tab 4. Grant the Full Control authority to all Db2 administrator accounts 5. Grant only read and execute privileges to all other accounts (revoke any other privileges)",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "database_auth_plugin_permissions_restricted",
      "database_auth_plugin_owner_write_only",
      "database_auth_plugin_no_public_write",
      "database_auth_plugin_secure_permissions",
      "database_auth_plugin_instance_owner_only",
      "database_auth_plugin_no_unauthorized_access",
      "database_auth_plugin_write_restricted",
      "database_auth_plugin_privileges_secured"
    ]
  },
  {
    "id": "5.8",
    "title": "DB2_GRP_LOOKUP Registry Variable (Windows only)",
    "assessment": "Manual",
    "description": "The DB2_GRP_LOOKUP registry variable specifies which Windows security mechanism is used to enumerate the groups that a user belongs to. Periodic review of this variable is required to ensure that the correct location is being used for group definitions during authentication.",
    "rationale": "Incorrectly configured DB2_GRP_LOOKUP registry variable could result in unexpected authorization behavior where a low privileged user could potentially get access to sensitive data.",
    "audit": "Verify that the DB2_GRP_LOOKUP registry variable is set to the correct location by running the following command: db2set -all",
    "remediation": "Run the following command to set the DB2_GRP_LOOKUP registry variable to the appropriate location for group lookup: db2set DB2_GRP_LOOKUP= <location for group lookup>",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "windows_registry_db2_grp_lookup_configured",
      "windows_registry_db2_grp_lookup_valid",
      "windows_registry_db2_grp_lookup_secure",
      "windows_registry_db2_grp_lookup_correct_location",
      "windows_registry_db2_grp_lookup_authentication_defined"
    ]
  },
  {
    "id": "5.9",
    "title": "DB2DOMAINLIST Registry Variable (Windows only)",
    "assessment": "Manual",
    "description": "This registry variable is only active is the authentication parameter is set to CLIENT which is not a recommended setting as discussed in section 6.2. It is possible to have a user id be represented across multiple domains. Issues could arise when trying to authenticate such a user id. To prevent these issues, a listing of domains should be defined within the DB2DOMAINLIST registry variable. Periodic review of the domain list assigned to the DB2DOMAINLIST registry variable helps ensure that non-essential domains do not have unnecessary authorizations.",
    "rationale": "Incorrectly configured DB2DOMAINLIST registry variable could result in unexpected authorization behavior where a low privileged user could potentially get access to sensitive data.",
    "audit": "Verify that the DB2DOMAINLIST registry variable includes only the appropriate domains by running the following command: db2set -all",
    "remediation": "Run the following command to set the DB2DOMAINLIST registry variable to the appropriate domains: db2set DB2DOMAINLIST= <ordered list of domains separated by comma>",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "windows_registry_db2domainlist_defined",
      "windows_registry_db2domainlist_reviewed_periodically",
      "windows_registry_db2domainlist_no_unnecessary_domains",
      "windows_registry_db2domainlist_authentication_secure",
      "windows_registry_db2domainlist_client_auth_disabled"
    ]
  },
  {
    "id": "5.10",
    "title": "DB2AUTH Registry Variable",
    "assessment": "Manual",
    "description": "The DB2AUTH registry variable is used to control various authentication related behaviors in Db2. The following settings are recommended for this registry variable: 1. Use DISABLE_CHGPASS which disables the ability to change a user's password from the client. 2. Use JCC_ENFORCE_SECMEC which enforces that the Db2 server does not accept a clear text password security mechanism when using SERVER_ENCRYPT authentication type. 3. If CLIENT authentication is being used which is not recommended as discussed in section 6.2, it is also recommended to set this registry variable to TRUSTEDCLIENT_SRVENC and not TRUSTEDCLIENT_DATAENC. TRUSTEDCLIENT_SRVENC forces untrusted clients to use SERVER_ENCRYPT authentication type while TRUSTEDCLIENT_DATAENC forces them to use DATA_ENCRYPT. If DB2AUTH is not set to DISABLE_CHGPASS, refer to the DB2CHGPWD_EEE registry variable section which specifies whether users are able to change passwords through Db2 in a partitioned database environment.",
    "rationale": "1. Allowing a client to change a user's password through Db2 commands is not recommended since Db2 may not enforce the expected password change rules. In addition, the password change requests going through Db2 may not be audited as expected. 2. Plain text passwords sent across an unsecure network are exposed and can be intercepted by a malicious user. 3. DATA_ENCRYPT is deprecated since it uses DES encryption algorithm which is cryptographically weak. Furthermore, enforcing SERVER_ENCRYPT ensures that the user ID and password are encrypted when sent from the client to the server.",
    "audit": "Verify that the DB2AUTH registry variable is set to the appropriate values by running the following command:  db2set -all",
    "remediation": "Run the following command to set the DB2AUTH registry variable to the appropriate values: db2set DB2AUTH= <comma separated values>",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_registry_db2auth_disable_chgpass",
      "db2_registry_db2auth_jcc_enforce_secmec",
      "db2_registry_db2auth_trustedclient_srvenc",
      "db2_registry_db2auth_no_trustedclient_dataenc",
      "db2_registry_db2auth_no_cleartext_passwords",
      "db2_registry_db2auth_server_encrypt_enabled",
      "db2_registry_db2auth_client_auth_disabled",
      "db2_registry_db2auth_secure_auth_mechanism",
      "db2_registry_db2auth_no_weak_auth_types",
      "db2_registry_db2auth_encrypted_auth_required"
    ]
  },
  {
    "id": "5.11",
    "title": "DB2CHGPWD_EEE Registry Variable",
    "assessment": "Manual",
    "description": "The DB2CHGPWD_EEE registry variable specifies whether users are able to change passwords through Db2 in a partitioned database environment. It is recommended to set this variable to NO.",
    "rationale": "If password management in the partitioned database environment is not centralized, then it could result in a situation where one partition has the updated password for a given user while the rest have the old password which is a security risk.",
    "audit": "Verify that the DB2CHGPWD_EEE registry variable is set to the correct location by running the following command: db2set -all",
    "remediation": "Run the following command to set the DB2CHGPWD_EEE registry variable to NO: db2set DB2CHGPWD_EEE=NO",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_registry_db2chgpwd_eee_disabled",
      "db2_registry_password_change_disabled",
      "db2_registry_eee_variable_no",
      "db2_registry_user_password_change_restricted",
      "db2_registry_db2chgpwd_eee_no"
    ]
  },
  {
    "id": "6.1.1",
    "title": "Secure SYSADM Authority",
    "assessment": "Manual",
    "description": "The sysadm_group parameter defines the system administrator group (SYSADM) authority. It is recommended that the sysadm_group group contains authorized users only.",
    "rationale": "If an account that possesses this authority is compromised or used in a malicious manner, the confidentiality, integrity, and availability of data in the Db2 instance will be at increased risk.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command: db2 => get database manager configuration 3. Locate the sysadm_group value in the output and ensure the value is not NULL: (SYSADM_GROUP) = DB2ADM 4. Review the members of the sysadm_group on the operating system. Linux: cat /etc/group | grep <sysadm group name> Windows: 1. Run compmgmt.msc 2. Click 'Local Users and Groups' 3. Double click 'Groups' 4. Double click 5. Review group members",
    "remediation": "Define a valid group name for the SYSADM group. 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command: db2 => update database manager configuration using sysadm_group <sys adm group name> Default Value: The default value for sysadm_group is NULL. References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=authorities-system-administration- authority-sysadm",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=authorities-system-administration- authority-sysadm",
    "function_names": [
      "db2_sysadm_group_authorized_users_only",
      "db2_sysadm_authority_restricted",
      "db2_sysadm_group_secure_configuration",
      "db2_sysadm_authority_no_unauthorized_users",
      "db2_sysadm_group_membership_controlled"
    ]
  },
  {
    "id": "6.1.2",
    "title": "Secure SYSCTRL Authority",
    "assessment": "Manual",
    "description": "The sysctrl_group parameter defines the system administrator group with system control (SYSCTRL) authority. It is recommended that the sysctrl_group group contains authorized users only.",
    "rationale": "If an account that possesses this authority is compromised or used in a malicious manner, the confidentiality, integrity, and availability of data in the Db2 instance will be at increased risk.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command: db2 => get database manager configuration 3. Locate the sysctrl_group value in the output and ensure the value is not NULL: SYSCTRL group name (SYSCTRL_GROUP) = DB2CTRL 4. Review the members of the sysctrl_group on the operating system. Linux: cat /etc/group | grep <sysctrl group name> Windows: 1. Run compmgmt.msc 2. Click 'Local Users and Groups' 3. Double click 'Groups' 4. Double click 5. Review group members",
    "remediation": "Define a valid group name for the SYSCTRL group. 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command: db2 => update dbm cfg using sysctrl_group <sys control group name> Default Value: The default value for sysctrl_group is NULL. References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=authorities-system-control- authority-sysctrl",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=authorities-system-control- authority-sysctrl",
    "function_names": [
      "sysctrl_group_authorized_users_only",
      "sysctrl_group_no_unauthorized_members",
      "sysctrl_authority_restricted_to_authorized",
      "sysctrl_group_membership_audited",
      "sysctrl_group_minimal_privilege_enforced"
    ]
  },
  {
    "id": "6.1.3",
    "title": "Secure SYSMAINT Authority",
    "assessment": "Manual",
    "description": "The sysmaint_group parameter defines the system administrator group that possesses the system maintenance (SYSMAINT) authority. It is recommended that the sysmaint_group group contains authorized users only.",
    "rationale": "If an account that possesses this authority is compromised or used in a malicious manner, the confidentiality, integrity, and availability of data in the Db2 instance will be at increased risk.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command: db2 => get database manager configuration 3. Locate the sysmaint_group value in the output and ensure the value is not NULL: SYSMAINT group name (SYSMAINT_GROUP) = DB2MAINT 4. Review the members of the sysmaint_group on the operating system. Linux: cat /etc/group | grep <sysmaint group name> Windows: 1. Run compmgmt.msc 2. Click 'Local Users and Groups' 3. Double click 'Groups' 4. Double click 5. Review group members",
    "remediation": "Define a valid group name for the SYSMAINT group. 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command: db2 => update database manager configuration using sysmaint_group <sys maintenance group name> Default Value: The default value for sysmaint_group is NULL. References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=authorities-system-maintenance- authority-sysmaint",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=authorities-system-maintenance- authority-sysmaint",
    "function_names": [
      "iam_group_sysmaint_authority_restricted",
      "iam_group_sysmaint_authority_authorized_only",
      "iam_group_sysmaint_authority_no_unauthorized_users",
      "iam_group_sysmaint_authority_minimal_membership",
      "iam_group_sysmaint_authority_secure_membership"
    ]
  },
  {
    "id": "6.1.4",
    "title": "Secure SYSMON Authority",
    "assessment": "Manual",
    "description": "The sysmon_group parameter defines the operating system groups with system monitor (SYSMON) authority. It is recommended that the sysmon_group group contain authorized users only.",
    "rationale": "If an account that possesses this authority is compromised or used in a malicious manner, the confidentiality, integrity, and availability of data in the Db2 instance will be at increased risk.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command: db2 => get database manager configuration 3. Locate the sysmon_group value in the output and ensure the value is not NULL: SYSMON group name (SYSMON_GROUP) = DB2MON 4. Review the members of the sysmon_group on the operating system. Linux: cat /etc/group | grep <sysmon group name> Windows: 1. Run compmgmt.msc 2. Click 'Local Users and Groups' 3. Double click 'Groups' 4. Double click 5. Review group members",
    "remediation": "Define a valid group name for the SYSMON group. 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command: db2 => update database manager configuration using sysmon_group <sys monitor group name> Default Value: The default value for sysmon_group is NULL. References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=authorities-system-monitor- authority-sysmon",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=authorities-system-monitor- authority-sysmon",
    "function_names": [
      "iam_group_sysmon_authority_restricted",
      "iam_group_sysmon_membership_authorized_only",
      "iam_group_sysmon_privileges_limited",
      "iam_group_sysmon_access_controlled",
      "iam_group_sysmon_members_validated"
    ]
  },
  {
    "id": "6.1.5",
    "title": "Secure SECADM Authority",
    "assessment": "Manual",
    "description": "The SECADM (security administrator) role grants the authority to create, alter (where applicable), and drop roles, trusted contexts, audit policies, security label components, security policies and security labels. It is also the authority required to grant and revoke roles, security labels and exemptions, and the SETSESSIONUSER privilege. SECADM authority has no inherent privilege to access data stored in tables. It is recommended that the SECADM role be granted to authorized users only.",
    "rationale": "If an account that possesses this authority is compromised or used in a malicious manner, the confidentiality, integrity, and availability of data in the Db2 instance will be at increased risk.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select distinct grantee, granteetype from syscat.dbauth where securityadmauth = 'Y' 3. Review the list of users, groups, and roles in the above output to ensure only approved users, groups, and roles are assigned.",
    "remediation": "Revoke this permission from any unauthorized users. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SECADM ON DATABASE FROM USER <username>  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=authorities-security-administration- authority-secadm",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=authorities-security-administration- authority-secadm",
    "function_names": [
      "iam_role_secadm_privileges_restricted",
      "iam_role_secadm_authorized_users_only",
      "iam_role_secadm_no_data_access",
      "iam_role_secadm_privilege_escalation_prevented",
      "iam_role_secadm_audit_policy_management_restricted",
      "iam_role_secadm_trusted_context_management_restricted",
      "iam_role_secadm_security_label_management_restricted",
      "iam_role_secadm_session_user_privilege_restricted"
    ]
  },
  {
    "id": "6.1.6",
    "title": "Secure DBADM Authority",
    "assessment": "Manual",
    "description": "The DBADM (database administration) role grants the authority to a user to perform administrative tasks on a specific database. It is recommended that the DBADM role be granted to authorized users only.",
    "rationale": "If an account that possesses this authority is compromised or used in a malicious manner, the confidentiality, integrity, and availability of data in the database will be at increased risk.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select distinct grantee, granteetype from syscat.dbauth where dbadmauth = 'Y' 3. Review the list of users, groups, and roles in the above output to ensure only approved users, groups, and roles are assigned.",
    "remediation": "Revoke this permission from any unauthorized users. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE DBADM ON DATABASE FROM USER <username>  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=authorities-database- administration-authority-dbadm",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=authorities-database- administration-authority-dbadm",
    "function_names": [
      "iam_user_no_dbadmin_privileges",
      "database_user_no_unauthorized_dbadmin",
      "db_role_dbadmin_restricted",
      "database_authority_dbadmin_secure",
      "iam_role_dbadmin_least_privilege",
      "database_user_dbadmin_authorized_only",
      "db_permission_dbadmin_restricted_access",
      "database_role_dbadmin_minimal_grants"
    ]
  },
  {
    "id": "6.1.7",
    "title": "Secure SQLADM Authority",
    "assessment": "Manual",
    "description": "The SQLADM authority is required to monitor, tune, and alter SQL statements.",
    "rationale": "The SQLADM authority can CREATE, SET, FLUSH, DROP EVENT MONITORS and perform RUNSTATS and REORG INDEXES and TABLES. SQLADM can be granted to users, groups, or roles or PUBLIC. SQLADM authority is a subset of the DBADM authority and can be granted by the SECADM authority.",
    "audit": "1. Run the following command: db2 => select distinct grantee, granteetype from syscat.dbauth where sqladmauth = 'Y' 2. Review the list of users, groups, and roles in the above output to ensure only approved users, groups, and roles are assigned.",
    "remediation": "Revoke SQLADM authority from any unauthorized users. db2 => REVOKE SQLADM ON DATABASE FROM USER <username> References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=authorities-sql-administration- authority-sqladm",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=authorities-sql-administration- authority-sqladm",
    "function_names": [
      "iam_user_no_sqladmin_privileges",
      "iam_role_no_sqladmin_privileges",
      "iam_policy_no_sqladmin_privileges",
      "database_user_no_sqladmin_privileges",
      "database_role_no_sqladmin_privileges",
      "database_permission_no_sqladmin_privileges",
      "sqladmin_authority_restricted_access",
      "sqladmin_authority_monitored_usage",
      "sqladmin_authority_tuning_disabled",
      "sqladmin_authority_alter_disabled"
    ]
  },
  {
    "id": "6.1.8",
    "title": "Secure DATAACCESS Authority",
    "assessment": "Manual",
    "description": "Grants the authority to access data. The DATAACCESS authority allows the grantee to leverage DML level commands i.e. SELECT, INSERT, UPDATE, DELETE, LOAD, and EXECUTE any package or routine. The DATAACCESS authority cannot be granted to PUBLIC.",
    "rationale": "The DATAACCESS authority gives the grantee read access and also control over manipulating the data. DATAACCESS can be granted to users, groups, or roles, but not PUBLIC. DATAACCESS authority is a subset of the DBADM authority and can be granted by the SECADM authority.",
    "audit": "1. Run the following command: db2 => select distinct grantee, granteetype from syscat.dbauth where dataaccessauth = 'Y' 2. Review the list of users, groups, and roles in the above output to ensure only approved users, groups, and roles are assigned.",
    "remediation": "Revoke DATAACCESS authority from any unauthorized users. db2 => REVOKE DATAACCESS ON DATABASE FROM USER <username> References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=ownership-database-authorities",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=ownership-database-authorities",
    "function_names": [
      "iam_role_dataaccess_no_public",
      "iam_user_dataaccess_no_public",
      "iam_group_dataaccess_no_public",
      "database_user_dataaccess_restricted",
      "database_role_dataaccess_restricted",
      "database_authority_dataaccess_no_public",
      "database_privilege_dataaccess_no_public",
      "dataaccess_authority_no_public_grants",
      "dataaccess_authority_restricted_scope",
      "dataaccess_authority_no_public_access"
    ]
  },
  {
    "id": "6.1.9",
    "title": "Secure ACCESSCTRL Authority",
    "assessment": "Manual",
    "description": "ACCESSCTRL authority is the authority required to grant and revoke privileges on objects within a specific database. Some of these privileges include BINDADD, CONNECT, CREATETAB, CREATE_EXTERNAL_ROUTINE, LOAD, and QUIESCE_CONNECT. It has no inherent privilege to access data stored in tables, except the catalog tables and views. The ACCESSCTRL authority cannot be granted to PUBLIC.",
    "rationale": "The ACCESSCTRL authority gives the grantee access control to a specified database. With this authority, the grantee can grant/revoke privileges to other users. ACCESSCTRL can be granted to users, groups, or roles, but not PUBLIC. ACCESSCTRL authority can only be granted by the SECADM authority.",
    "audit": "1. Run the following command: db2 => select distinct grantee, granteetype from syscat.dbauth where accessctrlauth = 'Y' 2. Review the list of users, groups, and roles in the above output to ensure only approved users, groups, and roles are assigned.",
    "remediation": "Revoke ACCESSCTRL authority from any unauthorized users. db2 => REVOKE ACCESSCTRL ON DATABASE FROM USER <username> References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=authorities-access-control- authority-accessctrl",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=authorities-access-control- authority-accessctrl",
    "function_names": [
      "db2_accessctrl_no_public_grant",
      "db2_accessctrl_privileges_restricted",
      "db2_accessctrl_no_data_access",
      "db2_accessctrl_catalog_only",
      "db2_accessctrl_no_bindadd_public",
      "db2_accessctrl_no_connect_public",
      "db2_accessctrl_no_createtab_public",
      "db2_accessctrl_no_create_external_routine_public",
      "db2_accessctrl_no_load_public",
      "db2_accessctrl_no_quiesce_connect_public"
    ]
  },
  {
    "id": "6.1.10",
    "title": "Secure WLMADM Authority",
    "assessment": "Manual",
    "description": "The WLMADM authority manages workload objects for a database. Holders of DBADM authority implicitly also hold WLMADM authority.",
    "rationale": "The WLMADM authority enables creating, altering, dropping, commenting, granting, and revoking access to workload objects for a database.",
    "audit": "1. Run the following command: db2 => select distinct grantee, granteetype from syscat.dbauth where wlmadmauth = 'Y' 2. Determine if the grantee(s) are correctly set.",
    "remediation": "Revoke any user who should NOT have WLMADM authority: db2 => REVOKE WLMADM ON DATABASE FROM USER <username> References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=authorities-workload- administration-authority-wlmadm",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=authorities-workload- administration-authority-wlmadm"
  },
  {
    "id": "6.1.11",
    "title": "Secure CREATAB Authority",
    "assessment": "Manual",
    "description": "The CREATAB (create table) role grants the authority to a user to create tables within a specific database. It is recommended that the CREATAB role be granted to authorized users only.",
    "rationale": "Review all users that have access to this authority to avoid the addition of unnecessary and/or inappropriate users.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select distinct grantee, granteetype from syscat.dbauth where creatabauth = 'Y' 3. Review the list of users, groups, and roles in the above output to ensure only approved users, groups, and roles are assigned.",
    "remediation": "Revoke this permission from any unauthorized users. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE CREATAB ON DATABASE FROM USER <username>  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=ownership-default-privileges- granted-creating-database",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=ownership-default-privileges- granted-creating-database",
    "function_names": [
      "iam_role_creatab_restricted",
      "iam_user_creatab_authorized_only",
      "database_role_creatab_secure",
      "database_user_creatab_restricted",
      "iam_policy_creatab_least_privilege",
      "database_authority_creatab_controlled",
      "iam_creatab_privilege_minimized",
      "database_creatab_role_authorized_users"
    ]
  },
  {
    "id": "6.1.12",
    "title": "Secure BINDADD Authority",
    "assessment": "Manual",
    "description": "The BINDADD (bind application) role grants the authority to a user to create packages on a specific database. It is recommended that the BINDADD role be granted to authorized users only.",
    "rationale": "If an account that possesses this authority is compromised or used in a malicious manner, the confidentiality, integrity, and availability of data in the database will be at increased risk.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select distinct grantee, granteetype from syscat.dbauth where bindaddauth = 'Y' 3. Review the list of users, groups, and roles in the above output to ensure only approved users, groups, and roles are assigned.",
    "remediation": "Revoke this permission from any unauthorized users. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE BINDADD ON DATABASE FROM USER <username>  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=ownership-database-authorities",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=ownership-database-authorities",
    "function_names": [
      "iam_user_bindadd_authority_restricted",
      "iam_role_bindadd_privileges_limited",
      "database_user_bindadd_granted_authorized_only",
      "database_role_bindadd_access_controlled",
      "bindadd_authority_user_restricted_scope",
      "bindadd_privilege_database_specific",
      "user_bindadd_authority_minimal_privilege",
      "database_bindadd_role_secure_assignment"
    ]
  },
  {
    "id": "6.1.13",
    "title": "Secure CONNECT Authority",
    "assessment": "Manual",
    "description": "The CONNECT role grants the authority to a user to connect to mainframe and midrange databases from Windows, Unix, and Linux operating systems. It is recommended that the CONNECT role be granted to authorized users only.",
    "rationale": "All users that have access to this authority should be regularly reviewed.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select distinct grantee, granteetype from syscat.dbauth where connectauth = 'Y' 3. Review the list of users, groups, and roles in the above output to ensure only approved users, groups, and roles are assigned.",
    "remediation": "Revoke this permission from any unauthorized users. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE CONNECT ON DATABASE FROM USER <username> References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=statements-connect-type-1",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=statements-connect-type-1",
    "function_names": [
      "iam_role_connect_authorized_users_only",
      "iam_role_connect_no_unauthorized_access",
      "iam_role_connect_restricted_grants",
      "iam_role_connect_secure_assignment",
      "iam_role_connect_minimal_privilege",
      "iam_role_connect_approved_users_only",
      "iam_role_connect_access_controlled",
      "iam_role_connect_secure_permissions"
    ]
  },
  {
    "id": "6.1.14",
    "title": "Secure LOAD Authority",
    "assessment": "Manual",
    "description": "The LOAD role grants the authority to a user to load data into tables. It is recommended that the LOAD role be granted to authorized users only.",
    "rationale": "All users that have access to this authority should be regularly reviewed.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select distinct grantee, granteetype from syscat.dbauth where loadauth = 'Y' 3. Review the list of users, groups, and roles in the above output to ensure only approved users, groups, and roles are assigned.",
    "remediation": "Revoke this permission from any unauthorized users. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE LOAD ON DATABASE FROM USER <username> References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=authorities-load-authority",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=authorities-load-authority",
    "function_names": [
      "iam_role_load_authorized_users_only",
      "iam_role_load_no_unauthorized_users",
      "iam_role_load_restricted_access",
      "iam_role_load_privilege_minimized",
      "iam_role_load_explicit_permissions"
    ]
  },
  {
    "id": "6.1.15",
    "title": "Secure EXTERNALROUTINE Authority",
    "assessment": "Manual",
    "description": "The EXTERNALROUTINE authority grants a user the privilege to create user-defined functions and procedures in a specific database.",
    "rationale": "All users with this authority should be regularly reviewed and approved.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select distinct grantee, granteetype from syscat.dbauth where externalroutineauth = 'Y' 3. Review the list of users, groups, and roles in the above output to ensure only approved users, groups, and roles are assigned.",
    "remediation": "Revoke this permission from any unauthorized users. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE CREATE_EXTERNAL_ROUTINE ON DATABASE FROM USER <username> References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=routines-security",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=routines-security",
    "function_names": [
      "db2_external_routine_authority_restricted",
      "db2_user_external_routine_privilege_revoked",
      "db2_external_routine_authority_minimal",
      "db2_external_routine_privilege_audited",
      "db2_external_routine_authority_no_public_access",
      "db2_external_routine_privilege_granted_to_roles_only",
      "db2_external_routine_authority_least_privilege",
      "db2_external_routine_privilege_monitored"
    ]
  },
  {
    "id": "6.1.16",
    "title": "Secure QUIESCECONNECT Authority",
    "assessment": "Manual",
    "description": "The QUIESCECONNECT role grants the authority to a user to access a database even in the quiesced state.",
    "rationale": "It is recommended that the QUIESCECONNECT role be granted to authorized users only.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select distinct grantee, granteetype from syscat.dbauth where quiesceconnectauth = 'Y' 3. Review the list of users, groups, and roles in the above output to ensure only approved users, groups, and roles are assigned.",
    "remediation": "1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE QUIESCE_CONNECT ON DATABASE FROM USER <username> References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=apis-db2databasequiesce-quiesce- database",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=apis-db2databasequiesce-quiesce- database",
    "function_names": [
      "iam_role_quiesceconnect_restricted",
      "iam_user_quiesceconnect_disabled",
      "database_role_quiesceconnect_removed",
      "database_user_quiesceconnect_revoked",
      "iam_policy_quiesceconnect_denied",
      "database_authority_quiesceconnect_limited",
      "iam_privilege_quiesceconnect_minimized",
      "database_access_quiesceconnect_blocked"
    ]
  },
  {
    "id": "6.1.17",
    "title": "Secure SETSESSIONUSER Privilege",
    "assessment": "Manual",
    "description": "The SETSESSIONUSER privilege allows one user to switch the session authorization ID of the connection to another user. This allows one user to run SQL statements as another user. It is recommended that Trusted Context be used as a stronger assertion of user identity where such a feature is required.",
    "rationale": "A user can switch their identity to another user for whom they have been authorized and run SQL statements as that user.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select distinct trustedid, trustedidtype, surrogateauthid, surrogateauthidtype from syscat.surrogateauthids 3. Review the list of users, groups, and roles in the above output to ensure only approved users, groups, and roles are assigned.",
    "remediation": "Revoke this permission from any unauthorized users. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SETSESSIONUSER ON <authid> FROM <authid>  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=statements-set-session- authorization 2. https://www.ibm.com/docs/en/db2/11.5?topic=statements-grant-setsessionuser- privilege",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=statements-set-session- authorization 2. https://www.ibm.com/docs/en/db2/11.5?topic=statements-grant-setsessionuser- privilege",
    "function_names": [
      "iam_user_setsessionuser_restricted",
      "iam_role_setsessionuser_disabled",
      "iam_privilege_setsessionuser_revoked",
      "iam_trusted_context_required_for_setsessionuser",
      "iam_session_auth_switch_restricted",
      "iam_sql_authorization_switch_disabled",
      "iam_identity_switch_privilege_denied",
      "iam_user_impersonation_privilege_blocked",
      "iam_setsessionuser_privilege_minimized",
      "iam_trusted_context_enforced_for_auth_switch"
    ]
  },
  {
    "id": "6.1.18",
    "title": "Secure SCHEMAADM Authority",
    "assessment": "Manual",
    "description": "The SCHEMAADM (schema administration) role grants the authority to a user to perform administrative tasks on a specific schema. It is recommended that the SCHEMAADM authority be granted to authorized users only.",
    "rationale": "If an account that possesses this authority is compromised or used in a malicious manner, the confidentiality, integrity, and availability of data in the database will be at increased risk.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select distinct schemaname, grantee, granteetype from syscat.schemaauth where schemaadmauth = 'Y' 3. Review the list of users, groups, and roles in the above output to ensure only approved users, groups, and roles are assigned.",
    "remediation": "Revoke this permission from any unauthorized users. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE SCHEMAADM ON SCHEMA <schema> FROM USER <username>  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=authorities-schema-administration- authority-schemaadm",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=authorities-schema-administration- authority-schemaadm",
    "function_names": [
      "iam_schema_admin_no_unauthorized_users",
      "iam_schema_admin_least_privilege",
      "iam_schema_admin_authorized_only",
      "iam_schema_admin_restricted_access",
      "iam_schema_admin_minimal_assignments"
    ]
  },
  {
    "id": "6.1.19",
    "title": "Secure Schema ACCESSCTRL Authority",
    "assessment": "Manual",
    "description": "The Schema ACCESSCTLR authority allows a user grant and revoke privileges within a specific schema. It is recommended that the Schema ACCESSCTRL authority be granted to authorized users only.",
    "rationale": "If an account that possesses this authority is compromised or used in a malicious manner, the confidentiality, integrity, and availability of data in the database will be at increased risk.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select distinct schemaname, grantee, granteetype from syscat.schemaauth where accessctrl = 'Y' 3. Review the list of users, groups, and roles in the above output to ensure only approved users, groups, and roles are assigned.",
    "remediation": "Revoke this permission from any unauthorized users. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE ACCESSCTRL ON SCHEMA <schema> FROM USER <username>  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=authorities-schema-access-control- authority-accessctrl",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=authorities-schema-access-control- authority-accessctrl",
    "function_names": [
      "iam_schema_accessctrl_authority_restricted",
      "iam_schema_accessctrl_no_public_access",
      "iam_schema_accessctrl_privileges_minimized",
      "iam_schema_accessctrl_authorized_users_only",
      "iam_schema_accessctrl_privileges_audited",
      "iam_schema_accessctrl_privileges_reviewed_periodically",
      "iam_schema_accessctrl_privileges_least_privilege",
      "iam_schema_accessctrl_privileges_no_admin_override"
    ]
  },
  {
    "id": "6.1.20",
    "title": "Secure Schema DATAACCESS Authority",
    "assessment": "Manual",
    "description": "The Schema DATAACCESS authority allows the user to leverage DML level commands i.e. SELECT, INSERT, UPDATE, DELETE, LOAD, and EXECUTE any package or routine within a schema. It is recommended that the Schema DATAACCESS authority be granted to authorized users only.",
    "rationale": "If an account that possesses this authority is compromised or used in a malicious manner, the confidentiality, integrity, and availability of data in the database will be at increased risk.",
    "audit": "Perform the following Db2 commands to obtain the value for this setting: 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => select distinct schemaname, grantee, granteetype from syscat.schemaauth where dataaccessauth = 'Y' 3. Review the list of users, groups, and roles in the above output to ensure only approved users, groups, and roles are assigned.",
    "remediation": "Revoke this permission from any unauthorized users. 1. Connect to the Db2 database. db2 => connect to <dbname> 2. Run the following command: db2 => REVOKE DATAACCESSAUTH ON SCHEMA <schema> FROM USER <username>  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=authorities-schema-data-access- authority-dataaccess",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=authorities-schema-data-access- authority-dataaccess",
    "function_names": [
      "iam_schema_dataaccess_authority_restricted",
      "iam_schema_dataaccess_authority_authorized_users_only",
      "iam_schema_dataaccess_authority_no_unauthorized_grants",
      "iam_schema_dataaccess_authority_least_privilege",
      "iam_schema_dataaccess_authority_minimal_assignments"
    ]
  },
  {
    "id": "6.2.1",
    "title": "Review Users, Groups, and Roles",
    "assessment": "Manual",
    "description": "With row and column access control, individuals are permitted access to only the subset of data that is required to perform their job tasks. Periodic review of these individuals is crucial when trying to keep data secure. As business needs move forward, requirements behind accessing the data may change, leading to a revision in security policy. By inspecting the list of users, groups, and roles, you are identifying excessive privileges that could pose possible security threats within your infrastructure.",
    "rationale": "If a user (either by himself or part of a group or role) is no longer required access to the data that is protected by row and column access controls, allowing that individual to maintain access allows that individual to compromise the confidentiality, integrity, and/or availability of the data in the Db2 instance.",
    "audit": "1. Review the users within your database environment: o Linux: cat /etc/passwd o Windows: 1. Run compmgmt.msc 2. Click 'Local Users and Groups' 3. Double click 'Users' 4. Review users 2. Review the groups within your database environment: o Linux: cat /etc/group o Windows: 1. Run compmgmt.msc 2. Click 'Local Users and Groups' 3. Double click 'Groups' 4. Review groups 3. Review the roles and role members within your database environment:  o Connect to Db2 database: db2 => connect to <dbname> o Run the command: db2 => select rolename, grantee from syscat.roleauth where grantortype <> 'S'",
    "remediation": "1. To remove users from your database environment: o Linux: userdel -r <user name> o Windows: ▪ Run compmgmt.msc ▪ Click 'Local Users and Groups' ▪ Double click 'Users' ▪ Right-click on ▪ Select 'Delete' 2. To remove groups from your database environment: o Linux: groupdel -r <group name> o Windows: 1. Run compmgmt.msc 2. Click 'Local Users and Groups' 3. Double click 'Groups' 4. Right-click on 5. Select 'Delete' 3. To remove roles or role members from your database environment: o Connect to Db2 database: db2 => connect to <dbname> o To remove role members from roles: db2 => revoke role <role name> from <userroup/role member> o To remove roles:  db2 => drop role <role name>",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "iam_user_review_periodic",
      "iam_group_review_periodic",
      "iam_role_review_periodic",
      "iam_user_excessive_privileges_reviewed",
      "iam_group_excessive_privileges_reviewed",
      "iam_role_excessive_privileges_reviewed",
      "iam_user_access_control_reviewed",
      "iam_group_access_control_reviewed",
      "iam_role_access_control_reviewed",
      "iam_user_job_task_alignment_reviewed",
      "iam_group_job_task_alignment_reviewed",
      "iam_role_job_task_alignment_reviewed",
      "iam_user_security_policy_compliance_reviewed",
      "iam_group_security_policy_compliance_reviewed",
      "iam_role_security_policy_compliance_reviewed"
    ]
  },
  {
    "id": "6.2.2",
    "title": "Review Roles",
    "assessment": "Manual",
    "description": "Roles provide several advantages that make it easier to manage privileges in a database system. Security administrators can control access to their databases in a way that mirrors the structure of their organizations (they can create roles in the database that map directly to the job functions in their organizations). The assignment of privileges is simplified. Instead of granting the same set of privileges to each individual user in a particular job function, the administrator can grant this set of privileges to a role representing that job function and then grant that role to each user in that job function.",
    "rationale": "Reviewing the roles within a database helps minimize the possibility of unwanted access.",
    "audit": "1. Connect to Db2 database: db2 => connect to <dbname> 2. Run the following and review the results to determine if each role name still has a business requirement to access the data: db2 => select rolename from syscat.roleauth where grantortype <> 'S' group by rolename",
    "remediation": "To remove a role from the database: 1. Connect to Db2 database: db2 => connect to <dbname> 2. Run the following: db2 => drop role <role name> References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=security-roles",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=security-roles",
    "function_names": [
      "iam_role_privileges_minimized",
      "iam_role_privileges_reviewed",
      "iam_role_privileges_organization_mapped",
      "iam_role_privileges_job_function_aligned",
      "iam_role_privileges_centralized_management",
      "iam_role_privileges_regularly_audited",
      "iam_role_privileges_least_privilege",
      "iam_role_privileges_granular_control",
      "iam_role_privileges_non_admin",
      "iam_role_privileges_no_wildcard"
    ]
  },
  {
    "id": "6.2.3",
    "title": "Review Role Members",
    "assessment": "Manual",
    "description": "Having roles that have been granted specific privileges, then assigning users to the roles, is usually considered the best way to grant application access. Because granting privileges to individual users can be more difficult to track and maintain against unauthorized access, users should be assigned to organization-defined database roles according to the needs of the business. As users leave the organization or change responsibilities within the organization, the appropriate roles for them change as well, so role membership needs to be reviewed and verified periodically.",
    "rationale": "Users who have excessive privileges not needed to do their jobs pose an unnecessary risk to the organization as an insider threat.",
    "audit": "1. Connect to Db2 database: db2 => connect to <dbname> 2. Run the following to review and verify that the role members are correct for each role: db2 => select rolename,grantee from syscat.roleauth where grantortype <> 'S' group by rolename, grantee",
    "remediation": "To remove a role member from a particular role: 1. Connect to Db2 database: db2 => connect to <dbname> 2. Run the following: db2 => revoke role <role name> from <role member> References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=security-roles",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=security-roles",
    "function_names": [
      "iam_role_membership_reviewed_periodically",
      "iam_user_role_assignment_verified",
      "iam_role_privileges_granted_correctly",
      "iam_user_privileges_no_direct_grants",
      "iam_role_membership_updated_over_90d",
      "iam_user_role_mapping_audited",
      "iam_role_membership_business_aligned",
      "iam_user_role_review_required",
      "iam_role_privileges_no_excessive_access",
      "iam_user_role_assignment_tracked"
    ]
  },
  {
    "id": "6.2.4",
    "title": "Nested Roles",
    "assessment": "Manual",
    "description": "The user-defined roles in Db2 can be nested in the same fashion as Windows security groups, i.e. a nested group has both its directly assigned permissions as well as the assigned group permissions. By nesting roles, the database administrator is saving time by only having to assign a group of users versus assigning them individually. Nesting roles properly can often ease the application of the security model if it's kept fairly shallow, and if the roles are logically named. If these are all true, then nesting of roles is a good idea.",
    "rationale": "As tracking multiple levels of permissions can result in unauthorized access to data resources, this capability should be restricted according to the needs of the business.",
    "audit": "1. Connect to Db2 database: db2 => connect to <dbname> 2. Run the following to identify any nested roles: db2 => select grantee, rolename from syscat.roleauth where grantee in (select rolename from syscat.roles) If value is blank, this would be considered passing.",
    "remediation": "To remove a nested role, perform the following: 1. Connect to Db2 database: db2 => connect to <dbname> 2. Run the following: db2 => revoke role <role name> from role <role>",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_role_nested_properly",
      "db2_role_nesting_shallow",
      "db2_role_nesting_logical_names",
      "db2_role_nesting_permissions_inherited",
      "db2_role_nesting_security_model_effective"
    ]
  },
  {
    "id": "6.2.5",
    "title": "Review Roles Granted to PUBLIC",
    "assessment": "Manual",
    "description": "Granting to PUBLIC increases the risk of unauthorized entry into the database. Because PUBLIC is accessible by any database user, it is important to understand the exposure it has on all database objects. It would make sense to grant role membership to PUBLIC if all users required all the privileges granted through that role.",
    "rationale": "As any role granted to PUBLIC can potentially allow the compromise of database availability, confidentiality, or integrity, these roles should be restricted according to the needs of the business.",
    "audit": "1. Connect to Db2 database: db2 => connect to <dbname> 2. Run the following: db2 => select grantee, rolename from syscat.roleauth where grantee = 'PUBLIC' If the value returned is blank, that is considered a Pass.",
    "remediation": "To remove a role member from a particular role: 1. Connect to Db2 database: db2 => connect to <dbname> 2. Run the following: db2 => revoke role <role name> from PUBLIC References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=security-roles",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=security-roles",
    "function_names": [
      "iam_role_no_public_access",
      "iam_role_restrict_public_privileges",
      "iam_role_public_membership_reviewed",
      "database_role_no_public_grants",
      "database_role_public_privileges_audited",
      "database_role_public_access_restricted",
      "database_role_public_membership_justified"
    ]
  },
  {
    "id": "6.2.6",
    "title": "Review Role Grantees with WITH ADMIN OPTION",
    "assessment": "Manual",
    "description": "Using the WITH ADMIN OPTION clause of the GRANT (Role) SQL statement, the security administrator can delegate the management and control of membership in a role to someone else.",
    "rationale": "The WITH ADMIN OPTION clause gives another user the authority to grant membership in the role to other users, to revoke membership in the role from other members of the role, and to comment on a role, but not to drop the role.",
    "audit": "1. Connect to Db2 database: db2 => connect to <dbname> 2. Perform the following query: db2 => select rolename, grantee, admin from syscat.roleauth where grantortype <> 'S' and admin = 'Y' If the value returned is blank, that is considered a Pass.",
    "remediation": "1. Connect to Db2 database: db2 => connect to <dbname> 2. Perform the following query: db2 => revoke admin option for role <role name> from user <user name>",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "iam_role_no_admin_option",
      "iam_role_admin_option_reviewed",
      "iam_role_grantee_admin_option_disabled",
      "iam_role_grantee_admin_option_restricted",
      "iam_role_admin_privilege_delegation_disabled"
    ]
  },
  {
    "id": "6.3.1",
    "title": "Review Organization's Policies Against Db2 RCAC Policies",
    "assessment": "Manual",
    "description": "DB2 Row and Column Access Control (RCAC) Policies control access to Db2 tables. They should match the organization's security and database access policies, and they should be regularly reviewed for gaps.",
    "rationale": "Missing, incomplete, or incorrect Db2 RCAC policies will increase the risks to the organization's protected data and will prevent efforts to monitor, alert, and respond to these risks in the future.",
    "audit": "Schedule and complete a regular review of all organization security and data access database policies against the current Db2 policies to determine if gaps exist. 1. Identify each written organization policy. 2. Find the matching Db2 RCAC policy. 3. Determine if the RCAC policy applies and correctly supports the written policy. 4. If no matching Db2 RCAC policy is found, record a 'gap' for future remediation.",
    "remediation": "1. Create RCAC policies for each 'gap' listed from the Audit procedure. 2. Review the newly created Db2 RCAC policy against the organization's written policies. Default Value: Not installed References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=security-row-column-access- control-rcac",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=security-row-column-access- control-rcac",
    "function_names": [
      "db2_rcac_policy_organization_aligned",
      "db2_rcac_policy_reviewed_recently",
      "db2_table_access_policy_compliant",
      "db2_column_access_policy_compliant",
      "db2_rcac_policy_gap_analysis_completed"
    ]
  },
  {
    "id": "6.3.2",
    "title": "Review Row Permission Logic According to Policy",
    "assessment": "Manual",
    "description": "The logic behind instituting row permissions is crucial for a successful security policy. Inspecting this logic and comparing it to the security policy will assure that all aspects of the data access controls are being adhered to.",
    "rationale": "Missing or incomplete Db2 RCAC Security Policies will increase the risks to the organization's protected data and will prevent efforts to monitor, alert, and respond to these risks in the future.",
    "audit": "1. Connect to database environment: db2 => connect to <dbname> 2. Run the following and review the results to confirm that the row permissions are correct and that they comply with the existing security policy: db2 => select role.rolename, control.ruletext from syscat.roles role inner join syscat.controls control on locate(role.rolename,control.ruletext) <> 0 where enable = 'Y' and enforced = 'A' and valid = 'Y' and controltype = 'R'",
    "remediation": "1. Create RCAC Policies for each 'gap' listed from the Audit procedure. 2. Review the newly created Db2 RCAC policy against the organization's policy. References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=security-row-column-access- control-rcac",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=security-row-column-access- control-rcac",
    "function_names": [
      "database_table_row_permissions_policy_compliant",
      "database_table_row_access_policy_aligned",
      "database_row_permissions_policy_validated",
      "database_row_access_controls_policy_matched",
      "database_table_row_security_policy_enforced",
      "database_row_permissions_logic_compliant",
      "database_table_row_access_policy_consistent",
      "database_row_security_policy_aligned"
    ]
  },
  {
    "id": "6.3.3",
    "title": "Review Column Mask Logic According to Policy",
    "assessment": "Manual",
    "description": "The logic behind instituting column masks is crucial for a successful security policy. Inspecting this logic and comparing it to the security policy will assure that all aspects of the data access controls are being adhered to.",
    "rationale": "Missing or incomplete Db2 RCAC security policies will increase the risks to the organization's protected data and will prevent efforts to monitor, alert, and respond to these risks in the future.",
    "audit": "1. Connect to database environment: db2 => connect to <dbname> 2. Run the following and review the results to verify that the permissions are correct and that they comply with the organization's existing security policy: db2 => select role.rolename, control.colname, control.ruletext from syscat.roles role inner join syscat.controls control on locate(role.rolename,control.ruletext) <> 0 where enable = 'Y' and enforced = 'A' and valid = 'Y' and controltype = 'C'",
    "remediation": "1. Create RCAC Policies for each 'gap' listed from the Audit procedure. 2. Review the newly created Db2 RCAC policy against the organization's written policy. References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=security-row-column-access- control-rcac",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=security-row-column-access- control-rcac",
    "function_names": [
      "bigquery_table_column_mask_policy_compliant",
      "bigquery_column_mask_logic_valid",
      "bigquery_column_mask_policy_aligned",
      "bigquery_table_column_mask_correct",
      "bigquery_column_mask_security_policy_matched"
    ]
  },
  {
    "id": "6.4.1",
    "title": "Ensure Trusted Contexts are Enabled",
    "assessment": "Manual",
    "description": "A Trusted Context object provides a means of enforcing encryption, assigning privileges based on roles, and ensuring that the actions performed on behalf of a user are performed in the context of the user’s ID and privileges.",
    "rationale": "Creating Trusted Context objects to enforce encryption and assign roles will protect data in transit and limit access to information on a per user/role basis. Additionally, it ensures actions can be traced back to the user.",
    "audit": "Issue the following command to verify that a Trusted Context object is enabled: db2 => select contextname, enabled from syscat.contexts where enabled = 'Y'",
    "remediation": "If there is no enabled Trusted Context object, create a Trusted Context object if needed and enable it. References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=connections-trusted-contexts- trusted",
    "profile_applicability": "•  Level 2 - RDBMS (extends Level 1 - RDBMS)",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=connections-trusted-contexts- trusted",
    "function_names": [
      "iam_trusted_context_enabled",
      "iam_trusted_context_encryption_enabled",
      "iam_trusted_context_role_based_privileges",
      "iam_trusted_context_user_id_enforced",
      "iam_trusted_context_privileges_assigned"
    ]
  },
  {
    "id": "6.4.2",
    "title": "Do Not Allow Trusted Context to Switch Users Without Authentication",
    "assessment": "Manual",
    "description": "A Trusted Context can provide a middle tier with the option of performing end user authentication, and then switching to that user within the database without further authentication. The middle tier is asserting the identity of the end user they have already authenticated. The organizations Standard Operating Procedures (SOP) will determine whether such trust has been placed with the middle tier establishing the trusted connection.",
    "rationale": "Allowing an untrusted middle tier to establish a trusted context and switch users without authentication is a security risk. Only middle tier applications that have been validated and included in the SOP should have this functionality enabled. All other trusted contexts should not use with WITHOUT AUTHENTICATION clause during the CREATE TRUSTED CONTEXT statement.",
    "audit": "1. Connect to the Db2 database. db2 => connect to <dbname> 2. Issue Issue the following command to verify that no trusted context db2 => select * from syscat.surrogateauthids where trustedidtype='C' and authenticate='N' and trustedID!='SYSATSCONTEXT' 3. Review any rows returned to ensure they are allowed by the SOP for performing a switch user without authentication.",
    "remediation": "1. Connect to the Db2 database. db2 => connect to <dbname> 2. Disable any trusted context identified above until it can be determined why such trusted context where created with the following command  db2 => alter trusted context <contextname> alter disable References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=security-using-trusted-contexts- trusted-connections 2. CIS Controls:",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=security-using-trusted-contexts- trusted-connections 2. CIS Controls: Controls Version Control IG 1 IG 2 IG 3 v8 6.8 Define and Maintain Role-Based Access Control Define and maintain role-based access control, through determining and documenting the access rights necessary for each role within the enterprise to successfully carry out its assigned duties. Perform access control reviews of enterprise assets to validate that all privileges are authorized, on a recurring schedule at a minimum annually, or more frequently. ●   7 Audit Considerations 7.1 General Audit Considerations",
    "function_names": [
      "database_trusted_context_user_switch_authentication_required",
      "database_trusted_context_authentication_enforced",
      "database_trusted_context_no_unauthenticated_switch",
      "database_trusted_context_user_impersonation_restricted",
      "database_trusted_context_authentication_mandatory"
    ]
  },
  {
    "id": "7.1.1",
    "title": "Disable the Audit Buffer",
    "assessment": "Automated",
    "description": "Db2 can be configured to use an audit buffer where individual audit events are gathered into a large buffer to improve performance by reducing the number of writes to disk. It is recommended that the audit buffer be disabled by setting the size to 0.",
    "rationale": "Increasing the audit buffer size to greater than 0 will allocate space for the audit records generated by the audit facility. At scheduled intervals, or when the audit buffer is full, the db2auditd audit daemon empties the audit buffer to disk, writing the audit records asynchronously. As the events are held in memory for some time before being written to disk, if the database server happened to crash those event would be lost. Setting the buffer size to 0 ensure events are written directly to disk. Impact: Disabling the audit buffer may have noticeable impact on overall performance of the database server.",
    "audit": "Perform the following to determine if the audit buffer is set as recommended: 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command: db2 => get database manager configuration 3. Locate AUDIT_BUF_SZ value in the output: Audit buffer size (4KB) (AUDIT_BUF_SZ) = 0 Ensure AUDIT_BUF_SZ is equal to 0.",
    "remediation": "Perform the following to disable the audit buffer: 1. Attach to the Db2 instance db2 => attach to <db2instance> 2. Run the following command: db2 => update database manager configuration using audit_buf_sz 0 References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=parameters-audit-buf-sz-audit- buffer-size",
    "profile_applicability": "•  Level 1 - RDBMS",
    "impact": "Disabling the audit buffer may have noticeable impact on overall performance of the database server.",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=parameters-audit-buf-sz-audit- buffer-size",
    "function_names": [
      "db2_audit_buffer_disabled",
      "db2_audit_buffer_size_zero",
      "db2_audit_buffer_no_buffering",
      "db2_audit_performance_optimized",
      "db2_audit_direct_write_enabled"
    ]
  },
  {
    "id": "7.1.2",
    "title": "Disable Limited Audit of Applications (DB2_LIMIT_AUDIT_APPS)",
    "assessment": "Manual",
    "description": "The DB2_LIMIT_AUDIT_APPS registry variable contains a list of application names that should not be audited. It is recommended that this variable should not be set and all applications should be audited. The DB2_LIMIT_AUDIT_APPS registry variable is not documented.",
    "rationale": "The application name not to be audited is determined by the client and not validated by the server. It is possible for a malicious user to change their application name to avoid being audited.",
    "audit": "Perform the following to determine if the DB2_LIMIT_AUDIT_APPS registry variable is set: db2set -all | grep DB2_LIMIT_AUDIT_APPS The above command should not yield a value.",
    "remediation": "Perform the following command to remove any applications from the list: db2set DB2_LIMIT_AUDIT_APPS=",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_audit_apps_no_limit",
      "db2_audit_apps_all_enabled",
      "db2_registry_audit_apps_unrestricted",
      "db2_audit_apps_full_coverage",
      "db2_registry_limit_audit_disabled"
    ]
  },
  {
    "id": "7.1.3",
    "title": "Ensure Audit Policies are Enabled Within the Database",
    "assessment": "Manual",
    "description": "Creating and applying audit policies is crucial for securing and discovering issues within your databases. Audit policies can help trigger events for changes to data objects, table DML, and user access.",
    "rationale": "If audit policies are not enabled, issues may go undiscovered, and compromises and other incidents may occur without being quickly detected. It may also not be possible to provide evidence of compliance with security laws, regulations, and other requirements. Impact: Auditing all categories within the database can have an impact on the peformance of the database server depending on the workload and number of transactions. If enabling audit as part of the remedation, analysis should be performed on which categories are required to meet business needs.",
    "audit": "1. Connect to the Db2 database. db2 => connect to <dbname> 2. Issue the following command to ensure that at least one audit policy exists and has been associated with an object. The SYSCAT.AUDITUSE catalog view shows all of the audit policies that have been associated with auditing an object within the database. db2=> select * from syscat.audituse 3. If there is at least 1 row then it is considered a Pass. If there are zero rows returned then nothing is being audited within the database and the remediation steps should be followed.",
    "remediation": "1. Connect to the Db2 database.  db2 => connect to <dbname> 2. Issue the following command to create an audit policy. This policy audits all categories. An analysis should be performed to determine which categories are required to meet business needs. db2 => create audit policy AUDITDB CATEGORIES ALL STATUS BOTH ERROR TYPE AUDIT 3. Audit the database using the policy just created with the following command: db2 => audit database using policy AUDITDB References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=statements-create-audit-policy 2. https://www.ibm.com/docs/en/db2/11.5?topic=statements-audit",
    "profile_applicability": "•  Level 1 - RDBMS",
    "impact": "Auditing all categories within the database can have an impact on the peformance of the database server depending on the workload and number of transactions. If enabling audit as part of the remedation, analysis should be performed on which categories are required to meet business needs.",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=statements-create-audit-policy 2. https://www.ibm.com/docs/en/db2/11.5?topic=statements-audit",
    "function_names": [
      "database_audit_policy_enabled",
      "database_audit_policy_logging_enabled",
      "database_audit_policy_data_object_events_enabled",
      "database_audit_policy_table_dml_events_enabled",
      "database_audit_policy_user_access_events_enabled",
      "database_audit_policy_all_events_enabled",
      "database_audit_policy_comprehensive_enabled"
    ]
  },
  {
    "id": "7.1.4",
    "title": "Ensure Audit is Enabled Within the Instance",
    "assessment": "Automated",
    "description": "Auditing is crucial for securing and discovering issues within your databases. Auditing can help trigger events for changes to data objects, table DML, and user access.",
    "rationale": "If instance auditing is not enabled, issues may go undiscovered, and compromises and other incidents may occur without being quickly detected. It may also not be possible to provide evidence of compliance with security laws, regulations, and other requirements.",
    "audit": "1. Issue the following command to ensure that auditing is active at the instance level. $ db2audit describe DB2 AUDIT SETTINGS: Audit active: \"TRUE \" Log audit events: \"FAILURE\" Log checking events: \"FAILURE\" Log object maintenance events: \"FAILURE\" Log security maintenance events: \"FAILURE\" Log system administrator events: \"FAILURE\" Log validate events: \"FAILURE\" Log context events: \"NONE\" Return SQLCA on audit error: \"FALSE \" Audit Data Path: \"\" Audit Archive Path: \"\" AUD0000I  Operation succeeded. 2. If the output contains Audit active: \"TRUE \", then it is considered a Pass. Otherwise, instance level auditing is not enabled and the remediation steps should be followed.",
    "remediation": "Issue the following command to activate instance level auditing: $ db2audit start  References: 1. https://www.ibm.com/docs/en/db2/11.5?topic=commands-db2audit-audit-facility- administrator-tool",
    "profile_applicability": "•  Level 1 - RDBMS",
    "references": "1. https://www.ibm.com/docs/en/db2/11.5?topic=commands-db2audit-audit-facility- administrator-tool",
    "function_names": [
      "compute_instance_audit_enabled",
      "compute_instance_audit_logging_enabled",
      "compute_instance_audit_all_events_enabled",
      "compute_instance_audit_data_changes_enabled",
      "compute_instance_audit_user_access_enabled",
      "compute_instance_audit_dml_enabled",
      "compute_instance_audit_retention_enabled",
      "compute_instance_audit_immutable_enabled"
    ]
  },
  {
    "id": "8.1.1",
    "title": "Configure a Server-side Key Store for TLS (SSL_SVR_KEYDB)",
    "assessment": "Manual",
    "description": "To enable TLS support in a Db2 server, it is necessary to configure a key store that will contain certificates to be used for secure TLS communication between a Db2 client and Db2 server.",
    "rationale": "On the server side, Db2 requires a key store to be configured. Otherwise, TLS support cannot be enabled.",
    "audit": "Perform the following to determine if SSL_SVR_KEYDB is set. 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command: db2 => get database manager configuration 3. Locate the value of CATALOG_NOAUTH in the output: SSL server keydb file (SSL_SVR_KEYDB) = Ensure SSL_SVR_KEYDB is not blank.",
    "remediation": "Perform the following to set SSL_SVR_KEYDB: 1. Attach to the Db2 instance.  db2 => attach to <db2instance> 2. Run the following command, where <path> is the fully qualified path to the keystore file: db2 => update dbm cfg using SSL_SVR_KEYDB <path> 3. (Optional) To use the Microsoft certificate store on Windows, set SSL_SVR_KEYDB to GSK_MS_CERTIFICATE_STORE: db2 => update dbm cfg using SSL_SVR_KEYDB GSK_MS_CERTIFICATE_STORE If a keystore file is being used, ensure only the instance owner and administrators have access to the file. Do not grant world readable or world writable permissions on the keystore file.",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_server_tls_key_store_configured",
      "db2_server_ssl_svr_keydb_enabled",
      "db2_server_tls_certificate_valid",
      "db2_server_ssl_keystore_secure",
      "db2_server_tls_communication_encrypted",
      "db2_server_ssl_certificate_configured",
      "db2_server_tls_keystore_protected",
      "db2_server_ssl_svr_key_store_exists"
    ]
  },
  {
    "id": "8.1.2",
    "title": "Configure a Server-side Stash File for TLS (SSL_SVR_STASH)",
    "assessment": "Manual",
    "description": "If a key store file is being used to configure TLS support in a Db2 instance, a stash file must also be configured to allow the Db2 server to be able to read certificates from the keystore. If the Microsoft certificate store is configured on a Windows platform, a stash file is not required.",
    "rationale": "Db2 does not have a method for an operator to enter a password for a server-side SSL key store, so a stash file must be used to provide the password to Db2. The Microsoft certificate store does not require a password, so a stash file is not required.",
    "audit": "Perform the following to determine if SSL_SVR_STASH is required, and if it is set. 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command: db2 => get database manager configuration 3. Locate the value of SSL_SVR_KEYDB in the output: SSL server keydb file (SSL_SVR_KEYDB) = 4. A stash file is not required on Windows if using GSK_MS_CERTIFICATE_STORE. If the value of SSL_SVR_KEYDB is not GSK_MS_CERTIFICATE_STORE, locate the value of SSL_SVR_STASH and ensure SSL_SVR_STASH is not blank. SSL server stash file (SSL_SVR_STASH) =",
    "remediation": "Perform the following to set SSL_SVR_STASH: 1. Attach to the Db2 instance.  db2 => attach to <db2instance> 2. Run the following command, where <path> is the fully qualified path to the keystore file: db2 => update dbm cfg using SSL_SVR_STASH <path> If a stash file is being used, ensure only the instance owner and administrators have access to the file. Do not grant world readable or world writable permissions on the stash file. If the Microsoft certificate store is being used on Windows, it is not necessary to set SSL_SVR_STASH.",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_instance_tls_stash_file_configured",
      "db2_instance_keystore_stash_file_required",
      "db2_instance_tls_certificate_access_enabled",
      "db2_instance_windows_certificate_store_exempt",
      "db2_instance_ssl_svr_stash_file_present"
    ]
  },
  {
    "id": "8.1.3",
    "title": "Configure an Endpoint Certificate (SSL_SVR_LABEL)",
    "assessment": "Manual",
    "description": "The SSL_SVR_LABEL database manager configuration parameter controls which certificate Db2 will serve to clients. This certificate must have its associated certificate chain present in the server-side key store and must be associated with a private key.",
    "rationale": "It is highly recommended to set SSL_SVR_LABEL. Leaving this parameter blank and allowing Db2 to utilize a default certificate will only work with CMS(.KDB) format key stores, and the feature is deprecated.",
    "audit": "Perform the following to determine if SSL_SVR_LABEL is set. 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command: db2 => get database manager configuration 3. Locate the value of SSL_SVR_LABEL in the output: SSL server certificate label (SSL_SVR_LABEL) =",
    "remediation": "Perform the following to set SSL_SVR_LABEL: 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command, where <label> is the name of a certificate present in the server-side key store.  db2 => update dbm cfg using SSL_SVR_LABEL <label> In Db2 11.5.4 and later, or Db2 11.1.4.5 and later with the DB2_DYNAMIC_SSL_LABEL registry variable set to ON, updating the value of SSL_SVR_LABEL while attached to the instance will cause the certificate served by Db2 to change while instance is running, with no effect on existing connections. Prior releases of Db2 require an instance recycle (db2stop/db2start) for the change to take effect.",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_database_certificate_chain_present",
      "db2_database_private_key_associated",
      "db2_database_ssl_certificate_valid",
      "db2_database_ssl_svr_label_configured",
      "db2_database_certificate_key_store_valid",
      "db2_database_ssl_certificate_chain_complete",
      "db2_database_ssl_private_key_protected"
    ]
  },
  {
    "id": "8.1.4",
    "title": "Configure the Service Name for TLS (SSL_SVCENAME)",
    "assessment": "Manual",
    "description": "The SSL_SVCENAME database manager configuration parameter controls which port Db2 will listen on for TLS encrypted connections. SSL_SVCENAME can consist of one of the following: • A port number • Service name defined in /etc/services (UNIX/Linux) or %WINDIR%\\system32\\drivers\\etc\\services (windows)",
    "rationale": "Db2 must have a port number or service name defined to enable TLS communication. Db2 does not choose a default port number if SSL_SVCENAME is unset.",
    "audit": "Perform the following to determine if SSL_SVCENAME is set. 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command: db2 => get database manager configuration 3. Locate the value of SSL_SVCENAME in the output: SSL service name (SSL_SVCENAME) =",
    "remediation": "Perform the following to set SSL_SVCENAME: 1. Attach to the Db2 instance.  db2 => attach to <db2instance> 2. Run the following command, where <service> is a port number or named service. db2 => update dbm cfg using SSL_SVCENAME <service> Db2 must be recycled (db2stop/db2start) for changes to SSL_SVCENAME to take effect.",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_database_tls_service_name_configured",
      "db2_database_ssl_svcename_valid",
      "db2_database_tls_port_defined",
      "db2_database_service_name_in_etc_services",
      "db2_database_ssl_svcename_port_or_service_name"
    ]
  },
  {
    "id": "8.1.5",
    "title": "Configure a Secure TLS Version (SSL_VERSIONS)",
    "assessment": "Manual",
    "description": "The SSL_VERSIONS database manager configuration parameter controls which versions of the TLS protocol Db2 enables. In Db2 11.5 and earlier, TLS 1.0 and 1.1 are enabled by default if SSL_VERSIONS is not set.",
    "rationale": "TLS 1.0 and 1.1 are considered insecure and have been deprecated as of Db2 11.5. It is recommended to use TLS 1.2",
    "audit": "Perform the following to determine if SSL_VERSIONS is set. 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command: db2 => get database manager configuration 3. Locate the value of SSL_VERSIONS in the output: SSL versions (SSL_VERSIONS) =",
    "remediation": "Perform the following to set SSL_VERSIONS: 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command to enable TLS 1.2 within the Db2 server. db2 => update dbm cfg using SSL_VERSIONS TLSV12 Db2 must be recycled (db2stop/db2start) for changes to SSL_VERSIONS to take effect.",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_database_ssl_versions_min_tls_1_2",
      "db2_database_tls_1_0_disabled",
      "db2_database_tls_1_1_disabled",
      "db2_database_secure_tls_configured",
      "db2_database_ssl_versions_restricted"
    ]
  },
  {
    "id": "8.1.6",
    "title": "Configure Secure TLS Cipher Suites (SSL_CIPHERSPECS)",
    "assessment": "Manual",
    "description": "The SSL_CIPHERSPECS database manager configuration parameter controls which cipher suites are enabled by Db2. If it is unset, Db2 will enable a default list of ciphers.",
    "rationale": "The default list of ciphers includes SHA1 ciphers, which are considered weak. In addition, some cipher suites enabled by default do not support perfect forward secrecy. Depending on the security requirements of your organization, it may be necessary to restrict which ciphers are enabled by Db2.",
    "audit": "Perform the following to determine if SSL_CIPHERSPECS is set. 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command: db2 => get database manager configuration 3. Locate the value of SSL_CIPHERSPECS in the output: SSL cipher specs (SSL_CIPHERSPECS) =",
    "remediation": "Perform the following to set SSL_CIPHERSPECS: 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command to enable a specific set of ciphers within the Db2 server. db2 => update dbm cfg using SSL_CIPHERSPECS <LIST>  Replace <LIST> with one or multiple of the following cipher suites. If multiple items are specified, separate them with a single comma and no spaces. o TLS_RSA_WITH_AES_256_GCM_SHA384 o TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 o TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 o TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 o TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 o TLS_RSA_WITH_AES_256_CBC_SHA256 o TLS_RSA_WITH_AES_128_GCM_SHA256 o TLS_RSA_WITH_AES_128_CBC_SHA256 o TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 o TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 o TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 o TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_database_secure_tls_ciphers_enabled",
      "db2_database_weak_ciphers_disabled",
      "db2_database_tls_ciphers_min_tls_1_2",
      "db2_database_default_ciphers_override_required",
      "db2_database_ssl_cipherspecs_configured",
      "db2_database_insecure_ciphers_rejected",
      "db2_database_tls_ciphers_all_regions",
      "db2_database_ssl_cipherspecs_no_defaults"
    ]
  },
  {
    "id": "8.1.7",
    "title": "Unset the Service Name for Plaintext Communication (SVCENAME)",
    "assessment": "Manual",
    "description": "The SSVCENAME database manager configuration parameter controls which port Db2 will listen on for unencrypted connections.",
    "rationale": "To prevent unencrypted remote connections to the DB2 instance, it is good practice to unset the value of the SVCENAME DBM CFG parameter to prevent Db2 from starting the TCP listener, even if DB2COMM is set to TCPIP.",
    "audit": "Perform the following to determine if SSL_SVCENAME is set. 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command: db2 => get database manager configuration 3. Locate the value of SVCENAME in the output: TCP/IP Service name (SVCENAME) =",
    "remediation": "Perform the following to unset SVCENAME: 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command, where <service> is a port number or named service. db2 => update dbm cfg using SVCENAME NULL Db2 must be recycled (db2stop/db2start) for changes to SSL_SVCENAME to take effect.",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_database_service_name_unset",
      "db2_database_plaintext_communication_disabled",
      "db2_database_unencrypted_port_disabled",
      "db2_database_svcename_parameter_unset",
      "db2_database_insecure_port_disabled"
    ]
  },
  {
    "id": "8.1.8",
    "title": "Configure a Client-side Key Store for TLS (SSL_CLNT_KEYDB)",
    "assessment": "Manual",
    "description": "To enable TLS support in a Db2 client, it is possible to configure a key store in the database manager configuration that will contain root certificates to be used for secure TLS communication between a Db2 client and Db2 server.",
    "rationale": "On the client side, Db2 requires the root certificates for the server to be available. This can be achieved by configuring a client-side keystore. This parameter is optional and is not needed if clients use the SSLClientKeystoredb or SSLServerCertificate parameters in the db2cli.ini or db2dsdriver.cfg files, or in the connection string.",
    "audit": "erform the following to determine if SSL_CLNT_KEYDB is set. 1. Run the following command: db2 => get database manager configuration 2. Locate the value of SSL_CLNT_KEYDB in the output: SSL client keydb file (SSL_CLNT_KEYDB) =",
    "remediation": "Perform the following to set SSL_CLNT_KEYDB: 1. Run the following command, where <path> is the fully qualified path to the keystore file: db2 => update dbm cfg using SSL_CLNT_KEYDB <path> 2. (Optional) To use the Microsoft certificate store on Windows, set SSL_CLNT_KEYDB to GSK_MS_CERTIFICATE_STORE: db2 => update dbm cfg using SSL_CLNT_KEYDB GSK_MS_CERTIFICATE_STORE 3. Restart the client application. If the CLP is being used, run the following command to terminate the background process  db2 => terminate If a client-side keystore file is being used, ensure that any users running client applications, and administrators have access to the file. Do not grant world readable or world writable permissions on the stash file.",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_client_tls_key_store_configured",
      "db2_client_ssl_clnt_keydb_enabled",
      "db2_client_tls_certificate_store_valid",
      "db2_client_secure_communication_enabled",
      "db2_client_root_certificates_configured",
      "db2_client_tls_keystore_integrity_verified",
      "db2_client_ssl_clnt_keydb_protected",
      "db2_client_tls_communication_encrypted"
    ]
  },
  {
    "id": "8.1.9",
    "title": "Configure a Client-side Stash File for TLS (SSL_CLNT_STASH)",
    "assessment": "Manual",
    "description": "If a key store file is being used to configure client-side TLS support in a Db2 instance, a stash file should also be configured to allow the Db2 client to be able to read certificates from the keystore. If the Microsoft certificate store is configured on a Windows platform, a stash file is not required.",
    "rationale": "The database manager configuration does not provide a method for specifying a password for the client-side SSL key store. The Microsoft certificate store does not require a password, so a stash file is not required. Impact: Perform the following to determine if SSL_CLNT_STASH is required, and if it is set. 1. Attach to the Db2 instance. 2. db2 => attach to <db2instance> 3. Run the following command: 4. db2 => get database manager configuration 5. Locate the value of SSL_CLNT_KEYDB in the output: 6. SSL client keydb file (SSL_CLNT_KEYDB) = 7. If the value of SSL_CLNT_KEYDB is not GSK_MS_CERTIFICATE_STORE, locate the value of SSL_CLNT_STASH and ensure SSL_CLNT_STASH is not blank. 8. SSL client stash file (SSL_CLNT_STASH)=",
    "audit": "Perform the following to set SSL_CLNT_STASH: 1. Run the following command, where <path> is the fully qualified path to the keystore file: db2 => update dbm cfg using SSL_CLNT_KEYDB <path> 2. Restart the client application. If the CLP is being used, run the following command to terminate the background process db2 => terminate  If a stash file is being used, ensure that any users running client applications, and administrators have access to the file. Do not grant world readable or world writable permissions on the stash file. If the Microsoft certificate store is being used on Windows, it is not necessary to set SSL_CLNT_STASH.",
    "remediation": "Perform the following to set SSL_CLNT_STASH: 1. Run the following command, where is the fully qualified path to the keystore file: db2 => update dbm cfg using SSL_CLNT_KEYDB <path> 2. Restart the client application. If the CLP is being used, run the following command to terminate the background process db2 => terminate If a stash file is being used, ensure that any users running client applications, and administrators have access to the file. Do not grant world readable or world writable permissions on the stash file. If the Microsoft certificate store is being used on Windows, it is not necessary to set SSL_CLNT_STASH.",
    "profile_applicability": "•  Level 1 - RDBMS",
    "impact": "Perform the following to determine if SSL_CLNT_STASH is required, and if it is set. 1. Attach to the Db2 instance. 2. db2 => attach to <db2instance> 3. Run the following command: 4. db2 => get database manager configuration 5. Locate the value of SSL_CLNT_KEYDB in the output: 6. SSL client keydb file (SSL_CLNT_KEYDB) = 7. If the value of SSL_CLNT_KEYDB is not GSK_MS_CERTIFICATE_STORE, locate the value of SSL_CLNT_STASH and ensure SSL_CLNT_STASH is not blank. 8. SSL client stash file (SSL_CLNT_STASH)=",
    "function_names": [
      "db2_instance_tls_client_stash_configured",
      "db2_instance_ssl_client_stash_required",
      "db2_instance_tls_client_keystore_stash_enabled",
      "db2_instance_ssl_client_certificate_stash_configured",
      "db2_instance_tls_client_stash_file_present",
      "db2_instance_ssl_client_stash_file_required",
      "db2_instance_tls_client_stash_non_windows_required"
    ]
  },
  {
    "id": "8.1.10",
    "title": "Enable TLS Communication Between HADR Primary and Standby Instances (HADR_SSL_LABEL)",
    "assessment": "Manual",
    "description": "The HADR_SSL_LABEL database configuration parameter controls whether connections between HADR peers are encrypted, and which certificate is served to an HADR peer when establishing an HADR connection.",
    "rationale": "To protect database data and log records when they are sent from a primary database to a standby database, the HADR_SSL_LABEL database configuration should be set.",
    "audit": "Perform the following to determine if the HADR_SSL_LABEL is set. These steps should be performed on the primary database and any standby databases. 1. As the instance owner, run the following command. db2 => get db cfg for <database> 2. Locate the value of HADR_SSL_LABEL in the output: HADR SSL certificate label (HADR_SSL_LABEL) =",
    "remediation": "Perform the following steps on both the primary and any standby databases to enable TLS encrypted HADR. A server side keystore and stash file (SSL_SVR_KEYDB/SSL_SVR_STASH) must be configured to enable TLS encrypted HADR communication: • Run the following command as the instance owner. db2 => update db cfg for <database> using HADR_SSL_LABEL <label> Replace <label> with the name of a certificate present in the server-side keystore (SSL_SVR_KEYDB). If it is active, HADR must be recycled for changes to the HADR_SSL_LABEL registry variable to take effect.",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "database_hadr_tls_enabled",
      "database_hadr_ssl_certificate_valid",
      "database_hadr_encryption_required",
      "database_hadr_peer_connection_encrypted",
      "database_hadr_ssl_label_configured"
    ]
  },
  {
    "id": "8.1.11",
    "title": "Enable Remote TLS Connections to Db2 (DB2COMM)",
    "assessment": "Manual",
    "description": "The DB2COMM registry variable controls what types of remote connections Db2 will accept. It can be configured to enable plaintext communication, encrypted communication, or both.",
    "rationale": "For security, DB2COMM should be set to enable only TLS encrypted communications.",
    "audit": "Perform the following to determine if DB2COMM is set. 1. As the instance owner, run the following command. db2set -all DB2COMM 2. The value of DB2COMM will be returned in the output. If the DB2COMM registry variable is not set, the db2set command will not return any data. [i] TCPIP",
    "remediation": "Perform the following to set DB2COMM and enable TLS: 1. Run the following command as the instance owner. db2set DB2COMM=SSL Db2 must be recycled (db2stop/db2start) for changes to the DB2COMM registry variable to take effect.",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_instance_remote_tls_enabled",
      "db2_instance_db2comm_encrypted_only",
      "db2_instance_plaintext_connections_disabled",
      "db2_instance_secure_communication_enabled",
      "db2_instance_tls_compliance_enabled"
    ]
  },
  {
    "id": "8.2.1",
    "title": "Encrypt the Database",
    "assessment": "Manual",
    "description": "Encrypting the database will protect your data and may be required for compliance with certain government regulations (e.g. NIST).",
    "rationale": "A malicious user can steal physical media like the hard drive, and restore the database and browse the data. To prevent access to the data at rest, encrypt sensitive data in a database and use an encryption key that encrypt the data. This prevents anyone without the keys from using the data.",
    "audit": "Check that the database is encrypted via examining configuration settings.",
    "remediation": "To determine if a database is encrypted you should check the Encrypted database database configuration parameter: db2 => get db cfg | grep -i encrypt Encryption Library for Backup (ENCRLIB) = libdb2encr.so Encryption Options for Backup (ENCROPTS) = CIPHER=AES:MODE=CBC:KEY LENGTH=256 Encrypted database = YES You should see that the encrypted database is set to YES. You should check the type of key manger used by checking dbm configuration: db2 => get dbm cfg | grep -i keystore Keystore type (KEYSTORE_TYPE) = KMIP Keystore location (KEYSTORE_LOCATION) = /path/ekeystore.cfg You can also check the current database encryption settings: db2 => SELECT * FROM TABLE(SYSPROC.ADMIN_GET_ENCRYPTION_INFO()) You must be connected to the database to run this command. The following information will be shown for the connected database: • OBJECT_NAME • OBJECT_TYPE • ALGORITHM • ALGORITHM_MODE • KEY_LENGTH • MASTER_KEY_LABEL KEYSTORE_NAME KEYSTORE_TYPE • KEYSTORE_HOST KEYSTORE_IP  • KEYSTORE_IP_TYPE • PREVIOUS_MASTER_KEY_LABEL AUTH_ID • APPL_ID • ROTATION_TIME This information should be filled in for an encrypted database.",
    "profile_applicability": "•  Level 2 - RDBMS (extends Level 1 - RDBMS)",
    "function_names": [
      "database_instance_encryption_enabled",
      "database_storage_encryption_enabled",
      "database_backup_encryption_enabled",
      "database_transit_encryption_enabled",
      "database_kms_key_attached",
      "database_default_encryption_enabled",
      "database_encryption_cmk_required",
      "database_encryption_min_tls_1_2"
    ]
  },
  {
    "id": "8.2.2",
    "title": "Do Not Use Encryption Algorithms that are Not Secure",
    "assessment": "Manual",
    "description": "Encryption can be performed with various algorithms, some of which are outdated and should no longer be used.",
    "rationale": "Using an outdated algorithm can leave the data vulnerable. As new methods of attack are created and hardware processing speeds increase, the encryption algorithms can become vulnerable. Thus, only current encryption algorithms should be used. 3DES is an outdated encryption algorithm and should not be used.",
    "audit": "Check that you are not using an outdated algorithm (like 3DES) by looking at the configuration settings.",
    "remediation": "To determine what encryption options used to encrypt the database you can run the following command: db2 => get db cfg | grep -i encrypt Encryption Library for Backup (ENCRLIB) = libdb2encr.so Encryption Options for Backup (ENCROPTS) = CIPHER=AES:MODE=CBC:KEY LENGTH=256 Encrypted database = YES ENCROPS should not contain CIPHER=3DES algorithm, because 3DES is not secure. CIPHER=AES is secure. You can also check the current database encryption settings: db2 => SELECT * FROM TABLE(SYSPROC.ADMIN_GET_ENCRYPTION_INFO()) You must be connected to the database to run this command. From the information retrieved, the ALGORITHM should not be 3DES.",
    "profile_applicability": "•  Level 2 - RDBMS (extends Level 1 - RDBMS)",
    "function_names": [
      "cloud_cdn_ssl_certificate_secure_encryption",
      "compute_load_balancer_secure_encryption",
      "cloudtrail_trail_secure_encryption",
      "s3_bucket_secure_encryption",
      "iam_user_secure_encryption",
      "kms_key_secure_encryption",
      "rds_instance_secure_encryption",
      "cloudfront_distribution_secure_encryption",
      "elasticache_cluster_secure_encryption",
      "sqs_queue_secure_encryption"
    ]
  },
  {
    "id": "8.2.3",
    "title": "Secure the Configuration File",
    "assessment": "Automated",
    "description": "A configuration file, ekeystore.cfg, is created by the user in order to configure external keymanager functionality. This file should be secured against tampering via OS permissions.",
    "rationale": "Set this file to be readable and writeable by only the Db2 instance owner. If this file is not secured, an attacker may delete it, causing potential interruption of operations.",
    "audit": "A configuration file is created when configuring external keymanager access. You can verify the permissions of the stash file via regular OS operations, such as ls -la on a Unix-type system. Check the OS permissions for the stash file. On a Unix-type system they should be: $ ls -la -rw------- 1 db2inst1 db2inst1 129 May 19 11:44 ekeystore.cfg",
    "remediation": "Change the permissions for the file: $ chmod 600 ekeystore.cfg",
    "profile_applicability": "•  Level 2 - RDBMS (extends Level 1 - RDBMS)",
    "function_names": [
      "compute_configuration_file_secure_permissions",
      "compute_keystore_config_file_readonly",
      "compute_external_keymanager_config_immutable",
      "compute_keystore_cfg_restricted_access",
      "compute_configuration_file_owner_root",
      "compute_keystore_config_file_no_world_writable",
      "compute_external_keymanager_config_secure_ownership"
    ]
  },
  {
    "id": "8.2.4",
    "title": "Secure the Stash File",
    "assessment": "Manual",
    "description": "A stash file is an obfuscated file that contains the credentials that are needed to access the keystore. If a keystore password was not provided during db2start, the password will be retrieved from the stash file. A stash file is created when -stash command is used during the creation of the keystore.",
    "rationale": "Set this file to be readable by only the Db2 instance owner. If this file is not secured, an attacker may delete it, causing potential interruption of operations.",
    "audit": "A stash file is used when a file with the same name as the PKCS12 keystore file exists but with a .sth extension. For example, if the keystore is called keystore.p12, the stash file, if it exists, will be in the same directory with the name keystore.sth. You can determine the location of the stash file by examining the KEYSTORE_LOCATION database manager configuration parameter. 1. Attach to the Db2 instance. db2 => attach to <db2instance> 2. Run the following command: db2 => get database manager configuration 3. Locate the KEYSTORE_LOCATION value in the output: Keystore location (KEYSTORE_LOCATION) = /path/keystore.p12 You can verify the permissions of the stash file via regular OS operations, such as ls -la on a Unix-type system. 4. Check the OS permissions for the stash file. $ ls -la -rw------- 1 db2inst1 db2inst1 129 May 19 11:44 keystore.sth",
    "remediation": "Change the permissions for the file: $ chmod 600 keystore.sth References: 1. https://www.ibm.com/support/pages/internal-format-gskit-stash-files-has-changed",
    "profile_applicability": "•  Level 2 - RDBMS (extends Level 1 - RDBMS)",
    "references": "1. https://www.ibm.com/support/pages/internal-format-gskit-stash-files-has-changed",
    "function_names": [
      "db2_keystore_stash_file_encrypted",
      "db2_keystore_stash_file_permissions_restricted",
      "db2_keystore_stash_file_owner_valid",
      "db2_keystore_stash_file_location_secure",
      "db2_keystore_stash_file_access_logged",
      "db2_keystore_stash_file_backup_enabled",
      "db2_keystore_stash_file_rotation_enabled",
      "db2_keystore_stash_file_integrity_verified"
    ]
  },
  {
    "id": "8.2.5",
    "title": "Backup the Stash File",
    "assessment": "Manual",
    "description": "A stash file is an obfuscated file that contains the credentials that are needed to access the keystore. If a keystore password was not provided during db2start, the password will be retrieved from the stash file. A stash file is created when -stash command is used during the creation of the keystore.",
    "rationale": "Backup the stash file. If access to the stash file is lost, and it can not be re-created because knowledge of the password has been lost, then you will not have access to the keystore file. This may result in the inability to decrypt the database or backup files.",
    "audit": "Check that the stash file has been backed up according to company policy.",
    "remediation": "Backup the stash file to a safe location.",
    "profile_applicability": "•  Level 2 - RDBMS (extends Level 1 - RDBMS)",
    "function_names": [
      "db2_keystore_stash_file_backed_up",
      "db2_credentials_stash_file_protected",
      "db2_keystore_stash_file_encrypted",
      "db2_stash_file_secure_storage_enabled",
      "db2_keystore_stash_file_access_restricted",
      "db2_stash_file_obfuscation_enabled",
      "db2_keystore_stash_file_redundant_backup",
      "db2_stash_file_rotation_enabled"
    ]
  },
  {
    "id": "8.2.6",
    "title": "Create a Strong Password",
    "assessment": "Manual",
    "description": "When creating or changing passwords for local keystone files, ensure that the passwords are strong, by using the -strong parameter of the gsk8capicmd_64 command.",
    "rationale": "A stronger password prevents unauthorized access to the database.",
    "audit": "Password is set during the keystore create command. You cannot check what password you used via a command; you have to manage the the password yourself.",
    "remediation": "Use the -strong parameter on the gsk8capicmd_64 command: $ gsk8capicmd_64 -keydb -create -dbmykeystore.p12 -pw <yourpasswordhere> -strong -stash",
    "profile_applicability": "•  Level 2 - RDBMS (extends Level 1 - RDBMS)",
    "function_names": [
      "keystone_password_strong",
      "keystone_password_strong_parameter",
      "keystone_password_complexity_high",
      "keystone_password_strong_enabled",
      "keystone_password_secure_generation",
      "keystone_password_strong_requirement",
      "keystone_password_strong_enforcement",
      "keystone_password_strong_creation"
    ]
  },
  {
    "id": "8.2.7",
    "title": "Backup Your Keystore",
    "assessment": "Manual",
    "description": "The keystore stores encryption keys used to encrypt your database. Losing the key will make the data inaccessible. If the keystore with encryption keys is lost, there is no way to decrypt the data.",
    "rationale": "The contents of your keystore are critical and it is important that you back up the keystore at regular intervals. Backups should be done whenever the contents of the keystore changes, such as when a key or certificate is added, a master key (MK) is rotated, or the password is changed. For local keystore files, the configuration file is not included as part of a Db2 database backup and must be backed up manually. For a centralized keystore, consult the documentation for your keystore product to understand their recommendations for keystore backups.",
    "audit": "Check that you are backing up your keystore regularly. Keep in mind that even if the encryption key has been rotated, logs may still need access to the old key. Do not delete keys.",
    "remediation": "Regularly backup your keystore and stash files, using mechanisms outside of Db2.",
    "profile_applicability": "•  Level 2 - RDBMS (extends Level 1 - RDBMS)",
    "function_names": [
      "database_keystore_backup_enabled",
      "database_keystore_backup_automated",
      "database_keystore_backup_recent",
      "database_keystore_backup_encrypted",
      "database_keystore_backup_offsite",
      "database_keystore_backup_retention_configured",
      "database_keystore_backup_integrity_verified",
      "database_keystore_backup_access_restricted"
    ]
  },
  {
    "id": "8.2.8",
    "title": "Backup Your Password In Case Stash File is Inaccessible or Corrupted",
    "assessment": "Manual",
    "description": "If the keystore is inaccessible, there is no way to decrypt the data in the database. Therefore, protecting and backing up the password to the keystore is important to avoid data loss.",
    "rationale": "Ensure that you back up your passwords, in addition to using a stash file. This applies particularly to the password used for a local keystore file. Should your stash file ever become corrupted, you will need to manually supply the password. If you forget the password, and do not created a backup, access to your keys and data is lost.",
    "audit": "Store the password in a safe place, like other similar passwords.",
    "remediation": "You may use a password manager to store the password in a secure manner.",
    "profile_applicability": "•  Level 2 - RDBMS (extends Level 1 - RDBMS)",
    "function_names": [
      "database_keystore_password_backup_exists",
      "database_keystore_password_protected",
      "database_keystore_password_recovery_enabled",
      "database_keystore_password_secure_storage",
      "database_keystore_password_rotation_enabled",
      "database_keystore_password_access_restricted",
      "database_keystore_password_encryption_enabled",
      "database_keystore_password_backup_automated"
    ]
  },
  {
    "id": "8.2.9",
    "title": "Rotate the Master Key",
    "assessment": "Manual",
    "description": "Key rotation refers to the process of changing encryption keys and is often required for compliance purposes. Similar to a password change, key rotation is done to reduce the risk that can come from exposure of the key, while it exists. Since the DEK used by Db2 for encryption is never outside of the encrypted database, backup, or transaction log, there is little risk of exposure. The same is not true for the MK, which lives outside of the database. The rotation of the MK does not affect the encryption of the DEK within existing backups or archived transaction logs. The master key (MK) should be rotated based on the frequency needed for compliance. Rotating MK requires decrypting any DEK encrypted with the old MK and then re- encrypting it with the new MK. The data is encrypted with a DEK and does not get re- encrypted.",
    "rationale": "Consider rotating the MK as being similar to changing passwords every X number of days. You may also have external requirements to rotate the MK after a certain period of time.",
    "audit": "Check the current database is encryption settings: db2 => SELECT * FROM TABLE(SYSPROC.ADMIN_GET_ENCRYPTION_INFO()) You must be connected to the database to run this command. The following information will be shown for the connected database: • OBJECT_NAME • OBJECT_TYPE • ALGORITHM • ALGORITHM_MODE • KEY_LENGTH • MASTER_KEY_LABEL KEYSTORE_NAME KEYSTORE_TYPE • KEYSTORE_HOST KEYSTORE_IP • KEYSTORE_IP_TYPE • PREVIOUS_MASTER_KEY_LABEL AUTH_ID • APPL_ID • ROTATION_TIME",
    "remediation": "The SYSPROC.ADMIN_ROTATE_MASTER_KEY procedure can be used to change the database key to comply with key rotation requirement. You must be connected to the database to run this command. db2 => CALL SYSPROC.ADMIN_ROTATE_MASTER_KEY('newMasterKeyLabel') Db2 will automatically generate the new MK and label unless you provide a MK label for an existing MK. Key rotation is logged in the db2diag.log file: $ grep –A 3 \"Key Rotation\" ~/sqllib/db2dump/db2diag.log Key Rotation successful using label: DATA #2 : String, 46 bytes DB2_SYSGEN_db2inst1_SECRET_2021-04-29-11.22.01 The DEK is not externalized and does not need to be rotated. However, if you wish to rotate the DEK you can take an offline backup and restore to a new encrypted database, thus generating a new DEK.",
    "profile_applicability": "•  Level 2 - RDBMS (extends Level 1 - RDBMS)",
    "function_names": [
      "db2_master_key_rotation_enabled",
      "db2_master_key_rotation_frequency_compliant",
      "db2_master_key_rotation_over_90d",
      "db2_master_key_rotation_min_tls_1_2",
      "db2_master_key_rotation_all_regions",
      "db2_master_key_rotation_recently_performed",
      "db2_master_key_rotation_automated",
      "db2_master_key_rotation_logging_enabled",
      "db2_master_key_rotation_backup_encrypted",
      "db2_master_key_rotation_dek_reencrypted"
    ]
  },
  {
    "id": "8.2.10",
    "title": "Turn Off ALLOW_KEY_INSERT_WITHOUT_KEYSTORE_BACKUP",
    "assessment": "Manual",
    "description": "The ALLOW_KEY_INSERT_WITHOUT_KEYSTORE_BACKUP setting in ekeystore.cfg file for external key managers (KMIP or PKCS11) allows writing to the keystore. The setting is false by default. Check that the setting has not been turned on.",
    "rationale": "Keeping the setting as false does not allow Db2 to create master keys. If you choose to turn the setting on, you acknowledge that Db2 does not backup changes to the keystore. Always backup your keystore before making changes.",
    "audit": "Check that ekeystore.cfg file that's being used has the setting turned OFF. ALLOW_KEY_INSERT_WITHOUT_KEYSTORE_BACKUP=false",
    "remediation": "$ cat ekeystore.cfg VERSION=1 PRODUCT_NAME=Luna ALLOW_KEY_INSERT_WITHOUT_KEYSTORE_BACKUP=false LIBRARY=/usr/safenet/lunaclient/luna6.1/lib/libCryptoki2_64.so SLOT_LABEL=DB2Partition NEW_OBJECT_TYPE=PRIVATE KEYSTORE_STASH=/home/db2inst1/sqllib/security/pkcs11.sth For maximum security, turn the setting off and create the keys outside of Db2. This way you will also be able to manage the labeling scheme across the Db2 instances and prevent name collision between different databases.",
    "profile_applicability": "•  Level 2 - RDBMS (extends Level 1 - RDBMS)",
    "function_names": [
      "ekeystore_config_allow_key_insert_disabled",
      "ekeystore_keystore_backup_required",
      "ekeystore_external_key_manager_secure_config",
      "ekeystore_kmip_keystore_write_protection",
      "ekeystore_pkcs11_keystore_write_protection",
      "ekeystore_external_key_manager_backup_enforced",
      "ekeystore_keystore_write_restriction_enabled",
      "ekeystore_config_keystore_backup_mandatory"
    ]
  },
  {
    "id": "8.2.11",
    "title": "Keep Master Key Labels Unique",
    "assessment": "Manual",
    "description": "Db2 uses the MK label to uniquely identify each MK, and stores the label value in each encrypted object, be it a database, transaction log, or backup file. This stored MK label value identifies the MK key material that is used to decrypt the data in the object. Creating MK labels is part of an organizations standard operating procedures (SOP).",
    "rationale": "It is critical to use unique MK labels across the organization to avoid duplication. If unique labels are not used, access to encrypted data can be lost through human error. Access to encrypted data is lost when the key that is retrieved from the keystore for a label is different from the key that was used to encrypt the database using the same label. It may not be possible to migrate databases using a local keystore file to a centralized keystore file if multiple databases are using the same master key label, but different master keys associated with that label.",
    "audit": "Check the organization's SOP for creating master key labels to ensure it includes specific guidance on creating unique master key labels.",
    "remediation": "Update the SOP to provide guidance found missing during the audit.",
    "profile_applicability": "•  Level 2 - RDBMS (extends Level 1 - RDBMS)",
    "function_names": [
      "db2_master_key_labels_unique",
      "db2_master_key_label_encryption_unique",
      "db2_encryption_key_label_unique",
      "db2_master_key_label_sop_compliance",
      "db2_encrypted_object_key_label_unique"
    ]
  },
  {
    "id": "8.2.12",
    "title": "Retain All Master Keys",
    "assessment": "Manual",
    "description": "Master keys are needed to access the DEKs that are stored in encrypted databases, transaction logs, and backup images. Since multiple MKs can exist over the life time of these objects, it is necessary to retain them all while the encrypted data is retained. If a MK is lost, the encrypted data in the object cannot be retrieved. An organizations standard operating procedures (SOP) should have a methodology for tracking what data is encrypted with a specific master key, and be consulted before any master keys are archived.",
    "rationale": "Any failure or human error in tracking what data encrypted with a specific master key could result in loss of access to that data should the master key be deleted. Master keys should not be deleted. Instead they should be archived to a secure location for long term storage in case they are required at some point in the future.",
    "audit": "Check the organization's SOP for specific instructions on tracking what data is encrypted with a particular master key, and that there are details on how to archive a master key for long term storage. Ensure the SOP clearly states master keys should never be deleted.",
    "remediation": "Update the SOP to provide guidance found missing during the audit.",
    "profile_applicability": "•  Level 2 - RDBMS (extends Level 1 - RDBMS)",
    "function_names": [
      "kms_key_all_retained",
      "kms_key_retention_policy_enabled",
      "kms_key_deletion_protection_enabled",
      "kms_key_rotation_enabled",
      "kms_key_usage_tracking_enabled",
      "kms_key_archive_protection_enabled",
      "kms_key_encryption_metadata_retained",
      "kms_key_sop_compliance_verified"
    ]
  },
  {
    "id": "8.2.13",
    "title": "Set CFG Values in a Single Command",
    "assessment": "Manual",
    "description": "Db2 uses KEYSTORE_TYPE and KEYSTORE_LOCATION to access the keystore.",
    "rationale": "Although the Db2 database manager configuration parameters KEYSTORE_TYPE and KEYSTORE_LOCATION are configurable online, you should set them in the a single DB2 UPDATE DBM CFG command. Otherwise, Db2 might attempt to access the keystore between the updates and report an access error.",
    "audit": "You can check what values you have set for these parameters as follows: $ db2 get dbm cfg | grep KEYSTORE Keystore type (KEYSTORE_TYPE) = PKCS12 Keystore location (KEYSTORE_LOCATION) = /path/to/file.p12",
    "remediation": "You can execute the following command to change the values in one line: db2 => update dbm cfg using keystore_type pkcs12 keystore_location /path/to/file.p12; DB20000I The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully.",
    "profile_applicability": "•  Level 2 - RDBMS (extends Level 1 - RDBMS)",
    "function_names": [
      "db2_keystore_type_configured",
      "db2_keystore_location_configured",
      "db2_keystore_single_command_configured",
      "db2_keystore_access_secure",
      "db2_cfg_values_consistent"
    ]
  },
  {
    "id": "8.2.14",
    "title": "Key Rotation in HADR Environment",
    "assessment": "Manual",
    "description": "Some additional considerations are needed when working in an HADR environment. A key rotation on the primary database in an HADR environment drives a key rotation automatically on the standby. The change, however, does not occur until other log records are sent to the standby database. If you want to force the rotated key to the standby, the archive log command can be used to generate the log records that are needed to replay the rotation on the standby.",
    "rationale": "When the MK is rotated, the database begins to use the new key immediately, but access to the old MK value is still needed in the following scenarios: • Transaction log files that have not been reused since the key rotation • Archived encrypted transaction log files that used the previous MK value • Encrypted backup images that used the previous MK value Do not delete an MK from the keystore unless you are certain it is no longer referenced by any encrypted object on any of the hosts of the HADR environment. When using a local keystore file, you need to provide an identical copy of the keystore at each Db2 member that is associated with the database. If you choose to use a shared file system, ensure that network access is maintained for that file system while Db2 is actively working with the encrypted database. In an HADR setup, you should copy the keystore containing the encryption keys between the hosts.",
    "audit": "You can check what values you have set for these parameters as follows on each HADR member: db2 => get dbm cfg | grep KEYSTORE Keystore type (KEYSTORE_TYPE) = PKCS12 Keystore location (KEYSTORE_LOCATION) = /path/to/file.p12 We recommend you use a centralized key manager for HADR environments.",
    "remediation": "Retain all Master Keys until you are certain they are not use on any of the hosts in an HADR environment.  The same DEK and master key is used on all members in a DPF or pureScale deployment and each member requires access to the keystore to access master keys, which can be a shared file.  9 Additional Considerations This section provides additional considerations on protecting and maintaining the database instance.",
    "profile_applicability": "•  Level 2 - RDBMS (extends Level 1 - RDBMS)",
    "function_names": [
      "database_key_rotation_hadr_primary",
      "database_key_rotation_hadr_standby",
      "database_key_rotation_hadr_archive_log",
      "database_key_rotation_hadr_sync_enabled",
      "database_key_rotation_hadr_automatic_replay",
      "database_key_rotation_hadr_manual_trigger",
      "database_key_rotation_hadr_log_records",
      "database_key_rotation_hadr_force_sync"
    ]
  },
  {
    "id": "9.1",
    "title": "Leverage the Least Privilege Principle",
    "assessment": "Manual",
    "description": "The Db2 database instance will execute under the context of a given security principle. It is recommended that this service have the least privileges possible. Furthermore, it is advisable to have the Db2 service executed using the Db2 instance owner and monitor such accounts for unauthorized access to the sensitive data.",
    "rationale": "Leveraging a least privilege account for the Db2 service will reduce an attacker's ability to compromise the host operating system should the Db2 service process become compromised.",
    "audit": "Review all accounts that have access to the Db2 database service to ensure least privilege is applied.",
    "remediation": "Ensure that all accounts have the absolute minimal privilege granted to perform their tasks.",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "db2_instance_owner_privileges_minimized",
      "db2_service_account_least_privilege",
      "db2_instance_owner_unauthorized_access_monitored",
      "db2_service_account_sensitive_data_access_restricted",
      "db2_instance_owner_privileges_audited",
      "db2_service_account_privilege_escalation_prevented"
    ]
  },
  {
    "id": "9.2",
    "title": "Enable Backup Redundancy",
    "assessment": "Manual",
    "description": "Backup redundancy ensures that multiple instances of database backups exist.",
    "rationale": "Maintaining redundant copies of database backups will increase business continuity capabilities should a Db2 service failure coincide with a corrupt backup.",
    "audit": "Review the replication of your backups based on organization policy.",
    "remediation": "Define and implement a process to replicate your backups onto multiple locations.",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "rds_instance_backup_redundancy_enabled",
      "rds_cluster_backup_redundancy_enabled",
      "database_backup_redundancy_enabled",
      "backup_redundancy_enabled_multi_region",
      "backup_redundancy_enabled_daily",
      "backup_redundancy_enabled_automated",
      "backup_redundancy_enabled_cross_account",
      "backup_redundancy_enabled_immutable",
      "backup_redundancy_enabled_encrypted",
      "backup_redundancy_enabled_retention_90d"
    ]
  },
  {
    "id": "9.3",
    "title": "Protecting Backups",
    "assessment": "Manual",
    "description": "Backups of your database should be stored securely in a location with full access for administrators, read and execute access for group, and no access for users.",
    "rationale": "Backups may contain sensitive data that attackers can use to retrieve valuable information about the organization.",
    "audit": "Review the privileges applied to your backups.",
    "remediation": "Define a security policy for all backups that specifies the privileges they should be assigned.",
    "profile_applicability": "•  Level 1 - RDBMS",
    "function_names": [
      "database_backup_secure_permissions",
      "database_backup_admin_full_access",
      "database_backup_group_read_execute_access",
      "database_backup_no_user_access",
      "database_backup_restricted_permissions",
      "database_backup_secure_storage_location",
      "database_backup_access_control_enabled",
      "database_backup_encryption_enabled"
    ]
  }
]
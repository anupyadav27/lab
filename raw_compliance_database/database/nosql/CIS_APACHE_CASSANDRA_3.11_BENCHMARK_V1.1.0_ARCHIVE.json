[
  {
    "id": "1.1",
    "title": "Ensure a separate user and group exist for Cassandra",
    "assessment": "Manual",
    "description": "Create separate userid and group for Cassandra.",
    "rationale": "All processes need to run as a user with least privilege. This mitigates the potential impact of malware to the system.",
    "audit": "Logon to the server where Cassandra is installed. To confirm existence of the group, execute the following command: $ getent group | grep cassandra To confirm existence of the user, execute the following command: $ getent passwd | grep cassandra If either the group or user do not exist, or if the user is not a member of the group, this is a finding.",
    "remediation": "Create a group for cassandra(if it does not already exist) sudo groupadd cassandra Create a user which is only used for running Cassandra and its related processes. sudo useradd -m -d /home/cassandra -s /bin/bash -g cassandra -u <USERID_NUMBER> cassandra Replacing <USERID_NUMBER> with a number not already used on the server",
    "function_names": [
      "iam_user_cassandra_separate",
      "iam_group_cassandra_separate",
      "compute_user_cassandra_separate",
      "compute_group_cassandra_separate",
      "database_user_cassandra_separate",
      "database_group_cassandra_separate"
    ],
    "profile_applicability": "\u2022  Level 1 - Cassandra on Linux \u2022  Level 2 - Cassandra on Linux"
  },
  {
    "id": "1.2",
    "title": "Ensure the latest version of Java is installed",
    "assessment": "Automated",
    "description": "A prerequisite to installing Cassandra is the installation of Java. The version of Java installed should be the most recent that is compatible with the organization's operational needs.",
    "rationale": "Using the most recent Java SDK version can help limit the possibilities for vulnerabilities in the software, the installation version applied during setup should be established according to the needs of the organization. Ensure you are using a release that is covered by a level of support which includes regular updates to address vulnerabilities.",
    "audit": "To verify that you have the correct version of java installed: # java -version java version \"1.8.0_172\" Java(TM) SE Runtime Environment (build 1.8.0_172-b11) If an old/unsupported version of Java is installed this is a finding.",
    "remediation": "1. Uninstall the old/unsupported version of Java, if present. 2. Download the latest compatible release of the Java JDK, or OpenJDK. 3. Follow the provided installation instructions to complete the install. References: 1. http://www.oracle.com/technetwork/java/javase/downloads/index-jsp- 138363.html#javasejdk 2. http://openjdk.java.net/ 3. http://openjdk.java.net/install/index.html 4. http://cassandra.apache.org/doc/latest/getting_started/installing.html#prerequisite s 5. https://www.java.com/en/download/help/index_installing.xml?os=All+Platforms&j =8&n=20",
    "function_names": [
      "compute_java_latest_version_installed",
      "compute_java_compatible_version_installed",
      "compute_java_version_up_to_date",
      "compute_java_cassandra_compatible_version",
      "compute_java_recent_version_installed"
    ],
    "profile_applicability": "\u2022  Level 1 - Cassandra on Linux \u2022  Level 2 - Cassandra on Linux",
    "references": "1. http://www.oracle.com/technetwork/java/javase/downloads/index-jsp- 138363.html#javasejdk 2. http://openjdk.java.net/ 3. http://openjdk.java.net/install/index.html 4. http://cassandra.apache.org/doc/latest/getting_started/installing.html#prerequisite s 5. https://www.java.com/en/download/help/index_installing.xml?os=All+Platforms&j =8&n=20"
  },
  {
    "id": "1.3",
    "title": "Ensure the latest version of Python is installed",
    "assessment": "Automated",
    "description": "A prerequisite to installing Cassandra is the installation of Python. The version of Python installed should be the most recent that is compatible with the organizations' operational needs.",
    "rationale": "Using the most recent Python can help limit the possibilities for vulnerabilities in the software, the installation version applied during setup should be established according to the needs of the organization. Ensure you are using a release that is covered by a level of support which includes regular updates to address vulnerabilities.",
    "audit": "To verify that you have the correct version of python installed: # python -V If an old/unsupported version of Python is installed this is a finding.",
    "remediation": "1. Uninstall the old/unsupported version of Python, if present. 2. Download the latest compatible release of the Python: https://www.python.org/downloads/ 3. Follow the provided installation instructions to complete the install. References: 1. https://www.python.org/downloads/ 2. http://cassandra.apache.org/doc/latest/getting_started/installing.html#prerequisite s",
    "function_names": [
      "compute_python_latest_version_installed",
      "compute_python_version_up_to_date",
      "compute_python_compatible_version_installed",
      "compute_python_recent_version_installed"
    ],
    "profile_applicability": "\u2022  Level 1 - Cassandra on Linux \u2022  Level 2 - Cassandra on Linux",
    "references": "1. https://www.python.org/downloads/ 2. http://cassandra.apache.org/doc/latest/getting_started/installing.html#prerequisite s"
  },
  {
    "id": "1.4",
    "title": "Ensure latest version of Cassandra is installed",
    "assessment": "Automated",
    "description": "The Cassandra installation version, along with the patches, should be the most recent that is compatible with organization's operational needs. When obtaining and installing software packages (typically via apt-get or you can compile the source code), it's imperative that packages (or the source code, tarball) are sourced only from valid and authorized repositories. For Cassandra, a short list of valid repositories may include: \u2022 The official apache cassandra website: http://cassandra.apache.org/ \u2022 DataStax Enterprise: https://www.datastax.com/",
    "rationale": "Using the most recent version of Cassandra can help limit the possibilities for vulnerabilities in the software, the installation version applied during setup should be established according to the needs of the organization. Ensure you are using a release that is covered by a level of support which includes regular updates to address vulnerabilities.",
    "audit": "To verify the version of Cassandra you have installed: cassandra -v 3.11.2 (as of 6/8/2018) If an old/unsupported version of Cassandra is installed this is a finding.",
    "remediation": "Upgrade to the latest version of the Cassandra software: For each node in the cluster: 1. Using the nodetool drain command to push all memtables data to SSTables. 2. Stop Cassandra services. 3. Backup the data set and all of your Cassandra configuration files. 4. Download/Update Java if needed. 5. Download/Update Python if needed. 6. Download the binaries for the latest Cassandra revision from the Cassandra Download Page.  7. Install new version of Cassandra. 8. Configure new version of Cassandra, taking into account all of your previous settings in your config files(cassandra.yml, cassandrea-env.sh, etc). 9. Start Cassandra services. 10. Check logs for warnings, errors. 11. Using the nodetool to upgrade your SSTables. 12. Using the nodetool command to check status of cluster. References: 1. http://cassandra.apache.org/doc/latest/getting_started/installing.html#prerequisite s",
    "function_names": [
      "cassandra_installation_latest_version",
      "cassandra_installation_authorized_source",
      "cassandra_installation_patch_current",
      "cassandra_installation_repository_valid",
      "cassandra_installation_source_code_verified"
    ],
    "profile_applicability": "\u2022  Level 1 - Cassandra on Linux \u2022  Level 2 - Cassandra on Linux",
    "references": "1. http://cassandra.apache.org/doc/latest/getting_started/installing.html#prerequisite s"
  },
  {
    "id": "1.5",
    "title": "Ensure the Cassandra service is run as a non-root user",
    "assessment": "Automated",
    "description": "Though Cassandra database may be run as root, it should run as another non-root user.",
    "rationale": "One of the best ways to reduce your exposure to attack is to create a unique, unprivileged user and group for the server application. A best practice is to follow is ensuring processes run with a user with least privilege.",
    "audit": "Logon to the server where Cassandra is running and run the following command ps -aef | grep cassandra | grep java | cut -d' ' -f1 This will show who is running the Cassandra binary. If the user is root or has excessive privileges then this is a finding.",
    "remediation": "Create a group for cassandra (if it does not already exist) sudo groupadd cassandra Create a user which is only used for running Cassandra and its related processes. Replacing <DIRECTORY_WHERE_CASSANDRA_INSTALLED> with the full path of where Cassandra binaries are installed. Replacing <USERID_NUMBER> with a number not already used on the server",
    "function_names": [
      "cassandra_service_non_root_user",
      "cassandra_process_non_privileged_user",
      "cassandra_daemon_non_root_execution",
      "cassandra_service_user_min_privileges",
      "cassandra_non_root_user_configured"
    ],
    "profile_applicability": "\u2022  Level 1 - Cassandra on Linux \u2022  Level 2 - Cassandra on Linux"
  },
  {
    "id": "1.6",
    "title": "Ensure clocks are synchronized on all nodes",
    "assessment": "Manual",
    "description": "Enabling Network Time Protocol (NTP), or some equivalent way, to keep clocks on all nodes in sync is critical.",
    "rationale": "Cassandra decides which data is most current between all of the nodes in the cluster based on timestamps. It is paramount to ensure all clocks are in-sync, otherwise the most current data may not be returned or worse, marked for deletion.",
    "audit": "Depending on the Linux installation this may be checked by executing the following command on each node: ps -aef | grep ntp OR ps -aef | grep chronyd If NTP is not configured or clocks are out-of-sync then this is a finding.",
    "remediation": "Install and start the time protocol on every node in the Cassandra cluster.",
    "function_names": [
      "compute_instance_ntp_enabled",
      "compute_instance_clock_sync_enabled",
      "compute_instance_time_sync_enabled",
      "compute_node_ntp_enabled",
      "compute_node_clock_sync_enabled",
      "compute_node_time_sync_enabled",
      "compute_vm_ntp_enabled",
      "compute_vm_clock_sync_enabled",
      "compute_vm_time_sync_enabled",
      "compute_host_ntp_enabled",
      "compute_host_clock_sync_enabled",
      "compute_host_time_sync_enabled"
    ],
    "profile_applicability": "\u2022  Level 1 - Cassandra on Linux \u2022  Level 2 - Cassandra on Linux"
  },
  {
    "id": "2.1",
    "title": "Ensure that authentication is enabled for Cassandra databases",
    "assessment": "Automated",
    "description": "Authentication is pluggable in Cassandra and is configured using the authenticator setting in cassandra.yaml. Cassandra ships with two options included in the default distribution, AllowAllAuthenticator and PasswordAuthenticator. The default, AllowAllAuthenticator, performs no authentication checks and therefore requires no credentials. It is used to disable authentication completely. The second option, PasswordAuthenticator, stores encrypted credentials in a system table. This can be used to enable simple username/password authentication.",
    "rationale": "Authentication is a necessary condition of Cassandra\u2019s permissions subsystem, so if authentication is disabled then so are permissions. Failure to authenticate clients, users, and/or servers can allow unauthorized access to the Cassandra database and can prevent tracing actions back to their sources. The authentication mechanism should be implemented before anyone accesses the Cassandra server.",
    "audit": "Run the following command to verify whether authentication is enabled (authenticator values set to PasswordAuthenticator) on the Cassandra server. The Cassandra configuration files can be found in the conf directory of tarballs. For packages, the configuration files will be located in /etc/cassandra. cat cassandra.yaml | grep -in \"authenticator:\" If authenticator is set to AllowAllAuthenticator, then this is a finding.",
    "remediation": "To enable the authentication mechanism: 1. Stop the Cassandra database. 2. Modify cassandra.yaml file to modify/add entry for authenticator: set it to PasswordAuthenticator 3. Start the Cassandra database. Default Value: authenticator: AllowAllAuthenticator  References: 1. http://cassandra.apache.org/doc/latest/getting_started/configuring.html 2. http://cassandra.apache.org/doc/latest/operating/security.html",
    "function_names": [
      "cassandra_database_authentication_enabled",
      "cassandra_database_password_authenticator_enabled",
      "cassandra_database_allow_all_authenticator_disabled",
      "cassandra_database_authenticator_configured",
      "cassandra_database_credentials_encrypted"
    ],
    "profile_applicability": "\u2022  Level 1 - Cassandra on Linux \u2022  Level 2 - Cassandra on Linux",
    "references": "1. http://cassandra.apache.org/doc/latest/getting_started/configuring.html 2. http://cassandra.apache.org/doc/latest/operating/security.html"
  },
  {
    "id": "2.2",
    "title": "Ensure that authorization is enabled for Cassandra databases",
    "assessment": "Automated",
    "description": "Authorization is pluggable in Cassandra and is configured using the authorizer setting in cassandra.yaml. Cassandra ships with two options included in the default distribution, AllowAllAuthenticator and CassandraAuthorizer. The default, AllowAllAuthenticator performs no checking which grants all permissions to all roles. The second option, CassandraAuthorizer, implements full permissions management functionality and stores its data in Cassandra system tables.",
    "rationale": "Authorizing roles is an important step towards ensuring only authorized access to the Cassandra database tables is permitted. It also provides the requisite means of implementing least privilege best practices. The authorization mechanism should be implemented before anyone accesses the Cassandra database.",
    "audit": "Run the following command to verify whether authorization is enabled (authorization values set to CassandraAuthorizer) on the Cassandra server. The Cassandra configuration files can be found in the conf directory of tarballs. For packages, the configuration files will be located in /etc/cassandra. cat cassandra.yaml | grep -in \"authorizer:\" If authorizer is set to AllowAllAuthorizer, then this is a finding.",
    "remediation": "To enable the authorization mechanism: 1. Stop the Cassandra database. 2. Modify cassandra.yaml file to modify/add entry for authorization: set it to CassandraAuthorizer 3. Start the Cassandra database. Default Value: authorizer: AllowAllAuthorizer  References: 1. http://cassandra.apache.org/doc/latest/getting_started/configuring.html 2. http://cassandra.apache.org/doc/latest/operating/security.html Additional Information: The authorizer must be configured to AllowAllAuthorizer if AllowAllAuthenticator is the configured authenticator.",
    "function_names": [
      "cassandra_database_authorization_enabled",
      "cassandra_database_authorizer_configured",
      "cassandra_database_allow_all_authenticator_disabled",
      "cassandra_database_cassandra_authorizer_enabled",
      "cassandra_database_permissions_management_enabled"
    ],
    "profile_applicability": "\u2022  Level 1 - Cassandra on Linux \u2022  Level 2 - Cassandra on Linux",
    "references": "1. http://cassandra.apache.org/doc/latest/getting_started/configuring.html 2. http://cassandra.apache.org/doc/latest/operating/security.html Additional Information: The authorizer must be configured to AllowAllAuthorizer if AllowAllAuthenticator is the configured authenticator."
  },
  {
    "id": "3.1",
    "title": "Ensure the cassandra and superuser roles are separate",
    "assessment": "Automated",
    "description": "The default installation of Cassandra includes a superuser role named cassandra. This necessitates the creation of a separate role to be the superuser role.",
    "rationale": "Superuser permissions allow for the creation, deletion, and permission management of other users. Considering the cassandra role is well known it should not be a superuser or one which is used for any administrative tasks. Impact: The separate account must be created, assigned the superuser role, and tested for correct functionality prior to removing the superuser role from the cassandra account. Otherwise,",
    "audit": "To verify the configuration, run the following query: select role, is_superuser from system_auth.roles; If cassandra or any unapproved role is returned, this is a finding.",
    "remediation": "To remediate a misconfiguration, perform the following steps: 1. Execute the following command: Note: Replace <NEW_ROLE_HERE> with the desired role and <NEW_PASSWORD_HERE> with a password. 2. Verify the new role is working. 3. Remove the superuser role from the cassandra account by executing the following command:  UPDATE system_auth.roles SET is_superuser=null WHERE role='cassandra'",
    "function_names": [
      "cassandra_role_superuser_separate",
      "cassandra_role_default_privileges_restricted",
      "cassandra_role_admin_privileges_segregated",
      "cassandra_role_superuser_not_default",
      "cassandra_role_privilege_separation_enforced"
    ],
    "profile_applicability": "\u2022  Level 1 - Cassandra \u2022  Level 2 - Cassandra \u2022  Level 1 - Cassandra on Linux \u2022  Level 2 - Cassandra on Linux",
    "impact": "The separate account must be created, assigned the superuser role, and tested for correct functionality prior to removing the superuser role from the cassandra account. Otherwise,"
  },
  {
    "id": "3.2",
    "title": "Ensure that the default password changed for the cassandra role",
    "assessment": "Automated",
    "description": "The cassandra role has a default password which must be changed.",
    "rationale": "Failure to change the default password for the cassandra role may pose a risk to the database in the form of unauthorized access.",
    "audit": "Connect to Cassandra database to verify whether the cassandra role has default password. cqlsh -u cassandra -p cassandra If the connection is successful this is a finding.",
    "remediation": "Change the password for the casssandra role by issuing the following command: Where <NEWPASSWORD_HERE> is replaced with the password of your choosing. Default Value: cassandra References: 1. http://cassandra.apache.org/doc/latest/operating/security.html",
    "function_names": [
      "cassandra_role_default_password_changed",
      "cassandra_role_password_not_default",
      "cassandra_role_credentials_updated",
      "cassandra_role_default_credentials_removed",
      "cassandra_role_secure_password_set"
    ],
    "profile_applicability": "\u2022  Level 1 - Cassandra \u2022  Level 2 - Cassandra \u2022  Level 1 - Cassandra on Linux \u2022  Level 2 - Cassandra on Linux",
    "references": "1. http://cassandra.apache.org/doc/latest/operating/security.html"
  },
  {
    "id": "3.3",
    "title": "Ensure there are no unnecessary roles or excessive privileges",
    "assessment": "Manual",
    "description": "Verify each role is require and has only the privileges needed to do its job.",
    "rationale": "Roles which are unneeded, have super user or other potentially excessive privileges may be an avenue for a hacker to gain access to or modify data in the database.",
    "audit": "As a superuser, retrieve all roles: list roles; Retrieve all permissions for all roles select * from system_auth.role_permissions; If there are any unnecessary roles or roles with excessive privileges this is a finding.",
    "remediation": "Remove any unnecessary roles and/or permissions in accordance with organizational needs. References: 1. http://cassandra.apache.org/doc/latest/cql/security.html",
    "function_names": [
      "iam_role_no_unnecessary_roles",
      "iam_role_least_privilege",
      "iam_role_no_excessive_privileges",
      "iam_role_required_only",
      "iam_role_minimal_permissions",
      "iam_role_no_unused_roles",
      "iam_role_privilege_restricted",
      "iam_role_no_over_permissioned",
      "iam_role_just_in_time_access",
      "iam_role_no_wildcard_permissions"
    ],
    "profile_applicability": "\u2022  Level 1 - Cassandra \u2022  Level 2 - Cassandra \u2022  Level 1 - Cassandra on Linux \u2022  Level 2 - Cassandra on Linux",
    "references": "1. http://cassandra.apache.org/doc/latest/cql/security.html"
  },
  {
    "id": "3.4",
    "title": "Ensure that Cassandra is run using a non-privileged, dedicated service account",
    "assessment": "Automated",
    "description": "As with any service installed on a host, it can be provided with its own user context. Providing a dedicated user to the service provides the ability to precisely constrain the service within the larger host context.",
    "rationale": "Utilizing a non-privileged account for Cassandra to execute as may reduce the impact of a Cassandra-born vulnerability. A restricted account will be unable to access resources unrelated to Cassandra, such as operating system configurations.",
    "audit": "Execute the following command at a terminal prompt to assess this recommendation: ps -ef | egrep \"^cassandra.*$\" If no lines are returned, then this is a finding. NOTE: It is assumed that the Cassandra user is cassandra. Additionally, you may consider running sudo -l as the Cassandra user or to check the sudoers file.",
    "remediation": "Create a user which is only used for running Cassandra and directly related processes. This user must not have administrative rights to the system.",
    "function_names": [
      "cassandra_service_account_non_privileged",
      "cassandra_service_account_dedicated",
      "cassandra_service_account_no_root_access",
      "cassandra_service_account_minimal_permissions",
      "cassandra_service_account_user_context_configured"
    ],
    "profile_applicability": "\u2022  Level 1 - Cassandra on Linux \u2022  Level 2 - Cassandra on Linux"
  },
  {
    "id": "3.5",
    "title": "Ensure that Cassandra only listens for network connections on authorized interfaces",
    "assessment": "Manual",
    "description": "When listen_address is blank and listen_interface is commented out, this will be set automatically by InetAddress.getLocalHost(). Presuming the node is configured correctly, e.g. hostname, name resolution, etc., this will configure the node to use the address associated with the hostname. The listen_address must not be set to 0.0.0.0.",
    "rationale": "Setting the address or interface to bind to will tell other Cassandra nodes to which address or interface to connect. This must be changed from the default in order for multiple nodes to be able to communicate.",
    "audit": "Check the value of listen_address or listen_interface in the cassandra.yaml. If listen_address is set 0.0.0.0 or a non-authorized address or interface is specified, this is a finding.",
    "remediation": "Set the listen_address or listen_interface, not both, in the cassandra.yaml to an authorized address or interface. Default Value: listen_address: localhost listen_interface: eth0, but is commented out by default. References: 1. http://cassandra.apache.org/doc/3.11/configuration/cassandra_config_file.html#li sten-address 2. http://cassandra.apache.org/doc/3.11/configuration/cassandra_config_file.html#li sten-interface",
    "function_names": [
      "cassandra_node_listen_address_authorized",
      "cassandra_node_listen_interface_authorized",
      "cassandra_node_network_bind_restricted",
      "cassandra_node_localhost_bind_enabled",
      "cassandra_node_inetaddress_localhost_configured",
      "cassandra_node_unauthorized_interface_blocked",
      "cassandra_node_wildcard_bind_disabled"
    ],
    "profile_applicability": "\u2022  Level 1 - Cassandra on Linux \u2022  Level 2 - Cassandra on Linux",
    "references": "1. http://cassandra.apache.org/doc/3.11/configuration/cassandra_config_file.html#li sten-address 2. http://cassandra.apache.org/doc/3.11/configuration/cassandra_config_file.html#li sten-interface"
  },
  {
    "id": "3.6",
    "title": "Review User-Defined Roles",
    "assessment": "Manual",
    "description": "The MEMBER_OF column found in the system_auth.roles table shows roles granted to roles.",
    "rationale": "The MEMBER_OF column shows whoever has roles granted to roles and depending on the role and the privileges grant to the role should be limited . Limiting the accounts that have the certain roles reduces the chances that an attacker can exploit these capabilities.",
    "audit": "Execute the following SQL statement to audit this setting: select role, can_login, member_of from system_auth.roles; Looking for can_login which tells you that role can log into cassandra and member_of is when roles are granted to roles.",
    "remediation": "Looking at those users from the query that have member_of that is NOT null, decide if that user truly needs that role, if not, for each user, issue the following SQL statement (replace <is_member> with the value of member_of returned by the query in the audit procedure)",
    "function_names": [
      "iam_role_no_admin_privileges",
      "iam_role_no_unnecessary_permissions",
      "iam_role_no_wildcard_permissions",
      "iam_role_no_privilege_escalation",
      "iam_role_no_excessive_grants",
      "iam_role_no_privileged_grants",
      "iam_role_no_cross_account_grants",
      "iam_role_no_public_grants",
      "iam_role_no_privileged_service_grants",
      "iam_role_no_privileged_resource_grants"
    ],
    "profile_applicability": "\u2022  Level 1 - Cassandra \u2022  Level 2 - Cassandra \u2022  Level 1 - Cassandra on Linux \u2022  Level 2 - Cassandra on Linux"
  },
  {
    "id": "3.7",
    "title": "Review Superuser/Admin Roles",
    "assessment": "Manual",
    "description": "The IS_SUPERUSER privilege found in the system_auth.roles table governs who can control the entire Cassandra database and all of its data contained within.",
    "rationale": "The IS_SUPERUSER privilege allows whoever has it to do anything to the data and full administrator rights to the database, including changing passwords, creating, dropping roles. Limiting the accounts that have the IS_SUPERUSER role reduces the chances that an attacker can exploit these capabilities.",
    "audit": "Execute the following SQL statement to audit this setting: select role, is_superuser from system_auth.roles; Looking for is_superuser = True",
    "remediation": "Perform the following steps to remediate this setting: Looking at those users from the query that have is_superuser = True, decide if that user truly needs that role, if not, for each user, issue the following SQL statement (replace <role> with the role name from the query):",
    "function_names": [
      "cassandra_role_no_superuser_privilege",
      "cassandra_role_admin_privileges_restricted",
      "cassandra_system_auth_roles_audit",
      "cassandra_role_privilege_minimal",
      "cassandra_superuser_privilege_reviewed"
    ],
    "profile_applicability": "\u2022  Level 1 - Cassandra \u2022  Level 2 - Cassandra \u2022  Level 1 - Cassandra on Linux \u2022  Level 2 - Cassandra on Linux"
  },
  {
    "id": "4.1",
    "title": "Ensure that logging is enabled.",
    "assessment": "Automated",
    "description": "Apache Cassandra uses Logback for logging functionality. While this can be set using nodetool setlogginglevel changes made using this method will be reverted to the level specified in the logback.xml file the next time the process restarts. The configurable logging levels are: \u2022 OFF \u2022 TRACE \u2022 DEBUG \u2022 INFO (Default) \u2022 WARN \u2022 ERROR",
    "rationale": "If logging is not enabled, issues may go undiscovered, and compromises and other incidents may occur without being quickly detected. It may also not be possible to provide evidence of compliance with security laws, regulations, and other requirements.",
    "audit": "Execute the following command to confirm the setting is correct: $ nodetool getlogginglevels Logger Name                                        Log Level ROOT                                                    INFO org.cisecurity.workbench                                WARN If set to OFF then this is a finding.",
    "remediation": "To remediate this setting: 1. Edit the logback-test.xml if present; otherwise, edit the logback.xml  <configuration scan=\"true\"> <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\"> <filter class=\"ch.qos.logback.classic.filter.ThresholdFilter\"> <level>INFO</level> </filter> <encoder> <pattern>%-5level [%thread] %date{ISO8601} %F:%L - %msg%n</pattern> </encoder> </appender> <root level=\"INFO\"> <appender-ref ref=\"STDOUT\" /> </root> <logger name=\"org.cisecurity.workbench\" level=\"WARN\"/> </configuration> 2. Restart the Apache Cassandra Default Value: INFO References: 1. http://cassandra.apache.org/doc/latest/troubleshooting/reading_logs.html?highlig ht=logging 2. https://logback.qos.ch/manual/configuration.html",
    "function_names": [
      "cassandra_logging_enabled",
      "cassandra_logging_level_configured",
      "cassandra_logback_xml_secure",
      "cassandra_logging_persistence_configured",
      "cassandra_logging_default_level_set",
      "cassandra_logging_restart_persistence_verified",
      "cassandra_logging_minimum_level_enforced"
    ],
    "profile_applicability": "\u2022  Level 1 - Cassandra \u2022  Level 2 - Cassandra \u2022  Level 1 - Cassandra on Linux \u2022  Level 2 - Cassandra on Linux",
    "references": "1. http://cassandra.apache.org/doc/latest/troubleshooting/reading_logs.html?highlig ht=logging 2. https://logback.qos.ch/manual/configuration.html"
  },
  {
    "id": "4.2",
    "title": "Ensure that auditing is enabled",
    "assessment": "Manual",
    "description": "Audit logging in Cassandra logs every incoming CQL command request, Authentication (successful as well as unsuccessful login) to C* node. Currently, there are two implementations provided, the custom logger can be implemented and injected with the class name as a parameter in cassandra.yaml.",
    "rationale": "Unauthorized attempts to create, drop or alter users or data should be a concern.",
    "audit": "Open Source Version Apache Cassandra versions up to 3.11.4 does not have auditing capabilities, it will be in version 4.x but that has not been released yet according to apache Cassandra website. https://cassandra.apache.org/download/ Commercial Version Allows via DataStax allows logging to filesystem log files using logback, or to a Cassandra table. When you turn on audit logging, the default is to write to logback filesystem log files. If using DataStax version you can verify auditing is turned on. cat dse.yaml | grep \"audit_logging_options\" If failure is enabled: true means success Anything else is a finding",
    "remediation": "Open Source Version Apache Cassandra versions up to 3.11.4 does not have auditing capabilities, it will be in version 4.x but that has not been released yet according to apache Cassandra website. https://cassandra.apache.org/download/ Commercial Version Open the dse.yaml file in a text editor In the audit_logging_options section, set enabled to true.  # Audit logging options audit_logging_options: enabled: true You must also define where you want logging to go, add either of the following lines: Set the logger option to either CassandraAuditWriter, which logs to a table, or SLF4JAuditWriter, which logs to the SLF4J logger. References: 1. https://docs.datastax.com/en/datastax_enterprise/4.8/datastax_enterprise/sec/se cAudit.html#secAudit",
    "function_names": [
      "cassandra_cluster_auditing_enabled",
      "cassandra_node_auth_logging_enabled",
      "cassandra_cql_command_logging_enabled",
      "cassandra_custom_logger_injected",
      "cassandra_yaml_audit_config_valid"
    ],
    "profile_applicability": "\u2022  Level 1 - Cassandra on Linux \u2022  Level 2 - Cassandra on Linux",
    "references": "1. https://docs.datastax.com/en/datastax_enterprise/4.8/datastax_enterprise/sec/se cAudit.html#secAudit"
  },
  {
    "id": "5.1",
    "title": "Inter-node Encryption",
    "assessment": "Automated",
    "description": "Cassandra offers the option to encrypt data in transit between nodes on the cluster. By default, inter-node encryption is turned off.",
    "rationale": "Data being transferred on the wire should be encrypted to avoid network snooping, whether legitimate or not.",
    "audit": "Run the following command to verify whether inter-node encryption is enabled. cat cassandra.yaml | grep -in \"internode_encryption:\" Acceptable values are all, dc or rack. If the internode_encryption is set to none, this is a finding. Note: The Cassandra configuration files can be found in the conf directory of tarballs. For packages, the configuration files will be located in /etc/cassandra.",
    "remediation": "The inter-node encryption should be implemented before anyone accesses the Cassandra server. To enable the inter-node encryption mechanism: 1. Stop the Cassandra database. 2. If not done so already, build out your keystore and truststore. 3. Modify cassandra.yaml file to modify/add entry for internode_encryption: set it to all 4. Start the Cassandra database. Default Value: internode_encryption: none References: 1. http://cassandra.apache.org/doc/latest/operating/security.html",
    "function_names": [
      "cassandra_cluster_inter_node_encryption_enabled",
      "cassandra_cluster_inter_node_encryption_min_tls_1_2",
      "cassandra_cluster_inter_node_encryption_all_regions",
      "cassandra_cluster_inter_node_encryption_strong_cipher_suite",
      "cassandra_cluster_inter_node_encryption_certificate_valid",
      "cassandra_cluster_inter_node_encryption_rotation_enabled",
      "cassandra_cluster_inter_node_encryption_no_self_signed_certs",
      "cassandra_cluster_inter_node_encryption_key_exchange_secure",
      "cassandra_cluster_inter_node_encryption_authentication_enabled",
      "cassandra_cluster_inter_node_encryption_performance_optimized"
    ],
    "profile_applicability": "\u2022  Level 1 - Cassandra on Linux \u2022  Level 2 - Cassandra on Linux",
    "references": "1. http://cassandra.apache.org/doc/latest/operating/security.html"
  },
  {
    "id": "5.2",
    "title": "Client Encryption",
    "assessment": "Automated",
    "description": "Cassandra offers the option to encrypt data in transit between the client and nodes on the cluster. By default client encryption is turned off.",
    "rationale": "Data in transit between the client and node on the cluster should be encrypted to avoid network snooping, whether legitimate or not.",
    "audit": "The Cassandra configuration files can be found in the conf directory of tarballs. For packages, the configuration files will be located in /etc/cassandra. Open up the cassandra.yaml file, look for client_encryption_options section. Look for enabled: and optional: enabled: true optional: false If neither is true, then all client connections are unencrypted which makes this a finding. If enabled is true and optional is false, then all client connections must be encrypted which makes this not a finding. If enabled is false and optional is true, then enabled wins and all client connections are unencrypted which makes this a finding. If both are set to true, then both unencrypted and encrypted connections are allowed on the same port which makes this not a finding.",
    "remediation": "The client encryption should be implemented before anyone accesses the Cassandra server. To enable the client encryption mechanism: 1. Stop the Cassandra database. 2. If not done so already, build out your keystore and truststore. 3. Modify cassandra.yaml file to modify/add entries under client_encryption_options:  set enabled: true set optional: false This will force all connections to be encrypted between client and node on the cluster. 4. Start the Cassandra database. Default Value: enabled: false optional: false References: 1. http://cassandra.apache.org/doc/latest/operating/security.html",
    "function_names": [
      "cassandra_cluster_client_encryption_enabled",
      "cassandra_cluster_client_encryption_min_tls_1_2",
      "cassandra_cluster_client_encryption_certificate_valid",
      "cassandra_cluster_client_encryption_certificate_not_expired",
      "cassandra_cluster_client_encryption_cipher_suite_secure",
      "cassandra_cluster_client_encryption_keystore_protected",
      "cassandra_cluster_client_encryption_truststore_protected"
    ],
    "profile_applicability": "\u2022  Level 1 - Cassandra on Linux \u2022  Level 2 - Cassandra on Linux",
    "references": "1. http://cassandra.apache.org/doc/latest/operating/security.html"
  }
]